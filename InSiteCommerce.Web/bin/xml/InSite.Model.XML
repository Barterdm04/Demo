<?xml version="1.0"?>
<doc>
    <assembly>
        <name>InSite.Model</name>
    </assembly>
    <members>
        <member name="T:InSite.Model.Attributes.TransactionAttribute">
            <summary>
            Attribute to apply to a method to wrap that method call in a transaction.
            NOTE: For this to work the class for the method being intercepted must have a field named UnitOfWork that is an <see cref="T:InSite.Model.Interfaces.IUnitOfWork"/>.
            </summary>
        </member>
        <member name="T:InSite.Model.Attributes.Dependency.DependencyApplicationSetting">
            <summary>
            Used to have the <see cref="T:InSite.Model.Interfaces.Dependency.IDependency"/> check an <see cref="T:InSite.Model.ApplicationSetting"/> named the specified name to see if it
            equals the specified value and if so, then register the <see cref="T:InSite.Model.Interfaces.Dependency.IDependency"/> in the IOC Container.
            </summary>
        </member>
        <member name="T:InSite.Model.Attributes.Dependency.DependencyExclude">
            <summary>
            Used to exclude an object that implements <see cref="T:InSite.Model.Interfaces.Dependency.IDependency"/> from being registered in the IOC container.  Examples may be base classes.
            </summary>
        </member>
        <member name="T:InSite.Model.Attributes.Dependency.DependencyName">
            <summary>
            Used to set the name which <see cref="T:InSite.Model.Interfaces.Dependency.IDependency"/>s are registered as in to the IOC container.  Absense of this attribute means
            the <see cref="T:InSite.Model.Interfaces.Dependency.IDependency"/> will be registered without a name. For controllers in an area, use 
            </summary>
        </member>
        <member name="T:InSite.Model.Attributes.Dependency.DependencyOrder">
            <summary>
            Used to set the order which <see cref="T:InSite.Model.Interfaces.Dependency.IDependency"/>s are loaded in to the IOC container.  Defaults to 999 and if you want to override a standard
            implementation of an <see cref="T:InSite.Model.Interfaces.Dependency.IDependency"/> set your order lower than 999.
            </summary>
        </member>
        <member name="T:InSite.Model.BootStrapper.IDependencyRegistrar">
            <summary>
            Run by the BootStrapper to register the dependencies in the IOC Container.
            </summary>
        </member>
        <member name="M:InSite.Model.BootStrapper.IDependencyRegistrar.RegisterDependencies">
            <summary>
            Get all the dlls, go through them and register all dependencies in IOC Container.
            </summary>
        </member>
        <member name="T:InSite.Model.BootStrapper.IIocContainer">
            <summary>
            Interface to implement for IOC Containers.
            </summary>
        </member>
        <member name="M:InSite.Model.BootStrapper.IIocContainer.Configure">
            <summary>
            Called on startup to perform any configuration necessary for the IOC Container.  Must set up ServiceLocator.
            </summary>
        </member>
        <member name="M:InSite.Model.BootStrapper.IIocContainer.SetHttpContextWrapper">
            <summary>
            Sets up the <see cref="T:System.Web.HttpContextBase"/> to use <see cref="T:System.Web.HttpContextWrapper"/>.
            </summary>
        </member>
        <member name="M:InSite.Model.BootStrapper.IIocContainer.RegisterType(System.Type,System.Type,System.String)">
            <summary>
            Registers a type mapping in the IOC Container.
            </summary>
            <param name="from">Type you are mapping from, usually an interface.</param>
            <param name="to">Type you are mapping resolves to the from type to.</param>
            <param name="name">Name to register by, null for default registration, defaults to null.</param>
        </member>
        <member name="M:InSite.Model.BootStrapper.IIocContainer.FinalizeContainer">
            <summary>
            Finalizes the IOC Container.
            </summary>
        </member>
        <member name="M:InSite.Model.BootStrapper.IIocContainer.IsRegistered(System.Type,System.String)">
            <summary>
            Checks the IOC Container to see if the specified type is registered.
            </summary>
            <param name="type">Type to check for.</param>
            <param name="name">Name for the Type to check for, defaults to null.</param>
            <returns>True if the type is found, false if not.</returns>
        </member>
        <member name="M:InSite.Model.BootStrapper.IIocContainer.GetRegistrations">
            <summary>
            A list of the <see cref="T:InSite.Model.BootStrapper.IocRegistration"/>s in the IOC Container.
            </summary>
            <returns>A List of <see cref="T:InSite.Model.BootStrapper.IocRegistration"/>s.</returns>
        </member>
        <member name="T:InSite.Model.BootStrapper.IocRegistration">
            <summary>
            A representation of what is registered in the IOC Container.
            </summary>
        </member>
        <member name="P:InSite.Model.BootStrapper.IocRegistration.FromType">
            <summary>
            The Type being mapped from (usually an interface).
            </summary>
        </member>
        <member name="P:InSite.Model.BootStrapper.IocRegistration.ToType">
            <summary>
            The Type being mapped to (what implementation to use for the FromType interface).
            </summary>
        </member>
        <member name="P:InSite.Model.BootStrapper.IocRegistration.Name">
            <summary>
            The Name the Registration was mapped as (will be blank for default registration).
            </summary>
        </member>
        <member name="P:InSite.Model.BootStrapper.IocRegistration.Lifetime">
            <summary>
            The Lifetime of this object when gotten from the IOC Container (Singleton, PerRequest, Transient).
            </summary>
        </member>
        <member name="T:InSite.Model.BootStrapper.DependencyRegistrar">
            <summary>
            Run by the BootStrapper to register the dependencies in the IOC Container.
            </summary>
        </member>
        <member name="F:InSite.Model.BootStrapper.DependencyRegistrar.controllerInterface">
            <summary>The controller interface.</summary>
        </member>
        <member name="F:InSite.Model.BootStrapper.DependencyRegistrar.dependencyInterface">
            <summary>The dependency interface.</summary>
        </member>
        <member name="F:InSite.Model.BootStrapper.DependencyRegistrar.disposableInterface">
            <summary>The disposable interface.</summary>
        </member>
        <member name="F:InSite.Model.BootStrapper.DependencyRegistrar.getSettingsInterface">
            <summary>The get settings interface.</summary>
        </member>
        <member name="F:InSite.Model.BootStrapper.DependencyRegistrar.interceptableInterface">
            <summary>The interceptable interface.</summary>
        </member>
        <member name="F:InSite.Model.BootStrapper.DependencyRegistrar.IocContainer">
            <summary>The ioc container.</summary>
        </member>
        <member name="F:InSite.Model.BootStrapper.DependencyRegistrar.repositoryInterface">
            <summary>The repository interface.</summary>
        </member>
        <member name="F:InSite.Model.BootStrapper.DependencyRegistrar.singletonInterface">
            <summary>The singleton interface.</summary>
        </member>
        <member name="F:InSite.Model.BootStrapper.DependencyRegistrar.transientInterface">
            <summary>The transient interface.</summary>
        </member>
        <member name="F:InSite.Model.BootStrapper.DependencyRegistrar.GetApplicationSettingFunc">
            <summary>
            The Func used to get <see cref="T:InSite.Model.ApplicationSetting"/>s.  Defaults to BootStrapper.GetApplicationSetting if not set.
            </summary>
        </member>
        <member name="F:InSite.Model.BootStrapper.DependencyRegistrar.LoggerAction">
            <summary>
            The Action to use for logging.  Defaults to BootStrapper.LogMessage if not set.
            </summary>
        </member>
        <member name="M:InSite.Model.BootStrapper.DependencyRegistrar.#ctor(InSite.Model.BootStrapper.IIocContainer,System.Type)">
            <summary>Initializes a new instance of the <see cref="T:InSite.Model.BootStrapper.DependencyRegistrar"/> class. Dependency Injection Constructor</summary>
            <param name="iocContainer"><see cref="T:InSite.Model.BootStrapper.IIocContainer"/></param>
            <param name="controllerInterface"></param>
        </member>
        <member name="M:InSite.Model.BootStrapper.DependencyRegistrar.RegisterDependencies">
            <summary>
            Get all the dlls, go through them and register all dependencies in IOC Container.
            </summary>
        </member>
        <member name="M:InSite.Model.BootStrapper.DependencyRegistrar.GetDependencies">
            <summary>Goes through the dll files and finds <see cref="T:InSite.Model.Interfaces.Dependency.IDependency"/>s.</summary>
        </member>
        <member name="M:InSite.Model.BootStrapper.DependencyRegistrar.GetDependency(System.Type)">
            <summary>Looks at the <see cref="T:InSite.Model.Interfaces.Dependency.IDependency"/> and checks for <see cref="T:InSite.Model.Attributes.Dependency.DependencyExclude"/> to skip it, if
            none, then looks at <see cref="T:InSite.Model.Attributes.Dependency.DependencyOrder"/> and <see cref="T:InSite.Model.Attributes.Dependency.DependencyName"/> to return along
            with the Type.</summary>
            <param name="dependencyType">The <see cref="T:System.Type"/> to examine for the dependency attributes.</param>
            <returns>The <see cref="T:InSite.Model.BootStrapper.DependencyRegistrar.Dependency"/>.</returns>
        </member>
        <member name="M:InSite.Model.BootStrapper.DependencyRegistrar.RegisterDependencies(System.Collections.Generic.IEnumerable{InSite.Model.BootStrapper.DependencyRegistrar.Dependency})">
            <summary>Goes through all of the <see cref="T:InSite.Model.Interfaces.Dependency.IDependency"/>s found by order and registers them in Unity.</summary>
            <param name="dependencies"><see cref="T:System.Collections.Generic.IEnumerable`1"/></param>
        </member>
        <member name="M:InSite.Model.BootStrapper.DependencyRegistrar.RegisterDependency(InSite.Model.BootStrapper.DependencyRegistrar.Dependency)">
            <summary>Registers the <see cref="T:InSite.Model.Interfaces.Dependency.IDependency"/> in Unity, if it has <see cref="T:InSite.Model.Interfaces.Dependency.ISingletonLifetime"/> it
            registers it as a Singleton, if <see cref="T:InSite.Model.Interfaces.Dependency.ITransientLifetime"/>
            it registers as a Transient (new instance per resolve), if neither of these interfaces, it defaults
            to register as a Per Web Request instance.  If the <see cref="T:InSite.Model.Interfaces.Dependency.IDependency"/> has the<see cref="T:InSite.Model.Interfaces.Dependency.IInterceptable"/> interface, it registers it with to allow AOP.</summary>
            <param name="dependency"><see cref="T:InSite.Model.BootStrapper.DependencyRegistrar.Dependency"/></param>
        </member>
        <member name="M:InSite.Model.BootStrapper.DependencyRegistrar.DebugMessage(System.String)">
            <summary>Writes a Debug Message using the <see cref="F:InSite.Model.BootStrapper.DependencyRegistrar.LoggerAction"/>.</summary>
            <param name="message"></param>
        </member>
        <member name="T:InSite.Model.BootStrapper.DependencyRegistrar.Dependency">
            <summary>
            Helper class to store the Order, Registration Name and Type to register in Unity.
            </summary>
        </member>
        <member name="M:InSite.Model.BootStrapper.DependencyRegistrar.Dependency.#ctor(System.Int32,System.String,System.Type)">
            <summary>Initializes a new instance of the <see cref="T:InSite.Model.BootStrapper.DependencyRegistrar.Dependency"/> class.</summary>
            <param name="order">The order.</param>
            <param name="name">The name.</param>
            <param name="type">The type.</param>
        </member>
        <member name="P:InSite.Model.BootStrapper.DependencyRegistrar.Dependency.Order">
            <summary>
            The Order to register in to IOC by.
            </summary>
        </member>
        <member name="P:InSite.Model.BootStrapper.DependencyRegistrar.Dependency.Name">
            <summary>
            The Name to register with in to IOC, null will be a default registration.
            </summary>
        </member>
        <member name="P:InSite.Model.BootStrapper.DependencyRegistrar.Dependency.Type">
            <summary>
            The <see cref="P:InSite.Model.BootStrapper.DependencyRegistrar.Dependency.Type"/> to register in to IOC.
            </summary>
        </member>
        <member name="T:InSite.Model.BootStrapper.StartupTask_1LoadDbChanges">
            <summary>
            StartupTask that loads database change scripts normally for upgrade purposes.
            </summary>
        </member>
        <member name="T:InSite.Model.BootStrapper.IStartupTask">
            <summary>
            Interface to implement to inject a task to be run by the <see cref="T:InSite.Model.BootStrapper.IBootStrapper"/>.
            </summary>
        </member>
        <member name="T:InSite.Model.Interfaces.Dependency.IDependency">
            <summary>
            Interface to apply to an object that will be registered in to IOC at startup, defaults to per request lifetime 
            if <see cref="T:InSite.Model.Interfaces.Dependency.ISingletonLifetime"/> and <see cref="T:InSite.Model.Interfaces.Dependency.ITransientLifetime"/> interfaces are not applied.
            </summary>
        </member>
        <member name="M:InSite.Model.BootStrapper.IStartupTask.Run">
            <summary>
            Method that gets executed by the <see cref="T:InSite.Model.BootStrapper.IBootStrapper"/>.
            </summary>
        </member>
        <member name="M:InSite.Model.BootStrapper.StartupTask_1LoadDbChanges.Run">
            <summary>
            Method that gets executed by the <see cref="T:InSite.Model.BootStrapper.IBootStrapper"/>.
            </summary>
        </member>
        <member name="M:InSite.Model.BootStrapper.StartupTask_1LoadDbChanges.CreateDbConnection">
            <summary>
            Creates a new <see cref="T:System.Data.IDbConnection"/>
            </summary>
        </member>
        <member name="M:InSite.Model.BootStrapper.StartupTask_1LoadDbChanges.GetExecutedSqlScripts(System.Data.IDbConnection,System.Data.IDbTransaction)">
            <summary>
            Method to return a list of already executed SQL scripts.
            </summary>
            <param name="connection"><see cref="T:System.Data.IDbConnection"/></param>
            <param name="transaction"><see cref="T:System.Data.IDbTransaction"/></param>
        </member>
        <member name="M:InSite.Model.BootStrapper.StartupTask_1LoadDbChanges.ExecuteCustomSqlScripts(System.Collections.Generic.List{System.String},System.Data.IDbConnection,System.Data.IDbTransaction)">
            <summary>
            Method to execute sql scripts found in custom DLL'S.
            </summary>
            <param name="scriptsAlreadyExecuted"></param>
            <param name="connection"><see cref="T:System.Data.IDbConnection"/></param>
            <param name="transaction"><see cref="T:System.Data.IDbTransaction"/></param>
        </member>
        <member name="M:InSite.Model.BootStrapper.StartupTask_1LoadDbChanges.ExecuteSqlScripts(System.Reflection.Assembly,System.Collections.Generic.List{System.String},System.Data.IDbConnection,System.Data.IDbTransaction)">
            <summary>
            Method to execute a sql script and log its entries to the DatabaseScript table.
            </summary>
            <param name="assembly"><see cref="T:System.Reflection.Assembly"/> to scan for embedded resources with the file extension of .sql</param>
            <param name="scriptsAlreadyExecuted"></param>
            <param name="connection"><see cref="T:System.Data.IDbConnection"/></param>
            <param name="transaction"><see cref="T:System.Data.IDbTransaction"/></param>
        </member>
        <member name="P:InSite.Model.BootStrapper.StartupTask_1LoadDbChanges.SelectFromDatabaseScriptCommandText">
            <summary>
            Select from DatabaseScript SQL query.
            </summary>
        </member>
        <member name="P:InSite.Model.BootStrapper.StartupTask_1LoadDbChanges.InsertIntoDatabaseScriptCommandText">
            <summary>
            Insert into DatabaseScript SQL query.
            </summary>
        </member>
        <member name="T:InSite.Model.Core.CurrentContext">
            <summary>The current context.</summary>
        </member>
        <member name="M:InSite.Model.Core.CurrentContext.#ctor">
            <summary>Initializes a new instance of the <see cref="T:InSite.Model.Core.CurrentContext"/> class.</summary>
        </member>
        <member name="M:InSite.Model.Core.CurrentContext.#ctor(InSite.Model.Interfaces.IContextProvider)">
            <summary>Initializes a new instance of the <see cref="T:InSite.Model.Core.CurrentContext"/> class.</summary>
            <param name="contextProvider">The context provider.</param>
        </member>
        <member name="P:InSite.Model.Core.CurrentContext.WebSite">
            <summary>Gets or sets the web site.</summary>
        </member>
        <member name="P:InSite.Model.Core.CurrentContext.MicroSite">
            <summary>Gets or sets the micro site.</summary>
        </member>
        <member name="P:InSite.Model.Core.CurrentContext.ApplicationName">
            <summary>Gets or sets the application name.</summary>
        </member>
        <member name="P:InSite.Model.Core.CurrentContext.UserProfile">
            <summary>Gets or sets the user profile.</summary>
        </member>
        <member name="P:InSite.Model.Core.CurrentContext.Language">
            <summary>Gets or sets the language.</summary>
        </member>
        <member name="P:InSite.Model.Core.CurrentContext.Currency">
            <summary>Gets or sets the currency.</summary>
        </member>
        <member name="P:InSite.Model.Core.CurrentContext.BillTo">
            <summary>Gets or sets the bill to customer.</summary>
        </member>
        <member name="P:InSite.Model.Core.CurrentContext.ShipTo">
            <summary>Gets or sets the ship to customer.</summary>
        </member>
        <member name="P:InSite.Model.Core.CurrentContext.Warehouse">
            <summary>Gets or sets the warehouse.</summary>
        </member>
        <member name="T:InSite.Model.Core.DataContractTypeConverter">
            <summary>
            Static class holding methods to convert types using the DataContractSerializer.
            </summary>
        </member>
        <member name="M:InSite.Model.Core.DataContractTypeConverter.ConvertType``2(``0)">
            <summary>
            Converts a class from TFrom type to TTo type using the DataContractSerializer, useful to convert types when using the same types
            from different sides of a Wcf call.
            </summary>
            <typeparam name="TFrom">Type you are converting from.</typeparam>
            <typeparam name="TTo">Type you are converting to.</typeparam>
            <param name="obj">The object instance to convert.</param>
            <returns>The object converted to the TTo type.</returns>
        </member>
        <member name="T:InSite.Model.Integration.Enums.DeleteAction">
            <summary>
            Enum that specifies how to handle a deletion of a record in a refresh.
            </summary>
        </member>
        <member name="F:InSite.Model.Integration.Enums.DeleteAction.SetField">
            <summary>Set a DateTime field like Deactivate to the current date or a bool field like IsActive to false.</summary>
        </member>
        <member name="F:InSite.Model.Integration.Enums.DeleteAction.DeleteRecord">
            <summary>Delete the record.</summary>
        </member>
        <member name="F:InSite.Model.Integration.Enums.DeleteAction.Ignore">
            <summary>Ignore the delete request.</summary>
        </member>
        <member name="F:InSite.Model.Integration.Enums.DeleteAction.FromDataset">
            <summary>Use delete from dataset</summary>
        </member>
        <member name="T:InSite.Model.Integration.Enums.IntegrationConnectionType">
            <summary>
            Enum that represents the various types of an <see cref="T:InSite.Model.IntegrationConnection"/>.
            </summary>
            <remarks>
            Enum for <see cref="P:InSite.Model.IntegrationConnection.TypeName"/> field
            </remarks>
        </member>
        <member name="F:InSite.Model.Integration.Enums.IntegrationConnectionType.SqlServer">
            <summary>Connecting to Microsoft Sql Server.</summary>
        </member>
        <member name="F:InSite.Model.Integration.Enums.IntegrationConnectionType.WebService">
            <summary>Connecting to a Web Service.</summary>
        </member>
        <member name="F:InSite.Model.Integration.Enums.IntegrationConnectionType.OleDb">
            <summary>Connecting to an OledDb Datasource.</summary>
        </member>
        <member name="F:InSite.Model.Integration.Enums.IntegrationConnectionType.Odbc">
            <summary>Connecting to an Odbc Datasource.</summary>
        </member>
        <member name="F:InSite.Model.Integration.Enums.IntegrationConnectionType.SapDotNetConnector">
            <summary>Connecting through the SAP.Net Connector.</summary>
        </member>
        <member name="F:InSite.Model.Integration.Enums.IntegrationConnectionType.XmlFile">
            <summary>Connecting to a Xml File.</summary>
        </member>
        <member name="F:InSite.Model.Integration.Enums.IntegrationConnectionType.FlatFile">
            <summary>Connecting to a Flat File.</summary>
        </member>
        <member name="T:InSite.Model.Integration.Enums.IntegrationFieldType">
            <summary>
            Enum that represents the various field types of an <see cref="T:InSite.Model.JobDefinitionStepFieldMap"/>.
            </summary>
            <remarks>
            Enum for <see cref="P:InSite.Model.JobDefinitionStepFieldMap.FieldType"/> field
            </remarks>
        </member>
        <member name="F:InSite.Model.Integration.Enums.IntegrationFieldType.Field">
            <summary>
            For Refresh Jobs, From Property is Erp Field Name, To Property is Commerce Object Property the Erp Value will get written to.
            For Submit Jobs, From Property is Commerce Object Property Name, To Property is Erp Field the Commerce Object Property Value will get written to.
            </summary>
        </member>
        <member name="F:InSite.Model.Integration.Enums.IntegrationFieldType.StaticValue">
            <summary>
            For Refresh Jobs, From Property is set to the Static Value, To Property is Commerce Object Property the Static Value will get written to.
            For Submit Jobs, From Property is set to the Static Value, To Property is Erp Field the Static Value will get written to.
            </summary>
        </member>
        <member name="F:InSite.Model.Integration.Enums.IntegrationFieldType.ApplicationSetting">
            <summary>
            For Refresh Jobs, From Property is set to the Application Setting Name, To Property is Commerce Object Property the Application Setting Value will get written to.
            For Submit Jobs, From Property is set to the Application Setting Name, To Property is Erp Field the Application Setting Value will get written to.
            </summary>
        </member>
        <member name="F:InSite.Model.Integration.Enums.IntegrationFieldType.CustomProperty">
            <summary>
            For Refresh Jobs, From Property is Erp Field Name, To Property is the Commerce Object Custom Property Name the Erp Value will get written to.
            For Submit Jobs, From Property is the Commerce Object Custom Property Name, To Property is Erp Field the Commerce Object Property Value will get written to.
            </summary>
        </member>
        <member name="F:InSite.Model.Integration.Enums.IntegrationFieldType.Lookup">
            <summary>
            For Refresh Jobs, this field type indicates that the To Property will indicate a contained Model object to lookup and the From Property will be the Natural Key
            property (or properties, comma separated) to do the lookup with.
            </summary>
        </member>
        <member name="F:InSite.Model.Integration.Enums.IntegrationFieldType.ChildCollection">
            <summary>
            For Refresh Jobs, this field type indicates that the To Property will indicate a child collection or many-to-many collection to add to and the From Property will be the
            Natural Key value property (or properties, comma separated) to lookup the object to add to the collection.
            </summary>
        </member>
        <member name="F:InSite.Model.Integration.Enums.IntegrationFieldType.Content">
            <summary>
            For Refresh Jobs, this field type indicates that the To Property will indicate a Content Manager, and the From Property will be a comma delimited list what columes contain Html,LanguageCode,PersonaName,DeviceType
            The last three being optional
            </summary>
        </member>
        <member name="T:InSite.Model.Integration.Enums.IntegrationJobLinkedJobCondition">
            <summary>
                Enum that represents the various types of conditions to evaluate when an integration job completes (success or
                fail) and has a linked job.
            </summary>
            <remarks>
                Enum for <see cref="P:InSite.Model.JobDefinition.LinkedJobCondition"/> field
            </remarks>
        </member>
        <member name="T:InSite.Model.Integration.Enums.IntegrationJobLogType">
            <summary>
            Enum that represents the various types of an <see cref="T:InSite.Model.IntegrationJobLog"/>.
            </summary>
            <remarks>
            Enum for <see cref="P:InSite.Model.IntegrationJobLog.TypeName"/> field
            </remarks>
        </member>
        <member name="T:InSite.Model.Integration.Enums.IntegrationJobNotifyCondition">
            <summary>
            Enum that represents the various Notify Conditions of an <see cref="T:InSite.Model.JobDefinition"/>.
            </summary>
            <remarks>
            Enum for <see cref="P:InSite.Model.JobDefinition.NotifyCondition"/> field
            </remarks>
        </member>
        <member name="T:InSite.Model.Integration.Enums.IntegrationJobStatus">
            <summary>
            Enum that represents the various statuses of an <see cref="T:InSite.Model.IntegrationJob"/>.
            </summary>
            <remarks>
            Enum for <see cref="P:InSite.Model.IntegrationJob.Status"/> field
            </remarks>
        </member>
        <member name="T:InSite.Model.Integration.Enums.IntegrationParameterValueType">
            <summary>
            Enum that represents the various types of values for an <see cref="T:InSite.Model.JobDefinitionStepParameter"/> and <see cref="T:InSite.Model.JobDefinitionParameter"/>.
            </summary>
            <remarks>
            Enum for <see cref="P:InSite.Model.JobDefinitionStepParameter.ValueType"/> and <see cref="P:InSite.Model.JobDefinitionParameter.ValueType"/> fields
            </remarks>
        </member>
        <member name="F:InSite.Model.Integration.Enums.IntegrationParameterValueType.EncryptedString">
            <summary>
            string will automatically be Encrypted when stored in the database and presented masked with password characters in the UI
            </summary>
        </member>
        <member name="F:InSite.Model.Integration.Enums.IntegrationParameterValueType.SpecificDateTime">
            <summary>
            To Enter a specific DateTime
            </summary>
        </member>
        <member name="F:InSite.Model.Integration.Enums.IntegrationParameterValueType.RelativeDateTime">
            <summary>
            To use a relative DateTime from the current DateTime, for example, a value of 1 would mean the current date plus one day, -1 would be the current date minus one day
            </summary>
        </member>
        <member name="F:InSite.Model.Integration.Enums.IntegrationParameterValueType.ApplicationSetting">
            <summary>
            Specify the name of the ApplicationSetting to use in the Default Value of the Parameter
            </summary>
        </member>
        <member name="T:InSite.Model.Integration.Enums.IntegrationRecurringType">
            <summary>
            Enum that represents the various types of recurrence for <see cref="T:InSite.Model.IntegrationJob"/>.
            </summary>
            <remarks>
            Enum for <see cref="P:InSite.Model.JobDefinition.RecurringType"/> field
            </remarks>
        </member>
        <member name="T:InSite.Model.Integration.Enums.JobDefinitionType">
            <summary>
            Enum that represents the various types of an <see cref="T:InSite.Model.JobDefinition"/>.
            </summary>
            <remarks>
            Enum for <see cref="P:InSite.Model.JobDefinition.JobType"/> field
            </remarks>
        </member>
        <member name="T:InSite.Model.Integration.Enums.LookupErrorHandlingType">
            <summary>The lookup error handling type.</summary>
        </member>
        <member name="T:InSite.Model.Integration.Interfaces.IIntegrationJobSchedulingService">
            <summary>
            Public interface to provide contract for running and scheduling <see cref="T:InSite.Model.IntegrationJob"/>s.
            </summary>
        </member>
        <member name="M:InSite.Model.Integration.Interfaces.IIntegrationJobSchedulingService.ScheduleBatchIntegrationJob(System.String,System.Data.DataSet,System.Collections.ObjectModel.Collection{InSite.Model.JobDefinitionStepParameter},System.String,System.Nullable{System.DateTime},System.Boolean)">
            <summary>
            Schedule a Batch <see cref="T:InSite.Model.IntegrationJob"/>.
            </summary>
            <param name="jobDefinitionName">The <see cref="T:InSite.Model.JobDefinition"/> Name to schedule the <see cref="T:InSite.Model.IntegrationJob"/> for.</param>
            <param name="initialDataSet">Optional DataSet to pass in as the InitialDataSet.</param>
            <param name="parameters">Optional values set for the <see cref="T:InSite.Model.IntegrationJob"/> run.</param>
            <param name="genericParameter">Optional generic parameter which will be interpreted based on the job type (e.g. order number)</param>
            <param name="scheduleDateTime">Optional start date for the job to run, if null the job will run be scheduled to run immediately.</param>
            <param name="runStandalone">Flag to prevent linked jobs from running after this job completes.</param>
            <returns>The <see cref="T:InSite.Model.IntegrationJob"/> scheduled.</returns>
        </member>
        <member name="M:InSite.Model.Integration.Interfaces.IIntegrationJobSchedulingService.RunRealTimeIntegrationJob(System.String,System.Data.DataSet,System.Collections.ObjectModel.Collection{InSite.Model.JobDefinitionStepParameter},System.String,System.Boolean)">
            <summary>
            Run an <see cref="T:InSite.Model.IntegrationJob"/> waiting for the job to finish before returning.
            </summary>
            <param name="jobDefinitionName">The <see cref="T:InSite.Model.JobDefinition"/> Name to schedule the <see cref="T:InSite.Model.IntegrationJob"/> for.</param>
            <param name="initialDataSet">Optional DataSet to pass in as the InitialDataSet.</param>
            <param name="parameters">Optional values set for the <see cref="T:InSite.Model.IntegrationJob"/> run.</param>
            <param name="genericParameter">Optional generic parameter which will be interpreted based on the job type (e.g. order number)</param>
            <param name="runStandalone">Flag to prevent linked jobs from running after this job completes.</param>
            <returns>The <see cref="T:InSite.Model.IntegrationJob"/> scheduled.</returns>
        </member>
        <member name="M:InSite.Model.Integration.Interfaces.IIntegrationJobSchedulingService.RunPreviewIntegrationJob(System.String,System.Int32,System.Collections.ObjectModel.Collection{InSite.Model.JobDefinitionStepParameter})">
            <summary>
            Run a Preview <see cref="T:InSite.Model.IntegrationJob"/> to get the top ten records from the ERP for an <see cref="T:InSite.Model.JobDefinitionStep"/> of an <see cref="T:InSite.Model.JobDefinition"/>.
            </summary>
            <param name="jobDefinitionName">The <see cref="T:InSite.Model.JobDefinition"/> Name to schedule the <see cref="T:InSite.Model.IntegrationJob"/> for.</param>
            <param name="previewStepSequence">The <see cref="T:InSite.Model.JobDefinitionStep"/> Sequence to Preview.</param>
            <param name="parameters">Optional values set for the <see cref="T:InSite.Model.IntegrationJob"/> run.</param>
            <returns>The <see cref="T:InSite.Model.IntegrationJob"/> scheduled.</returns>
        </member>
        <member name="M:InSite.Model.Integration.Interfaces.IIntegrationJobSchedulingService.ScheduleNextJob(InSite.Model.JobDefinition,System.DateTime)">
            <summary>
            Method to schedule the next <see cref="T:InSite.Model.IntegrationJob"/> for the supplied <see cref="T:InSite.Model.JobDefinition"/> if necessary.
            </summary>
            <param name="jobDefinition"><see cref="T:InSite.Model.JobDefinition"/> to possibly schedule the next <see cref="T:InSite.Model.IntegrationJob"/>.</param>
            <param name="currentDateTime">Normally DateTimeProvider.Current.Now, passed in to facilitate Unit Testing.</param>
        </member>
        <member name="M:InSite.Model.Integration.Interfaces.IIntegrationJobSchedulingService.ScheduleRecurringJob(InSite.Model.JobDefinition,System.DateTime)">
            <summary>Attempts to schedule a recurring job if it is not already scheduled.</summary>
            <param name="jobDefinition">The job definition.</param>
            <param name="currentDateTime">The current date time.</param>
        </member>
        <member name="T:InSite.Model.Integration.Interfaces.IJobLogger">
            <summary>
            Public interface to provide contract for adding a log entry for an associated <see cref="T:InSite.Model.IntegrationJob"/>.  The
            implemented classes responsibility will
            be to provide an abstracted logging point.
            </summary>
        </member>
        <member name="M:InSite.Model.Integration.Interfaces.IJobLogger.AddLogMessage(InSite.Model.IntegrationJob,InSite.Model.Integration.Enums.IntegrationJobLogType,System.String)">
            <summary>Method to log a message for the provided <see cref="T:InSite.Model.IntegrationJob"/>.</summary>
            <param name="integrationJob"><see cref="T:InSite.Model.IntegrationJob"/> to log a message for.</param>
            <param name="jobLogType">The type of the Message</param>
            <param name="message">Message to log.</param>
        </member>
        <member name="M:InSite.Model.Integration.Interfaces.IJobLogger.Debug(System.String)">
            <summary>Write a debug message to job log.</summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:InSite.Model.Integration.Interfaces.IJobLogger.Info(System.String)">
            <summary>Write an info message to job log.</summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:InSite.Model.Integration.Interfaces.IJobLogger.Warning(System.String)">
            <summary>Write a warning message to job log.</summary>
            <param name="message">The message.</param>
            <exception cref="!:LoggingThresholdReachedException">Exception if logged warning count exceeds allowed limit.</exception>
        </member>
        <member name="M:InSite.Model.Integration.Interfaces.IJobLogger.Error(System.String)">
            <summary>Write an error message to job log.</summary>
            <param name="message">The message.</param>
            <exception cref="!:LoggingThresholdReachedException">Exception if logged error count exceeds allowed limit.</exception>
        </member>
        <member name="M:InSite.Model.Integration.Interfaces.IJobLogger.Fatal(System.String)">
            <summary>Write a fatal error message to job log.</summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:InSite.Model.Integration.Interfaces.IJobLogger.TryAddLogMessage(InSite.Model.Integration.Enums.IntegrationJobLogType,System.String)">
            <summary>Method to log a message for the provided <see cref="T:InSite.Model.IntegrationJob"/>.</summary>
            <param name="jobLogType">The type of the Message</param>
            <param name="message">Message to log.</param>
        </member>
        <member name="M:InSite.Model.Integration.Interfaces.IJobLogger.ThresholdReached">
            <summary>Determines if the warning or error threshold has been reached</summary>
            <returns>The <see cref="T:System.Boolean"/>.</returns>
        </member>
        <member name="T:InSite.Model.Integration.Interfaces.IJobPostprocessor">
            <summary>
            Public interface to provide contract for implementing an <see cref="P:InSite.Model.Integration.Interfaces.IJobPostprocessor.IntegrationJob"/>'s
            <see cref="T:InSite.Model.Integration.Interfaces.IJobPostprocessor"/>. The implementation's primary
            responsibility is to offer post processing for an <see cref="P:InSite.Model.Integration.Interfaces.IJobPostprocessor.IntegrationJob"/>.
            </summary>
        </member>
        <member name="M:InSite.Model.Integration.Interfaces.IJobPostprocessor.Execute(System.Data.DataSet)">
            <summary>Method that executes post processing for an <see cref="P:InSite.Model.Integration.Interfaces.IJobPostprocessor.IntegrationJob"/>.</summary>
            <param name="dataSet">Successfully returned from earlier stages in the <see cref="P:InSite.Model.Integration.Interfaces.IJobPostprocessor.IntegrationJob"/> to be processed
            and transformed into the Insite system</param>
        </member>
        <member name="P:InSite.Model.Integration.Interfaces.IJobPostprocessor.JobLogger">
            <summary>Gets or sets the job logger.</summary>
        </member>
        <member name="P:InSite.Model.Integration.Interfaces.IJobPostprocessor.IntegrationJob">
            <summary>Gets or sets the integration job.</summary>
        </member>
        <member name="T:InSite.Model.Integration.Interfaces.IJobPreprocessor">
            <summary>
            Public interface to provide a contract for implementing an <see cref="P:InSite.Model.Integration.Interfaces.IJobPreprocessor.IntegrationJob"/>'s
            <see cref="T:InSite.Model.Integration.Interfaces.IJobPreprocessor"/>. The implementation's primary
            responsibility is to implement any preprocessing logic that needs to occur prior to executing the integration job.
            <see cref="P:InSite.Model.Integration.Interfaces.IJobPreprocessor.IntegrationJob"/>.
            </summary>
        </member>
        <member name="M:InSite.Model.Integration.Interfaces.IJobPreprocessor.Execute">
            <summary>Method that executes pre processing for an <see cref="P:InSite.Model.Integration.Interfaces.IJobPreprocessor.IntegrationJob"/>.</summary>
            <returns>The <see cref="P:InSite.Model.Integration.Interfaces.IJobPreprocessor.IntegrationJob"/>.</returns>
        </member>
        <member name="P:InSite.Model.Integration.Interfaces.IJobPreprocessor.JobLogger">
            <summary>Gets or sets the job logger.</summary>
        </member>
        <member name="P:InSite.Model.Integration.Interfaces.IJobPreprocessor.IntegrationJob">
            <summary>Gets or sets the integration job.</summary>
        </member>
        <member name="T:InSite.Model.Interfaces.Dependency.IGetSettingsHandler">
            <summary>
            The GetSettingsHandler interface.  Adding this interface to an IHandler will make the IHandler to be executed and the results included
            in the consolidated settings.
            </summary>
        </member>
        <member name="P:InSite.Model.Interfaces.Dependency.IGetSettingsHandler.CurrentContext">
            <summary>Gets or sets the current context.</summary>
        </member>
        <member name="T:InSite.Model.Interfaces.Dependency.IInterceptable">
            <summary>
            Interface to apply to an <see cref="T:InSite.Model.Interfaces.Dependency.IDependency"/> to register it in to IOC with interception so it takes part in AOP.
            </summary>
        </member>
        <member name="T:InSite.Model.Interfaces.Dependency.ISingletonLifetime">
            <summary>
            Interface to apply to an <see cref="T:InSite.Model.Interfaces.Dependency.IDependency"/> to register it in to IOC with a Singleton lifetime.
            </summary>
        </member>
        <member name="T:InSite.Model.Interfaces.Dependency.ITransientLifetime">
            <summary>
            Interface to apply to an <see cref="T:InSite.Model.Interfaces.Dependency.IDependency"/> to get a new instance every time you get it from the IOC container.
            </summary>
        </member>
        <member name="T:InSite.Model.Interfaces.ICacheManagerAsync">
            <summary></summary>
        </member>
        <member name="M:InSite.Model.Interfaces.ICacheManagerAsync.GetAsync``1(System.String)">
            <summary>Gets the asynchronous.</summary>
            <typeparam name="T"></typeparam>
            <param name="key">The key.</param>
            <returns></returns>
        </member>
        <member name="M:InSite.Model.Interfaces.ICacheManagerAsync.AddAsync(System.String,System.Object,System.Nullable{System.TimeSpan})">
            <summary>Add an item to the cache asynchronously.</summary>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
            <param name="validFor">The valid for.</param>
            <returns></returns>
        </member>
        <member name="M:InSite.Model.Interfaces.ICacheManagerAsync.Get``1(System.String)">
            <summary>Get an item from the cache.</summary>
            <typeparam name="T">The type of the item.</typeparam>
            <param name="key">The cache key.</param>
            <returns></returns>
        </member>
        <member name="M:InSite.Model.Interfaces.ICacheManagerAsync.Add(System.String,System.Object,System.Nullable{System.TimeSpan})">
            <summary>Add an item to the cache.</summary>
            <param name="key">The cache key.</param>
            <param name="value">The value to be cached.</param>
            <param name="validFor">Optional time item is valid for.</param>
        </member>
        <member name="M:InSite.Model.Interfaces.ICacheManagerAsync.Contains(System.String)">
            <summary>Determine if the cache contains a cache key.</summary>
            <param name="key">The cache key.</param>
            <returns>True if the cache contains an item with the supplied key and type prefix, false otherwise.</returns>
        </member>
        <member name="M:InSite.Model.Interfaces.ICacheManagerAsync.Remove(System.String)">
            <summary>Remove an item from the cache.</summary>
            <param name="key">The cache key.</param>
        </member>
        <member name="M:InSite.Model.Interfaces.ICacheManagerAsync.Clear">
            <summary>
            Clear the cache.
            </summary>
        </member>
        <member name="M:InSite.Model.Interfaces.ICatalogLinkProvider.GetCategoryMenuLinks(System.Nullable{System.Int32})">
            <summary>
            Retrieves a cached category menu tree for the current context
            </summary>
            <param name="maxDepth">The optional maximum menu tree depth.</param>
            <returns>Collection of NavLinkDtos representing the base level menu</returns>
        </member>
        <member name="M:InSite.Model.Interfaces.IContentModeProvider.SwitchMode(InSite.Model.Interfaces.ContentMode)">
            <summary>
            Switches the mode.
            </summary>
            <param name="contentMode">The content mode.</param>
        </member>
        <member name="P:InSite.Model.Interfaces.IContentModeProvider.CurrentContentMode">
            <summary>
            Gets the current content mode.
            </summary>
            <value>
            The current content mode.
            </value>
        </member>
        <member name="P:InSite.Model.Interfaces.IContentModeProvider.DisplayUnpublishedContent">
            <summary>
            Gets a value indicating whether [display unpublished content].
            </summary>
            <value>
            <c>true</c> if [display unpublished content]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:InSite.Model.Interfaces.IEmailTemplateService">
            <summary>Service to provided basic functionality around <see cref="T:InSite.Model.EmailTemplate"/> (retrieval, parsing).</summary>
        </member>
        <member name="M:InSite.Model.Interfaces.IEmailTemplateService.GetEmailTemplate(System.String)">
            <summary>Finds the html template to use.</summary>
            <param name="templateName">The name of the email template.</param>
            <returns>The <see cref="T:InSite.Model.EmailTemplate"/> corresponding to the provided name.</returns>
            <exception cref="T:System.ArgumentException">Thrown if not template is found in the DB or on disk.</exception>
        </member>
        <member name="M:InSite.Model.Interfaces.IEmailTemplateService.ParseTemplate(System.String,System.Dynamic.ExpandoObject,System.String)">
            <summary>
            Parse the template represented by the <paramref name="template"/> using the given <paramref name="model"/> parameter
            </summary>
            <param name="template">A template in string form that uses Razor syntax</param>
            <param name="model">An <see cref="T:System.Dynamic.ExpandoObject"/> that represents the model for the email.</param>
            <param name="templateName">template name for caching (required for good performance)</param>
            <returns>Parsed template</returns>
        </member>
        <member name="M:InSite.Model.Interfaces.IQuantityFormatProvider.GetString(System.Decimal)">
            <summary>Gets the string representation of the decimal quantity.</summary>
            <param name="value">The decimal value of the quantity.</param>
            <returns>A string representation of the quantity.</returns>
        </member>
        <member name="T:InSite.Model.Interfaces.ICurrentLocationProviderFactory">
            <summary>
            Public interface to create an <see cref="T:InSite.Model.Interfaces.ICurrentLocationProviderFactory"/>.  The implemented classes responsibilty is to implement
            a factory that can return <see cref="T:InSite.Model.Interfaces.ICurrentLocationProvider"/>'s for the key provided.
            </summary>
        </member>
        <member name="M:InSite.Model.Interfaces.ICurrentLocationProviderFactory.GetCurrentLocationProvider(System.String)">
            <summary>Creates a new instance of <see cref="T:InSite.Model.Interfaces.ICurrentLocationProvider"/> for the supplied key.</summary>
            <param name="implementationKey">The key used to determine what implementation of <see cref="T:InSite.Model.Interfaces.ICurrentLocationProvider"/> to return.</param>
            <returns>A new instance of an object that implements <see cref="T:InSite.Model.Interfaces.ICurrentLocationProvider"/></returns>
        </member>
        <member name="T:InSite.Model.Interfaces.ICurrentLocationProvider">
            <summary>
            Implement this interface to customize how the users current location <see cref="T:InSite.Model.LocationDto"/> is determined
            </summary>
        </member>
        <member name="M:InSite.Model.Interfaces.ICurrentLocationProvider.GetCurrentLocation(InSite.Model.UserProfile,InSite.Model.Customer,InSite.Model.Customer,System.String)">
            <summary>
            Method to return the users current location as a <see cref="T:InSite.Model.LocationDto"/>
            </summary>
            <param name="userProfile" type="UserProfile">Current user profile</param>
            <param name="billTo" type="Customer">Current bill to customer</param>
            <param name="shipTo" type="Customer">Current ship to customer</param>
            <param name="ipAddress" type="Customer">Current IP address for the end user</param>
            <returns>Current location <see cref="T:InSite.Model.LocationDto"/></returns>
        </member>
        <member name="T:InSite.Model.Interfaces.IGeocoderProviderFactory">
            <summary>
            Public interface to create an <see cref="T:InSite.Model.Interfaces.IGeocoderProviderFactory"/>.  The implemented classes responsibilty is to implement
            a factory that can return <see cref="T:InSite.Model.Interfaces.IGeocoderProvider"/>'s for the key provided.
            </summary>
        </member>
        <member name="M:InSite.Model.Interfaces.IGeocoderProviderFactory.GetGeocoderProvider(System.String)">
            <summary>Creates a new instance of <see cref="T:InSite.Model.Interfaces.IGeocoderProvider"/> for the supplied key.</summary>
            <param name="geocoderKey">The key used to determine what implementation of <see cref="T:InSite.Model.Interfaces.IGeocoderProvider"/> to return.</param>
            <returns>A new instance of an object that implements <see cref="T:InSite.Model.Interfaces.IGeocoderProvider"/></returns>
        </member>
        <member name="T:InSite.Model.Interfaces.IGeocoderProvider">
            <summary>
            Abstraction layer to get lat/long coordinates from an address.
            </summary>
        </member>
        <member name="M:InSite.Model.Interfaces.IGeocoderProvider.Geocode(System.String)">
            <summary>
            Find lat/long coordinate from an address string.
            </summary>
            <param name="address">string to geocode.  Accepted content will be implementation specific</param>
            <returns><see cref="T:InSite.Model.LocationDto"/> lat/long point corresponding to the address.</returns>
        </member>
        <member name="T:InSite.Model.Interfaces.IAuthenticationService">
            <summary>
            The Authentication abstraction layer.
            </summary>
        </member>
        <member name="M:InSite.Model.Interfaces.IAuthenticationService.MinRequiredPasswordLength(System.String)">
            <summary>Returns the Minimum Required Password Length.</summary>
            <param name="applicationName">The ApplicationName to run in.</param>
            <returns>The Minimum Required Password Length.</returns>
        </member>
        <member name="M:InSite.Model.Interfaces.IAuthenticationService.MinRequiredNonAlphanumericCharacters(System.String)">
            <summary>Returns the Miniumum Required Non Alphanumeric Characters.</summary>
            <param name="applicationName">The ApplicationName to run in.</param>
            <returns>The Miniumum Required Non Alphanumeric Characters.</returns>
        </member>
        <member name="M:InSite.Model.Interfaces.IAuthenticationService.UserNameAlreadyExists(System.String,System.String)">
            <summary>Checks if the supplied User Name already exists.</summary>
            <param name="applicationName">The ApplicationName to run in.</param>
            <param name="userName">The User Name to check for.</param>
            <returns>True if the User Name already exists.</returns>
        </member>
        <member name="M:InSite.Model.Interfaces.IAuthenticationService.EmailAlreadyExists(System.String,System.String)">
            <summary>Checks if the supplied Email already exists.</summary>
            <param name="applicationName">The ApplicationName to run in.</param>
            <param name="email">The Email to check for.</param>
            <returns>True if the Email already exists.</returns>
        </member>
        <member name="M:InSite.Model.Interfaces.IAuthenticationService.RequiresUniqueEmail(System.String)">
            <summary>Whether the Authentication Service requires emails to be unique.</summary>
            <param name="applicationName">The ApplicationName to run in.</param>
            <returns>The <see cref="T:System.Boolean"/>.</returns>
        </member>
        <member name="M:InSite.Model.Interfaces.IAuthenticationService.RequiresQuestionAndAnswer(System.String)">
            <summary>Whether the Authentication Service requires Password Question and Answer.</summary>
            <param name="applicationName">The ApplicationName to run in.</param>
            <returns>The <see cref="T:System.Boolean"/>.</returns>
        </member>
        <member name="M:InSite.Model.Interfaces.IAuthenticationService.IsValidPassword(System.String,System.String)">
            <summary>Check a password to see if it meets complexity requirements.</summary>
            <param name="applicationName">The ApplicationName to run in.</param>
            <param name="password">The password to check.</param>
            <returns>True if the password meets the required complexity.</returns>
        </member>
        <member name="M:InSite.Model.Interfaces.IAuthenticationService.GeneratePassword(System.String)">
            <summary>Generates a valid password based on complexity requirements.</summary>
            <param name="applicationName">The ApplicationName to run in.</param>
            <returns>A valid password.</returns>
        </member>
        <member name="M:InSite.Model.Interfaces.IAuthenticationService.ChangePassword(System.String,System.String,System.String,System.String)">
            <summary>Changes the supplied user's password.</summary>
            <param name="applicationName">The ApplicationName to run in.</param>
            <param name="userName">UserName to change password for.</param>
            <param name="oldPassword">OldPassword to change.</param>
            <param name="newPassword">NewPassword to change to.</param>
            <returns>True if successful.</returns>
        </member>
        <member name="M:InSite.Model.Interfaces.IAuthenticationService.ResetPassword(System.String,System.String)">
            <summary>Reset the supplied user's password.</summary>
            <param name="applicationName">The ApplicationName to run in.</param>
            <param name="userName">UserName to reset the password for.</param>
            <returns>True if successful.</returns>
        </member>
        <member name="M:InSite.Model.Interfaces.IAuthenticationService.SetUserAsAuthenticated(System.String,System.String)">
            <summary>Sets a user (usually for a new Account) to be Authenticated.</summary>
            <param name="applicationName">The ApplicationName to run in.</param>
            <param name="userName">The UserName.</param>
        </member>
        <member name="M:InSite.Model.Interfaces.IAuthenticationService.IsAuthenticated(System.String)">
            <summary>Returns whether the current user is authenticated.</summary>
            <param name="applicationName">The ApplicationName to run in.</param>
            <returns>True if the user is authenticated.</returns>
        </member>
        <member name="M:InSite.Model.Interfaces.IAuthenticationService.IsLockedOut(System.String,System.String)">
            <summary>Returns whether the current user is locked out.</summary>
            <param name="applicationName">The ApplicationName to run in.</param>
            <param name="userName">The UserName.</param>
            <returns>True if the user is locked out.</returns>
        </member>
        <member name="M:InSite.Model.Interfaces.IAuthenticationService.LockUserOut(System.String,System.String)">
            <summary>The lock user out.</summary>
            <param name="applicationName">The application name.</param>
            <param name="userName">The user name.</param>
        </member>
        <member name="M:InSite.Model.Interfaces.IAuthenticationService.UnlockUser(System.String,System.String)">
            <summary>The unlock user.</summary>
            <param name="applicationName">The application name.</param>
            <param name="userName">The user name.</param>
        </member>
        <member name="M:InSite.Model.Interfaces.IAuthenticationService.ValidateUser(System.String,System.String,System.String)">
            <summary>Insures the supplied userName and password are valid.</summary>
            <param name="applicationName">The ApplicationName to run in.</param>
            <param name="userName">The log in User Name.</param>
            <param name="password">The log in Password.</param>
            <returns>True if valid user.</returns>
        </member>
        <member name="M:InSite.Model.Interfaces.IAuthenticationService.SignOut(System.String)">
            <summary>Signs a User out.</summary>
            <param name="applicationName">The ApplicationName to run in.</param>
        </member>
        <member name="M:InSite.Model.Interfaces.IAuthenticationService.CreateUser(System.String,System.String,System.String,System.String)">
            <summary>Creates the user.</summary>
            <param name="applicationName">Name of the application.</param>
            <param name="userName">Name of the user.</param>
            <param name="email">The email.</param>
            <param name="password">The password.</param>
            <returns>Blank if successful, error messages if not.</returns>
        </member>
        <member name="M:InSite.Model.Interfaces.IAuthenticationService.UpdateUser(System.String,System.String,System.String)">
            <summary>Updates the user.</summary>
            <param name="applicationName">Name of the application.</param>
            <param name="userName">Name of the user.</param>
            <param name="email">The email.</param>
            <returns>The <see cref="T:System.String"/>.</returns>
        </member>
        <member name="M:InSite.Model.Interfaces.IAuthenticationService.DeleteUser(System.String,System.String)">
            <summary>Deletes the user.</summary>
            <param name="applicationName">Name of the application.</param>
            <param name="userName">Name of the user.</param>
            <returns>Blank if successful, error messages if not.</returns>
        </member>
        <member name="M:InSite.Model.Interfaces.IAuthenticationService.GetAllRoles(System.String)">
            <summary>Returns all the Roles for the supplied Application Name.</summary>
            <param name="applicationName">The ApplicationName to run in.</param>
            <returns>List of Roles.</returns>
        </member>
        <member name="M:InSite.Model.Interfaces.IAuthenticationService.RoleExists(System.String,System.String)">
            <summary>Roles the exists.</summary>
            <param name="applicationName">Name of the application.</param>
            <param name="roleName">Name of the role.</param>
            <returns>The <see cref="T:System.Boolean"/>.</returns>
        </member>
        <member name="M:InSite.Model.Interfaces.IAuthenticationService.CreateRole(System.String,System.String)">
            <summary>Creates a Role in the supplied Application Name.</summary>
            <param name="applicationName">The ApplicationName to run in.</param>
            <param name="roleName">The RoleName to create.</param>
            <returns>Blank if successful, error messages if not.</returns>
        </member>
        <member name="M:InSite.Model.Interfaces.IAuthenticationService.DeleteRole(System.String,System.String)">
            <summary>Deletes the role.</summary>
            <param name="applicationName">Name of the application.</param>
            <param name="roleName">Name of the role.</param>
            <returns>Blank if successful, error messages if not.</returns>
        </member>
        <member name="M:InSite.Model.Interfaces.IAuthenticationService.GetRolesForUser(System.String,System.String)">
            <summary>Gets the roles for user.</summary>
            <param name="applicationName">Name of the application.</param>
            <param name="userName">Name of the user.</param>
        </member>
        <member name="M:InSite.Model.Interfaces.IAuthenticationService.AddUserToRole(System.String,System.String,System.String)">
            <summary>Adds the user to role.</summary>
            <param name="applicationName">Name of the application.</param>
            <param name="userName">Name of the user.</param>
            <param name="roleName">Name of the role.</param>
            <returns>Blank if successful, error messages if not.</returns>
        </member>
        <member name="M:InSite.Model.Interfaces.IAuthenticationService.RemoveUserFromRole(System.String,System.String,System.String)">
            <summary>Removes the user from role.</summary>
            <param name="applicationName">Name of the application.</param>
            <param name="userName">Name of the user.</param>
            <param name="roleName">Name of the role.</param>
            <returns>Blank if successful, error messages if not.</returns>
        </member>
        <member name="M:InSite.Model.Interfaces.IAuthenticationService.IsUserInRole(System.String,System.String,System.String)">
            <summary>Insures the supplied userName is in the supplied roleName.</summary>
            <param name="applicationName">The ApplicationName to run in.</param>
            <param name="userName">The log in User Name.</param>
            <param name="roleName">The Role Name to check for.</param>
            <returns>True if User Name is in Role, False if not.</returns>
        </member>
        <member name="P:InSite.Model.Interfaces.IAuthenticationService.Identity">
            <summary>
            Gets the current identity.
            </summary>
            <value>
            The identity.
            </value>
        </member>
        <member name="T:InSite.Model.Interfaces.IContentProvider">
            <summary>
            Implement this interface to customize how content managed content is provided.
            </summary>
        </member>
        <member name="M:InSite.Model.Interfaces.IContentProvider.GetCurrentApprovedRevision(InSite.Model.ContentManager,InSite.Model.Language,System.Nullable{InSite.Model.Interfaces.DeviceType},InSite.Model.Persona)">
            <summary>
            Get current approved content
            </summary>
            <param name="contentManager"><see cref="T:InSite.Model.ContentManager"/></param>
            <param name="language">Language definition.</param>
            <param name="deviceType">Device type.</param>
            <param name="persona">Persona identifier.</param>
            <returns>Latest specified content or null if none found.</returns>
        </member>
        <member name="M:InSite.Model.Interfaces.IContentProvider.GetCurrentOrFutureApprovedRevision(InSite.Model.ContentManager,InSite.Model.Language,System.Nullable{InSite.Model.Interfaces.DeviceType},InSite.Model.Persona)">
            <summary>
            Get current or future approved content
            </summary>
            <param name="contentManager"><see cref="T:InSite.Model.ContentManager"/></param>
            <param name="language">Language definition.</param>
            <param name="deviceType">Device type.</param>
            <param name="persona">Persona identifier.</param>
            <returns>Latest specified content or null if none found.</returns>
        </member>
        <member name="M:InSite.Model.Interfaces.IContentProvider.GetCurrentUnapprovedRevision(InSite.Model.ContentManager,InSite.Model.Language,System.Nullable{InSite.Model.Interfaces.DeviceType},InSite.Model.Persona,System.Boolean)">
            <summary>
            Get current unapproved content
            </summary>
            <param name="contentManager"><see cref="T:InSite.Model.ContentManager"/></param>
            <param name="language">Language definition.</param>
            <param name="deviceType">Device type.</param>
            <param name="persona">Persona identifier.</param>
            <param name="resolveExact">True to resolve exactly for Language, DeviceType and Persona</param>
            <returns>Latest specified content or null if none found.</returns>
        </member>
        <member name="T:InSite.Model.Interfaces.ICacheManager">
            <summary>Implement this interface to customize behavior of caching.</summary>
        </member>
        <member name="M:InSite.Model.Interfaces.ICacheManager.Get``1(System.String)">
            <summary>
            Get an item from the cache.
            </summary>
            <typeparam name="T">The type of the item.</typeparam>
            <param name="key">The cache key.</param>
            <returns></returns>
        </member>
        <member name="M:InSite.Model.Interfaces.ICacheManager.Add(System.String,System.Object,System.Nullable{System.TimeSpan})">
            <summary>
            Add an item to the cache.
            </summary>
            <param name="key">The cache key.</param>
            <param name="value">The value to be cached.</param>
            <param name="validFor">Optional time item is valid for.</param>
        </member>
        <member name="M:InSite.Model.Interfaces.ICacheManager.Contains(System.String)">
            <summary>
            Determine if the cache contains a cache key.
            </summary>
            <param name="key">The cache key.</param>
            <returns>True if the cache contains an item with the supplied key and type prefix, false otherwise.</returns>
        </member>
        <member name="M:InSite.Model.Interfaces.ICacheManager.Remove(System.String)">
            <summary>
            Remove an item from the cache.
            </summary>
            <param name="key">The cache key.</param>
        </member>
        <member name="M:InSite.Model.Interfaces.ICacheManager.Clear">
            <summary>
            Clear the cache.
            </summary>
        </member>
        <member name="M:InSite.Model.Interfaces.CacheManagerExtensions.Get``1(InSite.Model.Interfaces.ICacheManager,System.String,System.Func{``0},System.Nullable{System.TimeSpan})">
            <summary>
            Checks if an item exists in the cache. Adding it to the cache using <paramref name="factory"/> if it does not and then returning it.
            </summary>
            <param name="cacheManager"></param>
            <param name="key">The cache key.</param>
            <param name="factory">The func that is used to create the value.</param>
            <param name="validFor">Optional time item is valid for.</param>
        </member>
        <member name="M:InSite.Model.Interfaces.ICurrencyRefresh.RefreshCurrencyRates">
            <summary>
            Update currency rates in the system.
            </summary>
        </member>
        <member name="T:InSite.Model.Interfaces.ICustomerNumberProvider">
            <summary>
            Abstraction layer to generate Customer Numbers and Sequences.
            </summary>
        </member>
        <member name="M:InSite.Model.Interfaces.ICustomerNumberProvider.GetNextCustomerNumber(System.String,System.String)">
            <summary>
            Get the next Customer Number, if prefix and format are passed in, it will get the next number
            based on looking at the current data.  If they are not passed in, it uses an internal sequence
            to generate the next number.
            </summary>
            <param name="prefix">Optional Prefix for the Customer Number.</param>
            <param name="format">Optional Format for the Customer Number.</param>
            <returns>The next Customer Number.</returns>
        </member>
        <member name="M:InSite.Model.Interfaces.ICustomerNumberProvider.GetNextCustomerSequence(System.String)">
            <summary>
            Gets the next Customer Sequence for the supplied Customer Number.
            </summary>
            <param name="customerNumber">Customer Number to get next Sequence for.</param>
            <returns>The next Customer Sequence.</returns>
        </member>
        <member name="T:InSite.Model.Interfaces.ICustomPromotionResult">
            <summary>
            Implement <see cref="T:InSite.Model.Interfaces.ICustomPromotionResult"/> to create custom Promotion Results.
            </summary>
        </member>
        <member name="M:InSite.Model.Interfaces.ICustomPromotionResult.AmountOffShipping(InSite.Model.PromotionResultCustom,InSite.Model.CustomerOrder)">
            <summary>
            If your Custom Promotion Result applies to Shipping, return the amount off here, otherwise return 0.
            </summary>
            <param name="promotionResultCustom"><see cref="T:InSite.Model.PromotionResultCustom"/></param>
            <param name="customerOrder"><see cref="T:InSite.Model.CustomerOrder"/></param>
        </member>
        <member name="M:InSite.Model.Interfaces.ICustomPromotionResult.PercentOffShipping(InSite.Model.PromotionResultCustom,InSite.Model.CustomerOrder)">
            <summary>
            If your Custom Promotion Result applies to Shipping, return the percent off here, otherwise return 0.
            </summary>
            <param name="promotionResultCustom"><see cref="T:InSite.Model.PromotionResultCustom"/></param>
            <param name="customerOrder"><see cref="T:InSite.Model.CustomerOrder"/></param>
        </member>
        <member name="M:InSite.Model.Interfaces.ICustomPromotionResult.AmountOffOrder(InSite.Model.PromotionResultCustom,InSite.Model.CustomerOrder)">
            <summary>
            If your Custom Promotion Result applies only to the full <see cref="T:InSite.Model.CustomerOrder"/> (not individual <see cref="T:InSite.Model.OrderLine"/>s), return the amount off here, otherwise return 0.
            </summary>
            <param name="promotionResultCustom"><see cref="T:InSite.Model.PromotionResultCustom"/></param>
            <param name="customerOrder"><see cref="T:InSite.Model.CustomerOrder"/></param>
        </member>
        <member name="M:InSite.Model.Interfaces.ICustomPromotionResult.PercentOffOrder(InSite.Model.PromotionResultCustom,InSite.Model.CustomerOrder)">
            <summary>
            If your Custom Promotion Result applies only to the full <see cref="T:InSite.Model.CustomerOrder"/> (not individual <see cref="T:InSite.Model.OrderLine"/>s), return the percent off here, otherwise return 0.
            </summary>
            <param name="promotionResultCustom"><see cref="T:InSite.Model.PromotionResultCustom"/></param>
            <param name="customerOrder"><see cref="T:InSite.Model.CustomerOrder"/></param>
        </member>
        <member name="M:InSite.Model.Interfaces.ICustomPromotionResult.ProductDiscount(InSite.Model.PromotionResultCustom,InSite.Model.CustomerOrder)">
            <summary>
            If your Custom Promotion Result applies to an <see cref="T:InSite.Model.OrderLine"/> / <see cref="T:InSite.Model.Product"/>, return the total amount off here, otherwise return 0.
            </summary>
            <param name="promotionResultCustom"><see cref="T:InSite.Model.PromotionResultCustom"/></param>
            <param name="customerOrder"><see cref="T:InSite.Model.CustomerOrder"/></param>
        </member>
        <member name="M:InSite.Model.Interfaces.ICustomPromotionResult.ProductDiscountPerEach(InSite.Model.PromotionResultCustom,InSite.Model.OrderLine)">
            <summary>
            If your Custom Promotion Result applies to an <see cref="T:InSite.Model.OrderLine"/> / <see cref="T:InSite.Model.Product"/>, return the amount off per each here, otherwise return 0.
            </summary>
            <param name="promotionResultCustom"><see cref="T:InSite.Model.PromotionResultCustom"/></param>
            <param name="orderLine"><see cref="T:InSite.Model.OrderLine"/></param>
        </member>
        <member name="M:InSite.Model.Interfaces.ICustomPromotionResult.ApplyPromotionResult(InSite.Model.PromotionResultCustom,InSite.Model.CustomerOrder)">
            <summary>
            Applies this <see cref="T:InSite.Model.Interfaces.ICustomPromotionResult"/> to the <see cref="T:InSite.Model.CustomerOrder"/>.
            </summary>
            <param name="promotionResultCustom"><see cref="T:InSite.Model.PromotionResultCustom"/></param>
            <param name="customerOrder"><see cref="T:InSite.Model.CustomerOrder"/></param>
        </member>
        <member name="M:InSite.Model.Interfaces.ICustomPromotionResult.UnApplyPromotionResult(InSite.Model.PromotionResultCustom,InSite.Model.CustomerOrder)">
            <summary>
            Called from within <see cref="M:InSite.Model.OrderLine.CalculatePrice(System.Boolean)"/>, only difference between this and ClearPromotionResult is 
            that it you should not set the PromotionResult to null, so you don't get a null reference exception on the next
            line where it re-applies the promotion result.
            </summary>
            <param name="promotionResultCustom"><see cref="T:InSite.Model.PromotionResultCustom"/></param>
            <param name="customerOrder"><see cref="T:InSite.Model.CustomerOrder"/></param>
        </member>
        <member name="M:InSite.Model.Interfaces.ICustomPromotionResult.ClearPromotionResult(InSite.Model.PromotionResultCustom,InSite.Model.CustomerOrder)">
            <summary>
            Clear this <see cref="T:InSite.Model.Interfaces.ICustomPromotionResult"/> from the <see cref="T:InSite.Model.CustomerOrder"/>.
            </summary>
            <param name="promotionResultCustom"><see cref="T:InSite.Model.PromotionResultCustom"/></param>
            <param name="customerOrder"><see cref="T:InSite.Model.CustomerOrder"/></param>
        </member>
        <member name="T:InSite.Model.Interfaces.ICustomPromotionRule">
            <summary>
            Implement <see cref="T:InSite.Model.Interfaces.ICustomPromotionRule"/> to create custom Promotion Rules.
            </summary>
        </member>
        <member name="M:InSite.Model.Interfaces.ICustomPromotionRule.IsValid(InSite.Model.PromotionRuleCustom,InSite.Model.CustomerOrder,InSite.Model.Customer)">
            <summary>
            Determines if the <see cref="T:InSite.Model.CustomerOrder"/> and <see cref="T:InSite.Model.Customer"/> qualify based on this Promotion Rule.
            </summary>
            <param name="promotionRuleCustom"><see cref="T:InSite.Model.PromotionRuleCustom"/> contains the parameters specified for this Custom Promotion Rule.</param>
            <param name="customerOrder"><see cref="T:InSite.Model.CustomerOrder"/> to validate the Promotion Rule against.</param>
            <param name="customer"><see cref="T:InSite.Model.Customer"/> to validate the Promotion Rule against.</param>
            <returns>True if the <see cref="T:InSite.Model.CustomerOrder"/> and <see cref="T:InSite.Model.Customer"/> qualify based on this Promotion Rule, otherwise False.</returns>
        </member>
        <member name="T:InSite.Model.Interfaces.ICustomShipRule">
            <summary>
            Implement <see cref="T:InSite.Model.Interfaces.ICustomShipRule"/> to create custom Ship Rules.
            </summary>
        </member>
        <member name="M:InSite.Model.Interfaces.ICustomShipRule.IsValid(InSite.Model.ShipRuleCustom,InSite.Model.CustomerOrder,InSite.Model.Customer)">
            <summary>
            Determines if the <see cref="T:InSite.Model.CustomerOrder"/> and <see cref="T:InSite.Model.Customer"/> qualify based on this Ship Rule.
            </summary>
            <param name="shipRuleCustom"><see cref="T:InSite.Model.ShipRuleCustom"/> contains the parameters specified for this Custom Ship Rule.</param>
            <param name="customerOrder"><see cref="T:InSite.Model.CustomerOrder"/> to validate the Ship Rule against.</param>
            <param name="customer"><see cref="T:InSite.Model.Customer"/> to validate the Ship Rule against.</param>
            <returns>True if the <see cref="T:InSite.Model.CustomerOrder"/> and <see cref="T:InSite.Model.Customer"/> qualify based on this Ship Rule, otherwise False.</returns>
        </member>
        <member name="T:InSite.Model.Interfaces.DeviceType">
            <summary>
            Supported devices types
            </summary>
        </member>
        <member name="F:InSite.Model.Interfaces.DeviceType.Desktop">
            <summary>
            Desktop device type
            </summary>
        </member>
        <member name="F:InSite.Model.Interfaces.DeviceType.Tablet">
            <summary>
            Tablet device type
            </summary>
        </member>
        <member name="F:InSite.Model.Interfaces.DeviceType.Phone">
            <summary>
            Phone device type
            </summary>
        </member>
        <member name="T:InSite.Model.Interfaces.IDeviceTypeProvider">
            <summary>
            Implement this interface to customize what gets used to resolve the current device type for a session
            </summary>
        </member>
        <member name="M:InSite.Model.Interfaces.IDeviceTypeProvider.UserAgentToDeviceType(System.String)">
            <summary>
            Resolve the device type for a given user agent
            </summary>
            <param name="userAgent">User agent string for this request.</param>
            <returns>Device type.</returns>
        </member>
        <member name="M:InSite.Model.Interfaces.IRulesEngine.Execute(InSite.Model.IBusinessObject,System.Collections.Generic.List{System.Object})">
            <summary>
            Executes the rules and returns pass or fail
            </summary>
            <param name="objectToValidate">Object being validated, which must have a <see cref="T:InSite.Model.RuleManager"/> property.</param>
            <param name="context">Object data which may be required to evalutate the rules, matched by type.</param>
            <returns>true if rules pass</returns>
        </member>
        <member name="T:InSite.Model.Interfaces.IEmailService">
            <summary>
            Service that offers functions for sending emails and parsing email templates
            </summary>
        </member>
        <member name="M:InSite.Model.Interfaces.IEmailService.ProcessEmailQueue">
            <summary>
            Looks for any <see cref="T:InSite.Model.EmailMessage"/> that have not been delivered yet and attempts to resend them.
            </summary>
        </member>
        <member name="M:InSite.Model.Interfaces.IEmailService.SendEmail(InSite.Model.Interfaces.SendEmailParameter)">
            <summary>
            Sends an email
            </summary>
            <param name="parameter">The <see cref="T:InSite.Model.Interfaces.SendEmailParameter"/>.</param>
            <remarks>This will create an <see cref="T:InSite.Model.EmailMessage"/> and then try to send the Email with the current SMTP settings. On failure the exception is caught and stored in a related
            <see cref="T:InSite.Model.EmailMessageDeliveryAttempt"/>. The <see cref="T:InSite.Model.EmailMessage"/> can be resent later using new SMTP settings.</remarks>
        </member>
        <member name="M:InSite.Model.Interfaces.IEmailService.ParseTemplate(System.String,System.Dynamic.ExpandoObject)">
            <summary>
            Parse the template represented by the <paramref name="template"/> using the given <paramref name="model"/> parameter
            </summary>
            <param name="template">A template in string form that uses Razor syntax</param>
            <param name="model">An <see cref="T:System.Dynamic.ExpandoObject"/> that represents the model for the email.</param>
            <returns></returns>
        </member>
        <member name="M:InSite.Model.Interfaces.IEmailService.GetOrCreateEmailList(System.String,System.String)">
            <summary>
            Gets or creates an <see cref="T:InSite.Model.EmailList"/> for the given <paramref name="name"/>. Will create with <paramref name="defaultSubject"/>.
            </summary>
            <param name="name"></param>
            <param name="defaultSubject"></param>
            <returns><see cref="T:InSite.Model.EmailList"/></returns>
        </member>
        <member name="M:InSite.Model.Interfaces.IEmailService.SendEmailList(InSite.Model.EmailList,System.Collections.Generic.IList{System.String},System.Dynamic.ExpandoObject,System.String)">
            <summary>
            Sends the given <see cref="T:InSite.Model.EmailList"/> to the supplied <paramref name="toAddresses"/> parsing the <see cref="T:InSite.Model.EmailTemplate"/> with the given <paramref name="templateModel"/>.
            and using the given <paramref name="subject"/>, falling back to the <see cref="T:InSite.Model.EmailList"/>.Subject if the <paramref name="subject"/> is not supplied.
            </summary>
            <param name="emailList"></param>
            <param name="toAddresses"></param>
            <param name="templateModel"></param>
            <param name="subject"></param>
        </member>
        <member name="M:InSite.Model.Interfaces.IEmailService.SendEmailList(InSite.Model.EmailList,System.String,System.Dynamic.ExpandoObject,System.String)">
            <summary>
            Sends the given <see cref="T:InSite.Model.EmailList"/> to the supplied <paramref name="toAddress"/> parsing the <see cref="T:InSite.Model.EmailTemplate"/> with the given <paramref name="templateModel"/>
            and using the given <paramref name="subject"/>, falling back to the <see cref="T:InSite.Model.EmailList"/>.Subject if the <paramref name="subject"/> is not supplied.
            </summary>
            <param name="emailList"></param>
            <param name="toAddress"></param>
            <param name="templateModel"></param>
            <param name="subject"></param>
        </member>
        <member name="M:InSite.Model.Interfaces.IEmailService.SubscribeEmailToList(System.String,System.String,InSite.Model.Interfaces.IUnitOfWork)">
            <summary>Subscribes the given <paramref name="email"/> to the <see cref="T:InSite.Model.EmailList"/> identified by <paramref name="emailListName"/></summary>
            <param name="emailListName">The email List Name.</param>
            <param name="email"></param>
            <param name="unitOfWork"></param>
        </member>
        <member name="M:InSite.Model.Interfaces.IEmailService.UnsubscribeEmailFromList(System.String,System.String,InSite.Model.Interfaces.IUnitOfWork)">
            <summary>Unsubscribes the given <paramref name="email"/> to the <see cref="T:InSite.Model.EmailList"/> identified by <paramref name="emailListName"/></summary>
            <param name="emailListName">The email List Name.</param>
            <param name="email"></param>
            <param name="unitOfWork"></param>
        </member>
        <member name="M:InSite.Model.Interfaces.IEmailService.IsEmailSubscribedToList(System.String,System.String,InSite.Model.Interfaces.IUnitOfWork)">
            <summary>
            Determines whether [is email subscribed to list] [the specified email list name].
            </summary>
            <param name="emailListName">Name of the email list.</param>
            <param name="email">The email.</param>
            <param name="unitOfWork">The unit of work.</param>
            <returns></returns>
        </member>
        <member name="T:InSite.Model.Interfaces.IOrderLineState">
            <summary>
            Implement this interface to control what the <see cref="P:InSite.Model.Interfaces.IOrderLineState.OrderLine"/> methods do when the <see cref="T:InSite.Model.CustomerOrder"/> Status and/or the <see cref="P:InSite.Model.Interfaces.IOrderLineState.OrderLine"/> Status changes.
            </summary>
        </member>
        <member name="M:InSite.Model.Interfaces.IOrderLineState.CheckStateChange(System.String,System.Object,System.Object)">
            <summary>
            This method gets called by property changes in the <see cref="P:InSite.Model.Interfaces.IOrderLineState.OrderLine"/> to see if the <see cref="T:InSite.Model.Interfaces.IOrderLineState"/> controlling the
            functions of the <see cref="P:InSite.Model.Interfaces.IOrderLineState.OrderLine"/> needs to change.
            </summary>
            <param name="propertyName">The name of the property that has changed.</param>
            <param name="oldValue">The old value of the property changing.</param>
            <param name="newValue">The value the property is changing to.</param>
        </member>
        <member name="M:InSite.Model.Interfaces.IOrderLineState.GetIsActive">
            <summary>Returns true if the <see cref="P:InSite.Model.Interfaces.IOrderLineState.OrderLine"/> is Active.</summary>
        </member>
        <member name="M:InSite.Model.Interfaces.IOrderLineState.GetIsLocalTaxable">
            <summary>Returns true if the <see cref="P:InSite.Model.Interfaces.IOrderLineState.OrderLine"/> is locally taxable.</summary>
        </member>
        <member name="M:InSite.Model.Interfaces.IOrderLineState.GetIsStateTaxable">
            <summary>Returns true if the <see cref="P:InSite.Model.Interfaces.IOrderLineState.OrderLine"/> is state taxable.</summary>
        </member>
        <member name="M:InSite.Model.Interfaces.IOrderLineState.GetPassesShippingRestrictions">
            <summary>Returns true if the <see cref="P:InSite.Model.Interfaces.IOrderLineState.OrderLine"/> passes shipping restrictions.</summary>
        </member>
        <member name="M:InSite.Model.Interfaces.IOrderLineState.GetCustomerProductNumber">
            <summary>Returns the Customer Product Number for the <see cref="T:InSite.Model.Product"/> on the <see cref="P:InSite.Model.Interfaces.IOrderLineState.OrderLine"/>.</summary>
        </member>
        <member name="M:InSite.Model.Interfaces.IOrderLineState.GetDescriptionWithAttributes">
            <summary>Returns the <see cref="P:InSite.Model.Interfaces.IOrderLineState.OrderLine"/> Description with all of it's <see cref="T:InSite.Model.OrderLineProperty"/>s.</summary>
        </member>
        <member name="M:InSite.Model.Interfaces.IOrderLineState.SetQtyOrdered(System.Decimal)">
            <summary>
            Runs the logic to execute when the <see cref="P:InSite.Model.Interfaces.IOrderLineState.OrderLine"/>.QtyOrdered is changed.
            </summary>
            <param name="qtyOrdered">The updated QtyOrdered.</param>
        </member>
        <member name="M:InSite.Model.Interfaces.IOrderLineState.SetActualPrice(System.Decimal)">
            <summary>
            Runs the logic to execute when the <see cref="P:InSite.Model.Interfaces.IOrderLineState.OrderLine"/>.ActualPrice is changed.
            </summary>
            <param name="actualPrice">The updated ActualPrice.</param>
        </member>
        <member name="M:InSite.Model.Interfaces.IOrderLineState.CalculatePrice(System.Boolean)">
            <summary>
            Runs the <see cref="T:InSite.Model.Interfaces.IPricingService"/> to calculate the price for the <see cref="P:InSite.Model.Interfaces.IOrderLineState.OrderLine"/>.
            </summary>
        </member>
        <member name="M:InSite.Model.Interfaces.IOrderLineState.GetExtendedRegularPrice">
            <summary>Returns the <see cref="P:InSite.Model.Interfaces.IOrderLineState.OrderLine"/>.ExtendedRegularPrice.</summary>
        </member>
        <member name="M:InSite.Model.Interfaces.IOrderLineState.GetExtendedActualPrice">
            <summary>Returns the <see cref="P:InSite.Model.Interfaces.IOrderLineState.OrderLine"/>.ExtendedActualPrice.</summary>
        </member>
        <member name="M:InSite.Model.Interfaces.IOrderLineState.SetProduct(InSite.Model.Product)">
            <summary>
            Runs the logic to execute when the <see cref="P:InSite.Model.Interfaces.IOrderLineState.OrderLine"/>.<see cref="T:InSite.Model.Product"/> is changed.
            </summary>
            <param name="product">The updated <see cref="T:InSite.Model.Product"/>.</param>
        </member>
        <member name="M:InSite.Model.Interfaces.IOrderLineState.GetOrderLineSavingsAmount">
            <summary>Returns the <see cref="P:InSite.Model.Interfaces.IOrderLineState.OrderLine"/>s amount saved between the RegularPrice and ActualPrice.</summary>
        </member>
        <member name="M:InSite.Model.Interfaces.IOrderLineState.GetOrderLineSavingsPercent">
            <summary>Returns the <see cref="P:InSite.Model.Interfaces.IOrderLineState.OrderLine"/>s percent saved between the RegularPrice and ActualPrice.</summary>
        </member>
        <member name="M:InSite.Model.Interfaces.IOrderLineState.GetOrderLineProperty(System.String)">
            <summary>Returns the <see cref="P:InSite.Model.Interfaces.IOrderLineState.OrderLine"/>s <see cref="T:InSite.Model.OrderLineProperty"/> by name.</summary>
        </member>
        <member name="M:InSite.Model.Interfaces.IOrderLineState.GetOrderLinePropertyValue(System.String)">
            <summary>Returns the <see cref="P:InSite.Model.Interfaces.IOrderLineState.OrderLine"/>s <see cref="T:InSite.Model.OrderLineProperty"/>.Value by name.</summary>
        </member>
        <member name="M:InSite.Model.Interfaces.IOrderLineState.GetConfigDataSet">
            <summary>Returns the <see cref="P:InSite.Model.Interfaces.IOrderLineState.OrderLine"/>s ConfigDataSet.</summary>
        </member>
        <member name="M:InSite.Model.Interfaces.IOrderLineState.SetConfigDataSet(System.Data.DataSet)">
            <summary>
            Runs the logic to execute when the <see cref="P:InSite.Model.Interfaces.IOrderLineState.OrderLine"/>.ConfigDataSet is changed.
            </summary>
            <param name="configDataSet">The updated ConfigDataSet.</param>
        </member>
        <member name="M:InSite.Model.Interfaces.IOrderLineState.SaveConfigDataSet">
            <summary>Saves the <see cref="P:InSite.Model.Interfaces.IOrderLineState.OrderLine"/>s ConfigDataSet to an <see cref="T:InSite.Model.OrderLineProperty"/> named Configuration.</summary>
        </member>
        <member name="M:InSite.Model.Interfaces.IOrderLineState.GetConfiguredOptions">
            <summary>Returns the <see cref="P:InSite.Model.Interfaces.IOrderLineState.OrderLine"/>s selected Configuration Options from the ConfigDataSet.</summary>
        </member>
        <member name="M:InSite.Model.Interfaces.IOrderLineState.GetDescriptionWithConfiguredOptions">
            <summary>Returns the <see cref="P:InSite.Model.Interfaces.IOrderLineState.OrderLine"/>s Description with the selected Configuration Options from the ConfigDataSet.</summary>
        </member>
        <member name="M:InSite.Model.Interfaces.IOrderLineState.Copy">
            <summary>Returns a Copy of the <see cref="P:InSite.Model.Interfaces.IOrderLineState.OrderLine"/>.</summary>
        </member>
        <member name="P:InSite.Model.Interfaces.IOrderLineState.OrderLine">
            <summary>The <see cref="P:InSite.Model.Interfaces.IOrderLineState.OrderLine"/> to handle the state of.</summary>
        </member>
        <member name="T:InSite.Model.Interfaces.IOrderLineStateFactory">
            <summary>
            Public interface to create an <see cref="T:InSite.Model.Interfaces.IOrderLineStateFactory"/>.  The implemented classes responsibilty is to implement
            a factory that can return <see cref="T:InSite.Model.Interfaces.IOrderLineState"/>'s by <see cref="T:InSite.Model.CustomerOrder"/> and <see cref="T:InSite.Model.OrderLine"/> Status.
            </summary>
        </member>
        <member name="M:InSite.Model.Interfaces.IOrderLineStateFactory.GetOrderLineState(InSite.Model.OrderLine)">
            <summary>Creates a new instances of <see cref="T:InSite.Model.Interfaces.IOrderLineState"/> for the <see cref="T:InSite.Model.OrderLine"/>.</summary>
            <param name="orderLine">The <see cref="T:InSite.Model.OrderLine"/> to get a <see cref="T:InSite.Model.Interfaces.IOrderLineState"/> for.</param>
            <returns>A new instance of an object that implements <see cref="T:InSite.Model.Interfaces.IOrderLineState"/></returns>
        </member>
        <member name="T:InSite.Model.Interfaces.Repositories.ICustomerOrderRepository">
            <summary>The CustomerOrderRepository interface.</summary>
        </member>
        <member name="T:InSite.Model.Interfaces.Repositories.IRepository`1">
            <summary>The IRepository interface is the abstraction layer to the object persistence management of the system. Currently only NHibernate is supported.</summary>
            <typeparam name="T">The Type of InSite.Model Business Object of the Repository</typeparam>
        </member>
        <member name="P:InSite.Model.Interfaces.Repositories.IRepository.DataProvider">
            <summary>The DataProvider that manages the Persistence of the Repository</summary>
        </member>
        <member name="M:InSite.Model.Interfaces.Repositories.IRepository`1.GetTable">
            <summary>Get an IQueryable to use Linq to query the Database with using Linq to NHibernate.</summary>
            <returns>Returns Linq IQueryable</returns>
            <example>
            var unitOfWork = ServiceLocator.Current.GetInstance&lt;IUnitOfWork&gt;();<br/>
            var repository = unitOfWork.GetRepository&lt;Category&gt;();<br/>
            var categoryList = repository.GetTable().Where(x=&gt;x.Active &lt; DateTimeProvider.Current.Now).ToList();
            </example>
        </member>
        <member name="M:InSite.Model.Interfaces.Repositories.IRepository`1.GetList(System.String,System.Int32@,System.Collections.ObjectModel.Collection{System.Data.IDbDataParameter})">
            <summary>Return List of objects of type T based off of input parameters.</summary>
            <param name="query">Sql Statement</param>
            <param name="recordCount">Output Total Count of items regardless of pageSize</param>
            <param name="parameters">Sql Db Parameter list to build parameterized Sql query</param>
            <returns>Return List of objects of type T based off of input parameters</returns>
        </member>
        <member name="M:InSite.Model.Interfaces.Repositories.IRepository`1.GetList(System.String,System.Int32,System.Int32,System.Int32@,System.Collections.ObjectModel.Collection{System.Data.IDbDataParameter})">
            <summary>Return List of objects of type T based off of input parameters.</summary>
            <param name="query">Sql Statement</param>
            <param name="startRow">Starting index of return results</param>
            <param name="pageSize">Number of items to return</param>
            <param name="recordCount">Output Total Count of items regardless of pageSize</param>
            <param name="parameters">Sql Db Parameter list to build parameterized Sql query</param>
            <returns>Return List of objects of type T based off of input parameters</returns>
        </member>
        <member name="M:InSite.Model.Interfaces.Repositories.IRepository`1.Get(System.Guid)">
            <summary>Return an object of Type T by using its identity field.</summary>
            <param name="id">Identity field/key for object of Type T to be returned</param>
            <returns>Object for the specified id, null if not found</returns>
            <example>
            var unitOfWork = ServiceLocator.Current.GetInstance&lt;IUnitOfWork&gt;();<br/>
            var repository = unitOfWork.GetRepository&lt;Category&gt;();<br/>
            var category = repository.Get(Guid.NewGuid());
            </example>
        </member>
        <member name="M:InSite.Model.Interfaces.Repositories.IRepository`1.Get(System.String)">
            <summary>Return an object of Type T by using its identity field.</summary>
            <param name="id">Identity field/key for object of Type T to be returned</param>
            <returns>Object for the specified id, null if not found</returns>
            <example>
            var unitOfWork = ServiceLocator.Current.GetInstance&lt;IUnitOfWork&gt;();<br/>
            var repository = unitOfWork.GetRepository&lt;Category&gt;();<br/>
            var category = repository.Get(Guid.NewGuid().ToString());
            </example>
        </member>
        <member name="M:InSite.Model.Interfaces.Repositories.IRepository`1.Create">
            <summary>
            Creates a new Business Object and injects any dependencies in to it, does not put the new Business Object in to the session because errors may occur for required dependent objects
            You must still call Insert to put the object in to the UnitOfWork session to be saved
            </summary>
            <returns>A new Business Object with any dependencies Injected in to it</returns>
        </member>
        <member name="M:InSite.Model.Interfaces.Repositories.IRepository`1.Insert(`0)">
            <summary>Insert object of Type T in to the <see cref="T:InSite.Model.Interfaces.IUnitOfWork"/> session.</summary>
            <param name="inserted">Type T to be inserted into <see cref="T:InSite.Model.Interfaces.IUnitOfWork"/> session</param>
            <example>
            var unitOfWork = ServiceLocator.Current.GetInstance&lt;IUnitOfWork&gt;();<br/>
            var repository = unitOfWork.GetRepository&lt;Product&gt;();<br/>
            var product = ServiceLocator.GetInstance&lt;Product&gt;();<br/>
            product.Name = “test”;<br/>
            repository.Insert(product);<br/>
            unitOfWork.Save();<br/></example>
        </member>
        <member name="M:InSite.Model.Interfaces.Repositories.IRepository`1.Delete(`0)">
            <summary>Delete a persisted object of Type T in the <see cref="T:InSite.Model.Interfaces.IUnitOfWork"/> session.</summary>
            <param name="deleted">Type T to be deleted in the <see cref="T:InSite.Model.Interfaces.IUnitOfWork"/> session</param>
            <example>
            var unitOfWork = ServiceLocator.Current.GetInstance&lt;IUnitOfWork&gt;();<br/>
            var catToDelete = unitOfWork.GetRepository&lt;Category&gt;().Get(Guid.NewGuid());<br/>
            repository.Delete(catToDelete);<br/>
            unitOfWork.Save();<br/></example>
        </member>
        <member name="M:InSite.Model.Interfaces.Repositories.IRepository`1.GetByNaturalKey(System.Object[])">
            <summary>
            Retrieves a model object based on the natural key field(s). The natural keys are marked with [LookupKeyField] on the model properties.
            </summary>
            <param name="keyValues">All natural key values, in order</param>       
            <returns>Model object if found, null if not found</returns>
        </member>
        <member name="M:InSite.Model.Interfaces.Repositories.ICustomerOrderRepository.GetListForERPRefresh(System.Boolean)">
            <summary>The get list for erp refresh.</summary>
            <param name="includeCompleted">The include completed.</param>
            <returns>The <see cref="!:IList"/>.</returns>
        </member>
        <member name="M:InSite.Model.Interfaces.Repositories.ICustomerOrderRepository.GetReSubmitCustomerOrderList(System.Int32)">
            <summary>The get re submit customer order list.</summary>
            <param name="batchNumber">The batch number.</param>
            <returns>The <see cref="!:IList"/>.</returns>
        </member>
        <member name="M:InSite.Model.Interfaces.Repositories.ICustomerOrderRepository.GetByErpNumber(System.String)">
            <summary>The get by erp number.</summary>
            <param name="erpOrderNumber">The erp order number.</param>
            <returns>The <see cref="T:InSite.Model.CustomerOrder"/>.</returns>
        </member>
        <member name="T:InSite.Model.Interfaces.Repositories.ICustomerRepository">
            <summary>The CustomerRepository interface.</summary>
        </member>
        <member name="M:InSite.Model.Interfaces.Repositories.ICustomerRepository.GetByNumber(System.String)">
            <summary>The get by number.</summary>
            <param name="customerNumber">The customer number.</param>
            <returns>The <see cref="T:InSite.Model.Customer"/>.</returns>
        </member>
        <member name="M:InSite.Model.Interfaces.Repositories.ICustomerRepository.GetByNumberSequence(System.String,System.String)">
            <summary>The get by number sequence.</summary>
            <param name="customerNumber">The customer number.</param>
            <param name="customerSequence">The customer sequence.</param>
            <returns>The <see cref="T:InSite.Model.Customer"/>.</returns>
        </member>
        <member name="T:InSite.Model.Services.Repositories.Repository`1">
            <summary>This class is the implementation of the IRepository</summary>
        </member>
        <member name="M:InSite.Model.Services.Repositories.Repository`1.#ctor(InSite.Model.Interfaces.IDataProvider)">
            <summary>Dependency Injection Constructor</summary>
            <param name="dataProvider">The IDataProvider that provides persistence</param>
        </member>
        <member name="M:InSite.Model.Services.Repositories.Repository`1.GetTable">
            <summary>Get an IQueryable to use Linq to query the Database</summary>
            <returns>Returns Linq IQueryable</returns>
            <example>
            var unitOfWork = ServiceLocator.Current.GetInstance&lt;IUnitOfWork&gt;();<br/>
            var repository = unitOfWork.GetRepository&lt;Category&gt;();<br/>
            var categoryList = repository.GetTable().Where(c=&gt;c.Active &lt; DateTimeProvider.Current.Now).ToList();
            </example>
        </member>
        <member name="M:InSite.Model.Services.Repositories.Repository`1.GetTableAsBusinessObjects">
            <summary>Get an IQueryable used to query the Database</summary>
        </member>
        <member name="M:InSite.Model.Services.Repositories.Repository`1.GetList(System.String,System.Int32@,System.Collections.ObjectModel.Collection{System.Data.IDbDataParameter})">
            <summary>Return List of objects of type T based off of input parameters.</summary>
            <param name="query">Sql Statement</param>
            <param name="recordCount">Output Total Count of items regardless of pageSize</param>
            <param name="parameters">Sql Db Parameter list to build parameterized Sql query</param>
            <returns>Return List of objects of type T based off of input parameters</returns>
        </member>
        <member name="M:InSite.Model.Services.Repositories.Repository`1.GetList(System.String,System.Int32,System.Int32,System.Int32@,System.Collections.ObjectModel.Collection{System.Data.IDbDataParameter})">
            <summary>Return List of objects of type T based off of input parameters.</summary>
            <param name="query">Sql Statement</param>
            <param name="startRow">Starting index of return results</param>
            <param name="pageSize">Number of items to return</param>
            <param name="recordCount">Output Total Count of items regardless of pageSize</param>
            <param name="parameters">Sql Db Parameter list to build parameterized Sql query</param>
            <returns>Return List of objects of type T based off of input parameters</returns>
        </member>
        <member name="M:InSite.Model.Services.Repositories.Repository`1.Get(System.Guid)">
            <summary>Retrieve an object of Type T by using its identity field.</summary>
            <param name="id">Identity field/key for object of Type T to be returned</param>
            <returns>Object for the specified id, null if not found</returns>
            <example>
            var unitOfWork = ServiceLocator.Current.GetInstance&lt;IUnitOfWork&gt;();<br/>
            var repository = unitOfWork.GetRepository&lt;Category&gt;();<br/>
            var category = repository.Get(Guid.NewGuid());
            </example>
        </member>
        <member name="M:InSite.Model.Services.Repositories.Repository`1.GetAsBusinessObject(System.Guid)">
            <summary>Retrieve an <see cref="T:InSite.Model.IBusinessObject"/> by using its identity field.</summary>
        </member>
        <member name="M:InSite.Model.Services.Repositories.Repository`1.Get(System.String)">
            <summary>Return an object of Type T by using its identity field.</summary>
            <param name="id">Identity field/key for object of Type T to be returned</param>
            <returns>Object for the specified id, null if not found</returns>
            <example>
            var unitOfWork = ServiceLocator.Current.GetInstance&lt;IUnitOfWork&gt;();<br/>
            var repository = unitOfWork.GetRepository&lt;Category&gt;();<br/>
            var category = repository.Get(Guid.NewGuid().ToString());
            </example>
        </member>
        <member name="M:InSite.Model.Services.Repositories.Repository`1.Create">
            <summary>
            Creates a new Business Object but does not put the new Business Object in to the session because errors may occur for required dependent objects
            You must still call Insert to put the object in to the UnitOfWork session to be saved
            </summary>
            <returns>A new Business Object with any dependencies Injected in to it</returns>
        </member>
        <member name="M:InSite.Model.Services.Repositories.Repository`1.CreateAsBusinessObject">
            <summary>
            Creates a new Business Object but does not put the new Business Object in to the session because errors may occur for required dependent objects
            You must still call Insert to put the object in to the UnitOfWork session to be saved
            </summary>
        </member>
        <member name="M:InSite.Model.Services.Repositories.Repository`1.Insert(`0)">
            <summary>Insert object of Type T in to the <see cref="T:InSite.Model.Interfaces.IUnitOfWork"/> session.</summary>
            <param name="inserted">Type T to be inserted into <see cref="T:InSite.Model.Interfaces.IUnitOfWork"/> session</param>
            <example>
            var unitOfWork = ServiceLocator.Current.GetInstance&lt;IUnitOfWork&gt;();<br/>
            var repository = unitOfWork.GetRepository&lt;Product&gt;();<br/>
            var product = ServiceLocator.GetInstance&lt;Product&gt;();<br/>
            product.Name = “test”;<br/>
            repository.Insert(product);<br/>
            unitOfWork.Save();<br/></example>
        </member>
        <member name="M:InSite.Model.Services.Repositories.Repository`1.InsertAsBusinessObject(InSite.Model.IBusinessObject)">
            <summary>Insert object in to the <see cref="T:InSite.Model.Interfaces.IUnitOfWork"/> session.</summary>
        </member>
        <member name="M:InSite.Model.Services.Repositories.Repository`1.Delete(`0)">
            <summary>Delete a persisted object of Type T in the <see cref="T:InSite.Model.Interfaces.IUnitOfWork"/> session.</summary>
            <param name="deleted">Type T to be deleted in the <see cref="T:InSite.Model.Interfaces.IUnitOfWork"/> session</param>
            <example>
            var unitOfWork = ServiceLocator.Current.GetInstance&lt;IUnitOfWork&gt;();<br/>
            var catToDelete = unitOfWork.GetRepository&lt;Category&gt;().Get(Guid.NewGuid());<br/>
            repository.Delete(catToDelete);<br/>
            unitOfWork.Save();<br/></example>
        </member>
        <member name="M:InSite.Model.Services.Repositories.Repository`1.DeleteAsBusinessObject(InSite.Model.IBusinessObject)">
            <summary>Delete a persisted object in the <see cref="T:InSite.Model.Interfaces.IUnitOfWork"/> session.</summary>
        </member>
        <member name="M:InSite.Model.Services.Repositories.Repository`1.GetByNaturalKey(System.Object[])">
            <summary>
            Retrieves a model object based on the natural key field(s). The natural keys are marked with [LookupKeyField] on the model properties.
            </summary>
            <param name="keyValues">All natural key values, in order</param>       
            <returns>Model object if found, null if not found</returns>
        </member>
        <member name="M:InSite.Model.Services.Repositories.Repository`1.GetByNaturalKeyAsBusinessObject(System.Object[])">
            <summary>
            Retrieves a model object based on the natural key field(s). The natural keys are marked with [LookupKeyField] on the model properties.
            </summary>
        </member>
        <member name="P:InSite.Model.Services.Repositories.Repository`1.DataProvider">
            <summary>The DataProvider that manages the Persistence of the Repository</summary>
        </member>
        <member name="T:InSite.Model.Interfaces.Repositories.IOrderHistoryRepository">
            <summary>The OrderHistoryRepository interface.</summary>
        </member>
        <member name="M:InSite.Model.Interfaces.Repositories.IOrderHistoryRepository.GetReSubmitOrderHistoryList">
            <summary>Gets IList of OrderHistories whose status is Submitted, these OrderHistories have been Submitted on the
            web, but have not successfully been Submitted to the ERP System</summary>
            <returns>IList of <see cref="T:InSite.Model.OrderHistory"/>.</returns>
        </member>
        <member name="M:InSite.Model.Interfaces.Repositories.IOrderHistoryRepository.GetListForErpRefresh(System.Boolean)">
            <summary>Gets list of OrderHistory where the status is Review, Processing or if includeCompleted parameter is true Complete</summary>
            <param name="includeCompleted">The include completed.</param>
            <returns>IList of <see cref="T:InSite.Model.OrderHistory"/>.</returns>
        </member>
        <member name="M:InSite.Model.Interfaces.Repositories.IOrderHistoryRepository.GetByWebOrderNumber(System.String)">
            <summary>The get by web order number.</summary>
            <param name="webOrderNumber">The web order number.</param>
            <returns>The <see cref="T:InSite.Model.OrderHistory"/>.</returns>
        </member>
        <member name="T:InSite.Model.Interfaces.ITranslationService">
            <summary>
            Provides service to translate text to different languages.
            </summary>
        </member>
        <member name="M:InSite.Model.Interfaces.ITranslationService.TranslateText(System.String,System.Collections.Generic.IList{System.String})">
            <summary>
            Translate a string by auto-detecting the from language to the to language .
            </summary>
            <param name="toLanguageCode">Language Code to translate to.</param>
            <param name="stringsToTranslate">List of strings to translate.</param>
            <returns>Translated text.</returns>
        </member>
        <member name="M:InSite.Model.Interfaces.ITranslationService.TranslateText(System.String,System.String,System.Collections.Generic.IList{System.String})">
            <summary>
            Translate a string from the from language to the to language.
            </summary>
            <param name="fromLanguageCode">Language Code to translate from.</param>
            <param name="toLanguageCode">Language Code to translate to.</param>
            <param name="stringsToTranslate">List of strings to translate.</param>
            <returns>Translated text.</returns>
        </member>
        <member name="T:InSite.Model.Interfaces.IUnitOfWorkFactory">
            <summary>The IUnitOfWorkFactory interface is the abstraction layer to the factory to get new <see cref="T:InSite.Model.Interfaces.IUnitOfWork"/> objects.</summary>
        </member>
        <member name="M:InSite.Model.Interfaces.IUnitOfWorkFactory.GetUnitOfWork">
            <summary>This method will get or create a new <see cref="T:InSite.Model.Interfaces.IUnitOfWork"/> for the current thread or Http Request.</summary>
            <returns>The current <see cref="T:InSite.Model.Interfaces.IUnitOfWork"/>.</returns>
        </member>
        <member name="T:InSite.Model.Interfaces.Repositories.IWebSiteConfigurationRepository">
            <summary>
            The abstraction layer for WebSiteConfiguration persistence
            </summary>
        </member>
        <member name="M:InSite.Model.Interfaces.Repositories.IWebSiteConfigurationRepository.GetOrCreateByName``1(System.String)">
            <summary>Gets or Creates an <see cref="T:InSite.Model.WebSiteConfiguration"/> by name and returns the property Value as the requested type</summary>
            <param name="name">Name of the <see cref="T:InSite.Model.WebSiteConfiguration"/></param>
            <returns>The parsed value of the matched or created <see cref="T:InSite.Model.WebSiteConfiguration"/>.Value as the requested type</returns>
            <remarks>This will return the defined default value if the stored database value can not be converted to the requested type</remarks>
        </member>
        <member name="M:InSite.Model.Interfaces.Repositories.IWebSiteConfigurationRepository.GetOrCreateByName(System.String)">
            <summary>Gets or Creates an <see cref="T:InSite.Model.WebSiteConfiguration"/> by name and returns the property Value</summary>
            <param name="name">Name of the <see cref="T:InSite.Model.WebSiteConfiguration"/></param>
            <returns>The parsed value of the matched or created <see cref="T:InSite.Model.WebSiteConfiguration"/>.Value</returns>
            <remarks>This will return the defined default value if the stored database value can not be converted to the requested type</remarks>
        </member>
        <member name="M:InSite.Model.Interfaces.Repositories.IWebSiteConfigurationRepository.GetOrCreateByName``1(System.String,InSite.Model.WebSite)">
            <summary>Gets or Creates an <see cref="T:InSite.Model.WebSiteConfiguration"/> by name and returns the property Value as the requested type</summary>
            <param name="name">Name of the <see cref="T:InSite.Model.WebSiteConfiguration"/></param>
            <param name="website">The <see cref="T:InSite.Model.WebSite"/> to add the configuration to</param>
            <returns>The parsed value of the matched or created <see cref="T:InSite.Model.WebSiteConfiguration"/>.Value as the requested type</returns>
            <remarks>This will return the defined default value if the stored database value can not be converted to the requested type</remarks>
        </member>
        <member name="M:InSite.Model.Interfaces.Repositories.IWebSiteConfigurationRepository.GetOrCreateByName(System.String,InSite.Model.WebSite)">
            <summary>Gets or Creates an <see cref="T:InSite.Model.WebSiteConfiguration"/> by name and returns the property Value</summary>
            <param name="name">Name of the <see cref="T:InSite.Model.WebSiteConfiguration"/></param>
            <param name="website">The <see cref="T:InSite.Model.WebSite"/> to add the configuration to</param>
            <returns>The parsed value of the matched or created <see cref="T:InSite.Model.WebSiteConfiguration"/>.Value</returns>
            <remarks>This will return the defined default value if the stored database value can not be converted to the requested type</remarks>
        </member>
        <member name="T:InSite.Model.Interfaces.Repositories.IApplicationMessageRepository">
            <summary>
            The abstraction layer for <see cref="T:InSite.Model.ApplicationMessage"/> persistence.
            </summary>
        </member>
        <member name="M:InSite.Model.Interfaces.Repositories.IApplicationMessageRepository.GetOrCreateByName(System.String,System.String,InSite.Model.WebSite)">
            <summary>
            Get Or Create an <see cref="T:InSite.Model.ApplicationMessage"/> by Name with the default value.
            </summary>
            <param name="name">Name of the <see cref="T:InSite.Model.ApplicationMessage"/>.</param>
            <param name="defaultValue">Default value to be created with if it doesn't exist.</param>
            <param name="webSite">Web Site for Web Site specific messages</param>
            <returns>An existing or newly created <see cref="T:InSite.Model.ApplicationMessage"/></returns>
        </member>
        <member name="T:InSite.Model.Interfaces.Repositories.IUserProfileRepository">
            <summary>
            The abstraction layer for UserProfile persistence
            </summary>
        </member>
        <member name="M:InSite.Model.Interfaces.Repositories.IUserProfileRepository.GetByUserName(System.String)">
            <summary>
            Returns an <see cref="T:InSite.Model.UserProfile"/> which matches the provided name parameter
            </summary>
            <param name="name">The user name to search for</param>
            <returns><see cref="T:InSite.Model.UserProfile"/></returns>
            <remarks>returns an <see cref="T:InSite.Model.UserProfile"/> if it finds a match, otherwise it returns null</remarks>
        </member>
        <member name="M:InSite.Model.Interfaces.Repositories.IUserProfileRepository.GetByEmail(System.String)">
            <summary>
            Returns an <see cref="T:InSite.Model.UserProfile"/> which matches the provided email parameter
            </summary>
            <param name="email">The email to search for</param>
            <returns><see cref="T:InSite.Model.UserProfile"/></returns>
            <remarks>returns an <see cref="T:InSite.Model.UserProfile"/> if it finds a match, otherwise it returns null.  Membership services must be set up to require unique email addresses.</remarks>
        </member>
        <member name="M:InSite.Model.Interfaces.Repositories.IUserProfileRepository.GetUsersByEmail(System.String)">
            <summary>
            Returns an list of <see cref="T:InSite.Model.UserProfile"/> which matches the provided email parameter
            </summary>
            <param name="email">The email to search for</param>
            <returns><see cref="T:InSite.Model.UserProfile"/></returns>
            <remarks>returns an list of <see cref="T:InSite.Model.UserProfile"/> if it finds a match, otherwise it returns empty list.</remarks>
        </member>
        <member name="T:InSite.Model.Managers.MemoryCacheAsyncManager">
            <summary></summary>
        </member>
        <member name="F:InSite.Model.Managers.MemoryCacheAsyncManager.cacheManager">
            <summary></summary>
        </member>
        <member name="M:InSite.Model.Managers.MemoryCacheAsyncManager.#ctor(InSite.Model.Interfaces.ICacheManager)">
            <summary>Initializes a new instance of the <see cref="T:InSite.Model.Managers.MemoryCacheAsyncManager"/> class.</summary>
            <param name="cacheManager">The cache manager.</param>
        </member>
        <member name="M:InSite.Model.Managers.MemoryCacheAsyncManager.Get``1(System.String)">
            <summary>Get an item from the cache.</summary>
            <typeparam name="T">The type of the item.</typeparam>
            <param name="key">The cache key.</param>
            <returns></returns>
        </member>
        <member name="M:InSite.Model.Managers.MemoryCacheAsyncManager.Add(System.String,System.Object,System.Nullable{System.TimeSpan})">
            <summary>Add an item to the cache.</summary>
            <param name="key">The cache key.</param>
            <param name="value">The value to be cached.</param>
            <param name="validFor">Optional time item is valid for.</param>
        </member>
        <member name="M:InSite.Model.Managers.MemoryCacheAsyncManager.Contains(System.String)">
            <summary>Determine if the cache contains a cache key.</summary>
            <param name="key">The cache key.</param>
            <returns>True if the cache contains an item with the supplied key and type prefix, false otherwise.</returns>
        </member>
        <member name="M:InSite.Model.Managers.MemoryCacheAsyncManager.Remove(System.String)">
            <summary>Remove an item from the cache.</summary>
            <param name="key">The cache key.</param>
        </member>
        <member name="M:InSite.Model.Managers.MemoryCacheAsyncManager.Clear">
            <summary>
            Clear the cache.
            </summary>
        </member>
        <member name="M:InSite.Model.Managers.MemoryCacheAsyncManager.GetAsync``1(System.String)">
            <summary>Gets the asynchronous.</summary>
            <typeparam name="T"></typeparam>
            <param name="key">The key.</param>
            <returns></returns>
        </member>
        <member name="M:InSite.Model.Managers.MemoryCacheAsyncManager.AddAsync(System.String,System.Object,System.Nullable{System.TimeSpan})">
            <summary>Add an item to the cache asynchronously.</summary>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
            <param name="validFor">The valid for.</param>
            <returns></returns>
        </member>
        <member name="T:InSite.Model.Managers.MemoryCacheManager">
            <summary>
            Implementation of <see cref="T:InSite.Model.Interfaces.ICacheManager"/> that uses <see cref="T:System.Runtime.Caching.MemoryCache"/> for caching.
            </summary>
        </member>
        <member name="M:InSite.Model.Managers.MemoryCacheManager.AsEnumerable">
            <summary>
            Method to return all objects in cache. This is not to be used in a production environment and only for debugging purposes.
            </summary>
            <returns></returns>
        </member>
        <member name="M:InSite.Model.Managers.MemoryCacheManager.Get``1(System.String)">
            <summary>
            Get an item from the cache.
            </summary>
            <typeparam name="T">The type of the item.</typeparam>
            <param name="key">The cache key.</param>
            <returns></returns>
        </member>
        <member name="M:InSite.Model.Managers.MemoryCacheManager.Add(System.String,System.Object,System.Nullable{System.TimeSpan})">
            <summary>
            Add an item to the cache.
            </summary>
            <param name="key">The cache key.</param>
            <param name="value">The value to be cached.</param>
            <param name="validFor">Optional time item is valid for.</param>
        </member>
        <member name="M:InSite.Model.Managers.MemoryCacheManager.Contains(System.String)">
            <summary>
            Determine if the cache contains a cache key.
            </summary>
            <param name="key">The cache key.</param>
            <returns>True if the cache contains an item with the supplied key and type prefix, false otherwise.</returns>
        </member>
        <member name="M:InSite.Model.Managers.MemoryCacheManager.Remove(System.String)">
            <summary>
            Remove an item from the cache.
            </summary>
            <param name="key">The cache key.</param>
        </member>
        <member name="M:InSite.Model.Managers.MemoryCacheManager.Clear">
            <summary>
            Clear the cache.
            </summary>
        </member>
        <member name="T:InSite.Model.Affiliate">
            <summary>The Affiliate is used for Affiliate Marketing. You give the Affiliate Company that will be linking to your site the url to your site with a query
            string with the AffiliateId, for example http://www.mysite.com?AffiliateId=8b86ea6c-2c30-46cf-80cf-72a63a76b87a
            When a user goes to your site from this link, if they place an order, this Affiliate will be attached to that order.
            </summary>
        </member>
        <member name="T:InSite.Model.ModelBase`1">
            <summary>
            The base class that all of the InSite.Model business objects inherit from to get the Framework functionality.
            </summary>
            <typeparam name="T">The type of the business object.</typeparam>
        </member>
        <member name="M:InSite.Model.ModelBase`1.GetPropertiesCollection">
            <summary>
            A NameValueCollection of the Names of the object properties and their values.
            </summary>
            <returns></returns>
        </member>
        <member name="M:InSite.Model.ModelBase`1.GetHashCode">
            <summary>Returns the hashcode of the primary unique Guid of this object if it does not equal Guid.Empty, otherwise returns base.GetHashCode().</summary>
            <returns></returns>
        </member>
        <member name="M:InSite.Model.ModelBase`1.Equals(System.Object)">
            <summary>Compares objects by Guid if the passed in object's guid does not equal Guid.Empty, otherwise returns base.Equals().</summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:InSite.Model.ModelBase`1.Copy">
            <summary>
            Makes a shallow copy this object and does not insert it.
            </summary>
            <returns>copied object</returns>
        </member>
        <member name="M:InSite.Model.ModelBase`1.TranslateField(System.Linq.Expressions.Expression{System.Func{`0,System.String}},System.Boolean)">
            <summary>
            Gets a translation of a model instance property in the current language from the <see cref="P:InSite.Model.ModelBase`1.ContextProvider"/>.
            </summary>
            <param name="keySelector">Linq expression of the property to translate</param>
            <param name="returnResultFromProperty">A value indicating whether to return the default value from the property if the localized value is not found.</param>
            <returns>Translated field or null if none available.</returns>
        </member>
        <member name="M:InSite.Model.ModelBase`1.TranslateField(System.Linq.Expressions.Expression{System.Func{`0,System.String}},System.Boolean,InSite.Model.Language)">
            <summary>
            Gets a translation of a model instance property in the current language.
            </summary>
            <param name="keySelector">Linq expression of the property to translate</param>
            <param name="returnResultFromProperty">A value indicating whether to return the default value from the property if the localized value is not found.</param>
            <param name="language"></param>
            <returns>Translated field or null if none available.</returns>
        </member>
        <member name="M:InSite.Model.ModelBase`1.TranslateDictionaryField(System.String,InSite.Model.TranslationDictionary.Sources)">
            <summary>
            Translates field text base on the TranslationDictionary table
            </summary>
            <param name="defaultText">Default text</param>
            <param name="source">Type of field translation</param>
            <returns></returns>
        </member>
        <member name="M:InSite.Model.ModelBase`1.SOAGetList(InSite.Model.SOAFilterObject,System.Int32,System.Int32)">
            <summary>
            Method used by the Management Console to get lists of objects.
            </summary>
            <param name="filter"><see cref="T:InSite.Model.SOAFilterObject"/> containing the information to perform the query.</param>
            <param name="startRow">The first row in the query to return.</param>
            <param name="pageSize">The number of rows in the query to return.</param>
            <returns></returns>
        </member>
        <member name="M:InSite.Model.ModelBase`1.SOAUpdate(System.Collections.Generic.IList{`0})">
            <summary>
            Commits the passed in object list to the database used in the Management Console.
            </summary>
            <param name="updates">List of object to save.</param>
            <returns>Results of the updates used to update the interface in the Management Console.</returns>
        </member>
        <member name="M:InSite.Model.ModelBase`1.SOAUpdate(InSite.Model.IBusinessObject,System.Collections.Generic.IList{`0})">
            <summary>
            Commits the passed in object list to the database used in the Management Console.
            </summary>
            <param name="soaParent">The parent object for the update list.</param>
            <param name="updates">List of object to save.</param>
            <returns>Results of the updates used to update the interface in the Management Console.</returns>
        </member>
        <member name="M:InSite.Model.ModelBase`1.SOAUpdate(InSite.Model.IBusinessObject,System.Collections.Generic.IList{`0},System.Boolean)">
            <summary>
            Commits the passed in object list to the database used in the Management Console.
            </summary>
            <param name="soaParent">The parent object for the update list.</param>
            <param name="updates">List of object to save.</param>
            <param name="saveChildren">Wether or not to continue saving down to the children of the updates.</param>
            <returns>Results of the updates used to update the interface in the Management Console.</returns>
        </member>
        <member name="M:InSite.Model.ModelBase`1.SOAUpdate(InSite.Model.IBusinessObject,System.Collections.Generic.IList{`0},System.Boolean,System.String)">
            <summary>
            Commits the passed in object list to the database used in the Management Console.
            </summary>
            <param name="soaParent">The parent object for the update list.</param>
            <param name="updates">List of object to save.</param>
            <param name="saveChildren">Wether or not to continue saving down to the children of the updates.</param>
            <param name="childName">The name after the Add and Remove methods for the child object being saved.</param>
            <returns>Results of the updates used to update the interface in the Management Console.</returns>
        </member>
        <member name="M:InSite.Model.ModelBase`1.WriteExternal(FluorineFx.AMF3.IDataOutput)">
            <summary>
            The FluorineFx serialization of the object when returned from SOAGetList to send down to the Management Console.
            </summary>
            <param name="output">The serialized output.</param>
        </member>
        <member name="M:InSite.Model.ModelBase`1.ReadExternal(FluorineFx.AMF3.IDataInput)">
            <summary>
            The FluorineFx deserialization for the object when sent in to SOAUpdate from the Management Console to commit changes.
            </summary>
            <param name="input">The serilaized input.</param>
        </member>
        <member name="M:InSite.Model.ModelBase`1.GetObjectProperties(System.Type,System.Boolean,System.Boolean)">
            <summary>
            GetObjectDataMembers - Returns sorted list of Object Type's Properties
            </summary>
            <param name="objectType"></param>
            <param name="onlyDataMembers"></param>
            <param name="forReading"></param>
            <returns></returns>
        </member>
        <member name="P:InSite.Model.ModelBase`1.TranslationLocalizer">
            <summary>
            The <see cref="T:InSite.Model.Interfaces.ITranslationLocalizer"/> for language translations.
            </summary>
        </member>
        <member name="P:InSite.Model.ModelBase`1.Id">
            <summary>Gets or sets the identifier.</summary>
        </member>
        <member name="P:InSite.Model.ModelBase`1.CreatedOn">
            <summary>Gets or sets the created on.</summary>
        </member>
        <member name="P:InSite.Model.ModelBase`1.CreatedBy">
            <summary>Gets or sets the created by.</summary>
        </member>
        <member name="P:InSite.Model.ModelBase`1.ModifiedOn">
            <summary>Gets or sets the modified on.</summary>
        </member>
        <member name="P:InSite.Model.ModelBase`1.ModifiedBy">
            <summary>Gets or sets the modified by.</summary>
        </member>
        <member name="P:InSite.Model.ModelBase`1.IdString">
            <summary>
            The string representation of the primary unique Id of the object used in the Management Console.
            </summary>
        </member>
        <member name="P:InSite.Model.ModelBase`1.Serializing">
            <summary>
            Will be true if the object is being serialized in or out with the ReadExternal or WriteExternal methods used by the Management Console.
            </summary>
        </member>
        <member name="P:InSite.Model.ModelBase`1.SerializingIn">
            <summary>
            Will be true if this object is being serialized in from the ReadExternal method used by the Management Console.
            </summary>
        </member>
        <member name="P:InSite.Model.ModelBase`1.SerializingOut">
            <summary>
            Will be true if this object is being serialized out from the WriteExternal method used by the Management Console.
            </summary>
        </member>
        <member name="P:InSite.Model.ModelBase`1.DataTable">
            <summary>
            A DataTable representation of this object.
            </summary>
        </member>
        <member name="P:InSite.Model.ModelBase`1.DataSet">
            <summary>
            A DataSet representation of this object.
            </summary>
        </member>
        <member name="P:InSite.Model.ModelBase`1.QueryRecordCount">
            <summary>
            The full record count of the query returned by SOAGetList used for paging in the Management Console.
            </summary>
        </member>
        <member name="P:InSite.Model.ModelBase`1.SOAMessage">
            <summary>
            A status message that is displayed in the tooltip of the ObjectState image in the Management Console.
            </summary>
        </member>
        <member name="P:InSite.Model.ModelBase`1.SOAParentId">
            <summary>
            Id used by Flex paged many to many to transport the Parent Id.
            </summary>
        </member>
        <member name="P:InSite.Model.ModelBase`1.ObjectState">
            <summary>
            The <see cref="P:InSite.Model.ModelBase`1.ObjectState"/> of the Object for display in the Management Console.
            </summary>
        </member>
        <member name="P:InSite.Model.ModelBase`1.ObjectSchemaCache">
            <summary>
            ObjectSchemaCache - Cache of Object Schema's to use for Reflection
            </summary>
        </member>
        <member name="P:InSite.Model.Affiliate.Name">
            <summary>Affiliate Name</summary>
        </member>
        <member name="P:InSite.Model.Affiliate.ImagePath">
            <summary>Optional Image Path if you have an Image you want to display for this Affiliate</summary>
        </member>
        <member name="P:InSite.Model.Affiliate.IsActive">
            <summary>Active flag</summary>
        </member>
        <member name="P:InSite.Model.Affiliate.Description">
            <summary>Affiliate Description</summary>
        </member>
        <member name="P:InSite.Model.Affiliate.Url">
            <summary>Affiliate Url</summary>
        </member>
        <member name="P:InSite.Model.Affiliate.ReplaceLogoImage">
            <summary>A bool flag that you can use to implement replacing the a logo image of the site with the Affiliate Image</summary>
        </member>
        <member name="T:InSite.Model.ApplicationDictionary">
            <summary>The ApplicationDictionary is where you configure the labels and the security of the Application</summary>
        </member>
        <member name="M:InSite.Model.ApplicationDictionary.ImportChildrenXLS(System.Data.DataRow)">
            <summary>This method is called by the ImportXLS method of ModelBase if it exists in the inheriting class</summary>
            <param name="row">The current DataRow being processed by the Import</param>
        </member>
        <member name="M:InSite.Model.ApplicationDictionary.AddDictionaryAttribute(InSite.Model.DictionaryAttribute)">
            <summary>Add a DictonaryAttribute to the DictionaryAttributes collection</summary>
            <param name="value">The DictionaryAttribute to be added</param>
            <remarks>If the collection already contains the value it is silently ignored</remarks>
        </member>
        <member name="M:InSite.Model.ApplicationDictionary.RemoveDictionaryAttribute(InSite.Model.DictionaryAttribute)">
            <summary>Remove a DictionaryAttribute from the DictionaryAttributes collection</summary>
            <param name="value">The DicationaryAttribute to be removed</param>
            <remarks>If the collection does not contain the value it is silently ignored</remarks>
        </member>
        <member name="M:InSite.Model.ApplicationDictionary.GetDictionaryAttribute(System.String)">
            <summary>Get a DictionaryAttribute from this ApplicationDictionary DictionaryAttributes collection</summary>
            <param name="roleName">The RoleName of the DictionaryAttribute to return, there can only be one DictionaryAttribute per ApplicationDictionary per RoleName</param>
            <returns>The DictionaryAttribute Object or null if not found</returns>
        </member>
        <member name="M:InSite.Model.ApplicationDictionary.AddDictionaryLabel(InSite.Model.DictionaryLabel)">
            <summary>Add a DictionaryLabel to the DictionaryLabels collection</summary>
            <param name="value">The DictionaryLabel to be added</param>
            <remarks>If the collection already contains the value it is silently ignored</remarks>
        </member>
        <member name="M:InSite.Model.ApplicationDictionary.RemoveDictionaryLabel(InSite.Model.DictionaryLabel)">
            <summary>Remove a DictionaryLabel from the DictionaryLabels collection</summary>
            <param name="value">The DictionaryLabel to be removed</param>
            <remarks>If the collection does not contain the value it is silently ignored</remarks>
        </member>
        <member name="M:InSite.Model.ApplicationDictionary.GetDictionaryLabel(System.String)">
            <summary>Gets a DictionaryLabel from this ApplicationDictionary DictionaryLabels collection</summary>
            <param name="languageCode">The Language Code for the DictionaryLabel to be returned</param>
            <returns>DictionaryLabel or null if not found</returns>
        </member>
        <member name="P:InSite.Model.ApplicationDictionary.ObjectName">
            <summary>The ObjectName of the Object for this ApplicationDictionary</summary>
        </member>
        <member name="P:InSite.Model.ApplicationDictionary.FieldName">
            <summary>The Field Name / Property Name of the Obect for this ApplicationDictionary</summary>
        </member>
        <member name="P:InSite.Model.ApplicationDictionary.ObjectFieldName">
            <summary>
            ObjectName and FieldName combined.
            </summary>
        </member>
        <member name="P:InSite.Model.ApplicationDictionary.Description">
            <summary>ApplicationDictionary Description</summary>
        </member>
        <member name="P:InSite.Model.ApplicationDictionary.IncludeInExport">
            <summary>Set to true to include this FieldName / PropertyName in exports</summary>
        </member>
        <member name="P:InSite.Model.ApplicationDictionary.ExportWithChildren">
            <summary>Set to true to include this FieldName / PropertyName in exports of children of this Object</summary>
        </member>
        <member name="P:InSite.Model.ApplicationDictionary.DataType">
            <summary>The DataType of the Field / Property</summary>
        </member>
        <member name="P:InSite.Model.ApplicationDictionary.GridOrder">
            <summary>Default order of the Field / Property in the Grid</summary>
        </member>
        <member name="P:InSite.Model.ApplicationDictionary.FormOrder">
            <summary>Default order of the Field / Property in the Form</summary>
        </member>
        <member name="P:InSite.Model.ApplicationDictionary.TabNumber">
            <summary>The Tab that the Field / Property is on 0 based</summary>
        </member>
        <member name="P:InSite.Model.ApplicationDictionary.CanBeLocalized">
            <summary>Indicates whether this item supports translation.</summary>
        </member>
        <member name="P:InSite.Model.ApplicationDictionary.DictionaryAttributes">
            <summary>Collection of DictionaryAttributes</summary>
        </member>
        <member name="P:InSite.Model.ApplicationDictionary.DictionaryLabels">
            <summary>Collection of Dictionary Labels</summary>
        </member>
        <member name="T:InSite.Model.ApplicationLog">
            <summary>The ApplicatinLog is where logging is done in the system</summary>
        </member>
        <member name="F:InSite.Model.ApplicationLog.AuditType">
            <summary> Audit Message Type</summary>
        </member>
        <member name="F:InSite.Model.ApplicationLog.DebugType">
            <summary> Debug Message Type</summary>
        </member>
        <member name="F:InSite.Model.ApplicationLog.InformationType">
            <summary> Information Message Type</summary>
        </member>
        <member name="F:InSite.Model.ApplicationLog.WarningType">
            <summary> Warning Message Type</summary>
        </member>
        <member name="F:InSite.Model.ApplicationLog.ErrorType">
            <summary> Error Message Type</summary>
        </member>
        <member name="F:InSite.Model.ApplicationLog.FatalType">
            <summary> Fatal Message Type</summary>
        </member>
        <member name="F:InSite.Model.ApplicationLog.SecurityType">
            <summary> Security Message Type</summary>
        </member>
        <member name="M:InSite.Model.ApplicationLog.Debug(System.String,System.String)">
            <summary>
            Log a Debug message
            </summary>
            <param name="source">Source of the message</param>
            <param name="message">Message to log</param>
        </member>
        <member name="M:InSite.Model.ApplicationLog.Debug(System.String,System.String,System.Exception)">
            <summary>
            Log a Debug message
            </summary>
            <param name="source">Source of the message</param>
            <param name="message">Message to log</param>
            <param name="exception">Exception to log</param>
        </member>
        <member name="M:InSite.Model.ApplicationLog.Info(System.String,System.String)">
            <summary>
            Log an Info message
            </summary>
            <param name="source">Source of the message</param>
            <param name="message">Message to log</param>
        </member>
        <member name="M:InSite.Model.ApplicationLog.Info(System.String,System.String,System.Exception)">
            <summary>
            Log an Info message
            </summary>
            <param name="source">Source of the message</param>
            <param name="message">Message to log</param>
            <param name="exception">Exception to log</param>
        </member>
        <member name="M:InSite.Model.ApplicationLog.Warn(System.String,System.String)">
            <summary>
            Log a Warning message
            </summary>
            <param name="source">Source of the message</param>
            <param name="message">Message to log</param>
        </member>
        <member name="M:InSite.Model.ApplicationLog.Warn(System.String,System.String,System.Exception)">
            <summary>
            Log a Warning message
            </summary>
            <param name="source">Source of the message</param>
            <param name="message">Message to log</param>
            <param name="exception">Exception to log</param>
        </member>
        <member name="M:InSite.Model.ApplicationLog.Error(System.String,System.String)">
            <summary>
            Log an Error message
            </summary>
            <param name="source">Source of the message</param>
            <param name="message">Message to log</param>
        </member>
        <member name="M:InSite.Model.ApplicationLog.Error(System.String,System.String,System.Exception)">
            <summary>
            Log an Error message
            </summary>
            <param name="source">Source of the message</param>
            <param name="message">Message to log</param>
            <param name="exception">Exception to log</param>
        </member>
        <member name="M:InSite.Model.ApplicationLog.Fatal(System.String,System.String)">
            <summary>
            Log a Fatal message
            </summary>
            <param name="source">Source of the message</param>
            <param name="message">Message to log</param>
        </member>
        <member name="M:InSite.Model.ApplicationLog.Fatal(System.String,System.String,System.Exception)">
            <summary>
            Log a Fatal message
            </summary>
            <param name="source">Source of the message</param>
            <param name="message">Message to log</param>
            <param name="exception">Exception to log</param>
        </member>
        <member name="M:InSite.Model.ApplicationLog.GetNextBatchNumber">
            <summary>
            Returns the Next Batch Number from SeqBatchNumber table
            </summary>
            <returns></returns>
        </member>
        <member name="P:InSite.Model.ApplicationLog.BatchNumber">
            <summary>
            BatchNumber of the ApplicationLog
            </summary>
        </member>
        <member name="P:InSite.Model.ApplicationLog.Source">
            <summary>
            Source of the ApplicationLog
            </summary>
        </member>
        <member name="P:InSite.Model.ApplicationLog.Message">
            <summary>
            Full Message of the ApplicationLog
            </summary>
        </member>
        <member name="P:InSite.Model.ApplicationLog.ShortMessage">
            <summary>
            The Message part of the Full Message without NewLines of the ApplicationLog
            </summary>
        </member>
        <member name="P:InSite.Model.ApplicationLog.LogDate">
            <summary>
            LogDate of the ApplicationLog
            </summary>
        </member>
        <member name="P:InSite.Model.ApplicationLog.Type">
            <summary>
            Type of the ApplicationLog
            </summary>
        </member>
        <member name="P:InSite.Model.ApplicationLog.Sequence">
            <summary>
            Auto-generated Sequence of the ApplicationLog
            </summary>
        </member>
        <member name="P:InSite.Model.ApplicationLog.CleanedMessage">
            <summary>
            The Message part of the Full Message with NewLines of the ApplicationLog
            </summary>
        </member>
        <member name="T:InSite.Model.WriteMessageThreadInfo">
            <summary>Class used to pass state to the <see cref="!:ApplicationLog.WriteMessage(Object)"/> method started in it's own thread.</summary>
        </member>
        <member name="M:InSite.Model.WriteMessageThreadInfo.#ctor(System.String,System.String,System.String,System.Boolean)">
            <summary>Contructor that gathers state info.</summary>
            <param name="source">Source of the message</param>
            <param name="message">Message to log</param>
            <param name="type">Type of error to log</param>
            <param name="logDebug">If true, insert a brand new application log message. If false first try to update an existing ones 
            ErrorCount, otherwise create a new one</param>
        </member>
        <member name="P:InSite.Model.WriteMessageThreadInfo.Source">
            <summary>Source of the message</summary>
        </member>
        <member name="P:InSite.Model.WriteMessageThreadInfo.Message">
            <summary>Message to log</summary>
        </member>
        <member name="P:InSite.Model.WriteMessageThreadInfo.Type">
            <summary>Type of error to log</summary>
        </member>
        <member name="P:InSite.Model.WriteMessageThreadInfo.LogDebug">
            <summary>If true, insert a brand new application log message. If false first try to update an existing ones 
            ErrorCount, otherwise create a new one</summary>
        </member>
        <member name="P:InSite.Model.ApplicationSetting.Name">
            <summary>
            Name of Application Setting will be unique in the Database
            </summary>
        </member>
        <member name="P:InSite.Model.ApplicationSetting.Value">
            <summary>
            Value of application setting to be consumed by application
            </summary>
        </member>
        <member name="P:InSite.Model.ApplicationSetting.Description">
            <summary>
            Helper description of application setting, this is an optional value
            </summary>
        </member>
        <member name="T:InSite.Model.SortField">
            <summary>
            The default property to sort by in SOAGetList if the sort is not specified
            </summary>
        </member>
        <member name="T:InSite.Model.LoadForSOA">
            <summary>
            Will make the list property load during SOAGetList, with Fluorine the serialization does this anyway
            but in case SOAGetList is used for WebServices
            </summary>
        </member>
        <member name="T:InSite.Model.SaveChildren">
            <summary>
            Used to mark contained objects or lists to indicate to cascade the save
            process down through their children during SOAUpdate
            </summary>
        </member>
        <member name="T:InSite.Model.Unbound">
            <summary>
            Used to mark contained objects or lists that are DataMember properties, but not bound to NHibernate
            so they will get transferred down in SOAGetList, but they won't go through the commit process in SOAUpdate
            </summary>
        </member>
        <member name="T:InSite.Model.ExcludeFromDataTable">
            <summary>
            Used to exclude properties from the ObjectHelper.GetDataTableFromList method
            </summary>
        </member>
        <member name="T:InSite.Model.BootStrapperOrder">
            <summary>
            Used to set the order which IStartupTasks are run by the BootStrapper
            </summary>
        </member>
        <member name="T:InSite.Model.LookupKeyFieldAttribute">
            <summary> 
            The unique set of human readable properties to find the object, used in integration 
            </summary> 
        </member>
        <member name="P:InSite.Model.LookupKeyFieldAttribute.Order">
            <summary>
            The Order of the LookupKeyFields
            </summary>
        </member>
        <member name="M:InSite.Model.Audit.Log(System.String,System.String,System.String,System.String)">
            <summary>
            Log to the Audit Log Table
            </summary>
            <param name="userName">UserName</param>
            <param name="action">Action being performed</param>
            <param name="description">Description</param>
            <param name="ipAddress">Optional IP Address</param>
        </member>
        <member name="P:InSite.Model.Audit.AuditDate">
            <summary>
            Gets or sets AuditDate
            </summary>
        </member>
        <member name="P:InSite.Model.Audit.UserName">
            <summary>
            Gets or sets UserName
            </summary>
        </member>
        <member name="P:InSite.Model.Audit.IPAddress">
            <summary>
            Gets or sets IPAddress
            </summary>
        </member>
        <member name="P:InSite.Model.Audit.Action">
            <summary>
            Gets or sets Action
            </summary>
        </member>
        <member name="P:InSite.Model.Audit.Description">
            <summary>
            Gets or sets Description
            </summary>
        </member>
        <member name="T:InSite.Model.BootStrapper.StartupTask_3InitializeAuditLogs">
            <summary>
            StartupTask that initializes the <see cref="T:InSite.Model.Audit"/> logs.
            </summary>
        </member>
        <member name="M:InSite.Model.BootStrapper.StartupTask_3InitializeAuditLogs.Run">
            <summary>
            Method that gets executed by the <see cref="T:InSite.Model.BootStrapper.IBootStrapper"/>.
            </summary>
        </member>
        <member name="T:InSite.Model.BootStrapper.StartupTask_4LoadDefaultData">
            <summary>
            StartupTask that loads default data normally for upgrade purposes.
            </summary>
        </member>
        <member name="M:InSite.Model.BootStrapper.StartupTask_4LoadDefaultData.Run">
            <summary>
            Method that gets executed by the <see cref="T:InSite.Model.BootStrapper.IBootStrapper"/>.
            </summary>
        </member>
        <member name="T:InSite.Model.BudgetCalendar">
            <summary>
            The BudgetCalendar capability is a part of 'budget management' targeted to larger customers who would like to have a better handle on what their current spending 
            levels. The BudgetCalendar is the fiscal calendar for a customer.
            </summary>
            <remarks>Each customer can establish their own fiscal calendar.  We will maintain a single record for each year with start/end dates by period with up to 
            13 periods.  Any number of periods from 1-13 is valid.  Start date for period n must be less than the start date for period n+1.  There should be no null dates 
            interspersed with real dates (i.e. real date for period 1 and 4 and nothing for 2 and 3).
            </remarks>
        </member>
        <member name="M:InSite.Model.BudgetCalendar.EnsureSequentialDates(System.Collections.Generic.List{System.Nullable{System.DateTime}})">
            <summary>
            Takes a list of budget periods and ensures that they are sequential.
            </summary>
            <param name="budgetCalendarPeriods">The list of dates to sequence by time.</param>
            <returns>true if the collection was modified to make a series of sequential dates.</returns>
        </member>
        <member name="P:InSite.Model.BudgetCalendar.Customer">
            <summary>
            This is the <see cref="P:InSite.Model.BudgetCalendar.Customer"/> for the budget that we are tracking.&gt;
            </summary>
        </member>
        <member name="P:InSite.Model.BudgetCalendar.FiscalYear">
            <summary>
            This is the fiscal year for the customer budget we are tracking.
            </summary>
        </member>
        <member name="P:InSite.Model.BudgetCalendar.Period1StartDate">
            <summary>
            Period1StartDate of the BudgetCalendar.
            </summary>
            <remarks>Start date for period n must be less than the start date for period n+1.  There should be no null dates interspersed with real dates (i.e. real 
            date for period 1 and 4 and nothing for 2 and 3).
            </remarks>
        </member>
        <member name="P:InSite.Model.BudgetCalendar.Period2StartDate">
            <summary>
            Period2StartDate of the BudgetCalendar.
            </summary>
            <remarks>Start date for period n must be less than the start date for period n+1.  There should be no null dates interspersed with real dates (i.e. real 
            date for period 1 and 4 and nothing for 2 and 3).
            </remarks>
        </member>
        <member name="P:InSite.Model.BudgetCalendar.Period3StartDate">
            <summary>
            Period3StartDate of the BudgetCalendar.
            </summary>
            <remarks>Start date for period n must be less than the start date for period n+1.  There should be no null dates interspersed with real dates (i.e. real 
            date for period 1 and 4 and nothing for 2 and 3).
            </remarks>
        </member>
        <member name="P:InSite.Model.BudgetCalendar.Period4StartDate">
            <summary>
            Period4StartDate of the BudgetCalendar.
            </summary>
            <remarks>Start date for period n must be less than the start date for period n+1.  There should be no null dates interspersed with real dates (i.e. real 
            date for period 1 and 4 and nothing for 2 and 3).
            </remarks>
        </member>
        <member name="P:InSite.Model.BudgetCalendar.Period5StartDate">
            <summary>
            Period5StartDate of the BudgetCalendar.
            </summary>
            <remarks>Start date for period n must be less than the start date for period n+1.  There should be no null dates interspersed with real dates (i.e. real 
            date for period 1 and 4 and nothing for 2 and 3).
            </remarks>
        </member>
        <member name="P:InSite.Model.BudgetCalendar.Period6StartDate">
            <summary>
            Period6StartDate of the BudgetCalendar.
            </summary>
            <remarks>Start date for period n must be less than the start date for period n+1.  There should be no null dates interspersed with real dates (i.e. real 
            date for period 1 and 4 and nothing for 2 and 3).
            </remarks>
        </member>
        <member name="P:InSite.Model.BudgetCalendar.Period7StartDate">
            <summary>
            Period7StartDate of the BudgetCalendar.
            </summary>
            <remarks>Start date for period n must be less than the start date for period n+1.  There should be no null dates interspersed with real dates (i.e. real 
            date for period 1 and 4 and nothing for 2 and 3).
            </remarks>
        </member>
        <member name="P:InSite.Model.BudgetCalendar.Period8StartDate">
            <summary>
            Period8StartDate of the BudgetCalendar.
            </summary>
            <remarks>Start date for period n must be less than the start date for period n+1.  There should be no null dates interspersed with real dates (i.e. real 
            date for period 1 and 4 and nothing for 2 and 3).
            </remarks>
        </member>
        <member name="P:InSite.Model.BudgetCalendar.Period9StartDate">
            <summary>
            Period9StartDate of the BudgetCalendar.
            </summary>
            <remarks>Start date for period n must be less than the start date for period n+1.  There should be no null dates interspersed with real dates (i.e. real 
            date for period 1 and 4 and nothing for 2 and 3).
            </remarks>
        </member>
        <member name="P:InSite.Model.BudgetCalendar.Period10StartDate">
            <summary>
            Period10StartDate of the BudgetCalendar.
            </summary>
            <remarks>Start date for period n must be less than the start date for period n+1.  There should be no null dates interspersed with real dates (i.e. real 
            date for period 1 and 4 and nothing for 2 and 3).
            </remarks>
        </member>
        <member name="P:InSite.Model.BudgetCalendar.Period11StartDate">
            <summary>
            Period11StartDate of the BudgetCalendar.
            </summary>
            <remarks>Start date for period n must be less than the start date for period n+1.  There should be no null dates interspersed with real dates (i.e. real 
            date for period 1 and 4 and nothing for 2 and 3).
            </remarks>
        </member>
        <member name="P:InSite.Model.BudgetCalendar.Period12StartDate">
            <summary>
            Period12StartDate of the BudgetCalendar.
            </summary>
            <remarks>Start date for period n must be less than the start date for period n+1.  There should be no null dates interspersed with real dates (i.e. real 
            date for period 1 and 4 and nothing for 2 and 3).
            </remarks>
        </member>
        <member name="P:InSite.Model.BudgetCalendar.Period13StartDate">
            <summary>
            Period13StartDate of the BudgetCalendar.
            </summary>
            <remarks>Start date for period n must be less than the start date for period n+1.  There should be no null dates interspersed with real dates (i.e. real 
            date for period 1 and 4 and nothing for 2 and 3).
            </remarks>
        </member>
        <member name="P:InSite.Model.BudgetCalendar.FiscalYearEndDate">
            <summary>
            This is the fiscal year end date for the customer budget.
            </summary>
        </member>
        <member name="P:InSite.Model.BudgetCalendar.BudgetPeriods">
            <summary>
            This allows for the setting and getting of all budget periods at once.
            </summary>
        </member>
        <member name="T:InSite.Model.LicenseStatus">
            <summary>
            An enum of the possible license statuses.
            Needs to be compatible with a similar enum in InSite.LicenseService.
            </summary>
        </member>
        <member name="T:InSite.Model.License">
            <summary>
            The class representing a license
            </summary>
        </member>
        <member name="T:InSite.Model.CategoryProduct">
            <summary>
            Linkage between a category and product
            </summary>
        </member>
        <member name="P:InSite.Model.CategoryProduct.SortOrder">
            <summary>
            Gets or sets the sort order.
            </summary>
        </member>
        <member name="T:InSite.Model.Currency">
            <summary>
            Class that represents a <see cref="T:InSite.Model.Currency"/>.
            </summary>
        </member>
        <member name="M:InSite.Model.Currency.GetSystemDefaultCurrency">
            <summary>
            returns the system default currency
            </summary>
            <returns></returns>
        </member>
        <member name="M:InSite.Model.Currency.GetWebSiteDefaultCurrency(InSite.Model.WebSite)">
            <summary>
            Returns the default currency for a particular website.
            </summary>
            <param name="webSite"><see cref="T:InSite.Model.WebSite"/></param>
            <returns>WebSite default currency or system default currency if no website default.</returns>
        </member>
        <member name="M:InSite.Model.Currency.AddCurrencyRate(InSite.Model.CurrencyRate)">
            <summary>
            Associate <see cref="T:InSite.Model.CurrencyRate">CurrencyRate</see> with the Currency.
            </summary>
            <param name="value">The <see cref="T:InSite.Model.CurrencyRate"/></param>
        </member>
        <member name="M:InSite.Model.Currency.RemoveCurrencyRate(InSite.Model.CurrencyRate)">
            <summary>
            Remove <see cref="T:InSite.Model.CurrencyRate">CurrencyRate</see> association with the Currency.
            </summary>
            <param name="value">The <see cref="T:InSite.Model.CurrencyRate"/></param>
        </member>
        <member name="M:InSite.Model.Currency.Format(System.Decimal,System.String)">
            <summary>
            Display a money amount in a currency and culture display format.
            </summary>
            <param name="amount">Amount of money to display</param>
            <param name="currencyCode">Currency code</param>
            <returns>display string with currency symbol.</returns>
        </member>
        <member name="M:InSite.Model.Currency.Format(System.Decimal,InSite.Model.Currency)">
            <summary>
            Display a money amount in a currency and culture display format.
            </summary>
            <param name="amount">Amount of money to display</param>
            <param name="currency">Currency type</param>
            <returns>display string with currency symbol.</returns>
        </member>
        <member name="M:InSite.Model.Currency.Format(System.Decimal,InSite.Model.CustomerOrder)">
            <summary>
            Display a money amount in a currency and culture display format.
            </summary>
            <param name="amount">Amount of money to display</param>
            <param name="order">order context of the amount</param>
            <returns>display string with currency symbol.</returns>
        </member>
        <member name="P:InSite.Model.Currency.CurrencyCode">
            <summary>
            ISO code to define the currency such as 'USD' for us Dollars.
            </summary>
        </member>
        <member name="P:InSite.Model.Currency.Description">
            <summary>
            Value that will display in dropdowns in the management console.
            </summary>
        </member>
        <member name="P:InSite.Model.Currency.CurrencySymbol">
            <summary>
            Currency Symbol, i.e., $
            </summary>
        </member>
        <member name="P:InSite.Model.Currency.IsDefault">
            <summary>
            If true, this currency is the default base currency.
            </summary>
        </member>
        <member name="P:InSite.Model.Currency.CurrencyRates">
            <summary>
            <see cref="T:InSite.Model.CurrencyRate"/> for this Currency.
            </summary>
        </member>
        <member name="P:InSite.Model.Currency.CurrentCurrencyRate">
            <summary>
            Gets the currency rate which is currently in effect
            </summary>
        </member>
        <member name="T:InSite.Model.CurrencyRate">
            <summary>
            Class that represent a currency rate.
            </summary>
        </member>
        <member name="P:InSite.Model.CurrencyRate.Currency">
            <summary>
            <see cref="P:InSite.Model.CurrencyRate.Currency"/> this <see cref="T:InSite.Model.CurrencyRate"/> applies to.
            </summary>
        </member>
        <member name="P:InSite.Model.CurrencyRate.EffectiveDate">
            <summary>
            Effective from this time until replaced by newer <see cref="T:InSite.Model.CurrencyRate"/>.
            </summary>
        </member>
        <member name="P:InSite.Model.CurrencyRate.ConversionRate">
            <summary>
            Expressed as a multiplier such that the base currency * conversion rate = foreign currency
            </summary>
        </member>
        <member name="P:InSite.Model.EmailMessageDeliveryAttempt.AttemptedDateTime">
            <summary>
            Gets or sets AttemptedDateTime
            </summary>
        </member>
        <member name="P:InSite.Model.EmailMessageDeliveryAttempt.ErrorMessage">
            <summary>
            Gets or sets ErrorMessage
            </summary>
        </member>
        <member name="P:InSite.Model.EmailMessageDeliveryAttempt.DeliveredDate">
            <summary>
            Gets or sets DeliveredDate
            </summary>
        </member>
        <member name="P:InSite.Model.EmailMessageDeliveryAttempt.EmailMessage">
            <summary>
            Gets or sets EmailMessage
            </summary>
        </member>
        <member name="P:InSite.Model.EmailMessageAddress.Type">
            <summary>
            Gets or sets EmailMessageAddressType
            </summary>
        </member>
        <member name="P:InSite.Model.EmailMessageAddress.EmailAddress">
            <summary>
            Gets or sets EmailAddress
            </summary>
        </member>
        <member name="P:InSite.Model.EmailMessageAddress.EmailMessage">
            <summary>
            Gets or sets EmailMessage
            </summary>
        </member>
        <member name="P:InSite.Model.EmailMessage.SentDate">
            <summary>
            Gets or sets SentDate
            </summary>
        </member>
        <member name="P:InSite.Model.EmailMessage.Body">
            <summary>
            Gets or sets Body
            </summary>
        </member>
        <member name="P:InSite.Model.EmailMessage.Subject">
            <summary>
            Gets or sets Subject
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerRestrictionGroup.RestrictionGroup">
            <summary>
            The RestrictionGroup associated with the CustomerRestrictionGroup.
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerRestrictionGroup.Name">
            <summary>
            This is a shortcut to get the value of Name from the associated <see cref="P:InSite.Model.CustomerRestrictionGroup.RestrictionGroup"/>
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerRestrictionGroup.Description">
            <summary>
            This is a shortcut to get the value of Description from the associated <see cref="P:InSite.Model.CustomerRestrictionGroup.RestrictionGroup"/>
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerRestrictionGroup.DefaultCondition">
            <summary>
            This is a shortcut to get the value of DefaultCondition from the associated <see cref="P:InSite.Model.CustomerRestrictionGroup.RestrictionGroup"/>
            </summary>
        </member>
        <member name="M:InSite.Model.Language.GetByLanguageCode(System.String,InSite.Model.WebSite,System.Boolean)">
            <summary>
            Static Method which returns the <see cref="T:InSite.Model.Language"/> for a given code and website
            </summary>        
            <param name="code">language code</param>
            <param name="webSite"><see cref="T:InSite.Model.WebSite"/> context for the language</param>
            <param name="reviewer">Set to true to see languages that are not live</param>
            <returns>Matching Language or the default Language for the WebSite, or null.</returns>
        </member>
        <member name="P:InSite.Model.Language.LanguageCode">
            <summary>
            A language ISO code to define the language such as ‘en-us’ for US English.
            </summary>
        </member>
        <member name="P:InSite.Model.Language.Description">
            <summary>
            The displayable language name.
            </summary>
        </member>
        <member name="P:InSite.Model.Language.AlternateLanguages">
            <summary>
            A comma-separate list of browser language codes that will map to this language code.  
            </summary>
        </member>
        <member name="P:InSite.Model.Language.CultureCode">
            <summary>
            A language ISO code which will be used by the windows culture for number/data format display.
            </summary>
        </member>
        <member name="P:InSite.Model.Language.ImageFilePath">
            <summary>
            The image to display in the language selector.
            </summary>
        </member>
        <member name="P:InSite.Model.Language.IsDefault">
            <summary>
            Is this the default core system language.
            </summary>
        </member>
        <member name="P:InSite.Model.Language.HasDeviceSpecificContent">
            <summary>
            Indicates support for content by device for this language.
            </summary>
        </member>
        <member name="P:InSite.Model.Language.HasPersonaSpecificContent">
            <summary>
            Indicates support for content by persona for this language.
            </summary>
        </member>
        <member name="P:InSite.Model.MessageStatus.UserProfile">
            <summary>
            Gets or sets UserProfile
            </summary>
        </member>
        <member name="P:InSite.Model.MessageStatus.Message">
            <summary>
            Gets or sets Message
            </summary>
        </member>
        <member name="P:InSite.Model.MessageStatus.HasRead">
            <summary>
            Gets or sets HasRead
            </summary>
        </member>
        <member name="P:InSite.Model.MessageTarget.Message">
            <summary>
            Gets or sets Message
            </summary>
        </member>
        <member name="P:InSite.Model.MessageTarget.TargetType">
            <summary>
            Gets or Sets TargetType
            </summary>
        </member>
        <member name="P:InSite.Model.MessageTarget.TargetKey">
            <summary>
            Gets or Sets TargetKey
            </summary>
        </member>
        <member name="M:InSite.Model.Message.AddMessageStatus(InSite.Model.MessageStatus)">
            <summary>
            Add a <see cref="T:InSite.Model.MessageStatus"/> to the MessageStatuses collection. If the collection already contains the value it is silently ignored.
            </summary>
            <param name="value">The <see cref="T:InSite.Model.MessageStatus"/> to be added.</param>
        </member>
        <member name="M:InSite.Model.Message.RemoveMessageStatus(InSite.Model.MessageStatus)">
            <summary>
            Remove a <see cref="T:InSite.Model.MessageStatus"/> from the MessageStatuses collection. If the collection does not contain the value it is silently ignored.
            </summary>
            <param name="value">The <see cref="T:InSite.Model.MessageStatus"/> to be removed.</param>
        </member>
        <member name="M:InSite.Model.Message.AddMessageTarget(InSite.Model.MessageTarget)">
            <summary>
            Add a <see cref="T:InSite.Model.MessageTarget"/> to the MessageTargets collection. If the collection already contains the value it is silently ignored.
            </summary>
            <param name="value">The <see cref="T:InSite.Model.MessageTarget"/> to be added.</param>
        </member>
        <member name="M:InSite.Model.Message.RemoveMessageTarget(InSite.Model.MessageTarget)">
            <summary>
            Remove a <see cref="T:InSite.Model.MessageTarget"/> from the MessageTargets collection. If the collection does not contain the value it is silently ignored.
            </summary>
            <param name="value">The <see cref="T:InSite.Model.MessageTarget"/> to be removed.</param>
        </member>
        <member name="M:InSite.Model.Message.AddMessageAudit(InSite.Model.MessageAudit)">
            <summary>
            Add a <see cref="T:InSite.Model.MessageAudit"/> to the MessageAudits collection. If the collection already contains the value it is silently ignored.
            </summary>
            <param name="value">The <see cref="T:InSite.Model.MessageAudit"/> to be added.</param>
        </member>
        <member name="M:InSite.Model.Message.RemoveMessageAudit(InSite.Model.MessageAudit)">
            <summary>
            Remove a <see cref="T:InSite.Model.MessageAudit"/> from the MessageAudits collection. If the collection does not contain the value it is silently ignored.
            </summary>
            <param name="value">The <see cref="T:InSite.Model.MessageAudit"/> to be removed.</param>
        </member>
        <member name="P:InSite.Model.Message.Subject">
            <summary>
            Gets or sets Subject
            </summary>
        </member>
        <member name="P:InSite.Model.Message.Body">
            <summary>
            Gets or Sets Body
            </summary>
        </member>
        <member name="P:InSite.Model.Message.Language">
            <summary>
            Gets or sets the language.
            </summary>
        </member>
        <member name="P:InSite.Model.Message.LanguageCode">
            <summary>
            Gets or sets the language code (used for the Management Console).
            </summary>
        </member>
        <member name="P:InSite.Model.Message.DateToDisplay">
            <summary>
            Gets or Sets DateToDisplay
            </summary>
        </member>
        <member name="P:InSite.Model.Message.DateToHide">
            <summary>
            Gets or Sets DateToHide
            </summary>
        </member>
        <member name="P:InSite.Model.Message.MessageStatuses">
            <summary>
            The ChildList{MessageStatus} for this <see cref="T:InSite.Model.Message"/>
            </summary>
        </member>
        <member name="P:InSite.Model.Message.MessageTargets">
            <summary>
            The ChildList{MessageTarget} for this <see cref="T:InSite.Model.Message"/>
            </summary>
        </member>
        <member name="P:InSite.Model.Message.MessageAudits">
            <summary>
            The ChildList{MessageAudit} for this <see cref="T:InSite.Model.Message"/>
            </summary>
        </member>
        <member name="P:InSite.Model.Message.SelectedCustomerTypes">
            <summary>
            Calculated property from <see cref="T:InSite.Model.MessageTarget"/>s for selected CustomerTypes.
            </summary>
        </member>
        <member name="P:InSite.Model.Message.SelectedCustomers">
            <summary>
            Calculated property from <see cref="T:InSite.Model.MessageTarget"/>s for selected <see cref="T:InSite.Model.CustomerInfo"/>s.
            </summary>
        </member>
        <member name="P:InSite.Model.Message.SelectedRoles">
            <summary>
            Calculated property from <see cref="T:InSite.Model.MessageTarget"/>s for selected <see cref="T:InSite.Model.Role"/>s.
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerBudget.Customer">
            <summary>
            This is the <see cref="P:InSite.Model.CustomerBudget.Customer"/> for the budget that we are tracking.&gt;
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerBudget.UserProfile">
            <summary>
            Optional, if the <see cref="P:InSite.Model.CustomerBudget.UserProfile"/> is set, then the budget maintenance is tracked by user for the specified/required <see cref="P:InSite.Model.CustomerBudget.Customer"/>./&gt;
            </summary>c:\Projects\Source.Repositories\Insite-Commerce-Source\trunk\InSite.Model\Models\CategoryInfo.hbm.xml
        </member>
        <member name="P:InSite.Model.CustomerBudget.ShipTo">
            <summary>
            Optional, if the 'ShipToCustomer' <see cref="P:InSite.Model.CustomerBudget.Customer"/> is set, then the budget maintenance is tracked by a ship-to customer for the specified/required 'bill-to' <see cref="P:InSite.Model.CustomerBudget.Customer"/>./&gt;
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerBudget.FiscalYear">
            <summary>
            This is the fiscal year for the customer budget we are tracking.
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerBudget.Period1Budget">
            <summary>
            Period1Budget of the CustomerBudget.  This is the max amount of money that a customer can spend in a period. 
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerBudget.Period2Budget">
            <summary>
            Period2Budget of the CustomerBudget. This is the max amount of money that a customer can spend in a period. 
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerBudget.Period3Budget">
            <summary>
            Period3Budget of the CustomerBudget.  This is the max amount of money that a customer can spend in a period. 
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerBudget.Period4Budget">
            <summary>
            Period4Budget of the CustomerBudget. This is the max amount of money that a customer can spend in a period. 
            </summary>
            <remarks>Start date for period n must be less than the start date for period n+1.  There should be no null dates interspersed with real dates (i.e. real 
            date for period 1 and 4 and nothing for 2 and 3).
            </remarks>
        </member>
        <member name="P:InSite.Model.CustomerBudget.Period5Budget">
            <summary>
            Period5Budget of the CustomerBudget. This is the max amount of money that a customer can spend in a period. 
            </summary>
            <remarks>Start date for period n must be less than the start date for period n+1.  There should be no null dates interspersed with real dates (i.e. real 
            date for period 1 and 4 and nothing for 2 and 3).
            </remarks>
        </member>
        <member name="P:InSite.Model.CustomerBudget.Period6Budget">
            <summary>
            Period6Budget of the CustomerBudget.  This is the max amount of money that a customer can spend in a period. 
            </summary>
            <remarks>Start date for period n must be less than the start date for period n+1.  There should be no null dates interspersed with real dates (i.e. real 
            date for period 1 and 4 and nothing for 2 and 3).
            </remarks>
        </member>
        <member name="P:InSite.Model.CustomerBudget.Period7Budget">
            <summary>
            Period7Budget of the CustomerBudget.  This is the max amount of money that a customer can spend in a period. 
            </summary>
            <remarks>Start date for period n must be less than the start date for period n+1.  There should be no null dates interspersed with real dates (i.e. real 
            date for period 1 and 4 and nothing for 2 and 3).
            </remarks>
        </member>
        <member name="P:InSite.Model.CustomerBudget.Period8Budget">
            <summary>
            Period8Budget of the CustomerBudget. This is the max amount of money that a customer can spend in a period. 
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerBudget.Period9Budget">
            <summary>
            Period9Budget of the CustomerBudget.  This is the max amount of money that a customer can spend in a period. 
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerBudget.Period10Budget">
            <summary>
            Period10Budget of the CustomerBudget.  This is the max amount of money that a customer can spend in a period. 
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerBudget.Period11Budget">
            <summary>
            Period11Budget of the CustomerBudget.  This is the max amount of money that a customer can spend in a period. 
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerBudget.Period12Budget">
            <summary>
            Period12Budget of the CustomerBudget. This is the max amount of money that a customer can spend in a period. 
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerBudget.Period13Budget">
            <summary>
            Period13Budget of the CustomerBudget.  This is the max amount of money that a customer can spend in a period. 
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerBudget.Period1Actual">
            <summary>
            Period1Actual of the CustomerBudget.  This is the amount of money that a customer did spend in a period.
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerBudget.Period2Actual">
            <summary>
            Period2Actual of the CustomerBudget.  This is the amount of money that a customer did spend in a period.
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerBudget.Period3Actual">
            <summary>
            Period3Actual of the CustomerBudget. This is the amount of money that a customer did spend in a period.
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerBudget.Period4Actual">
            <summary>
            Period4Actual of the CustomerBudget. This is the amount of money that a customer did spend in a period.
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerBudget.Period5Actual">
            <summary>
            Period5Actual of the CustomerBudget.  This is the amount of money that a customer did spend in a period.
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerBudget.Period6Actual">
            <summary>
            Period6Actual of the CustomerBudget.  This is the amount of money that a customer did spend in a period.
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerBudget.Period7Actual">
            <summary>
            Period7Actual of the CustomerBudget.  This is the amount of money that a customer did spend in a period.
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerBudget.Period8Actual">
            <summary>
            Period8Actual of the CustomerBudget. This is the amount of money that a customer did spend in a period.
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerBudget.Period9Actual">
            <summary>
            Period9Actual of the CustomerBudget.  This is the amount of money that a customer did spend in a period.
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerBudget.Period10Actual">
            <summary>
            Period10Budget of the CustomerActual.  This is the amount of money that a customer did spend in a period.
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerBudget.Period11Actual">
            <summary>
            Period11Actual of the CustomerBudget.  This is the amount of money that a customer did spend in a period.
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerBudget.Period12Actual">
            <summary>
            Period12Actual of the CustomerBudget.  This is the amount of money that a customer did spend in a period.
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerBudget.Period13Actual">
            <summary>
            Period13Actual of the CustomerBudget.  This is the amount of money that a customer did spend in a period.
            </summary>
        </member>
        <member name="T:InSite.Model.CustomerCostCode">
            <summary>
            Cost codes are a method of grouping individual costs base on their nature or function.  The cost code construct is a way to create codes for a customer that are used
            to cost or categorize order lines against.  
            </summary>
            <remarks>
            When budget management is set up and cost codes are defined, the system will want to capture the cost code against orders which may then be used for analysis.
            </remarks>
        </member>
        <member name="P:InSite.Model.CustomerCostCode.Customer">
            <summary>
            This is the <see cref="P:InSite.Model.CustomerCostCode.Customer"/> for the cost code.
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerCostCode.CostCode">
            <summary>
            This is the actual code that is used to cost or categorize order lines against.
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerCostCode.Description">
            <summary>
            The is the description of the cost code.
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerCostCode.IsActive">
            <summary>
            This tells us if the cost code is active or not.
            </summary>
        </member>
        <member name="T:InSite.Model.CustomerUserProfile">
            <summary>
            This represents when a customer has been assigned to a user and vice versa.
            </summary>
            <remarks>
            When a user signs into an Insite site, they can have 0 to N customers assigned to them.  A customer can have any number of users assigned to them.
            </remarks>
        </member>
        <member name="P:InSite.Model.CustomerUserProfile.Customer">
            <summary>
            This is the <see cref="P:InSite.Model.CustomerUserProfile.Customer"/> for the user/customer relationship.
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerUserProfile.UserProfile">
            <summary>
            This is the <see cref="P:InSite.Model.CustomerUserProfile.UserProfile"/> for the user/customer relationship.
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerUserProfile.IsDefault">
            <summary>
             This is needed to ensure that only one default is allowed for a given user/bill-to customer.
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerUserProfile.DefaultCostCode">
            <summary>
             The default cost code for this user/customer combination.
            </summary>
        </member>
        <member name="T:InSite.Model.EmailSubscriber">
            <summary>The EmailSubscriber is the list of emails that are opted-in to receiving email communication.</summary>
        </member>
        <member name="M:InSite.Model.EmailSubscriber.IsSubscribed(System.String)">
            <summary>
             Tests an email address to see if they are already opted-in to receive emails.
            </summary>
            <param name="emailAddress">The email address to be used for the test.</param>
            <returns></returns>
        </member>
        <member name="M:InSite.Model.EmailSubscriber.SubscribeEmail(System.String)">
            <summary>
            Add this email to the pool of opted-in email addresses.
            </summary>
            <param name="email">The email to be added to the list of opted-in email addresses.</param>
            <returns></returns>
        </member>
        <member name="M:InSite.Model.EmailSubscriber.UnsubscribeEmail(System.String)">
            <summary>
            Remove this email from the pool of opted-in email addresses.
            </summary>
            <param name="email">The email to be removed from the list of opted-in email addresses.</param>
        </member>
        <member name="M:InSite.Model.EmailSubscriber.GetByEmailAddress(System.String)">
            <summary>
            Takes an email address and returns the corresponding entire EmailSubscriber object.
            </summary>
            <param name="emailAddress">The email address that we are testing for presence in the Email Subscriber list.</param>
            <returns></returns>
        </member>
        <member name="M:InSite.Model.EmailSubscriber.AddEmailList(InSite.Model.EmailList)">
            <summary>
            Add <see cref="T:InSite.Model.EmailList"/> to this <see cref="T:InSite.Model.EmailSubscriber"/>
            </summary>
            <param name="value"><see cref="T:InSite.Model.EmailList"/> to add to this <see cref="T:InSite.Model.EmailSubscriber"/></param>
            <remarks>
            Add <see cref="T:InSite.Model.EmailList"/> to this <see cref="T:InSite.Model.EmailSubscriber"/>.  If the EmailSubscriber already has this <see cref="T:InSite.Model.EmailList"/>, exit gracefully.  
            </remarks>
        </member>
        <member name="M:InSite.Model.EmailSubscriber.RemoveEmailList(InSite.Model.EmailList)">
            <summary>
            Removes the <see cref="T:InSite.Model.EmailList"/> from this <see cref="T:InSite.Model.UserProfile"/>
            </summary>
            <param name="value"><see cref="T:InSite.Model.EmailList"/> to remove from this <see cref="T:InSite.Model.UserProfile"/></param>
            <remarks>Removes the <see cref="T:InSite.Model.EmailList"/> from this <see cref="T:InSite.Model.UserProfile"/> if this <see cref="T:InSite.Model.UserProfile"/> has the provided 
            <see cref="T:InSite.Model.EmailList"/>, else exit gracefully
            </remarks>
        </member>
        <member name="P:InSite.Model.EmailSubscriber.Email">
            <summary>
            The email address that used for opt-in by a consumer.
            </summary>
        </member>
        <member name="P:InSite.Model.EmailSubscriber.EmailLists">
            <summary>
            Gets or Sets <see cref="T:InSite.Model.EmailList"/>'s for the Email Subscriber
            </summary>
            <remarks>
            Get returns <see cref="T:InSite.Model.ChildList`1"/> of <see cref="T:InSite.Model.EmailList"/>'s to prevent direct manipulation of list and list items and enforces using the Model objects methods for List manipulation
            </remarks>
        </member>
        <member name="T:InSite.Model.Configuration">
            <summary>
            
            </summary>
        </member>
        <member name="M:InSite.Model.Configuration.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:InSite.Model.Configuration.#ctor(InSite.Model.Interfaces.IConfiguratorOutputGenerator{InSite.Model.Configuration})">
            <summary>
            Dependency Injection Constructor
            </summary>
            <param name="configuratorOutputGenerator"><see cref="T:InSite.Model.Interfaces.IConfiguratorOutputGenerator`1"/> Provides the output generation for this <see cref="T:InSite.Model.Configuration"/></param>
        </member>
        <member name="M:InSite.Model.Configuration.AddProduct(InSite.Model.Product)">
            <summary>
            Method to Add a <see cref="T:InSite.Model.Product"/> to the <see cref="P:InSite.Model.Configuration.Products"/> collection. Will add the <see cref="T:InSite.Model.Product"/> to the <see cref="P:InSite.Model.Configuration.Products"/> collection
            if the <see cref="P:InSite.Model.Configuration.Products"/> collection does not contain the provided <see cref="T:InSite.Model.Product"/>. If the <see cref="T:InSite.Model.Product"/> is all ready in the <see cref="P:InSite.Model.Configuration.Products"/>
            collection exit gracefully.
            </summary>
            <param name="product"><see cref="T:InSite.Model.Product"/> to be added the <see cref="P:InSite.Model.Configuration.Products"/> collection.</param>
        </member>
        <member name="M:InSite.Model.Configuration.RemoveProduct(InSite.Model.Product)">
            <summary>
            Method to remove a <see cref="T:InSite.Model.Product"/> to the <see cref="P:InSite.Model.Configuration.Products"/> collection. Will remove the <see cref="T:InSite.Model.Product"/> from the <see cref="P:InSite.Model.Configuration.Products"/> collection
            if the <see cref="P:InSite.Model.Configuration.Products"/> collection does contains the provided <see cref="T:InSite.Model.Product"/>. If the <see cref="T:InSite.Model.Product"/> is not in the <see cref="P:InSite.Model.Configuration.Products"/>
            collection exit gracefully.
            </summary>
            <param name="product"><see cref="T:InSite.Model.Product"/> to be remove from the <see cref="P:InSite.Model.Configuration.Products"/> collection.</param>
        </member>
        <member name="M:InSite.Model.Configuration.GenerateOutput">
            <summary>
            Generate output for each <see cref="T:InSite.Model.ConfigurationPage"/> within this <see cref="T:InSite.Model.Configuration"/>.
            Our standard implementation does not use this as it handles the Configure view generation through a normal Controller Action / View
            in ConfiguratorController.
            </summary>
        </member>
        <member name="P:InSite.Model.Configuration.Name">
            <summary>
            Gets or sets Name
            </summary>
        </member>
        <member name="P:InSite.Model.Configuration.Revision">
            <summary>
            Gets or sets Revision
            </summary>
        </member>
        <member name="P:InSite.Model.Configuration.NameAndRevision">
            <summary>
            Gets Name and Revision colon delimited
            </summary>
        </member>
        <member name="P:InSite.Model.Configuration.HasSmartPart">
            <summary>
            Gets or sets HasSmartPart
            </summary>
        </member>
        <member name="P:InSite.Model.Configuration.SmartPartSeparator">
            <summary>
            Gets or sets SmartPartSeparator
            </summary>
        </member>
        <member name="P:InSite.Model.Configuration.SmartPartPrefix">
            <summary>
            Gets or sets SmartPartPrefix
            </summary>
        </member>
        <member name="P:InSite.Model.Configuration.ScriptOnInitialize">
            <summary>
            Gets or sets ScriptOnInitialize
            </summary>
        </member>
        <member name="P:InSite.Model.Configuration.ScriptOnFinalize">
            <summary>
            Gets or sets ScriptOnFinalize
            </summary>
        </member>
        <member name="P:InSite.Model.Configuration.OverrideOnRefresh">
            <summary>
            Gets or sets OverrideOnRefresh
            </summary>
        </member>
        <member name="P:InSite.Model.Configuration.DisplaySummary">
            <summary>
            Gets or sets DisplaySummary
            </summary>
        </member>
        <member name="P:InSite.Model.Configuration.ScriptOnPricingRequest">
            <summary>
            Get or Set Script on Pricing Request.
            </summary>
        </member>
        <member name="P:InSite.Model.Configuration.ConfigurationPages">
            <summary>
            Gets or sets ConfigurationPages
            </summary>
        </member>
        <member name="P:InSite.Model.Configuration.Products">
            <summary>
            Gets or sets <see cref="T:InSite.Model.Product"/>.
            </summary>
        </member>
        <member name="P:InSite.Model.Configuration.HtmlFriendlyName">
            <summary>
            Gets HTMLFriendlyName
            </summary>
        </member>
        <member name="P:InSite.Model.Configuration.HtmlFriendlyNameAndRevision">
            <summary>
            Gets HTMLFriendlyNameAndRevision
            </summary>
        </member>
        <member name="P:InSite.Model.Configuration.ConfiguratorOutputGenerator">
            <summary>
            Gets Configurator Output Generator
            </summary>
        </member>
        <member name="T:InSite.Model.ConfigurationConditionFilter">
            <summary>
            
            </summary>
        </member>
        <member name="M:InSite.Model.ConfigurationConditionFilter.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:InSite.Model.ConfigurationOption.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:InSite.Model.ConfigurationOption.#ctor(InSite.Model.Interfaces.IConfiguratorOutputGenerator{InSite.Model.ConfigurationOption})">
            <summary>
            Dependency Injection Constructor
            </summary>
            <param name="configuratorOutputGenerator"><see cref="T:InSite.Model.Interfaces.IConfiguratorOutputGenerator`1"/> Provides the output generation for this <see cref="T:InSite.Model.ConfigurationOption"/></param>
        </member>
        <member name="M:InSite.Model.ConfigurationOption.GenerateOutput">
            <summary>
            Generate output for this <see cref="T:InSite.Model.ConfigurationOption"/>.
            </summary>
        </member>
        <member name="P:InSite.Model.ConfigurationOption.Name">
            <summary>
            Gets or sets Name
            </summary>
        </member>
        <member name="P:InSite.Model.ConfigurationOption.Description">
            <summary>
            Gets or sets Description
            </summary>
        </member>
        <member name="P:InSite.Model.ConfigurationOption.Sequence">
            <summary>
            Gets or sets Sequence
            </summary>
        </member>
        <member name="P:InSite.Model.ConfigurationOption.Type">
            <summary>
            Gets or sets Type
            </summary>
        </member>
        <member name="P:InSite.Model.ConfigurationOption.IsVisible">
            <summary>
            Gets or sets IsVisible
            </summary>
        </member>
        <member name="P:InSite.Model.ConfigurationOption.IsRequired">
            <summary>
            Gets or sets IsRequired
            </summary>
        </member>
        <member name="P:InSite.Model.ConfigurationOption.SetAsFutureDefault">
            <summary>
            Gets or sets SetAsFutureDefault
            </summary>
        </member>
        <member name="P:InSite.Model.ConfigurationOption.XPosition">
            <summary>
            Gets or sets XPosition
            </summary>
        </member>
        <member name="P:InSite.Model.ConfigurationOption.YPosition">
            <summary>
            Gets or sets YPosition
            </summary>
        </member>
        <member name="P:InSite.Model.ConfigurationOption.Height">
            <summary>
            Gets or sets Height
            </summary>
        </member>
        <member name="P:InSite.Model.ConfigurationOption.Width">
            <summary>
            Gets or sets Width
            </summary>
        </member>
        <member name="P:InSite.Model.ConfigurationOption.LabelValue">
            <summary>
            Gets or sets LabelValue
            </summary>
        </member>
        <member name="P:InSite.Model.ConfigurationOption.IncludeInLineDescription">
            <summary>
            Gets or sets IncludeInLineDescription
            </summary>
        </member>
        <member name="P:InSite.Model.ConfigurationOption.ToolTip">
            <summary>
            Gets or sets ToolTip
            </summary>
        </member>
        <member name="P:InSite.Model.ConfigurationOption.DefaultValue">
            <summary>
            Gets or sets DefaultValue
            </summary>
        </member>
        <member name="P:InSite.Model.ConfigurationOption.TextMinLength">
            <summary>
            Gets or sets TextMinLength
            </summary>
        </member>
        <member name="P:InSite.Model.ConfigurationOption.TextMaxLength">
            <summary>
            Gets or sets TextMaxLength
            </summary>
        </member>
        <member name="P:InSite.Model.ConfigurationOption.TextCharacterType">
            <summary>
            Gets or sets TextCharacterType
            </summary>
        </member>
        <member name="P:InSite.Model.ConfigurationOption.TextIsMultiline">
            <summary>
            Gets or sets TextIsMultiline
            </summary>
        </member>
        <member name="P:InSite.Model.ConfigurationOption.TextValidEntryList">
            <summary>
            Gets or sets TextValidEntryList
            </summary>
        </member>
        <member name="P:InSite.Model.ConfigurationOption.NumberMinValue">
            <summary>
            Gets or sets NumberMinValue
            </summary>
        </member>
        <member name="P:InSite.Model.ConfigurationOption.NumberMaxValue">
            <summary>
            Gets or sets NumberMaxValue
            </summary>
        </member>
        <member name="P:InSite.Model.ConfigurationOption.NumberDecimals">
            <summary>
            Gets or sets NumberDecimals
            </summary>
        </member>
        <member name="P:InSite.Model.ConfigurationOption.DateCheckRange">
            <summary>
            Gets or sets DateCheckRange
            </summary>
        </member>
        <member name="P:InSite.Model.ConfigurationOption.DateMaxDaysBack">
            <summary>
            Gets or sets DateMaxDaysBack
            </summary>
        </member>
        <member name="P:InSite.Model.ConfigurationOption.DateMaxDaysForward">
            <summary>
            Gets or sets DateMaxDaysForward
            </summary>
        </member>
        <member name="P:InSite.Model.ConfigurationOption.ContainerFileType">
            <summary>
            Gets or sets ContainerFileType
            </summary>
        </member>
        <member name="P:InSite.Model.ConfigurationOption.ContainerFileLocation">
            <summary>
            Gets or sets ContainerFileLocation
            </summary>
        </member>
        <member name="P:InSite.Model.ConfigurationOption.RadioButtonOrientation">
            <summary>
            Gets or sets RadioButtonOrientation
            </summary>
        </member>
        <member name="P:InSite.Model.ConfigurationOption.ComboConditionalList">
            <summary>
            Gets or sets ComboConditionalList
            </summary>
        </member>
        <member name="P:InSite.Model.ConfigurationOption.ComboMultiSelect">
            <summary>
            Gets or sets ComboMultiSelect
            </summary>
        </member>
        <member name="P:InSite.Model.ConfigurationOption.ComboIsProduct">
            <summary>
            Gets or sets ComboIsProduct
            </summary>
        </member>
        <member name="P:InSite.Model.ConfigurationOption.ComboProductSeparateLine">
            <summary>
            Gets or sets ComboProductSeparateLine
            </summary>
        </member>
        <member name="P:InSite.Model.ConfigurationOption.ComboProductDescription">
            <summary>
            Gets or sets ComboProductDescription
            </summary>
        </member>
        <member name="P:InSite.Model.ConfigurationOption.ComboProductPriceSeparately">
            <summary>
            Gets or sets ComboProductPriceSeparately
            </summary>
        </member>
        <member name="P:InSite.Model.ConfigurationOption.SelectionListDisplays">
            <summary>
            Gets or sets SelectionListDisplays
            </summary>
        </member>
        <member name="P:InSite.Model.ConfigurationOption.SelectionListValues">
            <summary>
            Gets or sets SelectionListValues
            </summary>
        </member>
        <member name="P:InSite.Model.ConfigurationOption.SelectionListPriceAdjustment">
            <summary>
            Gets or sets SelectionListPriceAdjustment
            </summary>
        </member>
        <member name="P:InSite.Model.ConfigurationOption.SubconfigurationPartNumber">
            <summary>
            Gets or sets SubconfigurationPartNumber
            </summary>
        </member>
        <member name="P:InSite.Model.ConfigurationOption.SmartPartSegment">
            <summary>
            Gets or sets SmartPartSegment
            </summary>
        </member>
        <member name="P:InSite.Model.ConfigurationOption.SmartPartLength">
            <summary>
            Gets or sets SmartPartLength
            </summary>
        </member>
        <member name="P:InSite.Model.ConfigurationOption.ScriptPromptWhen">
            <summary>
            Gets or sets ScriptPromptWhen
            </summary>
        </member>
        <member name="P:InSite.Model.ConfigurationOption.ScriptOnEntry">
            <summary>
            Gets or sets ScriptOnEntry
            </summary>
        </member>
        <member name="P:InSite.Model.ConfigurationOption.ScriptOnLeave">
            <summary>
            Gets or sets ScriptOnLeave
            </summary>
        </member>
        <member name="P:InSite.Model.ConfigurationOption.ConfigurationPage">
            <summary>
            Gets or sets ConfigurationPage
            </summary>
        </member>
        <member name="P:InSite.Model.ConfigurationOption.ParentConfigurationOption">
            <summary>
            Gets or sets ParentConfigurationOption
            </summary>
        </member>
        <member name="P:InSite.Model.ConfigurationOption.ConfigurationOptions">
            <summary>
            Gets or sets ConfigurationOptions
            </summary>
        </member>
        <member name="P:InSite.Model.ConfigurationOption.ConfigurationOptionConditions">
            <summary>
            Gets or sets ConfigurationOptionConditions
            </summary>
        </member>
        <member name="P:InSite.Model.ConfigurationOption.HtmlFriendlyName">
            <summary>
            Gets HTMLFriendlyName
            </summary>
        </member>
        <member name="P:InSite.Model.ConfigurationOption.ConfiguratorOutputGenerator">
            <summary>
            Gets Configurator Output Generator
            </summary>
        </member>
        <member name="T:InSite.Model.ConfigurationPage">
            <summary>
            
            </summary>
        </member>
        <member name="M:InSite.Model.ConfigurationPage.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:InSite.Model.ConfigurationPage.#ctor(InSite.Model.Interfaces.IConfiguratorOutputGenerator{InSite.Model.ConfigurationPage})">
            <summary>
            Dependency Injection Constructor
            </summary>
            <param name="configuratorOutputGenerator"><see cref="T:InSite.Model.Interfaces.IConfiguratorOutputGenerator`1"/> Provides the output generation for this <see cref="T:InSite.Model.ConfigurationPage"/></param>
        </member>
        <member name="M:InSite.Model.ConfigurationPage.GenerateOutput">
            <summary>
            Generate output for each <see cref="T:InSite.Model.ConfigurationOption"/> within this <see cref="T:InSite.Model.ConfigurationPage"/>.
            </summary>
        </member>
        <member name="P:InSite.Model.ConfigurationPage.ConfiguratorOutputGenerator">
            <summary>
            Gets Configurator Output Generator
            </summary>
        </member>
        <member name="T:InSite.Model.ChildList`1">
            <summary>This ChilList is an IList&lt;T&gt; the throws exceptions if you try to add or remove from the collection directly, you need to use the add and
            remove methods in the parent class so the references are updated correctly</summary>
        </member>
        <member name="M:InSite.Model.ChildList`1.Insert(System.Int32,`0)">
            <summary>This method throws an exception if called</summary>
        </member>
        <member name="M:InSite.Model.ChildList`1.System#Collections#IList#RemoveAt(System.Int32)">
            <summary>This method throws an exception if called</summary>
        </member>
        <member name="M:InSite.Model.ChildList`1.System#Collections#Generic#IList{T}#RemoveAt(System.Int32)">
            <summary>This method throws an exception if called</summary>
        </member>
        <member name="M:InSite.Model.ChildList`1.Add(`0)">
            <summary>This method throws an exception if called</summary>
        </member>
        <member name="M:InSite.Model.ChildList`1.Clear">
            <summary>This method throws an exception if called</summary>
        </member>
        <member name="M:InSite.Model.ChildList`1.Remove(`0)">
            <summary>This method throws an exception if called</summary>
        </member>
        <member name="M:InSite.Model.ChildList`1.Add(System.Object)">
            <summary>This method throws an exception if called</summary>
        </member>
        <member name="M:InSite.Model.ChildList`1.Insert(System.Int32,System.Object)">
            <summary>This method throws an exception if called</summary>
        </member>
        <member name="M:InSite.Model.ChildList`1.Remove(System.Object)">
            <summary>This method throws an exception if called</summary>
        </member>
        <member name="P:InSite.Model.ChildList`1.Item(System.String)">
            <summary>
            Gets an object from the list by matching that obect's .ToString() representation
            </summary>
            <param name="key">Sting to match</param>
            <returns>Object from list</returns>
        </member>
        <member name="T:InSite.Model.Licensing">
            <summary>
            License validator class which calls back to the public ISC licensing web service 
            </summary>
        </member>
        <member name="M:InSite.Model.Licensing.Check(System.String,System.String)">
            <summary>
            Checks the licensing for the given module and host key. Throws if expired
            </summary>
            <param name="module">The name of the module</param>
            <param name="hostName">The host name or identifier that the license is assigned to, or null to use current http request host.</param> 
        </member>
        <member name="M:InSite.Model.Licensing.SetNextCheckdate(InSite.Model.License,System.Double)">
            Set the next check time for the license.
        </member>
        <member name="M:InSite.Model.Licensing.GetHosts(System.String)">
            <summary>
            Gets a list of all hosts that are aliased to the same representative as the current host.
            In plainer English, gets the hosts that share the licenses of the current host.
            </summary>
            <returns></returns>
        </member>
        <member name="M:InSite.Model.Licensing.GetExistingLicenses(System.String)">
            <summary>
            Gets all existing licenses. Used by management console to show all licenses.
            </summary>
            <returns></returns>
        </member>
        <member name="M:InSite.Model.Licensing.Register(System.String,System.String,System.String,System.String,InSite.Model.Company,System.String)">
            <summary>
            Requests registration of the clients's licenses.
            </summary>
        </member>
        <member name="T:InSite.Model.LicenseExpiredException">
            <summary>
             The exception class thrown when the license has expired
            </summary>
        </member>
        <member name="T:InSite.Model.LicenseCountException">
            <summary>
             The exception class thrown when the license count is not sufficient.
            </summary>
        </member>
        <member name="T:InSite.Model.LicenseSavedException">
            <summary>
            The exception class throw where license save failed or license was invalid
            </summary>
        </member>
        <member name="T:InSite.Model.ModelBasePagedManyToMany`2">
            <summary>
            The base class that all of the InSite.Model business objects which utilize the PagedManyToMany in the Managment Console inherit from to get the Framework functionality.
            This class should only be used if the PagedManyToMany functionality is used in the Management Console for one of this models child collections.
            </summary>
            <typeparam name="T">The type of the business object.</typeparam>
            <typeparam name="TU">The type of the child collection that uses the PagedManyToMany control in the Management Console.</typeparam>
        </member>
        <member name="P:InSite.Model.ModelBasePagedManyToMany`2.PagedManyToManyImportList">
            <summary>
            The member used to send back imported objects for the child collection that uses the PagedManyToMany control in the Management Console
            </summary>
            <typeparam name="TU">The type of the child collection that uses the PagedManyToMany control in the Management Console.</typeparam>
        </member>
        <member name="T:InSite.Model.Exceptions.RealTimeCallTimeoutException">
            <summary>
            Exception thrown when a real time call times out
            </summary>
        </member>
        <member name="M:InSite.Model.Exceptions.RealTimeCallTimeoutException.#ctor(System.String)">
            <summary>
            Exception thrown when a real time call times out
            </summary>
            <param name="call"></param>
        </member>
        <member name="T:InSite.Model.Exceptions.InvalidTaskTypeException">
            <summary>
            Exception thrown whan a task is scheduled with an invalid type
            </summary>
        </member>
        <member name="M:InSite.Model.Exceptions.InvalidTaskTypeException.#ctor(System.String)">
            <summary>
            Exception thrown whan a task is scheduled with an invalid type
            </summary>
            <param name="taskType"></param>
        </member>
        <member name="T:InSite.Model.Exceptions.InvalidImportObjectException">
            <summary>
            Exception thrown when an attempt to import an Invalid Object is made
            </summary>
        </member>
        <member name="M:InSite.Model.Exceptions.InvalidImportObjectException.#ctor(System.String)">
            <summary>
            Exception thrown when an attempt to import an Invalid Object is made
            </summary>
            <param name="objectType"></param>
        </member>
        <member name="T:InSite.Model.Exceptions.ImportKeyColumnNotAvailableException">
            <summary>
            Exception thrown when a spreadsheet is imported with a Guid, but that object doesn't exist
            </summary>
        </member>
        <member name="M:InSite.Model.Exceptions.ImportKeyColumnNotAvailableException.#ctor(System.String,System.String)">
            <summary>
            Exception thrown when an import spreadsheet does not contain the required key column(s)
            </summary>
            <param name="objectType"></param>
            <param name="keyColumns"></param>
        </member>
        <member name="T:InSite.Model.Exceptions.ImportObjectNotFoundException">
            <summary>
            Exception thrown when a spreadsheet is imported with a Guid, but that object doesn't exist
            </summary>
        </member>
        <member name="M:InSite.Model.Exceptions.ImportObjectNotFoundException.#ctor(System.String,System.String)">
            <summary>
            Exception thrown when a spreadsheet is imported with a Guid, but that object doesn't exist 
            </summary>
            <param name="objectType"></param>
            <param name="objectId"></param>
        </member>
        <member name="T:InSite.Model.Exceptions.ChildListInvalidUsageException">
            <summary>
            Exception thrown when you try to use list modification methods on ChildList objects
            </summary>
        </member>
        <member name="M:InSite.Model.Exceptions.ChildListInvalidUsageException.#ctor">
            <summary>
            Exception thrown when you try to use list modification methods on ChildList objects
            </summary>
        </member>
        <member name="T:InSite.Model.GlobalSynonym">
            <summary>
            Class which represents a synonym for a provided value.
            </summary>
        </member>
        <member name="P:InSite.Model.GlobalSynonym.SynonymType">
            <summary>
            Get Set type of synonym, ie. UnitOfMeasure, etc...
            </summary>
        </member>
        <member name="P:InSite.Model.GlobalSynonym.LookupValue">
            <summary>
            Get Set Value to search for.
            </summary>
        </member>
        <member name="P:InSite.Model.GlobalSynonym.MappedValue">
            <summary>
            Get Set Value to return.
            </summary>
        </member>
        <member name="P:InSite.Model.GlobalSynonym.Description">
            <summary>
            Get Set description for synonym.
            </summary>
        </member>
        <member name="P:InSite.Model.GlobalSynonym.ParentId">
            <summary>
            Get Set parent id, this is a nullable GUID.
            </summary>
        </member>
        <member name="P:InSite.Model.GlobalSynonym.Language">
            <summary>
            Gets or sets the language.
            </summary>
        </member>
        <member name="P:InSite.Model.GlobalSynonym.LanguageCode">
            <summary>
            Gets or sets the language code (used for the Management Console).
            </summary>
        </member>
        <member name="T:InSite.Model.IntegrationConnection">
            <summary>
            Class that provides the connection information for the system that will be integrated with.
            </summary>
        </member>
        <member name="P:InSite.Model.IntegrationConnection.Name">
            <summary>
            The friendly name of the integration connection.  In order for <see cref="T:InSite.Model.IntegrationJob"/>s to be picked up by a WindowsIntegrationBroker, that
            WindowsIntegrationBroker must have a SiteConnection defined with the SiteConnection.IntegrationConnectionName equal to the Name specified here.
            </summary>
        </member>
        <member name="P:InSite.Model.IntegrationConnection.TypeName">
            <summary>
            The type of Integration Connection. For example: SQL Server, Web Service, Oracle, OLE DB, ODBC, Flat File.
            </summary>
        </member>
        <member name="P:InSite.Model.IntegrationConnection.DebuggingEnabled">
            <summary>
            DebuggingEnabled will trigger additional debug logging.
            </summary>
        </member>
        <member name="P:InSite.Model.IntegrationConnection.Delimiter">
            <summary>
            Delimiter, if the connection type is Flat File the delimiter denotes file record delimiter for the flat file. For example {TAB}.
            </summary>
        </member>
        <member name="P:InSite.Model.IntegrationConnection.Url">
            <summary>
            Url for if you are consuming a web service.
            </summary>
        </member>
        <member name="P:InSite.Model.IntegrationConnection.DataSource">
            <summary>
            The data source is in context of the type of connection it is.  For example we would accept a DSN for ODBC/OLE DB, db name for SQL Server 
            and Oracle or the file location on the server for flat file.
            </summary>
        </member>
        <member name="P:InSite.Model.IntegrationConnection.LogOn">
            <summary>
            LogOn, username if appropriate for this <see cref="T:InSite.Model.IntegrationConnection"/>.
            </summary>
        </member>
        <member name="P:InSite.Model.IntegrationConnection.Password">
            <summary>
            Password if appropriate for this <see cref="T:InSite.Model.IntegrationConnection"/>.
            </summary>
        </member>
        <member name="P:InSite.Model.IntegrationConnection.ConnectionString">
            <summary>
            The generated Connection string for this <see cref="T:InSite.Model.IntegrationConnection"/>.
            </summary>
        </member>
        <member name="P:InSite.Model.IntegrationConnection.ArchiveFolder">
            <summary>
            The Archive Folder for File Processing.
            </summary>
        </member>
        <member name="P:InSite.Model.IntegrationConnection.ArchiveRetentionDays">
            <summary>
            The number of Days to keep Archived Files.
            </summary>
        </member>
        <member name="T:InSite.Model.IntegrationJob">
            <summary>Class that represents an individual run of an IntegrationJob for an <see cref="P:InSite.Model.IntegrationJob.JobDefinition"/>.</summary>
        </member>
        <member name="M:InSite.Model.IntegrationJob.AddIntegrationJobParameter(InSite.Model.IntegrationJobParameter)">
            <summary>Method to add an <see cref="T:InSite.Model.IntegrationJobParameter"/> to this <see cref="T:InSite.Model.IntegrationJob"/>'s <see cref="P:InSite.Model.IntegrationJob.IntegrationJobParameters"/> collection.</summary>
            <param name="value"></param>
        </member>
        <member name="M:InSite.Model.IntegrationJob.RemoveIntegrationJobParameter(InSite.Model.IntegrationJobParameter)">
            <summary>Method to remove an <see cref="T:InSite.Model.IntegrationJobParameter"/> from this <see cref="T:InSite.Model.IntegrationJob"/>'s <see cref="P:InSite.Model.IntegrationJob.IntegrationJobParameters"/> collection.</summary>
            <param name="value"></param>
        </member>
        <member name="M:InSite.Model.IntegrationJob.AddIntegrationJobLog(InSite.Model.IntegrationJobLog)">
            <summary>Method to add an <see cref="T:InSite.Model.IntegrationJobLog"/> to this <see cref="T:InSite.Model.IntegrationJob"/>'s <see cref="P:InSite.Model.IntegrationJob.IntegrationJobLogs"/> collection.</summary>
            <param name="value"></param>
        </member>
        <member name="M:InSite.Model.IntegrationJob.RemoveIntegrationJobLog(InSite.Model.IntegrationJobLog)">
            <summary>Method to remove an <see cref="T:InSite.Model.IntegrationJobLog"/> from this <see cref="T:InSite.Model.IntegrationJob"/>'s <see cref="P:InSite.Model.IntegrationJob.IntegrationJobLogs"/> collection.</summary>
            <param name="value"><see cref="T:InSite.Model.IntegrationJobLog"/> to remove from the <see cref="P:InSite.Model.IntegrationJob.IntegrationJobLogs"/> collection.</param>
        </member>
        <member name="P:InSite.Model.IntegrationJob.JobDefinition">
            <summary>The <see cref="P:InSite.Model.IntegrationJob.JobDefinition"/> that this <see cref="T:InSite.Model.IntegrationJob"/> was run for.</summary>
        </member>
        <member name="P:InSite.Model.IntegrationJob.JobNumber">
            <summary>Auto-generated Sequence of the JobNumber</summary>
        </member>
        <member name="P:InSite.Model.IntegrationJob.StartDateTime">
            <summary>StartDateTime represents when this <see cref="T:InSite.Model.IntegrationJob"/> started its task.</summary>
        </member>
        <member name="P:InSite.Model.IntegrationJob.EndDateTime">
            <summary>EndDateTime represents when this <see cref="T:InSite.Model.IntegrationJob"/> completed regardless of the <see cref="P:InSite.Model.IntegrationJob.Status"/>.</summary>
        </member>
        <member name="P:InSite.Model.IntegrationJob.ScheduleDateTime">
            <summary>ScheduleDateTime represents when this <see cref="T:InSite.Model.IntegrationJob"/> is Scheduled to run if it's a recurring Job.</summary>
        </member>
        <member name="P:InSite.Model.IntegrationJob.Duration">
            <summary>Duration represents the time it took to complete/run this <see cref="T:InSite.Model.IntegrationJob"/>.</summary>
        </member>
        <member name="P:InSite.Model.IntegrationJob.Status">
            <summary>Status/state for this <see cref="T:InSite.Model.IntegrationJob"/>.</summary>
        </member>
        <member name="P:InSite.Model.IntegrationJob.RecordCount">
            <summary>RecordCount represents the number of records processed by this <see cref="T:InSite.Model.IntegrationJob"/>.</summary>
        </member>
        <member name="P:InSite.Model.IntegrationJob.Notes">
            <summary>Notes will hold for example Exceptions if they were thrown by the <see cref="!:IWebServiceHandler"/>.</summary>
        </member>
        <member name="P:InSite.Model.IntegrationJob.DataSize">
            <summary>DataSize is the size of the dataset/result to be communicated.</summary>
        </member>
        <member name="P:InSite.Model.IntegrationJob.IsRealTime">
            <summary>IsRealTime represents if this is a real time <see cref="T:InSite.Model.IntegrationJob"/> or a scheduled <see cref="T:InSite.Model.IntegrationJob"/>.</summary>
        </member>
        <member name="P:InSite.Model.IntegrationJob.InitialData">
            <summary>InitialData stores the compressed string of the DataSet passed down to the Integration Service side.</summary>
        </member>
        <member name="P:InSite.Model.IntegrationJob.InitialDataSet">
            <summary>InitalDataSet stores the DataSet passed in from a Linked Job or any initial data.</summary>
            <remarks>Needs to be [DataMember] to send back down to WindowsIntegrationBroker side.</remarks>
        </member>
        <member name="P:InSite.Model.IntegrationJob.ResultData">
            <summary>ResultData stores the returned DataSet from real time <see cref="T:InSite.Model.IntegrationJob"/>s.</summary>
        </member>
        <member name="P:InSite.Model.IntegrationJob.ResultDataSet">
            <summary>ResultDataSet is the generated dataset for this <see cref="T:InSite.Model.IntegrationJob"/>.</summary>
        </member>
        <member name="P:InSite.Model.IntegrationJob.IsPreview">
            <summary>IsPreview will mark the <see cref="T:InSite.Model.IntegrationJob"/> as a preview job.  For example the job might do a select * from x to get schema mapping, it would also show a preview of the data.</summary>
        </member>
        <member name="P:InSite.Model.IntegrationJob.PreviewStepSequence">
            <summary>PreviewStepSequence is the <see cref="T:InSite.Model.JobDefinitionStepFieldMap"/> Sequence to run the Preview Job on if IsPreview is true</summary>
        </member>
        <member name="P:InSite.Model.IntegrationJob.DeltaDataSetProcessed">
            <summary>If this is a Delta Data Set Job, this indicates if the Delta DataSet was processed and copied on the Integration Service Side as the Successful Delta DataSet</summary>
        </member>
        <member name="P:InSite.Model.IntegrationJob.FileProcessed">
            <summary>If this is a File Job, this indicates if the File was processed and can be archived.</summary>
        </member>
        <member name="P:InSite.Model.IntegrationJob.RunStandalone">
            <summary>If this flag is set any linked jobs won't be run when this job completes.</summary>
        </member>
        <member name="P:InSite.Model.IntegrationJob.JobDefinitionName">
            <summary>The <see cref="P:InSite.Model.IntegrationJob.JobDefinition"/> Name of this IntegrationJob.</summary>
        </member>
        <member name="P:InSite.Model.IntegrationJob.IntegrationJobParameters">
            <summary>IntegrationJobParameters is a ReadOnlyCollection of <see cref="T:InSite.Model.IntegrationJobParameter"/>s for this instance of an <see cref="T:InSite.Model.IntegrationJob"/>.</summary>
        </member>
        <member name="P:InSite.Model.IntegrationJob.IntegrationJobLogs">
            <summary>IntegrationJobLogs is a ReadOnlyCollection of <see cref="T:InSite.Model.IntegrationJobLog"/>s for this instance of an <see cref="T:InSite.Model.IntegrationJob"/>.</summary>
        </member>
        <member name="T:InSite.Model.JobDefinition">
            <summary>Class which represents the configuration of an <see cref="T:InSite.Model.IntegrationJob"/>.</summary>
        </member>
        <member name="M:InSite.Model.JobDefinition.AddJobDefinitionStep(InSite.Model.JobDefinitionStep)">
            <summary>Method to add an <see cref="T:InSite.Model.JobDefinitionStep"/> to the <see cref="T:InSite.Model.JobDefinition"/>.</summary>
            <param name="value"></param>
        </member>
        <member name="M:InSite.Model.JobDefinition.RemoveJobDefinitionStep(InSite.Model.JobDefinitionStep)">
            <summary>Method to remove an <see cref="T:InSite.Model.JobDefinitionStep"/> from this <see cref="T:InSite.Model.JobDefinition"/>.</summary>
            <param name="value"></param>        
        </member>
        <member name="M:InSite.Model.JobDefinition.AddJobDefinitionParameter(InSite.Model.JobDefinitionParameter)">
            <summary>Method to add an <see cref="T:InSite.Model.JobDefinitionParameter"/> to the <see cref="T:InSite.Model.JobDefinition"/>.</summary>
            <param name="value"></param>
        </member>
        <member name="M:InSite.Model.JobDefinition.RemoveJobDefinitionParameter(InSite.Model.JobDefinitionParameter)">
            <summary>Method to remove an <see cref="T:InSite.Model.JobDefinitionParameter"/> from this <see cref="T:InSite.Model.JobDefinition"/>.</summary>
            <param name="value"></param>
        </member>
        <member name="M:InSite.Model.JobDefinition.PostUpdate(InSite.Model.JobDefinition,System.Collections.Generic.IList{InSite.Model.SOAResult})">
            <summary>The post update callback.</summary>
            <param name="newValueObject">The new value object.</param>
            <param name="results">The results.</param>
        </member>
        <member name="M:InSite.Model.JobDefinition.PostInsert(InSite.Model.JobDefinition,System.Collections.Generic.IList{InSite.Model.SOAResult})">
            <summary>The post insert callback.</summary>
            <param name="newValueObject">The new value object.</param>
            <param name="results">The results.</param>
        </member>
        <member name="P:InSite.Model.JobDefinition.IntegrationConnection">
            <summary>
            The <see cref="P:InSite.Model.JobDefinition.IntegrationConnection"/> is the connection information for the system to integrate with.
            </summary>
        </member>
        <member name="P:InSite.Model.JobDefinition.Name">
            <summary>
            The Name represents the friendly name for the definition.
            </summary>
            <example>Product Refresh</example>
        </member>
        <member name="P:InSite.Model.JobDefinition.Description">
             <summary>
             The Description represents a friendly helpful description.
             </summary>
            <example>The product refresh refreshes data from our ERP to Insite Commerce.</example>
        </member>
        <member name="P:InSite.Model.JobDefinition.JobType">
            <summary>The JobType represents the type of <see cref="T:InSite.Model.IntegrationJob"/>. Examples: Submit, Export, Report, Monitor.</summary>
        </member>
        <member name="P:InSite.Model.JobDefinition.DebuggingEnabled">
            <summary>The DebuggingEnabled represents if addition debug is enabled.</summary>
        </member>
        <member name="P:InSite.Model.JobDefinition.PassThroughJob">
            <summary>PassthroughJob represents that this is a special case.  This is a special case for local connections to an ERP database where the job is immediately executed and does not record a job record or wait for a task to pick up the job.</summary>        
        </member>
        <member name="P:InSite.Model.JobDefinition.NotifyEmail">
            <summary>NotifyEmail address for Notification of <see cref="T:InSite.Model.IntegrationJob"/> when it matches the <see cref="P:InSite.Model.JobDefinition.NotifyCondition"/></summary>
        </member>
        <member name="P:InSite.Model.JobDefinition.NotifyCondition">
            <summary>NotifyCondition represents the condition that needs to be met to send a message to <see cref="P:InSite.Model.JobDefinition.NotifyEmail"/>.</summary>
        </member>
        <member name="P:InSite.Model.JobDefinition.EmailTemplate">
            <summary>The <see cref="P:InSite.Model.JobDefinition.EmailTemplate"/> to use to send the Email, if left null, will default to text email</summary>
        </member>
        <member name="P:InSite.Model.JobDefinition.EmailTemplateName">
            <summary>The Name of the <see cref="P:InSite.Model.JobDefinition.EmailTemplate"/> to use to send the Email, if left null, will default to text email</summary>
        </member>
        <member name="P:InSite.Model.JobDefinition.LinkedJob">
            <summary>LinkedJob represents <see cref="T:InSite.Model.JobDefinition"/> that will spawn from this <see cref="T:InSite.Model.JobDefinition"/> as a child job. For example, we want the product refresh to automatically run an inventory refresh.</summary>
        </member>
        <member name="P:InSite.Model.JobDefinition.LinkedJobName">
            <summary>LinkedJobName represents the name of the <see cref="T:InSite.Model.JobDefinition"/> that will spawn from this <see cref="T:InSite.Model.JobDefinition"/> as a child job. For example, we want the product refresh to automatically run an inventory refresh.</summary>
        </member>
        <member name="P:InSite.Model.JobDefinition.LinkedJobCondition">
            <summary>JobLinkedJobContinueSetting represents the condition(s) that will cause a linked job to run on completion of the current job.</summary>
        </member>
        <member name="P:InSite.Model.JobDefinition.PassDataSetToLinkedJob">
            <summary>PassDataSetToLinkedJob determines whether the dataset from this <see cref="T:InSite.Model.JobDefinition"/> is passed to the linked job (<see cref="T:InSite.Model.JobDefinition"/>).</summary>
        </member>
        <member name="P:InSite.Model.JobDefinition.UseDeltaDataSet">
            <summary>UseDeltaDataSet represents if we do delta comparisons of full data integration.</summary>
        </member>
        <member name="P:InSite.Model.JobDefinition.Preprocessor">
            <summary>Preprocessor is a string representation of name/key for <see cref="T:InSite.Model.Integration.Interfaces.IJobPreprocessor"/> to be instantiated for preprocessing for the <see cref="T:InSite.Model.IntegrationJob"/>.</summary>        
        </member>
        <member name="P:InSite.Model.JobDefinition.IntegrationProcessor">
            <summary>IntegrationProcessor is a string representation of name/key for the IIntegrationProcessor to be instantiated for processing.</summary>
        </member>
        <member name="P:InSite.Model.JobDefinition.Postprocessor">
            <summary>Postrocessor is a string representation of name/key for <see cref="T:InSite.Model.Integration.Interfaces.IJobPostprocessor"/> to be instantiated for post processing.</summary>
        </member>
        <member name="P:InSite.Model.JobDefinition.LastRunDateTime">
            <summary>LastRunDateTime is the DateTime of the last executed <see cref="T:InSite.Model.IntegrationJob"/> that has this <see cref="T:InSite.Model.JobDefinition"/>.</summary>
        </member>
        <member name="P:InSite.Model.JobDefinition.LastRunJobNumber">
            <summary>LastRunJobNumber is the JobNumber of the last executed <see cref="T:InSite.Model.IntegrationJob"/> that has this <see cref="T:InSite.Model.JobDefinition"/>.</summary>
        </member>
        <member name="P:InSite.Model.JobDefinition.LastRunStatus">
            <summary>Get or Set LastRunStatus is the status of the last executed <see cref="T:InSite.Model.IntegrationJob"/> that has this <see cref="T:InSite.Model.JobDefinition"/>. Examples may be "Success" or "Failure".</summary>
            <example>Success or Failure</example>
        </member>
        <member name="P:InSite.Model.JobDefinition.RecurringJob">
            <summary>RecurringJob marks this <see cref="T:InSite.Model.JobDefinition"/> as a recurring Job.  Means that this <see cref="T:InSite.Model.JobDefinition"/> we have some type of schedule.</summary>
        </member>
        <member name="P:InSite.Model.JobDefinition.RecurringStartDateTime">
            <summary>RecurringStartDateTime is the start date for recurring <see cref="T:InSite.Model.IntegrationJob"/>'s that have this <see cref="T:InSite.Model.JobDefinition"/>.</summary>
        </member>
        <member name="P:InSite.Model.JobDefinition.RecurringEndDateTime">
            <summary>RecurringEndDateTime is the end date for recurring <see cref="T:InSite.Model.IntegrationJob"/>'s that have this <see cref="T:InSite.Model.JobDefinition"/>.</summary>
        </member>
        <member name="P:InSite.Model.JobDefinition.RecurringInterval">
            <summary>RecurringInterval is the interval of recurring <see cref="T:InSite.Model.IntegrationJob"/>'s that have this <see cref="T:InSite.Model.JobDefinition"/>.</summary>
        </member>
        <member name="P:InSite.Model.JobDefinition.RecurringType">
            <summary>RecurringType is the time span type of recurring event. For example: Minutes, Hours, Days, Months</summary>
        </member>
        <member name="P:InSite.Model.JobDefinition.RecurringStartTime">
            <summary>RecurringStartTime is the starting datetime for recurring <see cref="T:InSite.Model.IntegrationJob"/>'s that have this <see cref="T:InSite.Model.JobDefinition"/>.</summary>
        </member>
        <member name="P:InSite.Model.JobDefinition.RecurringStartDay">
            <summary>RecurringStartDay is the starting day for recurring <see cref="T:InSite.Model.IntegrationJob"/>'s that have this <see cref="T:InSite.Model.JobDefinition"/></summary>
            <remarks>int represents day of week</remarks>
        </member>
        <member name="P:InSite.Model.JobDefinition.RunStepsInParallel">
            <summary>RunStepsInParallel tells the WindowsIntegrationBroker to run all the Steps in Parallel instead of one at a time.</summary>
        </member>
        <member name="P:InSite.Model.JobDefinition.JobDefinitionSteps">
            <summary>JobDefinitionSteps are a collection of <see cref="T:InSite.Model.JobDefinitionStep"/>s that are executed in order by an <see cref="T:InSite.Model.IntegrationJob"/> that has this <see cref="T:InSite.Model.JobDefinition"/>.</summary>
        </member>
        <member name="P:InSite.Model.JobDefinition.JobDefinitionParameters">
            <summary>JobDefinitionParameters are a collection of <see cref="T:InSite.Model.JobDefinitionParameter"/>s that are executed in order by an <see cref="T:InSite.Model.Integration.Interfaces.IJobPostprocessor"/> that has this <see cref="T:InSite.Model.JobDefinition"/>.</summary>
        </member>
        <member name="T:InSite.Model.JobDefinitionParameter">
            <summary>
            Class that represents a Parameter to pass to an <see cref="T:InSite.Model.Integration.Interfaces.IJobPostprocessor"/> for an <see cref="P:InSite.Model.JobDefinitionParameter.JobDefinition"/>.
            </summary>
        </member>
        <member name="P:InSite.Model.JobDefinitionParameter.JobDefinition">
            <summary>
            <see cref="P:InSite.Model.JobDefinitionParameter.JobDefinition"/> that this <see cref="T:InSite.Model.JobDefinitionParameter"/> belongs to.
            </summary>
        </member>
        <member name="P:InSite.Model.JobDefinitionParameter.Sequence">
            <summary>
            Sequence for this parameter.
            </summary>
        </member>
        <member name="P:InSite.Model.JobDefinitionParameter.Name">
            <summary>
            Name of the parameter. 
            </summary>
        </member>
        <member name="P:InSite.Model.JobDefinitionParameter.ValueType">
            <summary>
            ValueType represents what type this value is, for example string.
            </summary>
        </member>
        <member name="P:InSite.Model.JobDefinitionParameter.DefaultValue">
            <summary>
            DefaultValue is what the default value for this parameter is.
            </summary>
        </member>
        <member name="P:InSite.Model.JobDefinitionParameter.Prompt">
            <summary>
            Prompt is the message that will displayed.
            </summary>
        </member>
        <member name="P:InSite.Model.JobDefinitionParameter.Value">
            <summary>
            Actual runtime value of the parameter
            </summary>
        </member>
        <member name="T:InSite.Model.JobDefinitionStep">
            <summary>
            Class that represents a step in an <see cref="P:InSite.Model.JobDefinitionStep.JobDefinition"/>.  An <see cref="P:InSite.Model.JobDefinitionStep.JobDefinition"/> may contain many <see cref="T:InSite.Model.JobDefinitionStep"/>s that will be executed in order and as a whole represent all tasks that a run of an <see cref="T:InSite.Model.IntegrationJob"/> is to perform.
            </summary>
        </member>
        <member name="M:InSite.Model.JobDefinitionStep.AddJobDefinitionStepParameter(InSite.Model.JobDefinitionStepParameter)">
            <summary>
            Adds an JobDefinitionStepParameter to the JobDefinitionStep
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:InSite.Model.JobDefinitionStep.RemoveJobDefinitionStepParameter(InSite.Model.JobDefinitionStepParameter)">
            <summary>
            Removes an JobDefinitionStepParameter to the JobDefinitionStep
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:InSite.Model.JobDefinitionStep.AddJobDefinitionStepFieldMap(InSite.Model.JobDefinitionStepFieldMap)">
            <summary>
            Adds an AddJobDefinitionStepFieldMap to the JobDefinitionStep
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:InSite.Model.JobDefinitionStep.RemoveJobDefinitionStepFieldMap(InSite.Model.JobDefinitionStepFieldMap)">
            <summary>
            Method to remove an <see cref="T:InSite.Model.JobDefinitionStepFieldMap"/> the provided <see cref="T:InSite.Model.JobDefinitionStepFieldMap"/> from the collection <see cref="P:InSite.Model.JobDefinitionStep.JobDefinitionStepFieldMaps"/>. 
            If the collection of <see cref="P:InSite.Model.JobDefinitionStep.JobDefinitionStepFieldMaps"/> does contains the provided <see cref="T:InSite.Model.JobDefinitionStepFieldMap"/> remove it from the collection of <see cref="P:InSite.Model.JobDefinitionStep.JobDefinitionStepFieldMaps"/>.  If the 
            the collection of <see cref="P:InSite.Model.JobDefinitionStep.JobDefinitionStepFieldMaps"/> does not contain the provided <see cref="T:InSite.Model.JobDefinitionStepFieldMap"/> do nothing and exit gracefully.
            </summary>
            <param name="value"></param>
        </member>
        <member name="P:InSite.Model.JobDefinitionStep.JobDefinition">
            <summary>
            <see cref="P:InSite.Model.JobDefinitionStep.JobDefinition"/> that this <see cref="T:InSite.Model.JobDefinitionStep"/> belongs to. 
            </summary>
        </member>
        <member name="P:InSite.Model.JobDefinitionStep.Sequence">
            <summary>
            Sequence marks the order of <see cref="T:InSite.Model.JobDefinitionStep"/>s are executed in.
            </summary>
        </member>
        <member name="P:InSite.Model.JobDefinitionStep.Name">
            <summary>
            Friendly name of the <see cref="T:InSite.Model.JobDefinitionStep"/>.
            </summary>
        </member>
        <member name="P:InSite.Model.JobDefinitionStep.ObjectName">
            <summary>
            ObjectName is the name of the object that the <see cref="T:InSite.Model.JobDefinitionStep"/> is going to write to on the commerce side. For example Product, Customer CustomerOrder.
            </summary>
        </member>
        <member name="P:InSite.Model.JobDefinitionStep.IntegrationProcessorOverride">
            <summary>
            IntegrationProcessorOverride is the fully qualified name of an IIntegrationProcessor to override at the destination point with. 
            </summary>
        </member>
        <member name="P:InSite.Model.JobDefinitionStep.IntegrationConnectionOverride">
            <summary>
            The <see cref="T:InSite.Model.IntegrationConnection"/> will be the configuration information required for the <see cref="T:InSite.Model.IntegrationJob"/> to run.
            </summary>
        </member>
        <member name="P:InSite.Model.JobDefinitionStep.DeleteAction">
            <summary>
            What to do when the refresh record is requested to be deleted.
            </summary>
        </member>
        <member name="P:InSite.Model.JobDefinitionStep.DeleteActionFieldToSet">
            <summary>
            If the DeleteAction is SetField, this is the field to set.
            </summary>
        </member>
        <member name="P:InSite.Model.JobDefinitionStep.DeleteActionValueToSet">
            <summary>
            If the DeleteAction is SetField, and the DeleteActionFieldToSet is not a DateTime, this is the value to set this field to on delete.
            </summary>
        </member>
        <member name="P:InSite.Model.JobDefinitionStep.SelectClause">
            <summary>
            SelectClause represents the SELECT portion of a SQL statement.
            </summary>
        </member>
        <member name="P:InSite.Model.JobDefinitionStep.FromClause">
            <summary>
            FromClause represents the FROM clause in a SQL statement.
            </summary>
        </member>
        <member name="P:InSite.Model.JobDefinitionStep.WhereClause">
            <summary>
            WhereClause represents the WHERE portion of a SQL statement.
            </summary>
        </member>
        <member name="P:InSite.Model.JobDefinitionStep.ParameterizedWhereClause">
            <summary>
            ParameterizedWhereClause represents a parameterized SQL WHERE statement.  For example name = @name.
            </summary>
        </member>
        <member name="P:InSite.Model.JobDefinitionStep.SkipHeaderRow">
            <summary>
            For FlatFileImports, should the first row be skipped because it contains headers.
            </summary>
        </member>
        <member name="P:InSite.Model.JobDefinitionStep.IntegrationQuery">
            <summary>
            The transient value of the query generated based on the SelectClause and WhereClause or ParameterizedWhereClause, this will only be set at runtime by an <see cref="T:InSite.Model.Integration.Interfaces.IJobPreprocessor"/>.
            </summary>
        </member>
        <member name="P:InSite.Model.JobDefinitionStep.JobDefinitionStepParameters">
            <summary>
            JobDefinitionStepParameters is a read only collection of <see cref="T:InSite.Model.IntegrationJobParameter"/>s.  These are the individual parameters to be used by the <see cref="T:InSite.Model.JobDefinitionStep"/>.
            </summary>
        </member>
        <member name="P:InSite.Model.JobDefinitionStep.JobDefinitionStepFieldMaps">
            <summary>
            JobDefinitionStepFieldMaps is a read only collection of <see cref="T:InSite.Model.JobDefinitionStepFieldMap"/>s.  These <see cref="T:InSite.Model.JobDefinitionStepFieldMap"/>s will provide the mappping/transformation information for the <see cref="T:InSite.Model.JobDefinitionStep"/> and as a whole the <see cref="T:InSite.Model.IntegrationJob"/> that the <see cref="T:InSite.Model.JobDefinitionStep"/> belongs to.
            </summary>
        </member>
        <member name="T:InSite.Model.JobDefinitionStepFieldMap">
            <summary>
            Class that represents the mapping of data either from ISC to the system being integrated with for Submit jobs or from the system being integrated with to ISC for Refresh jobs.
            </summary>
        </member>
        <member name="P:InSite.Model.JobDefinitionStepFieldMap.JobDefinitionStep">
            <summary><see cref="P:InSite.Model.JobDefinitionStepFieldMap.JobDefinitionStep"/> that this <see cref="T:InSite.Model.JobDefinitionStepFieldMap"/> belongs to.</summary>
        </member>
        <member name="P:InSite.Model.JobDefinitionStepFieldMap.FieldType">
            <summary>The <see cref="T:InSite.Model.Integration.Enums.IntegrationFieldType"/> of this <see cref="T:InSite.Model.JobDefinitionStepFieldMap"/>.</summary>
        </member>
        <member name="P:InSite.Model.JobDefinitionStepFieldMap.FromProperty">
            <summary>FromProperty represents where the field is from.  For example: ERP field for Refresh, ISC field for Submit</summary> 
        </member>
        <member name="P:InSite.Model.JobDefinitionStepFieldMap.ToProperty">
            <summary>ToProperty represents where the field is going to.  For example: ISC field for Refresh, ERP field for submit</summary>
        </member>
        <member name="P:InSite.Model.JobDefinitionStepFieldMap.Overwrite">
            <summary>Overwrite represent if this field should overwrite the current value on an update.</summary>
        </member>
        <member name="P:InSite.Model.JobDefinitionStepFieldMap.IsErpKey">
            <summary>IsErpKey represents if this field is a key into the ERP data.</summary>
        </member>
        <member name="P:InSite.Model.JobDefinitionStepFieldMap.LookupObjectRepository">
            <summary>Cache for runtime reflection on object repository</summary>
        </member>
        <member name="P:InSite.Model.JobDefinitionStepFieldMap.ChildAddMethod">
            <summary>Cache for runtime reflection on object add to child collection method</summary>
        </member>
        <member name="P:InSite.Model.JobDefinitionStepFieldMap.ChildRemoveMethod">
            <summary>Cache for runtime reflection on object remove from child collection method</summary>
        </member>
        <member name="T:InSite.Model.JobDefinitionStepParameter">
            <summary>
            Class that represents an individual Parameter for an <see cref="P:InSite.Model.JobDefinitionStepParameter.JobDefinitionStep"/>.
            </summary>
        </member>
        <member name="P:InSite.Model.JobDefinitionStepParameter.JobDefinitionStep">
            <summary>
            <see cref="P:InSite.Model.JobDefinitionStepParameter.JobDefinitionStep"/> that this <see cref="T:InSite.Model.JobDefinitionStepParameter"/> belongs to.
            </summary>
        </member>
        <member name="P:InSite.Model.JobDefinitionStepParameter.JobDefinitionStepSequence">
            <summary>
            Parent <see cref="P:InSite.Model.JobDefinitionStepParameter.JobDefinitionStep"/>'s sequence.
            </summary>
        </member>
        <member name="P:InSite.Model.JobDefinitionStepParameter.JobDefinitionStepName">
            <summary>
            Parent <see cref="P:InSite.Model.JobDefinitionStepParameter.JobDefinitionStep"/>'s name.
            </summary>
        </member>
        <member name="P:InSite.Model.JobDefinitionStepParameter.Sequence">
            <summary>
            Sequence for this parameter.
            </summary>
        </member>
        <member name="P:InSite.Model.JobDefinitionStepParameter.Name">
            <summary>
            Name of the parameter. 
            </summary>
        </member>
        <member name="P:InSite.Model.JobDefinitionStepParameter.ValueType">
            <summary>
            The <see cref="T:InSite.Model.Integration.Enums.IntegrationParameterValueType"/>.
            </summary>
        </member>
        <member name="P:InSite.Model.JobDefinitionStepParameter.DefaultValue">
            <summary>
            DefaultValue is what the default value for this parameter is.
            </summary>
        </member>
        <member name="P:InSite.Model.JobDefinitionStepParameter.Prompt">
            <summary>
            Prompt is the message that will be displayed.
            </summary>
        </member>
        <member name="P:InSite.Model.JobDefinitionStepParameter.Value">
            <summary>
            Actual runtime value of the parameter
            </summary>
        </member>
        <member name="T:InSite.Model.IntegrationJobLog">
            <summary>
            This class represents a log entry associated with an <see cref="P:InSite.Model.IntegrationJobLog.IntegrationJob"/>.  The logging is seperate from the normal <see cref="T:InSite.Model.ApplicationLog"/>.
            </summary>
        </member>
        <member name="P:InSite.Model.IntegrationJobLog.IntegrationJob">
            <summary>
            The <see cref="P:InSite.Model.IntegrationJobLog.IntegrationJob"/> is the parent <see cref="P:InSite.Model.IntegrationJobLog.IntegrationJob"/> which can contain many <see cref="T:InSite.Model.IntegrationJobLog"/> entries.
            </summary>
        </member>
        <member name="P:InSite.Model.IntegrationJobLog.Sequence">
            <summary>
            The Sequence represents the order in which <see cref="T:InSite.Model.IntegrationJobLog"/>s were logged in the parent <see cref="P:InSite.Model.IntegrationJobLog.IntegrationJob"/>
            </summary>
        </member>
        <member name="P:InSite.Model.IntegrationJobLog.TypeName">
            <summary>
            The TypeName represents the type of log message.
            </summary>
        </member>
        <member name="P:InSite.Model.IntegrationJobLog.LogDateTime">
            <summary>
            The LogDateTime represents the DateTime this <see cref="T:InSite.Model.IntegrationJobLog"/> was created.
            </summary>
        </member>
        <member name="P:InSite.Model.IntegrationJobLog.Message">
            <summary>
            The Message represents the message to be logged.
            </summary>
        </member>
        <member name="T:InSite.Model.IntegrationJobParameter">
            <summary>
            Class which represents values of the <see cref="P:InSite.Model.IntegrationJobParameter.JobDefinitionStepParameter"/>s when the <see cref="P:InSite.Model.IntegrationJobParameter.IntegrationJob"/> was run.
            </summary>
        </member>
        <member name="P:InSite.Model.IntegrationJobParameter.IntegrationJob">
            <summary>
            <see cref="P:InSite.Model.IntegrationJobParameter.IntegrationJob"/> which this parameter is assigned to.
            </summary>
        </member>
        <member name="P:InSite.Model.IntegrationJobParameter.JobDefinitionStepParameter">
            <summary>
            The <see cref="P:InSite.Model.IntegrationJobParameter.JobDefinitionStepParameter"/> for which this is the actual value for.
            </summary>
        </member>
        <member name="P:InSite.Model.IntegrationJobParameter.StepSequence">
            <summary>
            The StepSequence represents the actual step sequence.
            </summary>
        </member>
        <member name="P:InSite.Model.IntegrationJobParameter.Name">
            <summary>
            The Name represents the actual parameter name.
            </summary>
        </member>
        <member name="P:InSite.Model.IntegrationJobParameter.Value">
            <summary>
            The Value represents the actual parameter value.
            </summary>
        </member>
        <member name="T:InSite.Model.Interfaces.ICustomPropertyProvider">
            <summary>
            Accessor methods for <see cref="T:InSite.Model.CustomProperty"/> attributes attached to this model type
            </summary>
        </member>
        <member name="M:InSite.Model.Interfaces.ICustomPropertyProvider.GetProperty(System.String,System.String)">
            <summary>Retrieve the value for a CustomProperty</summary>
            <param name="name">The name of the property</param>
            <param name="defaultValue">The value to return if the property is not found</param>
        </member>
        <member name="M:InSite.Model.Interfaces.ICustomPropertyProvider.SetProperty(System.String,System.String)">
            <summary>Set the value for a CustomProperty</summary> 
        </member>
        <member name="T:InSite.Model.Interfaces.FlushMode">
            <summary>
            Enumeration specifying how the <see cref="T:InSite.Model.Interfaces.IUnitOfWork"/> session should do it's flushing to the Datasource.
            </summary>
        </member>
        <member name="F:InSite.Model.Interfaces.FlushMode.Never">
            <summary>
            Never flush the session automatically, always require a call to <see cref="M:InSite.Model.Interfaces.IUnitOfWork.Save"/>.
            </summary>
        </member>
        <member name="F:InSite.Model.Interfaces.FlushMode.Auto">
            <summary>
            Allow the implementation of the <see cref="T:InSite.Model.Interfaces.IDataProvider"/> to flush the session when it wants to.
            </summary>
        </member>
        <member name="T:InSite.Model.Interfaces.IDataProvider">
            <summary>
            Interface to implement to support connecting to a Datasource for the Object Model.
            </summary>
        </member>
        <member name="M:InSite.Model.Interfaces.IDataProvider.BeginTransaction">
            <summary>Starts a Database Transaction</summary>
        </member>
        <member name="M:InSite.Model.Interfaces.IDataProvider.CommitTransaction">
            <summary>Commits a previously started Database Transaction</summary>
        </member>
        <member name="M:InSite.Model.Interfaces.IDataProvider.RollbackTransaction">
            <summary>Rolls back a previously started Database Transaction</summary>
        </member>
        <member name="M:InSite.Model.Interfaces.IDataProvider.Save">
            <summary>Saves all of the changes to the Business Objects in the current UnitOfWork session to the Database</summary>
        </member>
        <member name="M:InSite.Model.Interfaces.IDataProvider.Clear">
            <summary>Clears the Business Objects out of the UnitOfWork session, the Business Objects will still be valid objects, but they will no longer be persisted to
            the Database.  This method is useful when working with large sets of data for example during a refresh.</summary>
        </member>
        <member name="M:InSite.Model.Interfaces.IDataProvider.Evict(System.Object)">
            <summary>Removes a single Business Object from the UnitOfWork session.  The Business Object is still a valid object, but will no longer persist to the Database.</summary>
        </member>
        <member name="M:InSite.Model.Interfaces.IDataProvider.Reattach(System.Object)">
            <summary>Reattaches a previously Evicted object to the session</summary>
            <param name="value">Object to be re-attached</param>
        </member>
        <member name="M:InSite.Model.Interfaces.IDataProvider.Close">
            <summary>Close the Session.</summary>
        </member>
        <member name="M:InSite.Model.Interfaces.IDataProvider.SqlExecuteNonQuery(System.String,System.Collections.ObjectModel.Collection{System.Data.IDbDataParameter},System.Int32)">
            <summary>Executes a Sql Statement on the Database</summary>
            <param name="sql">The Sql Statement to run</param>
            <param name="parameters">Optional Parameters for a Parameterized Sql Statement</param>
            <param name="commandTimeout">Optional Parameter for Command Timeout default is 90 seconds</param>
        </member>
        <member name="M:InSite.Model.Interfaces.IDataProvider.SqlExecuteScalar(System.String,System.Collections.ObjectModel.Collection{System.Data.IDbDataParameter},System.Int32)">
            <summary>Executes a Sql statement on the Database that returns a scalar value</summary>
            <param name="sql">The Sql Statement to run</param>
            <param name="parameters">Optional Parameters for a Parameterized Sql Statement</param>
            <param name="commandTimeout">Optional Parameter for Command Timeout default is 90 seconds</param>
            <returns>Result of the Sql Statement</returns>
        </member>
        <member name="M:InSite.Model.Interfaces.IDataProvider.SqlExecuteStoredProcedure(System.String,System.Collections.ObjectModel.Collection{System.Data.IDbDataParameter},System.Int32)">
            <summary>Executes a Stored Procedure on the Database</summary>
            <param name="storedProcedureName">The name of the Stored Procedure to run</param>
            <param name="parameters">Optional Parameters for a Parameterized Sql Statement</param>
            <param name="commandTimeout">Optional Parameter for Command Timeout default is 90 seconds</param>
        </member>
        <member name="M:InSite.Model.Interfaces.IDataProvider.LinqQuery``1">
            <summary>Get an IQueryable to use Linq to query the Database</summary>
            <returns>Returns Linq IQueryable</returns>
        </member>
        <member name="M:InSite.Model.Interfaces.IDataProvider.SqlQuery``1(System.String,System.Int32@,System.Collections.ObjectModel.Collection{System.Data.IDbDataParameter},System.Boolean)">
            <summary>Return List of objects of type T based off of input parameters</summary>
            <param name="sql">Sql Statement</param>
            <param name="recordCount">The full count of results</param>
            <param name="parameters">Sql Db Parameter list to build parameterized Sql query</param>
            <param name="useAliasBinding">Auto binds the SQL results to T without a mapping file</param>
            <returns>Return IQueryable based off of input parameters</returns>
        </member>
        <member name="M:InSite.Model.Interfaces.IDataProvider.SqlQuery``1(System.String,System.Int32,System.Int32,System.Int32@,System.Collections.ObjectModel.Collection{System.Data.IDbDataParameter},System.Boolean)">
            <summary>Return List of objects of type T based off of input parameters</summary>
            <param name="sql">Sql Statement</param>
            <param name="recordCount">The full count of results</param>
            <param name="parameters">Sql Db Parameter list to build parameterized Sql query</param>
            <param name="startRow">Starting index of return results</param>
            <param name="pageSize">Number of items to return</param>
            <param name="useAliasBinding">Auto binds the SQL results to T without a mapping file</param>
            <returns>Return IList based off of input parameters</returns>
        </member>
        <member name="M:InSite.Model.Interfaces.IDataProvider.GetById``1(System.Guid)">
            <summary>Return an object of Type T by using its identity field</summary>
            <param name="id">Identity field/key for object of Type T to be returned</param>
            <returns>Object for the specified id, null if not found</returns>
        </member>
        <member name="M:InSite.Model.Interfaces.IDataProvider.GetById``1(System.String)">
            <summary>Return an object of Type T by using its identity field</summary>
            <param name="id">Identity field/key for object of Type T to be returned</param>
            <returns>Object for the specified id, null if not found</returns>
        </member>
        <member name="M:InSite.Model.Interfaces.IDataProvider.GetByNaturalKey``1(System.Object[])">
            <summary>
            Retrieves a Business Object based on the natural key field(s). 
            </summary>
            <param name="keyValues">All natural key values, in order</param>       
            <returns>Business Object, null if not found</returns>
            <remarks>Natural keys are marked with [LookupKeyField] on the Business Object properties.</remarks>
        </member>
        <member name="M:InSite.Model.Interfaces.IDataProvider.CreateForClassName``1(System.String)">
            <summary>
            Creates an instance of the given className, the given className must be a mapped class
            </summary>
            <typeparam name="T"></typeparam>
            <param name="className"></param>
        </member>
        <member name="M:InSite.Model.Interfaces.IDataProvider.GetAllMappedTypes">
            <summary>
            Returns a list of all of the types that are mapped for this IDataProvider
            </summary>
        </member>
        <member name="M:InSite.Model.Interfaces.IDataProvider.GetTypeForClassName(System.String)">
            <summary>
            The get type for class name.
            </summary>
            <param name="className">The class name.</param>
            <returns>The <see cref="T:System.Type"/>.</returns>
        </member>
        <member name="M:InSite.Model.Interfaces.IDataProvider.Refresh``1(``0)">
            <summary>
            Refreshes the Business Object from the Database.
            </summary>
            <param name="value">Business Object to Refresh</param>
        </member>
        <member name="M:InSite.Model.Interfaces.IDataProvider.Insert``1(``0)">
            <summary>Method’s intent is to persist an object of Type T.</summary>
            <param name="value">Type T to be inserted into persistence provider</param>
        </member>
        <member name="M:InSite.Model.Interfaces.IDataProvider.Delete``1(``0)">
            <summary>Method’s intent is to delete a persisted object of Type T in the persistence provider.</summary>
            <param name="value">Type T to be deleted into persistence provider</param>
        </member>
        <member name="M:InSite.Model.Interfaces.IDataProvider.EagerLoad(System.Object)">
            <summary>Forces a load of a proxy. does not cascade.</summary>
        </member>
        <member name="M:InSite.Model.Interfaces.IDataProvider.Unproxy(System.Object)">
            <summary>Convert a proxied object into the real object. throws if proxy is not initialized</summary>
        </member>
        <member name="M:InSite.Model.Interfaces.IDataProvider.ClearCache">
            <summary>Clears Cache</summary>
        </member>
        <member name="P:InSite.Model.Interfaces.IDataProvider.FlushMode">
            <summary>This property controls if methods like Insert or Delete will automatically write to the database</summary>
            <value>The default value is FlushMode.Auto which will make certain statements like Insert and Delete write the session to the Database, setting the
            value to FlushMode.Never will make it so the only time changes are written to the Database is if you call UnitOfWork.Save or UnitOfWork.CommitTransaction</value>
        </member>
        <member name="P:InSite.Model.Interfaces.IDataProvider.DbConnection">
            <summary>The Database Connection the UnitOfWork uses</summary>
        </member>
        <member name="P:InSite.Model.Interfaces.IDataProvider.TransactionActive">
            <summary>Returns true if there is an active Database Transaction</summary>
        </member>
        <member name="T:InSite.Model.Interfaces.IDefaultShipToProvider">
            <summary>
            Implement this interface to customize how the default ShipTo <see cref="T:InSite.Model.Customer"/> and available ShipTo <see cref="T:InSite.Model.Customer"/>s are determined
            </summary>
        </member>
        <member name="M:InSite.Model.Interfaces.IDefaultShipToProvider.GetDefaultShipTo(InSite.Model.WebSite,InSite.Model.UserProfile,InSite.Model.Customer,System.Boolean)">
            <summary>Returns the default ShipTo <see cref="T:InSite.Model.Customer"/> for the <see cref="T:InSite.Model.UserProfile"/> and BillTo <see cref="T:InSite.Model.Customer"/></summary>
            <param name="webSite"><see cref="T:InSite.Model.WebSite"/> to query.</param>
            <param name="userProfile" type="UserProfile"></param>
            <param name="billTo" type="Customer"></param>
            <param name="includeBillTo">Include bill to customer (if AllowBillToAddressForShipping is true.)</param>
            <returns>Default ShipTo <see cref="T:InSite.Model.Customer"/> if found, otherwise null</returns>
        </member>
        <member name="M:InSite.Model.Interfaces.IDefaultShipToProvider.GetAvailableShipTos(InSite.Model.WebSite,InSite.Model.UserProfile,InSite.Model.Customer,System.Boolean)">
            <summary>
            Returns the ShipTo <see cref="T:InSite.Model.Customer"/>s available to the <see cref="T:InSite.Model.UserProfile"/> for the BillTo <see cref="T:InSite.Model.Customer"/>.
            This differs from the assigned ShipTos because a User that has no assigned ShipTos has all of the ShipTos available to them.
            </summary>
            <param name="webSite"><see cref="T:InSite.Model.WebSite"/> to query.</param>
            <param name="userProfile">UserProfile to query.</param>
            <param name="billTo" type="Customer"></param>
            <param name="includeBillTo">Include bill to customer (if AllowBillToAddressForShipping is true.)</param>
            <returns>IList of available ShipTo <see cref="T:InSite.Model.Customer"/>s (possibly empty)</returns>
        </member>
        <member name="M:InSite.Model.Interfaces.IDefaultShipToProvider.GetAvailableShipToCount(InSite.Model.WebSite,InSite.Model.UserProfile,InSite.Model.Customer,System.Boolean)">
            <summary>
            Returns the count of the ShipTo <see cref="T:InSite.Model.Customer"/>s available to the <see cref="T:InSite.Model.UserProfile"/> for the BillTo <see cref="T:InSite.Model.Customer"/>.
            This differs from the assigned ShipTos because a User that has no assigned ShipTos has all of the ShipTos available to them.
            </summary>
            <param name="webSite"><see cref="T:InSite.Model.WebSite"/> to query.</param>
            <param name="userProfile">UserProfile to query.</param>
            <param name="billTo" type="Customer"></param>
            <param name="includeBillTo">Include bill to customer (if AllowBillToAddressForShipping is true.)</param>
            <returns>Number of available ShipTO Customers.</returns>
        </member>
        <member name="M:InSite.Model.Interfaces.IDefaultShipToProvider.GetAssignedShipTos(InSite.Model.WebSite,InSite.Model.UserProfile,InSite.Model.Customer)">
            <summary>
            Returns only the ShipTo <see cref="T:InSite.Model.Customer"/>s assigned to the <see cref="T:InSite.Model.UserProfile"/> for the BillTo <see cref="T:InSite.Model.Customer"/>.
            This differs from the available ShipTos because a User that has no assigned ShipTos has all of the ShipTos available to them.
            </summary>
            <param name="webSite">The web site.</param>
            <param name="userProfile">The user profile.</param>
            <param name="billTo">The bill to.</param>
            <returns>The <see cref="T:System.Linq.IQueryable"/>.</returns>
        </member>
        <member name="M:InSite.Model.Interfaces.IDefaultShipToProvider.GetAssignedShipToCount(InSite.Model.WebSite,InSite.Model.UserProfile,InSite.Model.Customer)">
            <summary>
            Returns the count of the ShipTo <see cref="T:InSite.Model.Customer"/>s assigned to the <see cref="T:InSite.Model.UserProfile"/> for the BillTo <see cref="T:InSite.Model.Customer"/>.
            This differs from the available ShipTos because a User that has no assigned ShipTos has all of the ShipTos available to them.
            </summary>
            <param name="webSite">The web site.</param>
            <param name="userProfile">The user profile.</param>
            <param name="billTo">The bill to.</param>
            <returns>The <see cref="T:System.Int32"/>.</returns>
        </member>
        <member name="T:InSite.Model.Interfaces.IDefaultCustomerProvider">
            <summary>
            Implement this interface to customize how the default <see cref="T:InSite.Model.Customer"/> and available <see cref="T:InSite.Model.Customer"/>s are determined
            </summary>
        </member>
        <member name="M:InSite.Model.Interfaces.IDefaultCustomerProvider.GetDefaultCustomer(InSite.Model.WebSite,InSite.Model.UserProfile)">
            <summary>
            Method to return the default <see cref="T:InSite.Model.Customer"/> for a given <see cref="T:InSite.Model.UserProfile"/>
            </summary>
            <param name="webSite"><see cref="T:InSite.Model.WebSite"/> to query.</param>
            <param name="userProfile" type="UserProfile">UserProfile to query.</param>
            <returns>Default <see cref="T:InSite.Model.Customer"/> if found, otherwise null</returns>
        </member>
        <member name="M:InSite.Model.Interfaces.IDefaultCustomerProvider.GetAvailableCustomers(InSite.Model.WebSite,InSite.Model.UserProfile)">
            <summary>
            Method to return the available <see cref="T:InSite.Model.Customer"/>s for a given <see cref="T:InSite.Model.UserProfile"/>
            </summary>
            <param name="webSite"><see cref="T:InSite.Model.WebSite"/> to query.</param>
            <param name="userProfile" type="UserProfile">UserProfile to query.</param>
            <returns>IList of available <see cref="T:InSite.Model.Customer"/>s (possibly empty)</returns>
        </member>
        <member name="M:InSite.Model.Interfaces.IDefaultCustomerProvider.GetAvailableCustomerCount(InSite.Model.WebSite,InSite.Model.UserProfile)">
            <summary>
            Method optimized to get count of available <see cref="T:InSite.Model.Customer"/>s
            </summary>
            <param name="webSite"><see cref="T:InSite.Model.WebSite"/> to query.</param>
            <param name="userProfile">UserProfile to query.</param>
            <returns>Number of available customers.</returns>
        </member>
        <member name="T:InSite.Model.Interfaces.IApplicationLogProvider">
            <summary>Implement this interface to customize behavior of Application Logging.</summary>
        </member>
        <member name="M:InSite.Model.Interfaces.IApplicationLogProvider.Debug(System.String,System.String,System.Exception)">
            <summary>
            Log a Debug message
            </summary>
            <param name="source">Source of the message</param>
            <param name="message">Message to log</param>
            <param name="exception">Exception to log</param>
        </member>
        <member name="M:InSite.Model.Interfaces.IApplicationLogProvider.Info(System.String,System.String,System.Exception)">
            <summary>
            Log an Info message
            </summary>
            <param name="source">Source of the message</param>
            <param name="message">Message to log</param>
            <param name="exception">Exception to log</param>
        </member>
        <member name="M:InSite.Model.Interfaces.IApplicationLogProvider.Warn(System.String,System.String,System.Exception)">
            <summary>
            Log a Warning message
            </summary>
            <param name="source">Source of the message</param>
            <param name="message">Message to log</param>
            <param name="exception">Exception to log</param>
        </member>
        <member name="M:InSite.Model.Interfaces.IApplicationLogProvider.Error(System.String,System.String,System.Exception)">
            <summary>
            Log an Error message
            </summary>
            <param name="source">Source of the message</param>
            <param name="message">Message to log</param>
            <param name="exception">Exception to log</param>
        </member>
        <member name="M:InSite.Model.Interfaces.IApplicationLogProvider.Fatal(System.String,System.String,System.Exception)">
            <summary>
            Log a Fatal message
            </summary>
            <param name="source">Source of the message</param>
            <param name="message">Message to log</param>
            <param name="exception">Exception to log</param>
        </member>
        <member name="T:InSite.Model.Interfaces.ICartOrderProviderFactory">
            <summary>
            Public interface to create an <see cref="T:InSite.Model.Interfaces.ICartOrderProviderFactory"/>.  The implemented classes responsibilty is to implement
            a factory that can return <see cref="T:InSite.Model.ICartOrderProvider"/>'s by name.
            </summary>
        </member>
        <member name="M:InSite.Model.Interfaces.ICartOrderProviderFactory.GetCartOrderProvider">
            <summary>Creates a new instances of <see cref="T:InSite.Model.ICartOrderProvider"/> by resolving the name of the cart order provider which is registered in the Ioc Container.</summary>
            <returns>A new instance of an object that implements <see cref="T:InSite.Model.ICartOrderProvider"/></returns>
        </member>
        <member name="T:InSite.Model.Interfaces.IContextProvider">
            <summary>
            Interface to define the contract for the WebSite's application context.
            </summary>
        </member>
        <member name="M:InSite.Model.Interfaces.IContextProvider.CanRequestQuote">
            <summary>
            Get whether we can request a quote.
            </summary>
            <returns></returns>
        </member>
        <member name="M:InSite.Model.Interfaces.IContextProvider.SetCurrentCurrencyCode(System.String)">
            <summary>
            Sets <see cref="P:InSite.Model.Interfaces.IContextProvider.CurrentCurrency"/> based off the incoming <paramref name="currencyCode"/>
            </summary>
            <param name="currencyCode"><see cref="P:InSite.Model.Currency.CurrencyCode"/></param>
        </member>
        <member name="M:InSite.Model.Interfaces.IContextProvider.SetContext(InSite.Model.UserProfile,InSite.Model.Customer,InSite.Model.Customer,InSite.Model.CustomerOrder,InSite.Model.WebSite,InSite.Model.Language,InSite.Model.Currency,System.Nullable{InSite.Model.Interfaces.DeviceType})">
            <summary>
            Sets the context for the user session.
            </summary>
            <param name="userProfile"><see cref="T:InSite.Model.UserProfile"/> for the current session.</param>
            <param name="customer"><see cref="T:InSite.Model.Customer"/> aka billto for the current user session.</param>
            <param name="shipTo"><see cref="T:InSite.Model.Customer"/> shipto for the current user session.</param>
            <param name="customerOrder"><see cref="T:InSite.Model.CustomerOrder"/> for the current user session.</param>
            <param name="website"><see cref="T:InSite.Model.WebSite"/> for the current user session.</param>
            <param name="language"><see cref="T:InSite.Model.Language"/> for the current user session.</param>
            <param name="currency"><see cref="T:InSite.Model.Currency"/> for the current user session.</param>
            <param name="deviceType"><see cref="T:InSite.Model.Interfaces.DeviceType"/> for the current user session.</param>
        </member>
        <member name="M:InSite.Model.Interfaces.IContextProvider.SetContext(InSite.Model.Customer)">
            <summary>
            Sets the context for the user session.
            </summary>
            <param name="customer"><see cref="T:InSite.Model.Customer"/> aka billto for the current user session.</param>
        </member>
        <member name="M:InSite.Model.Interfaces.IContextProvider.SetContext(InSite.Model.Customer,InSite.Model.Customer)">
            <summary>
            Sets the context for the user session.
            </summary>
            <param name="customer"><see cref="T:InSite.Model.Customer"/> aka billto for the current user session.</param>
            <param name="shipTo"><see cref="T:InSite.Model.Customer"/> shipto for the current user session.</param>
        </member>
        <member name="M:InSite.Model.Interfaces.IContextProvider.SetContext(InSite.Model.Language)">
            <summary>
            Sets the context for the user session.
            </summary>
            <param name="language"><see cref="T:InSite.Model.Language"/> for the current user session.</param>
        </member>
        <member name="P:InSite.Model.Interfaces.IContextProvider.CurrentContext">
            <summary>
            Gets or sets the current context.
            </summary>
        </member>
        <member name="P:InSite.Model.Interfaces.IContextProvider.CurrentCustomer">
            <summary>
            Get Set the current <see cref="T:InSite.Model.Customer"/>.
            </summary>
        </member>
        <member name="P:InSite.Model.Interfaces.IContextProvider.CurrentShipTo">
            <summary>
            Get Set the current ShipTo <see cref="T:InSite.Model.Customer"/>.
            </summary>
        </member>
        <member name="P:InSite.Model.Interfaces.IContextProvider.CurrentCustomerOrder">
            <summary>
            Get Set the current <see cref="T:InSite.Model.CustomerOrder"/>.
            </summary>
        </member>
        <member name="P:InSite.Model.Interfaces.IContextProvider.CurrentCartOrderProvider">
            <summary>
            Gets the current <see cref="P:InSite.Model.Interfaces.IContextProvider.CurrentCartOrderProvider"/>.
            </summary>
        </member>
        <member name="P:InSite.Model.Interfaces.IContextProvider.CurrentUserProfile">
            <summary>
            Get Set the current <see cref="T:InSite.Model.UserProfile"/>.
            </summary>
        </member>
        <member name="P:InSite.Model.Interfaces.IContextProvider.CurrentWebSite">
            <summary>
            Get Set the current <see cref="T:InSite.Model.WebSite"/>.
            </summary>
        </member>
        <member name="P:InSite.Model.Interfaces.IContextProvider.CurrentMicroSiteIdentifier">
            <summary>
            Get the current MicroSite identifier 
            </summary>
        </member>
        <member name="P:InSite.Model.Interfaces.IContextProvider.CurrentApplicationName">
            <summary>
            Get Set the current application name
            </summary>
        </member>
        <member name="P:InSite.Model.Interfaces.IContextProvider.CurrentCurrency">
            <summary>
            Gets the currency for the current user.
            </summary>
        </member>
        <member name="P:InSite.Model.Interfaces.IContextProvider.CurrentWarehouse">
            <summary>
            Returns the Current Warehouse
            </summary>
            <returns></returns>
        </member>
        <member name="P:InSite.Model.Interfaces.IContextProvider.CurrentLanguage">
            <summary>
            Gets the Current language for the current WebSite (for the current user only)
            </summary>
        </member>
        <member name="P:InSite.Model.Interfaces.IContextProvider.CurrentDeviceType">
            <summary>
            Gets the device type of current user's browser.
            </summary>
        </member>
        <member name="P:InSite.Model.Interfaces.IContextProvider.CurrentPersona">
            <summary>
            Gets the persona of the current user.
            </summary>
        </member>
        <member name="P:InSite.Model.Interfaces.IContextProvider.EnableLocalization">
            <summary>
            Set to false to turn off localization for the current request
            </summary>
        </member>
        <member name="T:InSite.Model.Interfaces.ICurrentCustomerProvider">
            <summary>
            Implement this interface to customize what gets returned from Customer.Current and ContextProvider.CurrentCustomer
            </summary>
        </member>
        <member name="M:InSite.Model.Interfaces.ICurrentCustomerProvider.GetCurrentCustomer">
            <summary>
            Returns the value of the current Customer
            </summary>
            <returns></returns>
        </member>
        <member name="M:InSite.Model.Interfaces.ICurrentCustomerProvider.SetCurrentCustomer(InSite.Model.Customer)">
            <summary>
            Sets the value of the current Customer
            </summary>
            <param name="customer"></param>
        </member>
        <member name="T:InSite.Model.Interfaces.ICurrentShipToProvider">
            <summary>
            Implement this interface to customize what gets returned from ContextProvider.CurrentShipTo
            </summary>
        </member>
        <member name="M:InSite.Model.Interfaces.ICurrentShipToProvider.GetCurrentShipTo">
            <summary>
            Returns the value of the current ShipTo
            </summary>
            <returns></returns>
        </member>
        <member name="M:InSite.Model.Interfaces.ICurrentShipToProvider.SetCurrentShipTo(InSite.Model.Customer)">
            <summary>
            Sets the value of the current ShipTo
            </summary>
            <param name="shipTo"></param>
        </member>
        <member name="T:InSite.Model.Interfaces.ICurrentUserProfileProvider">
            <summary>
            Implement this interface to customize what gets returned from UserProfile.Current
            </summary>
        </member>
        <member name="M:InSite.Model.Interfaces.ICurrentUserProfileProvider.GetCurrentUserProfile(System.String)">
            <summary>
            Returns the value of the current UserProfile
            </summary>
            <returns></returns>
        </member>
        <member name="M:InSite.Model.Interfaces.ICurrentUserProfileProvider.SetCurrentUserProfile(InSite.Model.UserProfile)">
            <summary>
            Sets the value of the current UserProfile
            </summary>
            <param name="userProfile"></param>
        </member>
        <member name="T:InSite.Model.Interfaces.ICurrentWebSiteProvider">
            <summary>
            Determines the current website
            </summary>
        </member>
        <member name="M:InSite.Model.Interfaces.ICurrentWebSiteProvider.GetCurrentWebSite">
            <summary>
            Returns the value of the current WebSite
            </summary>
            <returns></returns>
        </member>
        <member name="M:InSite.Model.Interfaces.ICurrentWebSiteProvider.SetCurrentWebSite(InSite.Model.WebSite)">
            <summary>
            Sets the value of the current WebSite
            </summary>
            <param name="webSite"></param>
        </member>
        <member name="T:InSite.Model.Interfaces.ICustomerOrderState">
            <summary>
            Implement this interface to control what the <see cref="T:InSite.Model.Customer"/> methods do when the <see cref="P:InSite.Model.Interfaces.ICustomerOrderState.CustomerOrder"/> Status changes
            </summary>
        </member>
        <member name="M:InSite.Model.Interfaces.ICustomerOrderState.AddOrderLine(InSite.Model.Product,System.String,System.Decimal,System.Collections.Generic.IList{InSite.Model.OrderLineProperty},System.String,System.String)">
            <summary>Add an OrderLine to the OrderLines collection</summary>
            <param name="product">The Product purchased on this OrderLine</param>
            <param name="notes">Optional, notes will set the CustomerOrder Notes</param>
            <param name="qtyOrdered">The Quantity Ordered of the Product</param>
            <param name="orderLineProperties">The collection of OrderLineProperties describing this Product purchase, can be used for example to indicate gift wrapping options etc...</param>
            <param name="unitOfMeasure">The unit of measure of the Product being added to the order</param>
            <param name="costCode">The codt code for the line being added to the order</param>
            <returns>The added OrderLine</returns>
        </member>
        <member name="M:InSite.Model.Interfaces.ICustomerOrderState.CheckStateChange(System.String,System.Object,System.Object)">
            <summary>
            This method gets called by property changes in the <see cref="P:InSite.Model.Interfaces.ICustomerOrderState.CustomerOrder"/> to see if the <see cref="T:InSite.Model.Interfaces.ICustomerOrderState"/> controlling the
            functions of the <see cref="P:InSite.Model.Interfaces.ICustomerOrderState.CustomerOrder"/> needs to change.
            </summary>
            <param name="propertyName">The name of the property that has changed.</param>
            <param name="oldValue">The old value of the property changing.</param>
            <param name="newValue">The value the property is changing to.</param>
        </member>
        <member name="M:InSite.Model.Interfaces.ICustomerOrderState.AddOrderLine(InSite.Model.OrderLine)">
            <summary>
            Method contract to add a <see cref="T:InSite.Model.OrderLine"/> to the <see cref="P:InSite.Model.Interfaces.ICustomerOrderState.CustomerOrder"/>.
            </summary>
            <param name="value"><see cref="T:InSite.Model.OrderLine"/> to add to the <see cref="P:InSite.Model.Interfaces.ICustomerOrderState.CustomerOrder"/>'s <see cref="T:InSite.Model.OrderLine"/> collection.</param>
        </member>
        <member name="M:InSite.Model.Interfaces.ICustomerOrderState.GetIsValid">
            <summary>
            Method contract returns if the instance of the <see cref="P:InSite.Model.Interfaces.ICustomerOrderState.CustomerOrder"/> is valid.
            </summary>
        </member>
        <member name="M:InSite.Model.Interfaces.ICustomerOrderState.CalculateHandling">
            <summary>
            Method contract to call to calculate and set the handling charges on the <see cref="P:InSite.Model.Interfaces.ICustomerOrderState.CustomerOrder"/>
            </summary>
        </member>
        <member name="M:InSite.Model.Interfaces.ICustomerOrderState.RemoveOrderLine(InSite.Model.OrderLine,System.Boolean)">
            <summary>
            Method contract to remove an <see cref="T:InSite.Model.OrderLine"/> from a <see cref="P:InSite.Model.CustomerOrder.OrderLines"/> collection and
            option renumber the <see cref="P:InSite.Model.CustomerOrder.OrderLines"/> <see cref="P:InSite.Model.OrderLine.Line"/>s.
            </summary>
            <param name="value"><see cref="T:InSite.Model.OrderLine"/> to remove from the <see cref="P:InSite.Model.CustomerOrder.OrderLines"/> collection.</param>
            <param name="renumberLines">enable or disable the renumbering of <see cref="P:InSite.Model.OrderLine.Line"/> in the <see cref="P:InSite.Model.CustomerOrder.OrderLines"/>
            collection.</param>
        </member>
        <member name="M:InSite.Model.Interfaces.ICustomerOrderState.RemoveOrderLine(InSite.Model.OrderLine)">
            <summary>Method contract to remove the provided OrderLine from the <see cref="P:InSite.Model.CustomerOrder.OrderLines"/> collection.</summary>
            <param name="value"><see cref="T:InSite.Model.OrderLine"/> to be removed from the <see cref="P:InSite.Model.CustomerOrder.OrderLines"/> collection.</param>
        </member>
        <member name="M:InSite.Model.Interfaces.ICustomerOrderState.RemoveOrderLine(System.Int32)">
            <summary>Remove an OrderLine with the Line Number specified from the OrderLines collection.</summary>
            <param name="lineNumber">to be removed from <see cref="P:InSite.Model.CustomerOrder.OrderLines"/> collection.</param>
        </member>
        <member name="M:InSite.Model.Interfaces.ICustomerOrderState.RemoveShippingRestrictedOrderLines">
            <summary>
            Method contract to remove all the <see cref="P:InSite.Model.CustomerOrder.FailedShippingRestrictionOrderLines"/> from the <see cref="P:InSite.Model.Interfaces.ICustomerOrderState.CustomerOrder"/>.
            </summary>
        </member>
        <member name="M:InSite.Model.Interfaces.ICustomerOrderState.RemovePromotion(InSite.Model.Promotion)">
            <summary>
            Method contract to remove a <see cref="T:InSite.Model.Promotion"/> from the <see cref="P:InSite.Model.CustomerOrder.Promotions"/>.
            </summary>
            <param name="value"><see cref="T:InSite.Model.Promotion"/> to be removed from the <see cref="P:InSite.Model.CustomerOrder.Promotions"/>.</param>
        </member>
        <member name="M:InSite.Model.Interfaces.ICustomerOrderState.RemovePromotionCode(InSite.Model.OrderPromotionCode)">
            <summary>
            Method contact to remove a <see cref="T:InSite.Model.Promotion"/> from the <see cref="P:InSite.Model.CustomerOrder.Promotions"/> based off the
            provided <see cref="T:InSite.Model.OrderPromotionCode"/>.
            </summary>
            <param name="value"><see cref="T:InSite.Model.OrderPromotionCode"/> to remove from the <see cref="P:InSite.Model.CustomerOrder.Promotions"/>.</param>
        </member>
        <member name="M:InSite.Model.Interfaces.ICustomerOrderState.AddPromotion(InSite.Model.Promotion)">
            <summary>
            Method contract to add a <see cref="T:InSite.Model.Promotion"/> to a <see cref="P:InSite.Model.CustomerOrder.Promotions"/>.
            </summary>
            <param name="value"><see cref="T:InSite.Model.Promotion"/> to add to the <see cref="P:InSite.Model.CustomerOrder.Promotions"/>.</param>
        </member>
        <member name="M:InSite.Model.Interfaces.ICustomerOrderState.HasPromotion(InSite.Model.Promotion)">
            <summary>
            Method contract to determine if the <see cref="P:InSite.Model.Interfaces.ICustomerOrderState.CustomerOrder"/> has the provided <see cref="T:InSite.Model.Promotion"/> applied to it.
            </summary>
            <param name="promotion">The <see cref="T:InSite.Model.Promotion"/> to evalute whether the <see cref="P:InSite.Model.Interfaces.ICustomerOrderState.CustomerOrder"/> allready contains this 
            provided <see cref="T:InSite.Model.Promotion"/>.</param>
            <returns>if the <see cref="P:InSite.Model.Interfaces.ICustomerOrderState.CustomerOrder"/> allready has this <see cref="T:InSite.Model.Promotion"/>.</returns>
        </member>
        <member name="M:InSite.Model.Interfaces.ICustomerOrderState.HasProduct(InSite.Model.Product)">
            <summary>
            Method contract to determine if the <see cref="P:InSite.Model.Interfaces.ICustomerOrderState.CustomerOrder"/> allready has this <see cref="T:InSite.Model.Product"/> in an <see cref="T:InSite.Model.OrderLine"/>.
            </summary>
            <param name="product"><see cref="T:InSite.Model.Product"/> to see if the <see cref="P:InSite.Model.Interfaces.ICustomerOrderState.CustomerOrder"/> allready has this <see cref="T:InSite.Model.Product"/> on
            an <see cref="T:InSite.Model.OrderLine"/>.</param>
            <returns>whether the <see cref="P:InSite.Model.Interfaces.ICustomerOrderState.CustomerOrder"/> has an <see cref="T:InSite.Model.OrderLine"/> with this supplied <see cref="T:InSite.Model.Product"/>.</returns>
        </member>
        <member name="M:InSite.Model.Interfaces.ICustomerOrderState.GetOrderLine(System.String)">
            <summary>
            Method contract to return an <see cref="T:InSite.Model.OrderLine"/> by it's <see cref="P:InSite.Model.Product.Name"/>.
            </summary>
            <param name="productName">to find an <see cref="T:InSite.Model.OrderLine"/> by.</param>
            <returns><see cref="T:InSite.Model.OrderLine"/> if found, else it should return null.</returns>
        </member>
        <member name="M:InSite.Model.Interfaces.ICustomerOrderState.ProcessShippingRestrictions">
            <summary>
            Method contract to Process Shipping Restrictions on a <see cref="P:InSite.Model.Interfaces.ICustomerOrderState.CustomerOrder"/>.
            </summary>
        </member>
        <member name="M:InSite.Model.Interfaces.ICustomerOrderState.SetCustomer(InSite.Model.Customer)">
            <summary>
            Method Contract that acts as an event when setting the <see cref="P:InSite.Model.CustomerOrder.Customer"/>.
            </summary>
            <param name="value"><see cref="T:InSite.Model.Customer"/> to set values for.</param>
        </member>
        <member name="M:InSite.Model.Interfaces.ICustomerOrderState.SetShipToCustomer(InSite.Model.Customer)">
            <summary>
            Method Contract that acts as an event when setting the <see cref="P:InSite.Model.CustomerOrder.ShipTo"/>.
            </summary>
            <param name="value"><see cref="T:InSite.Model.Customer"/> to set values for.</param>
        </member>
        <member name="M:InSite.Model.Interfaces.ICustomerOrderState.GetLocalTaxableTotal">
            <summary>
            Method contract to return the local taxable total for the <see cref="P:InSite.Model.Interfaces.ICustomerOrderState.CustomerOrder"/>.
            </summary>
            <returns>local taxable total.</returns>
        </member>
        <member name="M:InSite.Model.Interfaces.ICustomerOrderState.GetStateTaxableTotal">
            <summary>
            Method contract to return the State taxable total for the <see cref="P:InSite.Model.Interfaces.ICustomerOrderState.CustomerOrder"/>.
            </summary>
            <returns>state taxable total.</returns>
        </member>
        <member name="M:InSite.Model.Interfaces.ICustomerOrderState.GetOrderFreightableTotal">
            <summary>
            Method contract to return the shippable amount total for the <see cref="P:InSite.Model.Interfaces.ICustomerOrderState.CustomerOrder"/>.
            </summary>
        </member>
        <member name="M:InSite.Model.Interfaces.ICustomerOrderState.GetOrderFreightableQuantity">
            <summary>
            Method contract to return the amount of the freightable items for the <see cref="P:InSite.Model.Interfaces.ICustomerOrderState.CustomerOrder"/>.
            </summary>
            <returns>the amount of freightable items for the <see cref="P:InSite.Model.Interfaces.ICustomerOrderState.CustomerOrder"/>.</returns>
        </member>
        <member name="M:InSite.Model.Interfaces.ICustomerOrderState.GetProductOverriddenFreightTotal">
            <summary>
            Method contract the returns the amount of the Product overridden freight for the <see cref="P:InSite.Model.Interfaces.ICustomerOrderState.CustomerOrder"/>.
            </summary>
            <returns>the overridden freight total for the <see cref="P:InSite.Model.Interfaces.ICustomerOrderState.CustomerOrder"/>.</returns>
        </member>
        <member name="M:InSite.Model.Interfaces.ICustomerOrderState.GetOrderTotal">
            <summary>
            Method contract to return the OrderTotal for the <see cref="P:InSite.Model.Interfaces.ICustomerOrderState.CustomerOrder"/>.
            </summary>
            <returns>the ordertotal for the <see cref="P:InSite.Model.Interfaces.ICustomerOrderState.CustomerOrder"/>.</returns>
        </member>
        <member name="M:InSite.Model.Interfaces.ICustomerOrderState.GetPercentOffShipping">
            <summary>
            Method contract to return the Total of PercentOffShipping Promotions for the <see cref="P:InSite.Model.Interfaces.ICustomerOrderState.CustomerOrder"/>.
            </summary>
            <returns>the percent off of shipping for the <see cref="P:InSite.Model.Interfaces.ICustomerOrderState.CustomerOrder"/>.</returns>
        </member>
        <member name="M:InSite.Model.Interfaces.ICustomerOrderState.GetShippingAndHandling">
            <summary>
            Method contract to return the Shipping and Handling charges for a <see cref="P:InSite.Model.Interfaces.ICustomerOrderState.CustomerOrder"/>.
            </summary>
            <remarks>the shipping and handling charges for a <see cref="P:InSite.Model.Interfaces.ICustomerOrderState.CustomerOrder"/>.</remarks>
        </member>
        <member name="M:InSite.Model.Interfaces.ICustomerOrderState.GetDollarOffOrder">
            <summary>
            Method contract to return the total of DollarOffOrder Promotions for the <see cref="P:InSite.Model.Interfaces.ICustomerOrderState.CustomerOrder"/>.
            </summary>
            <returns>the amount of total dollars of DollarOffOrder <see cref="T:InSite.Model.Promotion"/>s for the <see cref="P:InSite.Model.Interfaces.ICustomerOrderState.CustomerOrder"/>.</returns>
        </member>
        <member name="M:InSite.Model.Interfaces.ICustomerOrderState.GetPercentOffOrder">
            <summary>
            Method contract to return the total amount of PercentOffOrder <see cref="T:InSite.Model.Promotion"/>s for the <see cref="P:InSite.Model.Interfaces.ICustomerOrderState.CustomerOrder"/>.
            </summary>
            <returns>the total amount of totals of PercentOffPromotions <see cref="T:InSite.Model.Promotion"/>s for the <see cref="P:InSite.Model.Interfaces.ICustomerOrderState.CustomerOrder"/>.</returns>
        </member>
        <member name="M:InSite.Model.Interfaces.ICustomerOrderState.GetDollarOffShipping">
            <summary>
            Method contract to return the total of DollarOffShipping <see cref="T:InSite.Model.Promotion"/>s for the <see cref="P:InSite.Model.Interfaces.ICustomerOrderState.CustomerOrder"/>.
            </summary>
            <returns>the total of DollarsOffShipping <see cref="T:InSite.Model.Promotion"/>s for the <see cref="P:InSite.Model.Interfaces.ICustomerOrderState.CustomerOrder"/>.</returns>
        </member>
        <member name="M:InSite.Model.Interfaces.ICustomerOrderState.GetOrderSubTotal">
            <summary>
            Mtehod contract to return the OrderSubTotal for the <see cref="P:InSite.Model.Interfaces.ICustomerOrderState.CustomerOrder"/>.
            </summary>
            <returns>the subtotal for the <see cref="P:InSite.Model.Interfaces.ICustomerOrderState.CustomerOrder"/>.</returns>
        </member>
        <member name="M:InSite.Model.Interfaces.ICustomerOrderState.GetPromotionTotal">
            <summary>
            Method contract to return the <see cref="T:InSite.Model.Promotion"/>s amount for the <see cref="P:InSite.Model.Interfaces.ICustomerOrderState.CustomerOrder"/>.
            </summary>
            <returns>the <see cref="T:InSite.Model.Promotion"/> total for the <see cref="P:InSite.Model.Interfaces.ICustomerOrderState.CustomerOrder"/>.</returns>
        </member>
        <member name="M:InSite.Model.Interfaces.ICustomerOrderState.GetPromotionProductDiscountTotal">
            <summary>
            Method contract to return the total of <see cref="T:InSite.Model.Product"/> <see cref="T:InSite.Model.Promotion"/>s for the <see cref="P:InSite.Model.Interfaces.ICustomerOrderState.CustomerOrder"/>.
            </summary>
            <returns>the <see cref="T:InSite.Model.Product"/> <see cref="T:InSite.Model.Promotion"/> total for the <see cref="P:InSite.Model.Interfaces.ICustomerOrderState.CustomerOrder"/>.</returns>
        </member>
        <member name="M:InSite.Model.Interfaces.ICustomerOrderState.GetPromotionOrderDiscountTotal">
            <summary>
            Method contract to return the total of <see cref="P:InSite.Model.Interfaces.ICustomerOrderState.CustomerOrder"/> <see cref="T:InSite.Model.Promotion"/>s for the <see cref="P:InSite.Model.Interfaces.ICustomerOrderState.CustomerOrder"/>.
            This represents basically <see cref="P:InSite.Model.Interfaces.ICustomerOrderState.CustomerOrder"/> header level <see cref="T:InSite.Model.Promotion"/>s.
            </summary>
            <returns>the <see cref="T:InSite.Model.Promotion"/> <see cref="P:InSite.Model.Interfaces.ICustomerOrderState.CustomerOrder"/> discounts.</returns>
        </member>
        <member name="M:InSite.Model.Interfaces.ICustomerOrderState.GetOrderSubTotalWithOutProductDiscounts">
            <summary>
            Method contract to return the OrderSubTotal excluding <see cref="T:InSite.Model.Product"/> <see cref="T:InSite.Model.Promotion"/>s for the CustomerOrder
            <see cref="P:InSite.Model.Interfaces.ICustomerOrderState.CustomerOrder"/>.
            </summary>
            <returns>the OrderSubTotal excluding <see cref="T:InSite.Model.Product"/> <see cref="T:InSite.Model.Promotion"/>s for the CustomerOrder
            <see cref="P:InSite.Model.Interfaces.ICustomerOrderState.CustomerOrder"/>.</returns>
        </member>
        <member name="M:InSite.Model.Interfaces.ICustomerOrderState.GetPromotionShippingDiscountTotal(System.Decimal)">
            <summary>
            Method contract to return the total of Shipping <see cref="T:InSite.Model.Promotion"/>s for the <see cref="P:InSite.Model.Interfaces.ICustomerOrderState.CustomerOrder"/>.
            </summary>
            <remarks>the total of Shipping <see cref="T:InSite.Model.Promotion"/>s for the <see cref="P:InSite.Model.Interfaces.ICustomerOrderState.CustomerOrder"/>.</remarks>
        </member>
        <member name="M:InSite.Model.Interfaces.ICustomerOrderState.GetTotalWeight">
            <summary>
            Method contract to return the total shipping weight for the <see cref="P:InSite.Model.Interfaces.ICustomerOrderState.CustomerOrder"/>.
            </summary>
            <returns>the total shipping weight for the <see cref="P:InSite.Model.Interfaces.ICustomerOrderState.CustomerOrder"/>.</returns>
        </member>
        <member name="M:InSite.Model.Interfaces.ICustomerOrderState.GetOrderTotalDue">
            <summary>
            Method contract to return the Order Total Due for the <see cref="P:InSite.Model.Interfaces.ICustomerOrderState.CustomerOrder"/>.
            </summary>
            <returns>the Order Total Due for the <see cref="P:InSite.Model.Interfaces.ICustomerOrderState.CustomerOrder"/>.</returns>
        </member>
        <member name="M:InSite.Model.Interfaces.ICustomerOrderState.GetTotalItemsOrdered">
            <summary>
            Method contract to return the total of Quantities of the OrderLines for the <see cref="P:InSite.Model.Interfaces.ICustomerOrderState.CustomerOrder"/>.
            </summary>
            <returns>the total number of items ordered on the <see cref="P:InSite.Model.Interfaces.ICustomerOrderState.CustomerOrder"/>.</returns>
        </member>
        <member name="M:InSite.Model.Interfaces.ICustomerOrderState.GetOrderGrandTotal">
            <summary>
            Method contract to return the order grand total for the <see cref="P:InSite.Model.Interfaces.ICustomerOrderState.CustomerOrder"/>.
            </summary>
            <returns>the order grand total for the <see cref="P:InSite.Model.Interfaces.ICustomerOrderState.CustomerOrder"/>.</returns>
        </member>
        <member name="M:InSite.Model.Interfaces.ICustomerOrderState.GetLocalShippingAndHandlingTax">
            <summary>
            Method contract to return the Local Tax on shipping and handling for the <see cref="P:InSite.Model.Interfaces.ICustomerOrderState.CustomerOrder"/>.
            </summary>
            <returns>the Local Tax on shipping and handling for the <see cref="P:InSite.Model.Interfaces.ICustomerOrderState.CustomerOrder"/>.</returns>
        </member>
        <member name="M:InSite.Model.Interfaces.ICustomerOrderState.GetStateShippingAndHandlingTax">
            <summary>
            Method contract to return the State Tax on shipping and handling for the <see cref="P:InSite.Model.Interfaces.ICustomerOrderState.CustomerOrder"/>.
            </summary>
            <returns>the State Tax on shipping and handling for the <see cref="P:InSite.Model.Interfaces.ICustomerOrderState.CustomerOrder"/>.</returns>
        </member>
        <member name="M:InSite.Model.Interfaces.ICustomerOrderState.GetTotalShippingAndHandlingTax">
            <summary>
            Method contract to return the total tax on shipping and handling for the <see cref="P:InSite.Model.Interfaces.ICustomerOrderState.CustomerOrder"/>.
            </summary>
            <returns>the total tax on shipping and handling for the <see cref="P:InSite.Model.Interfaces.ICustomerOrderState.CustomerOrder"/>.</returns>
        </member>
        <member name="M:InSite.Model.Interfaces.ICustomerOrderState.GetTotalSalesTax">
            <summary>
            Method contract to return the total sales tax for the <see cref="P:InSite.Model.Interfaces.ICustomerOrderState.CustomerOrder"/>.
            </summary>
            <returns>the total tax for the <see cref="P:InSite.Model.Interfaces.ICustomerOrderState.CustomerOrder"/>.</returns>
        </member>
        <member name="M:InSite.Model.Interfaces.ICustomerOrderState.GetTotalTax">
            <summary>
            Method contract to return the total tax for the <see cref="P:InSite.Model.Interfaces.ICustomerOrderState.CustomerOrder"/>.
            </summary>
        </member>
        <member name="M:InSite.Model.Interfaces.ICustomerOrderState.GetLocalTaxRate">
            <summary>
            Method contract to return the <see cref="T:InSite.Model.LocalTaxRate"/> for the <see cref="P:InSite.Model.Interfaces.ICustomerOrderState.CustomerOrder"/>.
            </summary>
            <returns>the <see cref="T:InSite.Model.LocalTaxRate"/> for the <see cref="P:InSite.Model.Interfaces.ICustomerOrderState.CustomerOrder"/> or null.</returns>
        </member>
        <member name="M:InSite.Model.Interfaces.ICustomerOrderState.GetStateTaxRate">
            <summary>
            Method contract to return the <see cref="T:InSite.Model.State"/> for State taxes.
            </summary>
            <returns><see cref="T:InSite.Model.State"/>.</returns>
        </member>
        <member name="M:InSite.Model.Interfaces.ICustomerOrderState.GetCanProcessOrder">
            <summary>
            Method contract to determine if you can process an <see cref="P:InSite.Model.Interfaces.ICustomerOrderState.CustomerOrder"/>.
            </summary>
            <returns>if a <see cref="P:InSite.Model.Interfaces.ICustomerOrderState.CustomerOrder"/> can be processed.</returns>
        </member>
        <member name="M:InSite.Model.Interfaces.ICustomerOrderState.GetIsOrderOverCreditLimit">
            <summary>
            Method contract to return if the <see cref="P:InSite.Model.Interfaces.ICustomerOrderState.CustomerOrder"/> is over the credit limit.
            </summary>
            <returns>if the <see cref="P:InSite.Model.Interfaces.ICustomerOrderState.CustomerOrder"/> is over the credit limit.</returns>
        </member>
        <member name="M:InSite.Model.Interfaces.ICustomerOrderState.GetAvailableCreditLimit">
            <summary>
            Method contract to return the available credit limit for the <see cref="P:InSite.Model.Interfaces.ICustomerOrderState.CustomerOrder"/>.
            </summary>
            <returns>the available credit limit.</returns>
        </member>
        <member name="M:InSite.Model.Interfaces.ICustomerOrderState.GetShipping(System.Decimal)">
            <summary>
            Method contract to return the Shipping charges for the <see cref="P:InSite.Model.Interfaces.ICustomerOrderState.CustomerOrder"/>.
            </summary>
            <returns>the Shipping charges for the <see cref="P:InSite.Model.Interfaces.ICustomerOrderState.CustomerOrder"/>.</returns>
        </member>
        <member name="M:InSite.Model.Interfaces.ICustomerOrderState.SetShipping">
            <summary>
            Method contract to set the Shipping for the CustomerOrder.
            </summary>
        </member>
        <member name="M:InSite.Model.Interfaces.ICustomerOrderState.GetCustomerOrderDataSet">
            <summary>
            Method contract to return a Dataset that represents the <see cref="P:InSite.Model.Interfaces.ICustomerOrderState.CustomerOrder"/>.
            </summary>
            <returns>a Dataset that represents the <see cref="P:InSite.Model.Interfaces.ICustomerOrderState.CustomerOrder"/>.</returns>
        </member>
        <member name="M:InSite.Model.Interfaces.ICustomerOrderState.GetAmountPaid">
            <summary>Method contract to return the total amount paid with <see cref="T:InSite.Model.CreditCardTransaction"/>s.</summary>
            <returns>the total amount paid with <see cref="T:InSite.Model.CreditCardTransaction"/>s.</returns>
        </member>
        <member name="M:InSite.Model.Interfaces.ICustomerOrderState.GetIsGiftCardOnlyOrder">
            <summary>
            Method contract to return if the <see cref="P:InSite.Model.Interfaces.ICustomerOrderState.CustomerOrder"/> is only gift cards.
            </summary>
            <returns>if the <see cref="P:InSite.Model.Interfaces.ICustomerOrderState.CustomerOrder"/> is only gift cards.</returns>
        </member>
        <member name="M:InSite.Model.Interfaces.ICustomerOrderState.GetIsSubscriptionOnlyOrder">
            <summary>
            Method contract to return if the <see cref="P:InSite.Model.Interfaces.ICustomerOrderState.CustomerOrder"/> is a subscription only order.
            </summary>
            <returns>if the <see cref="P:InSite.Model.Interfaces.ICustomerOrderState.CustomerOrder"/> is a subscription only order.</returns>
        </member>
        <member name="M:InSite.Model.Interfaces.ICustomerOrderState.Copy">
            <summary>Method contract to returns a new <see cref="P:InSite.Model.Interfaces.ICustomerOrderState.CustomerOrder"/> with values copied from this CustomerOrder</summary>
            <returns>a new <see cref="P:InSite.Model.Interfaces.ICustomerOrderState.CustomerOrder"/> with values copied from this CustomerOrder</returns>
        </member>
        <member name="M:InSite.Model.Interfaces.ICustomerOrderState.SetTaxCode1(System.String,System.String)">
            <summary>
            Method contract to set <see cref="P:InSite.Model.CustomerOrder.TaxCode1"/>. THis basically acts as an event that is fired when setting <see cref="P:InSite.Model.CustomerOrder.TaxCode1"/>.
            </summary>
            <param name="newTaxCode">new taxcode being set.</param>
            <param name="oldTaxCode">previous tax code.</param>
        </member>
        <member name="M:InSite.Model.Interfaces.ICustomerOrderState.SetTaxCode2(System.String,System.String)">
            <summary>
            Method contract to set <see cref="P:InSite.Model.CustomerOrder.TaxCode2"/>. This basically acts as an event that is fired when setting <see cref="P:InSite.Model.CustomerOrder.TaxCode2"/>.
            </summary>
            <param name="newTaxCode">new taxcode being set.</param>
            <param name="oldTaxCode">previous tax code.</param>
        </member>
        <member name="M:InSite.Model.Interfaces.ICustomerOrderState.GetGiftCardTotal">
            <summary>
            Method contract to return the total amount of GiftCard balances that will be applied of the <see cref="P:InSite.Model.Interfaces.ICustomerOrderState.CustomerOrder"/>.
            </summary>
            <returns>the total amount of gift card balances that will be applied to the <see cref="P:InSite.Model.Interfaces.ICustomerOrderState.CustomerOrder"/>.</returns>
        </member>
        <member name="M:InSite.Model.Interfaces.ICustomerOrderState.GetPassesShippingRestrictions">
            <summary>
            Method contract to return if the <see cref="P:InSite.Model.Interfaces.ICustomerOrderState.CustomerOrder"/> passes shipping restrictions.
            </summary>
            <returns>if the <see cref="P:InSite.Model.Interfaces.ICustomerOrderState.CustomerOrder"/> passes shipping restrictions.</returns>
        </member>
        <member name="P:InSite.Model.Interfaces.ICustomerOrderState.CustomerOrder">
            <summary>
            The <see cref="P:InSite.Model.Interfaces.ICustomerOrderState.CustomerOrder"/> to handle the state of
            </summary>
        </member>
        <member name="P:InSite.Model.Interfaces.ICustomerOrderState.AllowCurrencyConversion">
            <summary>
            Method contract to call determine if an order can be repriced based on an alternate currency.
            </summary>
            <returns></returns>
        </member>
        <member name="T:InSite.Model.Interfaces.ICustomerOrderStateFactory">
            <summary>
            Public interface to create an <see cref="T:InSite.Model.Interfaces.ICustomerOrderStateFactory"/>.  The implemented classes responsibilty is to implement
            a factory that can return <see cref="T:InSite.Model.Interfaces.ICustomerOrderState"/>'s by <see cref="T:InSite.Model.CustomerOrder"/>.
            </summary>
        </member>
        <member name="M:InSite.Model.Interfaces.ICustomerOrderStateFactory.GetCustomerOrderState(InSite.Model.CustomerOrder)">
            <summary>Creates a new instances of <see cref="T:InSite.Model.Interfaces.ICustomerOrderState"/> for the <see cref="T:InSite.Model.CustomerOrder"/>.</summary>
            <param name="customerOrder">The <see cref="T:InSite.Model.CustomerOrder"/> to get a <see cref="T:InSite.Model.Interfaces.ICustomerOrderState"/> for.</param>
            <returns>A new instance of an object that implements <see cref="T:InSite.Model.Interfaces.ICustomerOrderState"/></returns>
        </member>
        <member name="T:InSite.Model.Interfaces.IImportExportService`1">
            <summary>Implement this interface to customize the Import/Export logic for a BusinessObject</summary>
            <typeparam name="T">The BusinessObject type to customize the Import/Export for</typeparam>
        </member>
        <member name="M:InSite.Model.Interfaces.IImportExportService`1.ImportFile(System.String,System.String)">
            <summary>Import File</summary>
            <param name="pathName">Path to File</param>
            <param name="fileName">Name of File</param>
            <returns>List of imported Objects</returns>
        </member>
        <member name="M:InSite.Model.Interfaces.IImportExportService`1.ExportFile(System.String,InSite.Model.SOAFilterObject,System.IO.Stream,System.String)">
            <summary>Export to File</summary>
            <param name="objectName">Name of Objects to Export</param>
            <param name="filter">How to filter the Objects to Export</param>
            <param name="outStream">Stream to write the Export to</param>
            <param name="childPropertyName">If Exporting Children of Object, name of Child Property</param>
        </member>
        <member name="T:InSite.Model.Interfaces.IInventoryProvider">
            <summary>
            Implement this interface to configure your own inventory managment provider. The interface implementation for IInventoryProvider is 
            loaded via service location in the <see cref="T:InSite.Model.Product"/> class and is made visible through its GetQtyOnHand and DecrementQtyOnHand methods.    
            </summary>
        </member>
        <member name="M:InSite.Model.Interfaces.IInventoryProvider.GetQtyOnHand(InSite.Model.Product,InSite.Model.Warehouse)">
            <summary>
            Get the inventory quantity for the <see cref="T:InSite.Model.Product"/> and the specified <see cref="T:InSite.Model.Warehouse"/>.
            </summary>
            <param name="product">The <see cref="T:InSite.Model.Product"/> you are requesting inventory for.</param>
            <param name="warehouse">The <see cref="T:InSite.Model.Warehouse"/> you are requesting inventory from.</param>
            <returns>The inventory quantity for the <see cref="T:InSite.Model.Product"/> and the specified <see cref="T:InSite.Model.Warehouse"/>.</returns>
        </member>
        <member name="M:InSite.Model.Interfaces.IInventoryProvider.DecrementQtyOnHand(System.Decimal,InSite.Model.Product,InSite.Model.Warehouse)">
            <summary>
            Decrement the inventory quantity for the <see cref="T:InSite.Model.Product"/> from the specified <see cref="T:InSite.Model.Warehouse"/>.
            </summary>
            <param name="qtyToDecrement">The inventory quantity to decrement.</param>
            <param name="product">The <see cref="T:InSite.Model.Product"/> you are decrementing inventory for.</param>
            <param name="warehouse">The <see cref="T:InSite.Model.Warehouse"/> you are decrementing inventory from.</param>
        </member>
        <member name="T:InSite.Model.Interfaces.IPricingService">
            <summary>Implement this interface to create a plugin to customize how prices are calculated for <see cref="T:InSite.Model.Product"/>s and <see cref="T:InSite.Model.OrderLine"/>s.
            IPriceCalculator will be used if the Application Setting UseBasicPricing is set to False.</summary>
        </member>
        <member name="M:InSite.Model.Interfaces.IPricingService.CalculatePrice(InSite.Model.Services.PricingService.PricingServiceParameter)">
            <summary>
            Calculates the Price for the specified <see cref="T:InSite.Model.Services.PricingService.PricingServiceParameter"/>
            </summary>
            <param name="pricingServiceParameter">The <see cref="T:InSite.Model.Services.PricingService.PricingServiceParameter"/> holding information for how to calculate the price</param>
            <returns><see cref="T:InSite.Model.Services.PricingService.PricingServiceResult"/> with the calculated prices</returns>
        </member>
        <member name="T:InSite.Model.Interfaces.IPricingServiceFactory">
            <summary>
            Public interface to create an <see cref="T:InSite.Model.Interfaces.IPricingServiceFactory"/>.  The implemented classes responsibilty is to implement
            a factory that can return <see cref="T:InSite.Model.Interfaces.IPricingService"/>'s for the <see cref="T:InSite.Model.Interfaces.IContextProvider"/> provided.
            </summary>
        </member>
        <member name="M:InSite.Model.Interfaces.IPricingServiceFactory.GetPricingService(InSite.Model.Interfaces.IContextProvider,InSite.Model.CustomerOrder)">
            <summary>Creates a new instance of <see cref="T:InSite.Model.Interfaces.IPricingService"/> for the supplied <see cref="T:InSite.Model.Interfaces.IContextProvider"/>.</summary>
            <param name="contextProvider">The <see cref="T:InSite.Model.Interfaces.IContextProvider"/> that represents the current context of the system.</param>
            <param name="customerOrder">Optional <see cref="T:InSite.Model.CustomerOrder"/> for use after the order has been submitted, during integration.</param>
            <returns>A new instance of an object that implements <see cref="T:InSite.Model.Interfaces.IPricingService"/></returns>
        </member>
        <member name="T:InSite.Model.Interfaces.IProductBatchLoader">
            <summary>
            An extensibility point that provides a list of all the products being loaded on pages
            </summary>
        </member>
        <member name="M:InSite.Model.Interfaces.IProductBatchLoader.BatchLoad(System.Collections.Generic.List{System.Guid})">
            <summary>
            The list of products that will be needed on this page
            </summary>
            <param name="productIds"></param>
        </member>
        <member name="T:InSite.Model.Interfaces.IPunchOutValidatable">
            <summary>
            Interface that defines values to validate against.
            </summary>
        </member>
        <member name="P:InSite.Model.Interfaces.IPunchOutValidatable.FromIdentity">
            <summary>
            Get FromIdentity, defines the buying organization.
            </summary>
        </member>
        <member name="P:InSite.Model.Interfaces.IPunchOutValidatable.SenderIdentity">
            <summary>
            Get SenderIdentity, defines the sending organization, for example SupplierSolutions or Ariba.
            </summary>
        </member>
        <member name="P:InSite.Model.Interfaces.IPunchOutValidatable.SecretWord">
            <summary>
            Get SecretWord, defines the password for the Sender
            </summary>
        </member>
        <member name="T:InSite.Model.Interfaces.Repositories.IApplicationSettingRepository">
            <summary>
            The abstraction layer for ApplicationSetting persistence
            </summary>
        </member>
        <member name="M:InSite.Model.Interfaces.Repositories.IApplicationSettingRepository.GetOrCreateByName(System.String,System.String,System.String)">
            <summary>
            Get Or Creates an <see cref="T:InSite.Model.ApplicationSetting"/> by name using the provided defaults ignoring any standard defaults if it did not exist
            </summary>
            <param name="name">Name of the <see cref="T:InSite.Model.ApplicationSetting"/></param>
            <param name="defaultValueOverride">Default value to be used if creation is required, this will override any standard defaults</param>
            <param name="defaultDescriptionOverride">Default description to be used if creation is required, this will override any standard defaults</param> 
            <returns>An existing or newly created <see cref="T:InSite.Model.ApplicationSetting"/> with the provided defaults values.</returns>
        </member>
        <member name="M:InSite.Model.Interfaces.Repositories.IApplicationSettingRepository.GetOrCreateByName``1(System.String)">
            <summary>
            Gets or Creates an <see cref="T:InSite.Model.ApplicationSetting"/> by name and returns the property Value as the requested type
            </summary>
            <param name="name">Name of the <see cref="T:InSite.Model.ApplicationSetting"/></param>
            <returns>The parsed value of the matched or created <see cref="T:InSite.Model.ApplicationSetting"/>.Value as the requested type</returns>
            <remarks>
            This will return the defined default value if the stored database value can not be converted to the requested type
            </remarks>
        </member>
        <member name="M:InSite.Model.Interfaces.Repositories.IApplicationSettingRepository.GetOrCreateByName(System.String)">
            <summary>
            Gets or Creates an <see cref="T:InSite.Model.ApplicationSetting"/> by name and returns the property Value
            </summary>
            <param name="name">Name of the <see cref="T:InSite.Model.ApplicationSetting"/></param>
            <returns>The parsed value of the matched or created <see cref="T:InSite.Model.ApplicationSetting"/>.Value</returns>
            <remarks>
            This will return the defined default value if the stored database value can not be converted to the requested type
            </remarks>
        </member>
        <member name="M:InSite.Model.Interfaces.Repositories.IApplicationSettingRepository.GetEncryptedValueByName(System.String,System.String)">
            <summary>
            Retrieves an Encrypted Application Setting, will also convert a current Application Setting to be encrypted if called on it.
            Encrypted Application Settings are stored with an _enc suffix
            </summary>
            <param name="name">Name of Application Setting (with or without the _enc suffix)</param>
            <param name="defaultValue">Default value to be created with if it does not exist</param>
            <returns>Decrypted Value</returns>
        </member>
        <member name="T:InSite.Model.Interfaces.Repositories.IProductRepository">
            <summary>
            The abstraction layer for Product persistence
            </summary>
        </member>
        <member name="M:InSite.Model.Interfaces.Repositories.IProductRepository.GetByName(System.String)">
            <summary>Get a <see cref="T:InSite.Model.Product"/> by Name.</summary>
            <param name="name">The Product Name to search for.</param>
            <returns><see cref="T:InSite.Model.Product"/> or null if not found.</returns>
        </member>
        <member name="M:InSite.Model.Interfaces.Repositories.IProductRepository.GetByERPNumber(System.String)">
            <summary>Get a <see cref="T:InSite.Model.Product"/> by ERPNumber.</summary>
            <param name="erpNumber">Product ERPNumber to search for.</param>
            <returns><see cref="T:InSite.Model.Product"/> or null if not found.</returns>
        </member>
        <member name="T:InSite.Model.Interfaces.Repositories.IWebSiteRepository">
            <summary>
            The abstraction layer for WebSite persistence
            </summary>
        </member>
        <member name="M:InSite.Model.Interfaces.Repositories.IWebSiteRepository.GetByName(System.String)">
            <summary>Gets a WebSite by Name</summary>
            <param name="name">The WebSite Name</param>
            <remarks>Returns null if the WebSite is not found</remarks>
            <returns>WebSite or null if not found</returns>
        </member>
        <member name="M:InSite.Model.Interfaces.Repositories.IWebSiteRepository.GetByDomain(System.String)">
            <summary>
            Gets a WebSite by Domain, if not found throws WebSiteForDomainNotFoundException
            </summary>
            <param name="domainName">Domain Name</param>
            <returns>WebSite or throws WebSiteForDomainNotFoundException</returns>
        </member>
        <member name="M:InSite.Model.Interfaces.Repositories.IWebSiteRepository.GetByMicroSite(System.String)">
            <summary>
            Gets a WebSite by Domain and MicroSite Identifier
            </summary>
            <param name="microSite">microsite url (domain and microsite identifier)</param>
            <returns>WebSite or null if site could not be found</returns>
        </member>
        <member name="P:InSite.Model.Interfaces.Repositories.IWebSiteRepository.MicroSiteToWebSiteIdMap">
            <summary>
            Get Set the current MicroSite mapping
            </summary>
        </member>
        <member name="T:InSite.Model.InvoiceHistory">
            <summary>The InvoiceHistory is where historical invoice information is stored from invoices refreshed from external systems.</summary>
        </member>
        <member name="M:InSite.Model.InvoiceHistory.AddInvoiceHistoryLine(InSite.Model.InvoiceHistoryLine)">
            <summary>Add an <see cref="T:InSite.Model.InvoiceHistoryLine"/> to the <see cref="P:InSite.Model.InvoiceHistory.InvoiceHistoryLines"/> collection. If the collection already contains the value it is silently ignored.</summary>
            <param name="value">The <see cref="T:InSite.Model.InvoiceHistoryLine"/> to be added.</param>
        </member>
        <member name="M:InSite.Model.InvoiceHistory.RemoveInvoiceHistoryLine(InSite.Model.InvoiceHistoryLine)">
            <summary>Remove an <see cref="T:InSite.Model.InvoiceHistoryLine"/> from the <see cref="P:InSite.Model.InvoiceHistory.InvoiceHistoryLines"/> collection. If the collection does not contain the value it is silently ignored.</summary>
            <param name="value">The <see cref="T:InSite.Model.InvoiceHistoryLine"/> to be removed.</param>
        </member>
        <member name="M:InSite.Model.InvoiceHistory.GetCustomProperty(System.String)">
            <summary>
            Retrieve an existing CustomProperty
            </summary>
            <param name="name">Name key of property to retrieve.</param>
            <returns>property or null</returns>
        </member>
        <member name="M:InSite.Model.InvoiceHistory.AddCustomProperty(InSite.Model.CustomProperty)">
            <summary>Add a CustomProperty to the CustomProperties collection</summary>
            <param name="value">The CustomProperty to add</param>
            <remarks>If the collection already contains the value it is silently ignored</remarks>
        </member>
        <member name="M:InSite.Model.InvoiceHistory.RemoveCustomProperty(InSite.Model.CustomProperty)">
            <summary>Remove a CustomeProperty from the  CustomProperties collection</summary>
            <param name="value">The CustomProperty to remove</param>
        </member>
        <member name="M:InSite.Model.InvoiceHistory.GetProperty(System.String,System.String)">
            <summary>Retrieves the value for the property identified by <paramref name="name"/></summary>
            <param name="name">The name of the property to retrieve</param>
            <param name="defaultValue">The value to use if the property does not exist</param>
        </member>
        <member name="M:InSite.Model.InvoiceHistory.SetProperty(System.String,System.String)">
            <summary>Sets the value for the property identified by <paramref name="name"/></summary>
            <param name="name">The name of the property to retrieve</param>
            <param name="value">The value to set</param>
        </member>
        <member name="P:InSite.Model.InvoiceHistory.InvoiceNumber">
            <summary>The InvoiceNumber from the ERP or external system.</summary>
        </member>
        <member name="P:InSite.Model.InvoiceHistory.InvoiceDate">
            <summary>
            The Invoice date.
            </summary>
        </member>
        <member name="P:InSite.Model.InvoiceHistory.DueDate">
            <summary>
            The due date of the Invoice.
            </summary>
        </member>
        <member name="P:InSite.Model.InvoiceHistory.InvoiceType">
            <summary>
            The Invoice Type (for example: Debit Memo, Credit Memo).
            </summary>
        </member>
        <member name="P:InSite.Model.InvoiceHistory.CustomerNumber">
            <summary>
            The CustomerNumber of the Invoice.
            </summary>
        </member>
        <member name="P:InSite.Model.InvoiceHistory.CustomerSequence">
            <summary>
            The CustomerSequence or ShipTo of the Invoice.
            </summary>
        </member>
        <member name="P:InSite.Model.InvoiceHistory.CustomerPO">
            <summary>
            The Customers Purchase Order Number.
            </summary>
        </member>
        <member name="P:InSite.Model.InvoiceHistory.Status">
            <summary>
            The status of the Invoice
            </summary>
        </member>
        <member name="P:InSite.Model.InvoiceHistory.IsOpen">
            <summary>
            Indicates if the Invoice is open
            </summary>
        </member>
        <member name="P:InSite.Model.InvoiceHistory.CurrencyCode">
            <summary>
            The Currency Code of the Invoice.
            </summary>
        </member>
        <member name="P:InSite.Model.InvoiceHistory.Terms">
            <summary>
            The Terms of the Invoice.
            </summary>
        </member>
        <member name="P:InSite.Model.InvoiceHistory.ShipCode">
            <summary>
            The ShipCode of the Invoice.
            </summary>
        </member>
        <member name="P:InSite.Model.InvoiceHistory.Salesperson">
            <summary>
            The Salesperson for the Invoice.
            </summary>
        </member>
        <member name="P:InSite.Model.InvoiceHistory.BTCompanyName">
            <summary>
            The Bill To Company Name at the time the Invoice was created.
            </summary>
        </member>
        <member name="P:InSite.Model.InvoiceHistory.BTAddress1">
            <summary>
            The Bill To Address Line 1 at the time the Invoice was created.
            </summary>
        </member>
        <member name="P:InSite.Model.InvoiceHistory.BTAddress2">
            <summary>
            The Bill To Address Line 2 at the time the Invoice was created.
            </summary>
        </member>
        <member name="P:InSite.Model.InvoiceHistory.BTCity">
            <summary>
            The Bill To City at the time the Invoice was created.
            </summary>
        </member>
        <member name="P:InSite.Model.InvoiceHistory.BTState">
            <summary>
            The Bill To State at the time the Invoice was created.
            </summary>
        </member>
        <member name="P:InSite.Model.InvoiceHistory.BTPostalCode">
            <summary>
            The Bill To Postal Code at the time the Invoice was created.
            </summary>
        </member>
        <member name="P:InSite.Model.InvoiceHistory.BTCountry">
            <summary>
            The Bill To Country at the time the Invoice was created.
            </summary>
        </member>
        <member name="P:InSite.Model.InvoiceHistory.STCompanyName">
            <summary>
            The Ship To Company Name at the time the Invoice was created.
            </summary>
        </member>
        <member name="P:InSite.Model.InvoiceHistory.STAddress1">
            <summary>
            The Ship To Address Line 1 at the time the Invoice was created.
            </summary>
        </member>
        <member name="P:InSite.Model.InvoiceHistory.STAddress2">
            <summary>
            The Ship To Address Line 2 at the time the Invoice was created.
            </summary>
        </member>
        <member name="P:InSite.Model.InvoiceHistory.STCity">
            <summary>
            The Ship To City at the time the Invoice was created.
            </summary>
        </member>
        <member name="P:InSite.Model.InvoiceHistory.STState">
            <summary>
            The Ship To State at the time the Invoice was created.
            </summary>
        </member>
        <member name="P:InSite.Model.InvoiceHistory.STPostalCode">
            <summary>
            The Ship To Postal Code at the time the Invoice was created.
            </summary>
        </member>
        <member name="P:InSite.Model.InvoiceHistory.STCountry">
            <summary>
            The Ship To Country at the time the Invoice was created.
            </summary>
        </member>
        <member name="P:InSite.Model.InvoiceHistory.Notes">
            <summary>
            The Notes of the Invoice.
            </summary>
        </member>
        <member name="P:InSite.Model.InvoiceHistory.ProductTotal">
            <summary>
            The Product Total of the Invoice.
            </summary>
        </member>
        <member name="P:InSite.Model.InvoiceHistory.ProductTotalDisplay">
            <summary>
            Currency and culture formatted <see cref="P:InSite.Model.InvoiceHistory.ProductTotal"/>.
            </summary>
        </member>
        <member name="P:InSite.Model.InvoiceHistory.DiscountAmount">
            <summary>
            The Discount Amount of the Invoice.
            </summary>
        </member>
        <member name="P:InSite.Model.InvoiceHistory.DiscountAmountDisplay">
            <summary>
            Currency and culture formatted <see cref="P:InSite.Model.InvoiceHistory.DiscountAmount"/>.
            </summary>
        </member>
        <member name="P:InSite.Model.InvoiceHistory.ShippingAndHandling">
            <summary>
            The Shipping And Handling of the Invoice.
            </summary>
        </member>
        <member name="P:InSite.Model.InvoiceHistory.ShippingAndHandlingDisplay">
            <summary>
            Currency and culture formatted <see cref="P:InSite.Model.InvoiceHistory.ShippingAndHandling"/>.
            </summary>
        </member>
        <member name="P:InSite.Model.InvoiceHistory.OtherCharges">
            <summary>
            Any Other Charges of the Invoice.
            </summary>
        </member>
        <member name="P:InSite.Model.InvoiceHistory.OtherChargesDisplay">
            <summary>
            Currency and culture formatted <see cref="P:InSite.Model.InvoiceHistory.OtherCharges"/>.
            </summary>
        </member>
        <member name="P:InSite.Model.InvoiceHistory.TaxAmount">
            <summary>
            The Tax Amount of the Invoice.
            </summary>
        </member>
        <member name="P:InSite.Model.InvoiceHistory.TaxAmountDisplay">
            <summary>
            Currency and culture formatted <see cref="P:InSite.Model.InvoiceHistory.TaxAmount"/>.
            </summary>
        </member>
        <member name="P:InSite.Model.InvoiceHistory.InvoiceTotal">
            <summary>
            The Invoice Total of the Invoice.
            </summary>
        </member>
        <member name="P:InSite.Model.InvoiceHistory.InvoiceTotalDisplay">
            <summary>
            Currency and culture formatted <see cref="P:InSite.Model.InvoiceHistory.InvoiceTotal"/>.
            </summary>
        </member>
        <member name="P:InSite.Model.InvoiceHistory.CurrentBalance">
            <summary>
            The outstanding balance of the Invoice
            </summary>
        </member>
        <member name="P:InSite.Model.InvoiceHistory.CurrentBalanceDisplay">
            <summary>
            Currency and culture formatted <see cref="P:InSite.Model.InvoiceHistory.CurrentBalance"/>.
            </summary>
        </member>
        <member name="P:InSite.Model.InvoiceHistory.InvoiceHistoryLines">
            <summary>
            The Invoice Lines of the Invoice.
            </summary>
        </member>
        <member name="P:InSite.Model.InvoiceHistory.CustomProperties">
            <summary>
            Generic custom properties storage area
            </summary>
        </member>
        <member name="T:InSite.Model.InvoiceHistoryLine">
            <summary>The InvoiceHistoryLine is where historical invoice line information is stored from invoices refreshed from external systems.</summary>
        </member>
        <member name="M:InSite.Model.InvoiceHistoryLine.GetCustomProperty(System.String)">
            <summary>
            Retrieve an existing CustomProperty
            </summary>
            <param name="name">Name key of property to retrieve.</param>
            <returns>property or null</returns>
        </member>
        <member name="M:InSite.Model.InvoiceHistoryLine.AddCustomProperty(InSite.Model.CustomProperty)">
            <summary>Add a CustomProperty to the CustomProperties collection</summary>
            <param name="value">The CustomProperty to add</param>
            <remarks>If the collection already contains the value it is silently ignored</remarks>
        </member>
        <member name="M:InSite.Model.InvoiceHistoryLine.RemoveCustomProperty(InSite.Model.CustomProperty)">
            <summary>Remove a CustomeProperty from the  CustomProperties collection</summary>
            <param name="value">The CustomProperty to remove</param>
        </member>
        <member name="M:InSite.Model.InvoiceHistoryLine.GetProperty(System.String,System.String)">
            <summary>Retrieves the value for the property identified by <paramref name="name"/></summary>
            <param name="name">The name of the property to retrieve</param>
            <param name="defaultValue">The value to use if the property does not exist</param>
        </member>
        <member name="M:InSite.Model.InvoiceHistoryLine.SetProperty(System.String,System.String)">
            <summary>Sets the value for the property identified by <paramref name="name"/></summary>
            <param name="name">The name of the property to retrieve</param>
            <param name="value">The value to set</param>
        </member>
        <member name="P:InSite.Model.InvoiceHistoryLine.InvoiceHistory">
            <summary>
            The parent <see cref="P:InSite.Model.InvoiceHistoryLine.InvoiceHistory"/> of this Invoice Line.
            </summary>
        </member>
        <member name="P:InSite.Model.InvoiceHistoryLine.LineType">
            <summary>
            The type of this Invoice Line (for example: Product, Freight, Miscellaneous Charge).
            </summary>
        </member>
        <member name="P:InSite.Model.InvoiceHistoryLine.ERPOrderNumber">
            <summary>
            The ERP OrderNumber of the Order for this Invoice Line.
            </summary>
        </member>
        <member name="P:InSite.Model.InvoiceHistoryLine.LineNumber">
            <summary>
            The Line Number of the Invoice Line.
            </summary>
        </member>
        <member name="P:InSite.Model.InvoiceHistoryLine.ReleaseNumber">
            <summary>
            The Release Number of the Invoice Line normally for blanket Orders.
            </summary>
        </member>
        <member name="P:InSite.Model.InvoiceHistoryLine.ProductERPNumber">
            <summary>
            The ERP Number of the Product of the Invoice Line.
            </summary>
        </member>
        <member name="P:InSite.Model.InvoiceHistoryLine.CustomerProductNumber">
            <summary>
            The Customer Product Number of the Product of the Invoice Line.
            </summary>
        </member>
        <member name="P:InSite.Model.InvoiceHistoryLine.LinePOReference">
            <summary>
            The Purchase Order Line Reference of the Invoice Line.
            </summary>
        </member>
        <member name="P:InSite.Model.InvoiceHistoryLine.Description">
            <summary>
            The Description of the Invoice Line.
            </summary>
        </member>
        <member name="P:InSite.Model.InvoiceHistoryLine.Warehouse">
            <summary>
            The Warehouse of the Invoice Line.
            </summary>
        </member>
        <member name="P:InSite.Model.InvoiceHistoryLine.Notes">
            <summary>
            The Notes of the Invoice Line.
            </summary>
        </member>
        <member name="P:InSite.Model.InvoiceHistoryLine.QtyInvoiced">
            <summary>
            The Quantity Invoiced of the Invoice Line.
            </summary>
        </member>
        <member name="P:InSite.Model.InvoiceHistoryLine.UnitOfMeasure">
            <summary>
            The Unit Of Measure of the Invoice Line.
            </summary>
        </member>
        <member name="P:InSite.Model.InvoiceHistoryLine.UnitPrice">
            <summary>
            The Unit Price of the Invoice Line.
            </summary>
        </member>
        <member name="P:InSite.Model.InvoiceHistoryLine.UnitPriceDisplay">
            <summary>
            Currency and culture formatted <see cref="P:InSite.Model.InvoiceHistoryLine.UnitPrice"/>.
            </summary>
        </member>
        <member name="P:InSite.Model.InvoiceHistoryLine.DiscountPercent">
            <summary>
            The Discount Percent of the Invoice Line.
            </summary>
        </member>
        <member name="P:InSite.Model.InvoiceHistoryLine.DiscountAmount">
            <summary>
            The Discount Amount of the Invoice Line.
            </summary>
        </member>
        <member name="P:InSite.Model.InvoiceHistoryLine.DiscountAmountDisplay">
            <summary>
            Currency and culture formatted <see cref="P:InSite.Model.InvoiceHistoryLine.DiscountAmount"/>.
            </summary>
        </member>
        <member name="P:InSite.Model.InvoiceHistoryLine.LineTotal">
            <summary>
            The Line Total of the Invoice Line.
            </summary>
        </member>
        <member name="P:InSite.Model.InvoiceHistoryLine.LineTotalDisplay">
            <summary>
            Currency and culture formatted <see cref="P:InSite.Model.InvoiceHistoryLine.LineTotal"/>.
            </summary>
        </member>
        <member name="P:InSite.Model.InvoiceHistoryLine.ShipmentNumber">
            <summary>
            The shipment number of the Invoice line.
            </summary>
        </member>
        <member name="P:InSite.Model.InvoiceHistoryLine.CustomProperties">
            <summary>
            Generic custom properties storage area
            </summary>
        </member>
        <member name="T:InSite.Model.OrderHistory">
            <summary>The OrderHistory is where historical order information is stored from orders placed in the system and refreshed from external systems.</summary>
        </member>
        <member name="M:InSite.Model.OrderHistory.MapCustomerOrder(InSite.Model.CustomerOrder)">
            <summary>
            Method to map the incoming <see cref="T:InSite.Model.CustomerOrder"/>'s values to this instance of <see cref="T:InSite.Model.OrderHistory"/>
            </summary>
            <param name="customerOrder"><see cref="T:InSite.Model.CustomerOrder"/> to map the <see cref="T:InSite.Model.OrderHistory"/> values from.</param>
        </member>
        <member name="M:InSite.Model.OrderHistory.AddOrderHistoryLine(InSite.Model.OrderHistoryLine)">
            <summary>Add an <see cref="T:InSite.Model.OrderHistoryLine"/> to the <see cref="P:InSite.Model.OrderHistory.OrderHistoryLines"/> collection. If the collection already contains the value it is silently ignored.</summary>
            <param name="value">The <see cref="T:InSite.Model.OrderHistoryLine"/> to be added.</param>
        </member>
        <member name="M:InSite.Model.OrderHistory.RemoveOrderHistoryLine(InSite.Model.OrderHistoryLine)">
            <summary>Remove an <see cref="T:InSite.Model.OrderHistoryLine"/> from the <see cref="P:InSite.Model.OrderHistory.OrderHistoryLines"/> collection. If the collection does not contain the value it is silently ignored.</summary>
            <param name="value">The <see cref="T:InSite.Model.OrderHistoryLine"/> to be removed.</param>
        </member>
        <member name="M:InSite.Model.OrderHistory.GetCustomProperty(System.String)">
            <summary>
            Retrieve an existing CustomProperty
            </summary>
            <param name="name">Name key of property to retrieve.</param>
            <returns>property or null</returns>
        </member>
        <member name="M:InSite.Model.OrderHistory.AddCustomProperty(InSite.Model.CustomProperty)">
            <summary>Add a CustomProperty to the CustomProperties collection</summary>
            <param name="value">The CustomProperty to add</param>
            <remarks>If the collection already contains the value it is silently ignored</remarks>
        </member>
        <member name="M:InSite.Model.OrderHistory.RemoveCustomProperty(InSite.Model.CustomProperty)">
            <summary>Remove a CustomeProperty from the  CustomProperties collection</summary>
            <param name="value">The CustomProperty to remove</param>
        </member>
        <member name="M:InSite.Model.OrderHistory.GetProperty(System.String,System.String)">
            <summary>Retrieves the value for the property identified by <paramref name="name"/></summary>
            <param name="name">The name of the property to retrieve</param>
            <param name="defaultValue">The value to use if the property does not exist</param>
        </member>
        <member name="M:InSite.Model.OrderHistory.SetProperty(System.String,System.String)">
            <summary>Sets the value for the property identified by <paramref name="name"/></summary>
            <param name="name">The name of the property to retrieve</param>
            <param name="value">The value to set</param>
        </member>
        <member name="P:InSite.Model.OrderHistory.ERPOrderNumber">
            <summary>The OrderNumber from the ERP or external system.</summary>
        </member>
        <member name="P:InSite.Model.OrderHistory.WebOrderNumber">
            <summary>The OrderNumber generated from the website.</summary>
        </member>
        <member name="P:InSite.Model.OrderHistory.OrderDate">
            <summary>
            The date the Order was placed.
            </summary>
        </member>
        <member name="P:InSite.Model.OrderHistory.Status">
            <summary>
            The Order Status.
            </summary>
        </member>
        <member name="P:InSite.Model.OrderHistory.CustomerNumber">
            <summary>
            The CustomerNumber who placed the Order.
            </summary>
        </member>
        <member name="P:InSite.Model.OrderHistory.CustomerSequence">
            <summary>
            The CustomerSequence or ShipTo who placed the Order.
            </summary>
        </member>
        <member name="P:InSite.Model.OrderHistory.CustomerPO">
            <summary>
            The Customers Purchase Order Number.
            </summary>
        </member>
        <member name="P:InSite.Model.OrderHistory.CurrencyCode">
            <summary>
            The Currency Code the Order was placed for.
            </summary>
        </member>
        <member name="P:InSite.Model.OrderHistory.ConversionRate">
            <summary>
            The ConversionRate from the <see cref="P:InSite.Model.OrderHistory.CurrencyCode"/> to the system base <see cref="T:InSite.Model.Currency"/>.
            </summary>
        </member>
        <member name="P:InSite.Model.OrderHistory.Terms">
            <summary>
            The Terms of the Order.
            </summary>
        </member>
        <member name="P:InSite.Model.OrderHistory.ShipCode">
            <summary>
            The ShipCode of the Order.
            </summary>
        </member>
        <member name="P:InSite.Model.OrderHistory.Salesperson">
            <summary>
            The Salesperson for the Order.
            </summary>
        </member>
        <member name="P:InSite.Model.OrderHistory.BTCompanyName">
            <summary>
            The Bill To Company Name at the time the Order was placed.
            </summary>
        </member>
        <member name="P:InSite.Model.OrderHistory.BTAddress1">
            <summary>
            The Bill To Address Line 1 at the time the Order was placed.
            </summary>
        </member>
        <member name="P:InSite.Model.OrderHistory.BTAddress2">
            <summary>
            The Bill To Address Line 2 at the time the Order was placed.
            </summary>
        </member>
        <member name="P:InSite.Model.OrderHistory.BTCity">
            <summary>
            The Bill To City at the time the Order was placed.
            </summary>
        </member>
        <member name="P:InSite.Model.OrderHistory.BTState">
            <summary>
            The Bill To State at the time the Order was placed.
            </summary>
        </member>
        <member name="P:InSite.Model.OrderHistory.BTPostalCode">
            <summary>
            The Bill To Postal Code at the time the Order was placed.
            </summary>
        </member>
        <member name="P:InSite.Model.OrderHistory.BTCountry">
            <summary>
            The Bill To Country at the time the Order was placed.
            </summary>
        </member>
        <member name="P:InSite.Model.OrderHistory.STCompanyName">
            <summary>
            The Ship To Company Name at the time the Order was placed.
            </summary>
        </member>
        <member name="P:InSite.Model.OrderHistory.STAddress1">
            <summary>
            The Ship To Address Line 1 at the time the Order was placed.
            </summary>
        </member>
        <member name="P:InSite.Model.OrderHistory.STAddress2">
            <summary>
            The Ship To Address Line 2 at the time the Order was placed.
            </summary>
        </member>
        <member name="P:InSite.Model.OrderHistory.STCity">
            <summary>
            The Ship To City at the time the Order was placed.
            </summary>
        </member>
        <member name="P:InSite.Model.OrderHistory.STState">
            <summary>
            The Ship To State at the time the Order was placed.
            </summary>
        </member>
        <member name="P:InSite.Model.OrderHistory.STPostalCode">
            <summary>
            The Ship To Postal Code at the time the Order was placed.
            </summary>
        </member>
        <member name="P:InSite.Model.OrderHistory.STCountry">
            <summary>
            The Ship To Country at the time the Order was placed.
            </summary>
        </member>
        <member name="P:InSite.Model.OrderHistory.Notes">
            <summary>
            The Notes of the Order.
            </summary>
        </member>
        <member name="P:InSite.Model.OrderHistory.ProductTotal">
            <summary>
            The Product Total of the Order.
            </summary>
        </member>
        <member name="P:InSite.Model.OrderHistory.ProductTotalDisplay">
            <summary>
            Currency and culture formatted <see cref="P:InSite.Model.OrderHistory.ProductTotal"/>.
            </summary>
        </member>
        <member name="P:InSite.Model.OrderHistory.DiscountAmount">
            <summary>
            The Discount Amount of the Order.
            </summary>
        </member>
        <member name="P:InSite.Model.OrderHistory.DiscountAmountDisplay">
            <summary>
            Currency and culture formatted <see cref="P:InSite.Model.OrderHistory.DiscountAmount"/>.
            </summary>
        </member>
        <member name="P:InSite.Model.OrderHistory.ShippingAndHandling">
            <summary>
            The Shipping And Handling of the Order.
            </summary>
        </member>
        <member name="P:InSite.Model.OrderHistory.ShippingAndHandlingDisplay">
            <summary>
            Currency and culture formatted <see cref="P:InSite.Model.OrderHistory.ShippingAndHandling"/>.
            </summary>
        </member>
        <member name="P:InSite.Model.OrderHistory.OtherCharges">
            <summary>
            Any Other Charges of the Order.
            </summary>
        </member>
        <member name="P:InSite.Model.OrderHistory.OtherChargesDisplay">
            <summary>
            Currency and culture formatted <see cref="P:InSite.Model.OrderHistory.OtherCharges"/>.
            </summary>
        </member>
        <member name="P:InSite.Model.OrderHistory.TaxAmount">
            <summary>
            The Tax Amount of the Order.
            </summary>
        </member>
        <member name="P:InSite.Model.OrderHistory.TaxAmountDisplay">
            <summary>
            Currency and culture formatted <see cref="P:InSite.Model.OrderHistory.TaxAmount"/>.
            </summary>
        </member>
        <member name="P:InSite.Model.OrderHistory.OrderTotal">
            <summary>
            The Order Total of the Order.
            </summary>
        </member>
        <member name="P:InSite.Model.OrderHistory.OrderTotalDisplay">
            <summary>
            Currency and culture formatted <see cref="P:InSite.Model.OrderHistory.OrderTotal"/>.
            </summary>
        </member>
        <member name="P:InSite.Model.OrderHistory.OrderHistoryLines">
            <summary>
            The Order Lines of the Order.
            </summary>
        </member>
        <member name="P:InSite.Model.OrderHistory.CustomProperties">
            <summary>
            Generic custom properties storage area
            </summary>
        </member>
        <member name="T:InSite.Model.OrderHistoryLine">
            <summary>The OrderHistoryLine is where historical order line information is stored from orders placed in the system and refreshed from external systems.</summary>
        </member>
        <member name="M:InSite.Model.OrderHistoryLine.GetCustomProperty(System.String)">
            <summary>
            Retrieve an existing CustomProperty
            </summary>
            <param name="name">Name key of property to retrieve.</param>
            <returns>property or null</returns>
        </member>
        <member name="M:InSite.Model.OrderHistoryLine.AddCustomProperty(InSite.Model.CustomProperty)">
            <summary>Add a CustomProperty to the CustomProperties collection</summary>
            <param name="value">The CustomProperty to add</param>
            <remarks>If the collection already contains the value it is silently ignored</remarks>
        </member>
        <member name="M:InSite.Model.OrderHistoryLine.RemoveCustomProperty(InSite.Model.CustomProperty)">
            <summary>Remove a CustomProperty from the  CustomProperties collection</summary>
            <param name="value">The CustomProperty to remove</param>
        </member>
        <member name="M:InSite.Model.OrderHistoryLine.GetProperty(System.String,System.String)">
            <summary>Retrieves the value for the property identified by <paramref name="name"/></summary>
            <param name="name">The name of the property to retrieve</param>
            <param name="defaultValue">The value to use if the property does not exist</param>
        </member>
        <member name="M:InSite.Model.OrderHistoryLine.SetProperty(System.String,System.String)">
            <summary>Sets the value for the property identified by <paramref name="name"/></summary>
            <param name="name">The name of the property to retrieve</param>
            <param name="value">The value to set</param>
        </member>
        <member name="P:InSite.Model.OrderHistoryLine.OrderHistory">
            <summary>
            The parent <see cref="P:InSite.Model.OrderHistoryLine.OrderHistory"/> of this Order Line.
            </summary>
        </member>
        <member name="P:InSite.Model.OrderHistoryLine.RequiredDate">
            <summary>
            The date this Order Line is required.
            </summary>
        </member>
        <member name="P:InSite.Model.OrderHistoryLine.LastShipDate">
            <summary>
            The last date a shipment was made for this Order Line.
            </summary>
        </member>
        <member name="P:InSite.Model.OrderHistoryLine.CustomerNumber">
            <summary>
            The CustomerNumber who placed the Order Line.
            </summary>
        </member>
        <member name="P:InSite.Model.OrderHistoryLine.CustomerSequence">
            <summary>
            The CustomerSequence or ShipTo who placed the Order Line.
            </summary>
        </member>
        <member name="P:InSite.Model.OrderHistoryLine.LineType">
            <summary>
            The type of this Order Line (for example: Product, Freight, Miscellaneous Charge).
            </summary>
        </member>
        <member name="P:InSite.Model.OrderHistoryLine.Status">
            <summary>
            The Status of the Order Line.
            </summary>
        </member>
        <member name="P:InSite.Model.OrderHistoryLine.LineNumber">
            <summary>
            The Line Number of the Order Line.
            </summary>
        </member>
        <member name="P:InSite.Model.OrderHistoryLine.ReleaseNumber">
            <summary>
            The Release Number of the Order Line normally for blanket Orders.
            </summary>
        </member>
        <member name="P:InSite.Model.OrderHistoryLine.ProductERPNumber">
            <summary>
            The ERP Number of the Product of the Order Line.
            </summary>
        </member>
        <member name="P:InSite.Model.OrderHistoryLine.CustomerProductNumber">
            <summary>
            The Customer Product Number of the Product of the Order Line.
            </summary>
        </member>
        <member name="P:InSite.Model.OrderHistoryLine.LinePOReference">
            <summary>
            The Purchase Order Line Reference of the Order Line.
            </summary>
        </member>
        <member name="P:InSite.Model.OrderHistoryLine.Description">
            <summary>
            The Description of the Order Line.
            </summary>
        </member>
        <member name="P:InSite.Model.OrderHistoryLine.Warehouse">
            <summary>
            The Warehouse of the Order Line.
            </summary>
        </member>
        <member name="P:InSite.Model.OrderHistoryLine.Notes">
            <summary>
            The Notes of the Order Line.
            </summary>
        </member>
        <member name="P:InSite.Model.OrderHistoryLine.QtyOrdered">
            <summary>
            The Quantity Ordered of the Order Line.
            </summary>
        </member>
        <member name="P:InSite.Model.OrderHistoryLine.QtyShipped">
            <summary>
            The Quantity Shipped of the Order Line.
            </summary>
        </member>
        <member name="P:InSite.Model.OrderHistoryLine.UnitOfMeasure">
            <summary>
            The Unit Of Measure of the Order Line.
            </summary>
        </member>
        <member name="P:InSite.Model.OrderHistoryLine.InventoryQtyOrdered">
            <summary>
            The Inventory Quantity Ordered of the Order Line.
            </summary>
        </member>
        <member name="P:InSite.Model.OrderHistoryLine.InventoryQtyShipped">
            <summary>
            The Inventory Quantity Shipped of the Order Line.
            </summary>
        </member>
        <member name="P:InSite.Model.OrderHistoryLine.UnitPrice">
            <summary>
            The Unit Price of the Order Line.
            </summary>
        </member>
        <member name="P:InSite.Model.OrderHistoryLine.UnitPriceDisplay">
            <summary>
            Currency and culture formatted <see cref="P:InSite.Model.OrderHistoryLine.UnitPrice"/>.
            </summary>
        </member>
        <member name="P:InSite.Model.OrderHistoryLine.DiscountPercent">
            <summary>
            The Discount Percent of the Order Line.
            </summary>
        </member>
        <member name="P:InSite.Model.OrderHistoryLine.DiscountAmount">
            <summary>
            The Discount Amount of the Order Line.
            </summary>
        </member>
        <member name="P:InSite.Model.OrderHistoryLine.DiscountAmountDisplay">
            <summary>
            Currency and culture formatted <see cref="P:InSite.Model.OrderHistoryLine.DiscountAmount"/>.
            </summary>
        </member>
        <member name="P:InSite.Model.OrderHistoryLine.PromotionAmountApplied">
            <summary>
            The Promotion Amount Applied to this Order Line.
            </summary>
        </member>
        <member name="P:InSite.Model.OrderHistoryLine.PromotionAmountAppliedDisplay">
            <summary>
            Currency and culture formatted <see cref="P:InSite.Model.OrderHistoryLine.PromotionAmountApplied"/>.
            </summary>
        </member>
        <member name="P:InSite.Model.OrderHistoryLine.LineTotal">
            <summary>
            The Line Total of the Order Line.
            </summary>
        </member>
        <member name="P:InSite.Model.OrderHistoryLine.LineTotalDisplay">
            <summary>
            Currency and culture formatted <see cref="P:InSite.Model.OrderHistoryLine.LineTotal"/>.
            </summary>
        </member>
        <member name="P:InSite.Model.OrderHistoryLine.RMAQtyRequested">
            <summary>
            The RMA (Return) Quantity Requested of the Order Line.
            </summary>
        </member>
        <member name="P:InSite.Model.OrderHistoryLine.RMAQtyReceived">
            <summary>
            The RMA (Return) Quantity Received of the Order Line.
            </summary>
        </member>
        <member name="P:InSite.Model.OrderHistoryLine.CustomProperties">
            <summary>
            Generic custom properties storage area
            </summary>
        </member>
        <member name="T:InSite.Model.OrderLineRequisition">
            <summary>
            This is an order line from a cart that was created during the requisition approval process.
            </summary>
        </member>
        <member name="P:InSite.Model.OrderLineRequisition.OrderLine">
            <summary>
            This is the <see cref="P:InSite.Model.OrderLineRequisition.OrderLine"/> for the order placed by the requisitioner.
            </summary>
        </member>
        <member name="P:InSite.Model.OrderLineRequisition.UserProfile">
            <summary>
            This is the <see cref="P:InSite.Model.OrderLineRequisition.UserProfile"/> of the requisitioner who placed the requisition.
            </summary>
        </member>
        <member name="P:InSite.Model.OrderLineRequisition.CostCode">
            <summary>
            This is the actual code that is used to cost or categorize order lines against.
            </summary>
        </member>
        <member name="P:InSite.Model.OrderLineRequisition.QtyOrdered">
            <summary>
            This is the quantity order during the requisition process.
            </summary>
        </member>
        <member name="P:InSite.Model.OrderLineRequisition.OriginalOrderLine">
            <summary>
            Keep track of the original <see cref="P:InSite.Model.OrderLineRequisition.OrderLine"/> that created this distribution record. This would allow a link so that the requisitioner could find out the 
            status of the order.  
            </summary>
        </member>
        <member name="P:InSite.Model.OrderLineRfq.OrderLine">
            <summary>
            This is the <see cref="P:InSite.Model.OrderLineRfq.OrderLine"/> for the request for quote order.
            </summary>
        </member>
        <member name="T:InSite.Model.Persona">
            <summary>
            The Persona is used to store different Personas a <see cref="T:InSite.Model.UserProfile"/> may become based on behavior within the system.
            </summary>
        </member>
        <member name="P:InSite.Model.Persona.Name">
            <summary>
            Name of the Persona
            </summary>
        </member>
        <member name="P:InSite.Model.Persona.Description">
            <summary>
            Description of the Persona
            </summary>
        </member>
        <member name="P:InSite.Model.Persona.Sequence">
            <summary>
            Sequence of the Persona
            </summary>
        </member>
        <member name="P:InSite.Model.Persona.ActivateOn">
            <summary>The DateTime this Persona is Active, can not be null</summary>
        </member>
        <member name="P:InSite.Model.Persona.DeactivateOn">
            <summary>The DateTime the Persona will no longer be Active, can be null</summary>
        </member>
        <member name="P:InSite.Model.Persona.IsDefault">
            <summary>
            Is this the default persona
            </summary>
        </member>
        <member name="T:InSite.Model.ProductPrice">
            <summary>
            Holds Break Pricing for the Product
            </summary>
        </member>
        <member name="P:InSite.Model.ProductPrice.BreakQty">
            <summary>
            Quantity Break
            </summary>
        </member>
        <member name="P:InSite.Model.ProductPrice.BreakQtyDisplay">
            <summary>
            BreakQty formatted for display
            </summary>
        </member>
        <member name="P:InSite.Model.ProductPrice.Price">
            <summary>
            Price for this Quantity Break
            </summary>
        </member>
        <member name="P:InSite.Model.ProductPrice.PriceDisplay">
            <summary>
            Formatted display price with correct currency and culture
            </summary>
        </member>
        <member name="T:InSite.Model.CategoryRelatedProduct">
            <summary>
            A product related product
            </summary>
        </member>
        <member name="P:InSite.Model.CategoryRelatedProduct.SortOrder">
            <summary>
            Gets or sets the sort order.
            </summary>
            <value>
            The sort order.
            </value>
        </member>
        <member name="P:InSite.Model.CategoryRelatedProduct.Category">
            <summary>
            Gets or sets the category.
            </summary>
            <value>
            The category.
            </value>
        </member>
        <member name="P:InSite.Model.CategoryRelatedProduct.RelatedProduct">
            <summary>
            Gets or sets the related product.
            </summary>
            <value>
            The related product.
            </value>
        </member>
        <member name="P:InSite.Model.CategoryRelatedProduct.MiscId">
            <summary>
            Gets or sets the misc identifier (used for the Management Console).
            </summary>
        </member>
        <member name="P:InSite.Model.CategoryRelatedProduct.Name">
            <summary>
            Gets or sets the related product name (used for the Management Console).
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:InSite.Model.CategoryRelatedProduct.ShortDescription">
            <summary>
            Gets or sets the related product short description (used for the Management Console).
            </summary>
        </member>
        <member name="P:InSite.Model.CategoryRelatedProduct.MiscellaneousCode">
            <summary>
            Gets or sets the miscellaneous code.
            </summary>
            <value>
            The miscellaneous code.
            </value>
        </member>
        <member name="T:InSite.Model.ProductUnitOfMeasure">
            <summary>
            Provides persistent store for alternate units of measure for a Product.
            </summary>
        </member>
        <member name="P:InSite.Model.ProductUnitOfMeasure.Product">
            <summary>
            The Parent Product Object
            </summary>
        </member>
        <member name="P:InSite.Model.ProductUnitOfMeasure.UnitOfMeasure">
            <summary>
            This is the unit of measure itself that is an alternate.  We should not allow duplicates within a product nor replicate 
            the primary/base unit of measure.
            </summary>
        </member>
        <member name="P:InSite.Model.ProductUnitOfMeasure.UnitOfMeasureDisplay">
            <summary>
            Display version of UnitOfMeasure (supports translation)
            </summary>
        </member>
        <member name="P:InSite.Model.ProductUnitOfMeasure.Description">
            <summary>
            Description of the item.
            </summary>
        </member>
        <member name="P:InSite.Model.ProductUnitOfMeasure.QtyPerBaseUnitOfMeasure">
            <summary>
            Describes the quantity applicable to this instance of a ProductUnitOfMeasure
            </summary>
        </member>
        <member name="P:InSite.Model.ProductUnitOfMeasure.RoundingRule">
            <summary>
            Same as what is available in the product table
            </summary>
        </member>
        <member name="P:InSite.Model.ProductUnitOfMeasure.IsDefault">
            <summary>
            Get Set defines if this <see cref="T:InSite.Model.ProductUnitOfMeasure"/> is the default unit of measure for the <see cref="P:InSite.Model.ProductUnitOfMeasure.Product"/>
            </summary>
        </member>
        <member name="M:InSite.Model.ProductWarehouse.GetCustomProperty(System.String)">
            <summary>
            Retrieve an existing CustomProperty
            </summary>
            <param name="name">Name key of property to retrieve.</param>
            <returns>property or null</returns>
        </member>
        <member name="M:InSite.Model.ProductWarehouse.AddCustomProperty(InSite.Model.CustomProperty)">
            <summary>Add a CustomProperty to the CustomProperties collection</summary>
            <param name="value">The CustomProperty to add</param>
            <remarks>If the collection already contains the value it is silently ignored</remarks>
        </member>
        <member name="M:InSite.Model.ProductWarehouse.RemoveCustomProperty(InSite.Model.CustomProperty)">
            <summary>Remove a CustomeProperty from the  CustomProperties collection</summary>
            <param name="value">The CustomProperty to remove</param>
        </member>
        <member name="M:InSite.Model.ProductWarehouse.GetProperty(System.String,System.String)">
            <summary>Retrieves the value for the property identified by <paramref name="name"/></summary>
            <param name="name">The name of the property to retrieve</param>
            <param name="defaultValue">The value to use if the property does not exist</param>
        </member>
        <member name="M:InSite.Model.ProductWarehouse.SetProperty(System.String,System.String)">
            <summary>Sets the value for the property identified by <paramref name="name"/></summary>
            <param name="name">The name of the property to retrieve</param>
            <param name="value">The value to set</param>
        </member>
        <member name="P:InSite.Model.ProductWarehouse.ErpQtyAvailable">
            <summary>
            This is a bucket amount that is refreshed from the ERP.
            </summary>
        </member>
        <member name="P:InSite.Model.ProductWarehouse.QtyOnOrder">
            <summary>
            This is a current balance of the un-submitted orders.
            </summary>
        </member>
        <member name="P:InSite.Model.ProductWarehouse.TotalQtyAvailable">
            <summary>
            Actual quantity available.
            </summary>
        </member>
        <member name="P:InSite.Model.ProductWarehouse.SafetyStock">
            <summary>
            This is the quantity in primary UOM of the safety stock for this item in this warehouse.
            </summary>
        </member>
        <member name="P:InSite.Model.ProductWarehouse.UnitCost">
            <summary>
            The unit cost at this warehouse.
            </summary>
        </member>
        <member name="P:InSite.Model.ProductWarehouse.IsDiscontinued">
            <summary>
            Indicates that the product is discontinued in this warehouse.
            </summary>
        </member>
        <member name="T:InSite.Model.ProductRelatedProduct">
            <summary>
            A product related product
            </summary>
        </member>
        <member name="P:InSite.Model.ProductRelatedProduct.SortOrder">
            <summary>
            Gets or sets the sort order.
            </summary>
            <value>
            The sort order.
            </value>
        </member>
        <member name="P:InSite.Model.ProductRelatedProduct.Product">
            <summary>
            Gets or sets the product.
            </summary>
            <value>
            The product.
            </value>
        </member>
        <member name="P:InSite.Model.ProductRelatedProduct.RelatedProduct">
            <summary>
            Gets or sets the related product.
            </summary>
            <value>
            The related product.
            </value>
        </member>
        <member name="P:InSite.Model.ProductRelatedProduct.MiscId">
            <summary>
            Gets or sets the misc identifier (used for the Management Console).
            </summary>
        </member>
        <member name="P:InSite.Model.ProductRelatedProduct.Name">
            <summary>
            Gets or sets the related product name (used for the Management Console).
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:InSite.Model.ProductRelatedProduct.ShortDescription">
            <summary>
            Gets or sets the related product short description (used for the Management Console).
            </summary>
        </member>
        <member name="P:InSite.Model.ProductRelatedProduct.MiscellaneousCode">
            <summary>
            Gets or sets the miscellaneous code.
            </summary>
            <value>
            The miscellaneous code.
            </value>
        </member>
        <member name="T:InSite.Model.RuleClause">
            <summary>
            Represents one true/false expression which can be used by a <see cref="P:InSite.Model.RuleClause.RuleManager"/>.
            </summary>
        </member>
        <member name="P:InSite.Model.RuleClause.RuleManager">
            <summary>
            Parent <see cref="P:InSite.Model.RuleClause.RuleManager"/> 
            </summary>
        </member>
        <member name="P:InSite.Model.RuleClause.ExecutionGroup">
            <summary>
            The logic grouping of this clause
            </summary>
        </member>
        <member name="P:InSite.Model.RuleClause.ExecutionOrder">
            <summary>
            The sequence of this clause within its ExecutionGroup
            </summary>
        </member>
        <member name="P:InSite.Model.RuleClause.Condition">
            <summary>
            The logic operator connecting to the next clause
            </summary>
        </member>
        <member name="P:InSite.Model.RuleClause.CriteriaType">
            <summary>
            Specifies nature of the criteria (resolves a ICriteriaType object)
            </summary>
        </member>
        <member name="P:InSite.Model.RuleClause.CriteriaObject">
            <summary>
            The name of the criteria object type 
            </summary>
        </member>
        <member name="P:InSite.Model.RuleClause.CriteriaProperty">
            <summary>
            The name of the property the object type CriteriaType
            </summary>
        </member>
        <member name="P:InSite.Model.RuleClause.CriteriaValue">
            <summary>
            Additional general purpose value associated with the criteria
            </summary>
        </member>
        <member name="P:InSite.Model.RuleClause.ComparisonOperator">
            <summary>
            Comparion operator between criteria and value of the expression
            </summary>
        </member>
        <member name="P:InSite.Model.RuleClause.SimpleValue">
            <summary>
            Value (right side of equation) for basic comparisons
            </summary>
        </member>
        <member name="P:InSite.Model.RuleClause.ValueMinimum">
            <summary>
            Minimum value for Range comparisons
            </summary>
        </member>
        <member name="P:InSite.Model.RuleClause.ValueMaximum">
            <summary>
            Maximum value for Range comparisons
            </summary>
        </member>
        <member name="P:InSite.Model.RuleClause.ValueList">
            <summary>
            Collection of values for List comparisons
            </summary>
        </member>
        <member name="P:InSite.Model.RuleClause.RawValueList">
            <summary>
            Direct database mapping for valuelist
            </summary>
        </member>
        <member name="T:InSite.Model.EnumTypes.RuleClauseComparisonOperator">
            <summary>
            RuleClause.Condition should store one of these enum values in string form. Descriptions are for display only.
            </summary>
        </member>
        <member name="T:InSite.Model.RuleType">
            <summary>
            Defines which parameters are valid for creating rules of a given type.
            </summary>
        </member>
        <member name="M:InSite.Model.RuleType.AddRuleTypeOption(InSite.Model.RuleTypeOption)">
            <summary>
            Adds an RuleTypeOption to the RuleTypeOptions
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:InSite.Model.RuleType.RemoveRuleTypeOption(InSite.Model.RuleTypeOption)">
            <summary>
            Remove a RuleTypeOption from the RuleTypeOptions collection
            </summary>
            <param name="value"></param>
        </member>
        <member name="T:InSite.Model.RuleTypeOption">
            <summary>
            This class defines allowed criteria for a rule type.
            </summary>
        </member>
        <member name="P:InSite.Model.RuleTypeOption.Description">
            <summary>
            Use this text in the data source dropdown
            </summary>        
        </member>
        <member name="P:InSite.Model.RuleTypeOption.CriteriaType">
            <summary>
            "Object","Distance","Logged In"
            </summary>
        </member>
        <member name="P:InSite.Model.RuleTypeOption.CriteriaProperty">
            <summary>
            A property name of CriteriaObject or "*" for all properties
            </summary>
        </member>
        <member name="P:InSite.Model.RuleTypeOption.ValueType">
            <summary>
            What type the value will be – bool, int, dec, string, date, guid
            </summary>
        </member>
        <member name="T:InSite.Model.TranslationDictionary">
            <summary>
            Stores simple keyword translations by language.
            </summary>
        </member>
        <member name="M:InSite.Model.TranslationDictionary.GenerateAllLabels">
            <summary>
            returns an embedded list of all possible hard coded Source.Label values 
            </summary>
            <returns>string list of labels</returns>
        </member>
        <member name="P:InSite.Model.TranslationDictionary.Source">
            <summary>
            Indicates where the data is from or what type of data it is 
            </summary>
        </member>
        <member name="P:InSite.Model.TranslationDictionary.Keyword">
            <summary>
            Untranslated key text.
            </summary>
        </member>
        <member name="P:InSite.Model.TranslationDictionary.Language">
            <summary>
            Gets or sets the language.
            </summary>
        </member>
        <member name="P:InSite.Model.TranslationDictionary.LanguageCode">
            <summary>
            Gets or sets the language code (used for the Management Console).
            </summary>
        </member>
        <member name="P:InSite.Model.TranslationDictionary.Translation">
            <summary>
            The translated text.
            </summary>
        </member>
        <member name="T:InSite.Model.TranslationDictionary.Sources">
            <summary>
            Possible values for the Source field
            </summary> 
        </member>
        <member name="T:InSite.Model.TranslationProperty">
            <summary>
            Stores language translations for model text fields.
            </summary>
        </member>
        <member name="P:InSite.Model.TranslationProperty.Language">
            <summary>
            Gets or sets the language.
            </summary>
        </member>
        <member name="P:InSite.Model.TranslationProperty.LanguageCode">
            <summary>
            Gets or sets the language code (used for the Management Console).
            </summary>
        </member>
        <member name="T:InSite.Model.UserPaymentProfile">
            <summary>The user payment profile.</summary>
        </member>
        <member name="P:InSite.Model.UserPaymentProfile.UserPaymentProfileId">
            <summary>Gets or sets the user payment profile id.</summary>
        </member>
        <member name="P:InSite.Model.UserPaymentProfile.UserProfile">
            <summary>Gets or sets the user profile.</summary>
        </member>
        <member name="P:InSite.Model.UserPaymentProfile.CardIdentifier">
            <summary>Gets or sets the card identifier.</summary>
        </member>
        <member name="P:InSite.Model.UserPaymentProfile.Description">
            <summary>Gets or sets the description.</summary>
        </member>
        <member name="P:InSite.Model.UserPaymentProfile.CardType">
            <summary>Gets or sets the card type.</summary>
        </member>
        <member name="P:InSite.Model.UserPaymentProfile.MaskedCardNumber">
            <summary>Gets or sets the masked card number.</summary>
        </member>
        <member name="P:InSite.Model.UserPaymentProfile.ExpirationDate">
            <summary>Gets or sets the expiration date.</summary>
        </member>
        <member name="P:InSite.Model.WebPageContent.ContentManager">
            <summary>The ContentManager manages the Content</summary>
        </member>
        <member name="T:InSite.Model.WebSiteCurrency">
            <summary>
            Class that represents the aggregate association of <see cref="P:InSite.Model.WebSiteCurrency.WebSite"/> to <see cref="T:InSite.Model.WebSiteCurrency"/>.
            </summary>
        </member>
        <member name="P:InSite.Model.WebSiteCurrency.WebSite">
            <summary>
            <see cref="P:InSite.Model.WebSiteCurrency.WebSite"/> that the <see cref="P:InSite.Model.WebSiteCurrency.Currency"/> is associated to.
            </summary>
        </member>
        <member name="P:InSite.Model.WebSiteCurrency.Currency">
            <summary>
            <see cref="P:InSite.Model.WebSiteCurrency.Currency"/> that the <see cref="P:InSite.Model.WebSiteCurrency.WebSite"/> is associated to.
            </summary>
        </member>
        <member name="P:InSite.Model.WebSiteCurrency.CurrencyCode">
            <summary>
            This is a shortcut to get the value of LanguageCode from the associated <see cref="T:InSite.Model.Language"/>
            </summary>
        </member>
        <member name="P:InSite.Model.WebSiteCurrency.Description">
            <summary>
            This is a shortcut to get the value of Description from the associated <see cref="T:InSite.Model.Language"/>
            </summary>
        </member>
        <member name="P:InSite.Model.WebSiteCurrency.IsDefault">
            <summary>
            If true, this is the default <see cref="T:InSite.Model.WebSiteCurrency"/> for this <see cref="P:InSite.Model.WebSiteCurrency.WebSite"/>.
            </summary>
        </member>
        <member name="P:InSite.Model.WebSiteCurrency.IsLive">
            <summary>
            If true, this <see cref="T:InSite.Model.WebSiteCurrency"/> is active.
            </summary>
        </member>
        <member name="T:InSite.Model.WebSiteLanguage">
            <summary>
            Links Languages to WebSites
            </summary>
        </member>
        <member name="P:InSite.Model.WebSiteLanguage.LanguageCode">
            <summary>
            This is a shortcut to get the value of LanguageCode from the associated <see cref="P:InSite.Model.WebSiteLanguage.Language"/>
            </summary>
        </member>
        <member name="P:InSite.Model.WebSiteLanguage.Description">
            <summary>
            This is a shortcut to get the value of Description from the associated <see cref="P:InSite.Model.WebSiteLanguage.Language"/>
            </summary>
        </member>
        <member name="P:InSite.Model.WebSiteLanguage.IsLive">
            <summary>
            If false, this language will be invisible to users that are not content approvers
            </summary>
        </member>
        <member name="T:InSite.Model.WebsiteSitemap">
            <summary>The website sitemap.</summary>
        </member>
        <member name="P:InSite.Model.WebsiteSitemap.WebsiteId">
            <summary>Gets or sets the website id.</summary>
        </member>
        <member name="P:InSite.Model.WebsiteSitemap.Filename">
            <summary>Gets or sets the filename.</summary>
        </member>
        <member name="P:InSite.Model.WebsiteSitemap.Domain">
            <summary>Gets or sets the domain.</summary>
        </member>
        <member name="P:InSite.Model.WebsiteSitemap.Xml">
            <summary>Gets or sets the xml.</summary>
        </member>
        <member name="P:InSite.Model.WebsiteSitemap.MicrositeIdentifier">
            <summary>Gets or sets the microsite identifier.</summary>
        </member>
        <member name="M:InSite.Mvc.Models.Paging.PagingInfo.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.String)">
            <summary>
            Holds pagination configuration 
            </summary>
            <param name="currentPage">Page to display</param>
            <param name="pageSize">Items per page</param>
            <param name="totalItemCount">Total item set size.</param>
            <param name="defaultPageSize">Default (base) page size.</param>
            <param name="changePageFunction">name of a javascript go to page function which takes a single integer page parameter (default changePage)</param>
            <param name="changePageSizeFunction">name of a javascript page pize function which takes a single integer page parameter (default changePage)</param>
        </member>
        <member name="P:InSite.Mvc.Models.Paging.PagingInfo.StartPage">
            <summary>
            first page for clickable page numbers (PageEntry = false)
            </summary>
        </member>
        <member name="P:InSite.Mvc.Models.Paging.PagingInfo.EndPage">
            <summary>
            last page for clickable page numbers (PageEntry = false)
            </summary>
        </member>
        <member name="P:InSite.Mvc.Models.Paging.PagingInfo.NumberOfPages">
            <summary>
            Total number of pages available
            </summary>
        </member>
        <member name="T:InSite.Model.PromotionResults.DiscountProductsWithPriceCode">
            <summary>
            Custom Promotion Result that discounts <see cref="T:InSite.Model.OrderLine"/>s where <see cref="P:InSite.Model.Product.PriceCode"/> equals the <see cref="P:InSite.Model.PromotionResultCustom.Code"/>.
            </summary>
        </member>
        <member name="M:InSite.Model.PromotionResults.DiscountProductsWithPriceCode.AmountOffShipping(InSite.Model.PromotionResultCustom,InSite.Model.CustomerOrder)">
            <summary>
            Return 0 because this is not a Shipping Promotion Result.
            </summary>
            <param name="promotionResultCustom"><see cref="T:InSite.Model.PromotionResultCustom"/></param>
            <param name="customerOrder"><see cref="T:InSite.Model.CustomerOrder"/></param>
            <returns></returns>
        </member>
        <member name="M:InSite.Model.PromotionResults.DiscountProductsWithPriceCode.PercentOffShipping(InSite.Model.PromotionResultCustom,InSite.Model.CustomerOrder)">
            <summary>
            Return 0 because this is not a Shipping Promotion Result.
            </summary>
            <param name="promotionResultCustom"><see cref="T:InSite.Model.PromotionResultCustom"/></param>
            <param name="customerOrder"><see cref="T:InSite.Model.CustomerOrder"/></param>
            <returns></returns>
        </member>
        <member name="M:InSite.Model.PromotionResults.DiscountProductsWithPriceCode.AmountOffOrder(InSite.Model.PromotionResultCustom,InSite.Model.CustomerOrder)">
            <summary>
            Return 0 because this is not a full Order Promotion Result.
            </summary>
            <param name="promotionResultCustom"><see cref="T:InSite.Model.PromotionResultCustom"/></param>
            <param name="customerOrder"><see cref="T:InSite.Model.CustomerOrder"/></param>
            <returns></returns>
        </member>
        <member name="M:InSite.Model.PromotionResults.DiscountProductsWithPriceCode.PercentOffOrder(InSite.Model.PromotionResultCustom,InSite.Model.CustomerOrder)">
            <summary>
            Return 0 because this is not a full Order Promotion Result.
            </summary>
            <param name="promotionResultCustom"><see cref="T:InSite.Model.PromotionResultCustom"/></param>
            <param name="customerOrder"><see cref="T:InSite.Model.CustomerOrder"/></param>
            <returns></returns>
        </member>
        <member name="M:InSite.Model.PromotionResults.DiscountProductsWithPriceCode.ProductDiscount(InSite.Model.PromotionResultCustom,InSite.Model.CustomerOrder)">
            <summary>
            Return the discount this Promotion Result applied to the Order Lines.
            </summary>
            <param name="promotionResultCustom"><see cref="T:InSite.Model.PromotionResultCustom"/></param>
            <param name="customerOrder"><see cref="T:InSite.Model.CustomerOrder"/></param>
            <returns></returns>
        </member>
        <member name="M:InSite.Model.PromotionResults.DiscountProductsWithPriceCode.ProductDiscountPerEach(InSite.Model.PromotionResultCustom,InSite.Model.OrderLine)">
            <summary>
            Return the discount this Promotion Result applied to the Order Line.
            </summary>
            <param name="promotionResultCustom"><see cref="T:InSite.Model.PromotionResultCustom"/></param>
            <param name="orderLine"><see cref="T:InSite.Model.OrderLine"/></param>
            <returns></returns>
        </member>
        <member name="M:InSite.Model.PromotionResults.DiscountProductsWithPriceCode.ApplyPromotionResult(InSite.Model.PromotionResultCustom,InSite.Model.CustomerOrder)">
            <summary>
            Discount all <see cref="T:InSite.Model.OrderLine"/>s whos <see cref="P:InSite.Model.Product.PriceCode"/> matches the <see cref="P:InSite.Model.PromotionResultCustom.Code"/>.
            </summary>
            <param name="promotionResultCustom"><see cref="T:InSite.Model.PromotionResultCustom"/></param>
            <param name="customerOrder"><see cref="T:InSite.Model.CustomerOrder"/></param>
            <returns></returns>
        </member>
        <member name="M:InSite.Model.PromotionResults.DiscountProductsWithPriceCode.UnApplyPromotionResult(InSite.Model.PromotionResultCustom,InSite.Model.CustomerOrder)">
            <summary>
            Called from within <see cref="M:InSite.Model.OrderLine.CalculatePrice(System.Boolean)"/>, only difference between this and ClearPromotionResult is 
            that we do not set the PromotionResult to null, so you don't get a null reference exception on the next
            line where it re-applies the promotion result.
            </summary>
            <param name="promotionResultCustom"><see cref="T:InSite.Model.PromotionResultCustom"/></param>
            <param name="customerOrder"><see cref="T:InSite.Model.CustomerOrder"/></param>
        </member>
        <member name="M:InSite.Model.PromotionResults.DiscountProductsWithPriceCode.ClearPromotionResult(InSite.Model.PromotionResultCustom,InSite.Model.CustomerOrder)">
            <summary>
            Clear this Promotion Result from the <see cref="T:InSite.Model.CustomerOrder"/>.
            </summary>
            <param name="promotionResultCustom"><see cref="T:InSite.Model.PromotionResultCustom"/></param>
            <param name="customerOrder"><see cref="T:InSite.Model.CustomerOrder"/></param>
        </member>
        <member name="T:InSite.Model.PromotionResultAddQtyOfProductsByPercentOfOrderedProduct">
            <summary>
            <see cref="T:InSite.Model.PromotionResult"/> to add percentage of <see cref="T:InSite.Model.Product"/> based on first <see cref="T:InSite.Model.PromotionRuleOrderContainsOrderedProduct"/> to a <see cref="T:InSite.Model.CustomerOrder"/>
            </summary>
        </member>
        <member name="T:InSite.Model.PromotionResult">
            <summary>
            Abstract <see cref="T:InSite.Model.PromotionResult"/> which all promotion results will inherit from.
            </summary>
        </member>
        <member name="M:InSite.Model.PromotionResult.DollarOffShipping(InSite.Model.CustomerOrder)">
            <summary>
            Method to return the dollar off of shipping amount for the provided <see cref="T:InSite.Model.CustomerOrder"/>
            </summary>
            <param name="customerOrder"><see cref="T:InSite.Model.CustomerOrder"/> to determine the dollar off of shipping this <see cref="T:InSite.Model.PromotionResult"/> gave</param>
            <returns>0</returns>
            <remarks>Meant to be overridden per implemented result</remarks>
        </member>
        <member name="M:InSite.Model.PromotionResult.PercentOffShipping(InSite.Model.CustomerOrder)">
            <summary>
            Method to return the percent off of shipping amount for the provided <see cref="T:InSite.Model.CustomerOrder"/>
            </summary>
            <param name="customerOrder"><see cref="T:InSite.Model.CustomerOrder"/> to determine the percent off of shipping this <see cref="T:InSite.Model.PromotionResult"/> gave</param>
            <returns>0</returns>
            <remarks>Meant to be overridden per implemented result</remarks>
        </member>
        <member name="M:InSite.Model.PromotionResult.DollarOffOrder(InSite.Model.CustomerOrder)">
            <summary>
            Method to return the dollar off of dollar off of order amount for the provided <see cref="T:InSite.Model.CustomerOrder"/>
            </summary>
            <param name="customerOrder"><see cref="T:InSite.Model.CustomerOrder"/> to determine the dollar off of order for this <see cref="T:InSite.Model.PromotionResult"/> gave</param>
            <returns>0</returns>
            <remarks>Meant to be overridden per implemented result</remarks>
        </member>
        <member name="M:InSite.Model.PromotionResult.PercentOffOrder(InSite.Model.CustomerOrder)">
            <summary>
            Method to return the percent off of order amount for the provided <see cref="T:InSite.Model.CustomerOrder"/>
            </summary>
            <param name="customerOrder"><see cref="T:InSite.Model.CustomerOrder"/> to determine the percent off of order for this <see cref="T:InSite.Model.PromotionResult"/> gave</param>
            <returns>0</returns>
            <remarks>Meant to be overridden per implemented result</remarks>
        </member>
        <member name="M:InSite.Model.PromotionResult.ProductDiscount(InSite.Model.CustomerOrder)">
            <summary>
            Method to return the product discount amount for the provided <see cref="T:InSite.Model.CustomerOrder"/>
            </summary>
            <param name="customerOrder"><see cref="T:InSite.Model.CustomerOrder"/> to determine the product discount for this <see cref="T:InSite.Model.PromotionResult"/> gave</param>
            <returns>0</returns>
            <remarks>Meant to be overridden per implemented result</remarks>
        </member>
        <member name="M:InSite.Model.PromotionResult.ProductDiscountPerEach(InSite.Model.OrderLine)">
            <summary>
            Method to return the product discount amount per each for the provided <see cref="T:InSite.Model.CustomerOrder"/>
            </summary>
            <param name="orderLine"><see cref="T:InSite.Model.CustomerOrder"/> to determine the product discount for this <see cref="T:InSite.Model.PromotionResult"/> gave for this <see cref="T:InSite.Model.OrderLine"/></param>
            <returns>0</returns>
            <remarks>Meant to be overridden per implemented result</remarks>
        </member>
        <member name="M:InSite.Model.PromotionResult.ApplyPromotionResult(InSite.Model.CustomerOrder)">
            <summary>
            Method apply this <see cref="T:InSite.Model.PromotionRule"/> to the provided <see cref="T:InSite.Model.CustomerOrder"/>
            </summary>
            <param name="customerOrder"></param>
            <returns>adjusted <see cref="T:InSite.Model.CustomerOrder"/> with <see cref="T:InSite.Model.PromotionResult"/> applied</returns>
            <remarks>Meant to be overridden per implemented result</remarks>
        </member>
        <member name="M:InSite.Model.PromotionResult.UnApplyPromotionResult(InSite.Model.CustomerOrder)">
            <summary>
            Method to remove this <see cref="T:InSite.Model.PromotionRule"/> from the provided <see cref="T:InSite.Model.CustomerOrder"/>
            </summary>
            <param name="customerOrder"> to remove this <see cref="T:InSite.Model.PromotionResult"/> from</param>
            <returns>adjusted <see cref="T:InSite.Model.CustomerOrder"/> with <see cref="T:InSite.Model.PromotionResult"/> removed</returns>
            <remarks>Meant to be overridden per implemented result</remarks>
        </member>
        <member name="M:InSite.Model.PromotionResult.ClearPromotionResult(InSite.Model.CustomerOrder)">
            <summary>
            Method to clear this <see cref="T:InSite.Model.PromotionResult"/> from the provided <see cref="T:InSite.Model.CustomerOrder"/>
            </summary>
            <param name="customerOrder"><see cref="T:InSite.Model.CustomerOrder"/> to clear this <see cref="T:InSite.Model.PromotionResult"/> from</param>
            <returns>adjusted <see cref="T:InSite.Model.CustomerOrder"/> with <see cref="T:InSite.Model.PromotionResult"/> removed</returns>
            <remarks>Meant to be overridden per implemented result</remarks>
        </member>
        <member name="M:InSite.Model.PromotionResult.OrderLineContainsThisPromotionResult(InSite.Model.OrderLine)">
            <summary>
            Method to validate that the <see cref="T:InSite.Model.OrderLine"/> contains a <see cref="T:InSite.Model.PromotionResult"/> of the 
            instance of <see cref="T:InSite.Model.PromotionResult"/> that is checked for validity.
            </summary>
            <param name="orderLine"><see cref="T:InSite.Model.OrderLine"/> to test if it is a <see cref="T:InSite.Model.PromotionResult"/> <see cref="T:InSite.Model.OrderLine"/>.</param>
            <returns>if the <see cref="T:InSite.Model.OrderLine"/> is an <see cref="T:InSite.Model.OrderLine"/> with this <see cref="T:InSite.Model.PromotionResult"/>.</returns>
        </member>
        <member name="M:InSite.Model.PromotionResult.GetPricingServiceResult(InSite.Model.OrderLine)">
            <summary>
            Method to call <see cref="P:InSite.Model.OrderLine.Product"/>'s <see cref="M:InSite.Model.Product.GetProductPricing(InSite.Model.Services.PricingService.PricingServiceParameter)"/> and making sure the optionally bool is set to false.
            </summary>
            <param name="orderLine"><see cref="T:InSite.Model.OrderLine"/> to return a <see cref="T:InSite.Model.Services.PricingService.PricingServiceResult"/> from.</param>
            <returns><see cref="T:InSite.Model.Services.PricingService.PricingServiceResult"/> for the passed in <see cref="T:InSite.Model.OrderLine"/> and <see cref="P:InSite.Model.OrderLine.Product"/>.</returns>
        </member>
        <member name="M:InSite.Model.PromotionResult.GetOrderLineDiscountFromActualPrice(InSite.Model.OrderLine)">
            <summary>
            Method that returns the result of the <see cref="P:InSite.Model.Services.PricingService.PricingServiceResult.ActualPrice"/> for the 
            <see cref="T:InSite.Model.OrderLine"/> - <see cref="P:InSite.Model.OrderLine.ActualPrice"/>.
            </summary>
            <param name="orderLine"><see cref="T:InSite.Model.OrderLine"/> to get the discount amount for.</param>
            <returns>the result of the <see cref="P:InSite.Model.Services.PricingService.PricingServiceResult.ActualPrice"/> for the 
            <see cref="T:InSite.Model.OrderLine"/> - <see cref="P:InSite.Model.OrderLine.ActualPrice"/>.</returns>
        </member>
        <member name="P:InSite.Model.PromotionResult.Promotion">
            <summary>
            Get or set Parent <see cref="P:InSite.Model.PromotionResult.Promotion"/>
            </summary>
        </member>
        <member name="P:InSite.Model.PromotionResult.Visible">
            <summary>
            Get or set
            </summary>
            <remarks>Is this result visible for UI</remarks>
        </member>
        <member name="P:InSite.Model.PromotionResult.ResultName">
            <summary>
            Get ResultName
            </summary>
            <remarks>
            NHibernate will use the resultname to instanciate the proper implemented result
            </remarks>
        </member>
        <member name="M:InSite.Model.PromotionResultAddQtyOfProductsByPercentOfOrderedProduct.ApplyPromotionResult(InSite.Model.CustomerOrder)">
            <summary>
            Method to apply the <see cref="T:InSite.Model.PromotionResult"/> to the provided <see cref="T:InSite.Model.CustomerOrder"/>
            </summary>
            <param name="customerOrder"><see cref="T:InSite.Model.CustomerOrder"/> to apply <see cref="T:InSite.Model.PromotionResult"/> to</param>
            <returns></returns>
        </member>
        <member name="M:InSite.Model.PromotionResultAddQtyOfProductsByPercentOfOrderedProduct.UnApplyPromotionResult(InSite.Model.CustomerOrder)">
            <summary>
            Method remove <see cref="T:InSite.Model.PromotionResult"/> from <see cref="T:InSite.Model.CustomerOrder"/>
            </summary>
            <param name="customerOrder"><see cref="T:InSite.Model.CustomerOrder"/> to remove <see cref="T:InSite.Model.PromotionResult"/> from</param>
            <returns></returns>
        </member>
        <member name="M:InSite.Model.PromotionResultAddQtyOfProductsByPercentOfOrderedProduct.ClearPromotionResult(InSite.Model.CustomerOrder)">
            <summary>
            Method remove <see cref="T:InSite.Model.PromotionResult"/> from <see cref="T:InSite.Model.CustomerOrder"/>
            </summary>
            <param name="customerOrder"><see cref="T:InSite.Model.CustomerOrder"/> to remove <see cref="T:InSite.Model.PromotionResult"/> from</param>
            <returns></returns>
        </member>
        <member name="M:InSite.Model.PromotionResultAddQtyOfProductsByPercentOfOrderedProduct.ProductDiscount(InSite.Model.CustomerOrder)">
            <summary>
            Method to return the Discounted <see cref="T:InSite.Model.Product"/> amount for the <see cref="T:InSite.Model.OrderLine"/>
            </summary>
            <param name="customerOrder"><see cref="T:InSite.Model.CustomerOrder"/> to return <see cref="T:InSite.Model.Product"/> discounts</param>
            <returns></returns>
        </member>
        <member name="M:InSite.Model.PromotionResultAddQtyOfProductsByPercentOfOrderedProduct.ProductDiscountPerEach(InSite.Model.OrderLine)">
            <summary>
            Method to return the product discount amount per each for the provided <see cref="T:InSite.Model.OrderLine"/>.
            </summary>
            <param name="orderLine"><see cref="T:InSite.Model.CustomerOrder"/> to determine the product discount for this <see cref="T:InSite.Model.PromotionResult"/> gave for this <see cref="T:InSite.Model.OrderLine"/>.</param>
            <returns>the <see cref="P:InSite.Model.Services.PricingService.PricingServiceResult.RegularPrice"/>.</returns>
        </member>
        <member name="P:InSite.Model.PromotionResultAddQtyOfProductsByPercentOfOrderedProduct.ProductInfo">
            <summary>
            Get or set <see cref="P:InSite.Model.PromotionResultAddQtyOfProductsByPercentOfOrderedProduct.ProductInfo"/> to add to the <see cref="T:InSite.Model.CustomerOrder"/>
            </summary>
        </member>
        <member name="P:InSite.Model.PromotionResultAddQtyOfProductsByPercentOfOrderedProduct.Amount">
            <summary>
            Get or set Percentage of Quantity of the first <see cref="T:InSite.Model.PromotionRuleOrderContainsOrderedProduct"/> based on the Quantity of the Ordered <see cref="T:InSite.Model.Product"/>s to add to the <see cref="T:InSite.Model.CustomerOrder"/>
            </summary>
        </member>
        <member name="P:InSite.Model.PromotionResultAddQtyOfProductsByPercentOfOrderedProduct.MaxValue">
            <summary>
            Get or set Maximum Quantity of free <see cref="T:InSite.Model.Product"/>s to add to the <see cref="T:InSite.Model.CustomerOrder"/>
            </summary>
        </member>
        <member name="T:InSite.Model.PromotionResultCustom">
            <summary>
            Delegates all logic to an <see cref="T:InSite.Model.Interfaces.ICustomPromotionResult"/> to allow extensible Promotion Results.
            </summary>
        </member>
        <member name="M:InSite.Model.PromotionResultCustom.DollarOffShipping(InSite.Model.CustomerOrder)">
            <summary>
            Delegates call to the <see cref="T:InSite.Model.Interfaces.ICustomPromotionResult"/>.
            </summary>
            <param name="customerOrder"><see cref="T:InSite.Model.CustomerOrder"/></param>
        </member>
        <member name="M:InSite.Model.PromotionResultCustom.PercentOffShipping(InSite.Model.CustomerOrder)">
            <summary>
            Delegates call to the <see cref="T:InSite.Model.Interfaces.ICustomPromotionResult"/>.
            </summary>
            <param name="customerOrder"><see cref="T:InSite.Model.CustomerOrder"/></param>
        </member>
        <member name="M:InSite.Model.PromotionResultCustom.DollarOffOrder(InSite.Model.CustomerOrder)">
            <summary>
            Delegates call to the <see cref="T:InSite.Model.Interfaces.ICustomPromotionResult"/>.
            </summary>
            <param name="customerOrder"><see cref="T:InSite.Model.CustomerOrder"/></param>
        </member>
        <member name="M:InSite.Model.PromotionResultCustom.PercentOffOrder(InSite.Model.CustomerOrder)">
            <summary>
            Delegates call to the <see cref="T:InSite.Model.Interfaces.ICustomPromotionResult"/>.
            </summary>
            <param name="customerOrder"><see cref="T:InSite.Model.CustomerOrder"/></param>
        </member>
        <member name="M:InSite.Model.PromotionResultCustom.ProductDiscount(InSite.Model.CustomerOrder)">
            <summary>
            Delegates call to the <see cref="T:InSite.Model.Interfaces.ICustomPromotionResult"/>.
            </summary>
            <param name="customerOrder"><see cref="T:InSite.Model.CustomerOrder"/></param>
        </member>
        <member name="M:InSite.Model.PromotionResultCustom.ProductDiscountPerEach(InSite.Model.OrderLine)">
            <summary>
            Delegates call to the <see cref="T:InSite.Model.Interfaces.ICustomPromotionResult"/>.
            </summary>
            <param name="orderLine"><see cref="T:InSite.Model.OrderLine"/></param>
        </member>
        <member name="M:InSite.Model.PromotionResultCustom.ApplyPromotionResult(InSite.Model.CustomerOrder)">
            <summary>
            Delegates call to the <see cref="T:InSite.Model.Interfaces.ICustomPromotionResult"/>.
            </summary>
            <param name="customerOrder"><see cref="T:InSite.Model.CustomerOrder"/></param>
        </member>
        <member name="M:InSite.Model.PromotionResultCustom.UnApplyPromotionResult(InSite.Model.CustomerOrder)">
            <summary>
            Delegates call to the <see cref="T:InSite.Model.Interfaces.ICustomPromotionResult"/>.
            </summary>
            <param name="customerOrder"><see cref="T:InSite.Model.CustomerOrder"/></param>
        </member>
        <member name="M:InSite.Model.PromotionResultCustom.ClearPromotionResult(InSite.Model.CustomerOrder)">
            <summary>
            Delegates call to the <see cref="T:InSite.Model.Interfaces.ICustomPromotionResult"/>.
            </summary>
            <param name="customerOrder"><see cref="T:InSite.Model.CustomerOrder"/></param>
        </member>
        <member name="P:InSite.Model.PromotionResultCustom.CustomResultName">
            <summary>
            The Name to resolve the <see cref="T:InSite.Model.Interfaces.ICustomPromotionResult"/>.
            </summary>
        </member>
        <member name="P:InSite.Model.PromotionResultCustom.Code">
            <summary>
            Get or set Code
            </summary>
        </member>
        <member name="P:InSite.Model.PromotionResultCustom.Amount">
            <summary>
            Get or set Amount
            </summary>
        </member>
        <member name="P:InSite.Model.PromotionResultCustom.MaxValue">
            <summary>
            Get or set MaxValue
            </summary>
        </member>
        <member name="P:InSite.Model.PromotionResultCustom.IsPercent">
            <summary>
            Get or set IsPercent
            </summary>
        </member>
        <member name="P:InSite.Model.PromotionResultCustom.ProductInfo">
            <summary>
            Get or set <see cref="P:InSite.Model.PromotionResultCustom.ProductInfo"/>
            </summary>
        </member>
        <member name="P:InSite.Model.PromotionResultCustom.CategoryInfo">
            <summary>
            Get or set <see cref="P:InSite.Model.PromotionResultCustom.CategoryInfo"/>
            </summary>
        </member>
        <member name="P:InSite.Model.PromotionResultCustom.Vendor">
            <summary>
            Get or set <see cref="T:InSite.Model.Vendor"/>
            </summary>
        </member>
        <member name="P:InSite.Model.PromotionResultCustom.ShipVia">
            <summary>
            Get or set <see cref="T:InSite.Model.ShipVia"/>
            </summary>
        </member>
        <member name="T:InSite.Model.PromotionRules.OrderHasTermsCode">
            <summary>
            Custom Promotion Rule that returns true if <see cref="P:InSite.Model.CustomerOrder.TermsCode"/> equals the <see cref="P:InSite.Model.PromotionRuleCustom.Code"/>.
            </summary>
        </member>
        <member name="M:InSite.Model.PromotionRules.OrderHasTermsCode.IsValid(InSite.Model.PromotionRuleCustom,InSite.Model.CustomerOrder,InSite.Model.Customer)">
            <summary>
            Returns true if <see cref="P:InSite.Model.CustomerOrder.TermsCode"/> equals the <see cref="P:InSite.Model.PromotionRuleCustom.Code"/>.
            </summary>
            <param name="promotionRuleCustom"><see cref="T:InSite.Model.PromotionRuleCustom"/></param>
            <param name="customerOrder"><see cref="T:InSite.Model.CustomerOrder"/></param>
            <param name="customer"><see cref="T:InSite.Model.Customer"/></param>
            <returns>True if <see cref="P:InSite.Model.CustomerOrder.TermsCode"/> equals the <see cref="P:InSite.Model.PromotionRuleCustom.Code"/>, false otherwise.</returns>
        </member>
        <member name="T:InSite.Model.PromotionRuleCustom">
            <summary>
            Delegates all logic to an <see cref="T:InSite.Model.Interfaces.ICustomPromotionRule"/> to allow extensible Promotion Rules.
            </summary>
        </member>
        <member name="T:InSite.Model.PromotionRule">
            <summary>
            Abstract <see cref="T:InSite.Model.PromotionRule"/> which all promotion rules will inherit from.
            </summary>
        </member>
        <member name="T:InSite.Model.IRule">
            <summary>Interface used to implement Promotion Rules and Shipping Rules</summary>
        </member>
        <member name="M:InSite.Model.IRule.IsValid(InSite.Model.CustomerOrder,InSite.Model.Customer)">
            <summary>Evaluates a business rule to determine if the provided InSite.Model.CustomerOrder and InSite.Model.Customer passes the implemented business rule</summary>
            <param name="customerOrder">The CustomerOrder that may be evaluated to see if it passes the implemented business rule.</param>
            <param name="customer">The Customer that may be evaluated to see if it passes the implemented business rule.</param>
            <returns>Returns true if business rule is passed, false otherwise</returns>
        </member>
        <member name="P:InSite.Model.IRule.ExecutionGroup">
            <summary>Property for grouping expressions for example (rule1 &amp;&amp; rule2) || (rule3 &amp;&amp; rule4) rule1 and rule2 would have ExecutionGroup 0
            and rule3 and rule4 would have ExecutionGroup 1</summary>
            <value>Property for grouping expressions</value>
        </member>
        <member name="P:InSite.Model.IRule.ExecutionOrder">
            <summary>The order which rules will be evaluated within their ExecutionGroup</summary>
            <value>The order which rules will be evaluated within their ExecutionGroup</value>
        </member>
        <member name="P:InSite.Model.IRule.Condition">
            <summary>This condition to be evaluated between rules. Valid values are AND or OR</summary>
            <value>This condition to be evaluated between rules. Valid values are AND or OR</value>
        </member>
        <member name="F:InSite.Model.PromotionRule.ConditionAnd">
            <summary>
            returns string representation of conditional "And"
            </summary>
            <returns>And</returns>
        </member>
        <member name="F:InSite.Model.PromotionRule.ConditionOr">
            <summary>
            returns string representation of conditional "And"
            </summary>
            <returns>OR</returns>
        </member>
        <member name="F:InSite.Model.PromotionRule.AmountIsValue">
            <summary>
            returns string representation of Amount type Value
            </summary>
            <returns>Dollar</returns>
        </member>
        <member name="F:InSite.Model.PromotionRule.AmountIsQuantity">
            <summary>
            returns string representation of Amount type Quantity
            </summary>
            <returns>Quantity</returns>
        </member>
        <member name="M:InSite.Model.PromotionRule.IsValid(InSite.Model.CustomerOrder,InSite.Model.Customer)">
            <summary>
            Method to validate whether the rule passes/validates for the provided parameters
            </summary>
            <param name="customerOrder"><see cref="T:InSite.Model.CustomerOrder"/> to validate rule against</param>
            <param name="customer"><see cref="T:InSite.Model.Customer"/> to validate rule against</param>
            <returns><see cref="T:System.Boolean"/></returns>
            <remarks>This method always returns true and is meant to be overridden</remarks>
        </member>
        <member name="P:InSite.Model.PromotionRule.Promotion">
            <summary>
            Get or set Parent <see cref="P:InSite.Model.PromotionRule.Promotion"/>
            </summary>
        </member>
        <member name="P:InSite.Model.PromotionRule.ExecutionGroup">
            <summary>
            Get or set ExecutionGroup
            </summary>
            <remarks>The group which the rule will be executed in</remarks>
        </member>
        <member name="P:InSite.Model.PromotionRule.ExecutionOrder">
            <summary>
            Get or set ExecutionOrder
            </summary>
            <remarks>
            The order this rule will be executed in within its <see cref="P:InSite.Model.PromotionRule.ExecutionGroup"/>
            </remarks>
        </member>
        <member name="P:InSite.Model.PromotionRule.Condition">
            <summary>
            Get or set Condition
            </summary>
            <returns>"And" or "Or"</returns>
        </member>
        <member name="P:InSite.Model.PromotionRule.RuleName">
            <summary>
            Get RuleName
            </summary>
            <remarks>
            NHibernate will use the rulename to instanciate the proper implemented rule
            </remarks>
        </member>
        <member name="M:InSite.Model.PromotionRuleCustom.IsValid(InSite.Model.CustomerOrder,InSite.Model.Customer)">
            <summary>
            Delegates call to the <see cref="T:InSite.Model.Interfaces.ICustomPromotionRule"/>.
            </summary>
            <param name="customerOrder"><see cref="T:InSite.Model.CustomerOrder"/></param>
            <param name="customer"><see cref="T:InSite.Model.Customer"/></param>
        </member>
        <member name="P:InSite.Model.PromotionRuleCustom.CustomRuleName">
            <summary>
            The Name to resolve the <see cref="T:InSite.Model.Interfaces.ICustomPromotionRule"/>.
            </summary>
        </member>
        <member name="P:InSite.Model.PromotionRuleCustom.Code">
            <summary>
            Get or set Code
            </summary>
        </member>
        <member name="P:InSite.Model.PromotionRuleCustom.Amount">
            <summary>
            Get or set Amount
            </summary>
        </member>
        <member name="P:InSite.Model.PromotionRuleCustom.LowerRange">
            <summary>
            Get or set LowerRange
            </summary>
        </member>
        <member name="P:InSite.Model.PromotionRuleCustom.UpperRange">
            <summary>
            Get or set UpperRange
            </summary>
        </member>
        <member name="P:InSite.Model.PromotionRuleCustom.FromDateTime">
            <summary>
            Get or set FromDateTime
            </summary>
        </member>
        <member name="P:InSite.Model.PromotionRuleCustom.ToDateTime">
            <summary>
            Get or set ToDateTime
            </summary>
        </member>
        <member name="P:InSite.Model.PromotionRuleCustom.ProductInfo">
            <summary>
            Get or set <see cref="P:InSite.Model.PromotionRuleCustom.ProductInfo"/>
            </summary>
        </member>
        <member name="P:InSite.Model.PromotionRuleCustom.CategoryInfo">
            <summary>
            Get or set <see cref="P:InSite.Model.PromotionRuleCustom.CategoryInfo"/>
            </summary>
        </member>
        <member name="P:InSite.Model.PromotionRuleCustom.CustomerInfo">
            <summary>
            Get or set <see cref="P:InSite.Model.PromotionRuleCustom.CustomerInfo"/>
            </summary>
        </member>
        <member name="P:InSite.Model.PromotionRuleCustom.ShipVia">
            <summary>
            Get or set <see cref="P:InSite.Model.PromotionRuleCustom.ShipVia"/>
            </summary>
        </member>
        <member name="P:InSite.Model.PromotionRuleCustom.Vendor">
            <summary>
            Get or set <see cref="P:InSite.Model.PromotionRuleCustom.Vendor"/>
            </summary>
        </member>
        <member name="P:InSite.Model.PromotionRuleCustom.ContainedPromotion">
            <summary>
            Get or set the Contained <see cref="T:InSite.Model.Promotion"/>
            </summary>
        </member>
        <member name="P:InSite.Model.PromotionRuleCustom.ContainedPromotionName">
            <summary>
            Get or set Contained <see cref="T:InSite.Model.Promotion"/> by <see cref="P:InSite.Model.Promotion.Name"/>
            </summary>
        </member>
        <member name="P:InSite.Model.PromotionRuleCustom.Country">
            <summary>
            Get or set <see cref="P:InSite.Model.PromotionRuleCustom.Country"/>
            </summary>
        </member>
        <member name="P:InSite.Model.PromotionRuleCustom.State">
            <summary>
            Get or set <see cref="P:InSite.Model.PromotionRuleCustom.State"/>
            </summary>
        </member>
        <member name="P:InSite.Model.PromotionRuleCustom.Currency">
            <summary>
            Get or set <see cref="P:InSite.Model.PromotionRuleCustom.Currency"/>
            </summary>
        </member>
        <member name="P:InSite.Model.PromotionRuleCustom.Persona">
            <summary>
            Get or set <see cref="P:InSite.Model.PromotionRuleCustom.Persona"/>
            </summary>
        </member>
        <member name="T:InSite.Model.PromotionRuleCustomerIsNotOfCustomerType">
            <summary>
            Promotion rule requiring a customer not to have a specific CustomerType string.
            </summary>
        </member>
        <member name="M:InSite.Model.PromotionRuleCustomerIsNotOfCustomerType.IsValid(InSite.Model.CustomerOrder,InSite.Model.Customer)">
            <summary>
            Method to validate whether the rule passes/validates for the provided parameters.
            The order will be valid for the promotion if the Customer.CustomerType does not match
            CustomerType on this promotion rule.
            </summary>
            <param name="customerOrder"><see cref="T:InSite.Model.CustomerOrder"/> to validate rule against</param>
            <param name="customer"><see cref="T:InSite.Model.Customer"/> to validate rule against</param>
            <returns>true if valid</returns>
        </member>
        <member name="P:InSite.Model.PromotionRuleCustomerIsNotOfCustomerType.CustomerType">
            <summary>
            Comma separated list of customer types.
            </summary>
        </member>
        <member name="T:InSite.Model.PromotionRuleCustomerIsOfCustomerType">
            <summary>
            Promotion rule requiring a customer to have a specific CustomerType string.
            </summary>
        </member>
        <member name="M:InSite.Model.PromotionRuleCustomerIsOfCustomerType.IsValid(InSite.Model.CustomerOrder,InSite.Model.Customer)">
            <summary>
            Method to validate whether the rule passes/validates for the provided parameters.
            The order will be valid for the promotion if the Customer.CustomerType matches
            CustomerType on this promotion rule.
            </summary>
            <param name="customerOrder"><see cref="T:InSite.Model.CustomerOrder"/> to validate rule against</param>
            <param name="customer"><see cref="T:InSite.Model.Customer"/> to validate rule against</param>
            <returns>true if valid</returns>
        </member>
        <member name="P:InSite.Model.PromotionRuleCustomerIsOfCustomerType.CustomerType">
            <summary>
            Comma separated list of customer types.
            </summary>
        </member>
        <member name="T:InSite.Model.PromotionRuleCustomerOrderIsOfCurrency">
            <summary>
            <see cref="T:InSite.Model.PromotionRule"/> requiring a <see cref="T:InSite.Model.CustomerOrder"/> to have a specific <see cref="P:InSite.Model.PromotionRuleCustomerOrderIsOfCurrency.Currency"/>.
            </summary>
        </member>
        <member name="M:InSite.Model.PromotionRuleCustomerOrderIsOfCurrency.IsValid(InSite.Model.CustomerOrder,InSite.Model.Customer)">
            <summary>
            Method to validate whether the rule passes/validates for the provided parameters.
            The order will be valid for the promotion if the CustomerOrder.Currency matches
            <see cref="P:InSite.Model.PromotionRuleCustomerOrderIsOfCurrency.Currency"/> on this promotion rule.
            </summary>
            <param name="customerOrder"><see cref="T:InSite.Model.CustomerOrder"/> to validate rule against</param>
            <param name="customer"><see cref="T:InSite.Model.Customer"/> to validate rule against</param>
            <returns>true if valid</returns>
        </member>
        <member name="P:InSite.Model.PromotionRuleCustomerOrderIsOfCurrency.Currency">
            <summary>
            Comma separated list of customer types.
            </summary>
        </member>
        <member name="T:InSite.Model.PromotionRuleIsPersona">
            <summary>
            <see cref="T:InSite.Model.PromotionRule"/> that returns true if the current user is the specified <see cref="P:InSite.Model.PromotionRuleIsPersona.Persona"/>.
            </summary>
        </member>
        <member name="M:InSite.Model.PromotionRuleIsPersona.IsValid(InSite.Model.CustomerOrder,InSite.Model.Customer)">
            <summary>
            Returns true if the current user is of the specified <see cref="P:InSite.Model.PromotionRuleIsPersona.Persona"/>.
            </summary>
            <param name="customerOrder"></param>
            <param name="customer"></param>
            <returns></returns>
        </member>
        <member name="P:InSite.Model.PromotionRuleIsPersona.Persona">
            <summary>
            <see cref="P:InSite.Model.PromotionRuleIsPersona.Persona"/> to check for.
            </summary>
        </member>
        <member name="T:InSite.Model.PunchOut.PunchOutCustomerUserProfileMap">
            <summary>
            Class which defines the relationship from buying entities ship to id to the Suppliers <see cref="P:InSite.Model.PunchOut.PunchOutCustomerUserProfileMap.Customer"/> and <see cref="P:InSite.Model.PunchOut.PunchOutCustomerUserProfileMap.UserProfile"/>. 
            </summary>
        </member>
        <member name="P:InSite.Model.PunchOut.PunchOutCustomerUserProfileMap.AddressId">
            <summary>
            Get Set for buying organization address id.
            </summary>
        </member>
        <member name="P:InSite.Model.PunchOut.PunchOutCustomerUserProfileMap.Customer">
            <summary>
            Get Set Customer. The <see cref="P:InSite.Model.PunchOut.PunchOutCustomerUserProfileMap.Customer"/> represents the <see cref="P:InSite.Model.PunchOut.PunchOutCustomerUserProfileMap.Customer"/> bound to this <see cref="T:InSite.Model.PunchOut.PunchOutCustomerUserProfileMap"/>.
            </summary>
        </member>
        <member name="P:InSite.Model.PunchOut.PunchOutCustomerUserProfileMap.UserProfile">
            <summary>
            Get Set UserProfile. The <see cref="P:InSite.Model.PunchOut.PunchOutCustomerUserProfileMap.UserProfile"/> represents the <see cref="P:InSite.Model.PunchOut.PunchOutCustomerUserProfileMap.UserProfile"/> bound to this <see cref="T:InSite.Model.PunchOut.PunchOutCustomerUserProfileMap"/>.
            </summary>
        </member>
        <member name="T:InSite.Model.PunchOut.PunchOutOrderRequest">
            <summary>
            Class that represents a PunchOutOrder Request.  This is basically an object graph that represents
            the cXml PunchOutOrder Request.
            </summary>
        </member>
        <member name="M:InSite.Model.PunchOut.PunchOutOrderRequest.GetSupplierAuxilliartPartId">
            <summary>
            Method to retrieve the first <see cref="P:InSite.Model.PunchOut.PunchOutOrderRequestItemOut.SupplierPartAuxiliaryId"/> from the collection.  This value
            is a reference back the <see cref="P:InSite.Model.PunchOut.PunchOutOrderRequest.PunchOutSession"/>.Id. 
            </summary>
            <returns> The first <see cref="P:InSite.Model.PunchOut.PunchOutOrderRequestItemOut.SupplierPartAuxiliaryId"/> from the collection. If the collection is blank we return an empty string.</returns>
        </member>
        <member name="M:InSite.Model.PunchOut.PunchOutOrderRequest.AddPunchOutSessionItemOut(InSite.Model.PunchOut.PunchOutOrderRequestItemOut)">
            <summary>
            Method to add a <see cref="T:InSite.Model.PunchOut.PunchOutOrderRequestItemOut"/> to this <see cref="F:InSite.Model.PunchOut.PunchOutOrderRequest._punchOutOrderRequestItemsOut"/> collection.  
            If the collection <see cref="P:InSite.Model.PunchOut.PunchOutOrderRequest.PunchOutOrderRequestItemsOut"/> does not contain the provided <see cref="T:InSite.Model.PunchOut.PunchOutOrderRequestItemOut"/> parameter, 
            add it to the collection, associated the <see cref="P:InSite.Model.PunchOut.PunchOutOrderRequestItemOut.PunchOutOrderRequest"/>
            to this <see cref="T:InSite.Model.PunchOut.PunchOutOrderRequest"/>. If the collection all ready contains the provided parameter, do nothing.
            </summary>
            <param name="punchOutOrderRequestItemOut"><see cref="T:InSite.Model.PunchOut.PunchOutOrderRequestItemOut"/> to add to the collection <see cref="P:InSite.Model.PunchOut.PunchOutOrderRequest.PunchOutOrderRequestItemsOut"/>.</param>
        </member>
        <member name="M:InSite.Model.PunchOut.PunchOutOrderRequest.RemovePunchOutSessionItemOut(InSite.Model.PunchOut.PunchOutOrderRequestItemOut)">
            <summary>
            Method to remove a <see cref="T:InSite.Model.PunchOut.PunchOutOrderRequestItemOut"/> from this <see cref="P:InSite.Model.PunchOut.PunchOutOrderRequest.PunchOutOrderRequestItemsOut"/> collection.
            If the collection <see cref="P:InSite.Model.PunchOut.PunchOutOrderRequest.PunchOutOrderRequestItemsOut"/> contains the provided <see cref="T:InSite.Model.PunchOut.PunchOutOrderRequestItemOut"/> parameter, remove it
            from the <see cref="P:InSite.Model.PunchOut.PunchOutOrderRequest.PunchOutOrderRequestItemsOut"/> collection.  If the <see cref="P:InSite.Model.PunchOut.PunchOutOrderRequest.PunchOutOrderRequestItemsOut"/> collection does not contain the provided <see cref="T:InSite.Model.PunchOut.PunchOutOrderRequestItemOut"/> parameter do nothing
            </summary>
            <param name="punchOutOrderRequestItemOut"><see cref="T:InSite.Model.PunchOut.PunchOutOrderRequestItemOut"/> to remove from the <see cref="P:InSite.Model.PunchOut.PunchOutOrderRequest.PunchOutOrderRequestItemsOut"/> collection.</param>
        </member>
        <member name="M:InSite.Model.PunchOut.PunchOutOrderRequest.AddPunchOutValidationMessage(InSite.Model.PunchOut.PunchOutOrderRequestMessage)">
            <summary>
            Method to add a <see cref="T:InSite.Model.PunchOut.PunchOutOrderRequestMessage"/> to this <see cref="P:InSite.Model.PunchOut.PunchOutOrderRequest.PunchOutValidationMessages"/> collection.  
            If the collection <see cref="P:InSite.Model.PunchOut.PunchOutOrderRequest.PunchOutValidationMessages"/> does not contain the provided <see cref="T:InSite.Model.PunchOut.PunchOutOrderRequestMessage"/> parameter, 
            add it to the collection, associated the <see cref="P:InSite.Model.PunchOut.PunchOutOrderRequestMessage.PunchOutOrderRequest"/>
            to this <see cref="T:InSite.Model.PunchOut.PunchOutOrderRequest"/>. If the collection all ready contains the provided parameter, do nothing.
            </summary>
            <param name="message"><see cref="T:InSite.Model.PunchOut.PunchOutOrderRequestMessage"/> to add to the collection <see cref="P:InSite.Model.PunchOut.PunchOutOrderRequest.PunchOutValidationMessages"/>.</param>
        </member>
        <member name="M:InSite.Model.PunchOut.PunchOutOrderRequest.AddPunchOutValidationMessage(InSite.Model.PunchOut.PunchOutOrderRequestMessageType,System.String)">
            <summary>
            Method to add a <see cref="T:InSite.Model.PunchOut.PunchOutOrderRequestMessage"/> to this <see cref="P:InSite.Model.PunchOut.PunchOutOrderRequest.PunchOutValidationMessages"/> collection.  
            If the collection <see cref="P:InSite.Model.PunchOut.PunchOutOrderRequest.PunchOutValidationMessages"/> does not contain the provided <see cref="T:InSite.Model.PunchOut.PunchOutOrderRequestMessage"/> parameter, 
            add it to the collection, associated the <see cref="P:InSite.Model.PunchOut.PunchOutOrderRequestMessage.PunchOutOrderRequest"/>
            to this <see cref="T:InSite.Model.PunchOut.PunchOutOrderRequest"/>. If the collection all ready contains the provided parameter, do nothing.
            </summary>
            <param name="messageType"><see cref="T:InSite.Model.PunchOut.PunchOutOrderRequestMessageType"/>.</param>
            <param name="message">optional name.</param>
        </member>
        <member name="M:InSite.Model.PunchOut.PunchOutOrderRequest.RemovePunchOutValidationMessage(InSite.Model.PunchOut.PunchOutOrderRequestMessage)">
            <summary>
            Method to remove a <see cref="T:InSite.Model.PunchOut.PunchOutOrderRequestMessage"/> from this <see cref="P:InSite.Model.PunchOut.PunchOutOrderRequest.PunchOutValidationMessages"/> collection.
            If the collection <see cref="P:InSite.Model.PunchOut.PunchOutOrderRequest.PunchOutValidationMessages"/> contains the provided <see cref="T:InSite.Model.PunchOut.PunchOutOrderRequestMessage"/> parameter, remove it
            from the <see cref="P:InSite.Model.PunchOut.PunchOutOrderRequest.PunchOutValidationMessages"/> collection.  If the <see cref="P:InSite.Model.PunchOut.PunchOutOrderRequest.PunchOutValidationMessages"/> collection does not contain the provided <see cref="T:InSite.Model.PunchOut.PunchOutOrderRequestItemOut"/> parameter do nothing
            </summary>
            <param name="message"><see cref="T:InSite.Model.PunchOut.PunchOutOrderRequestMessage"/> to remove from the <see cref="P:InSite.Model.PunchOut.PunchOutOrderRequest.PunchOutValidationMessages"/> collection.</param>
        </member>
        <member name="M:InSite.Model.PunchOut.PunchOutOrderRequest.AddPunchOutOrderRequestExtrisic(InSite.Model.PunchOut.PunchOutOrderRequestExtrinsic)">
            <summary>
            Method to add a <see cref="T:InSite.Model.PunchOut.PunchOutOrderRequestExtrinsic"/> to this <see cref="P:InSite.Model.PunchOut.PunchOutOrderRequest.PunchOutOrderRequestExtrinsics"/> collection.  
            If the collection <see cref="P:InSite.Model.PunchOut.PunchOutOrderRequest.PunchOutOrderRequestExtrinsics"/> does not contain the provided <see cref="T:InSite.Model.PunchOut.PunchOutOrderRequestExtrinsic"/> parameter, 
            add it to the collection, associated the <see cref="P:InSite.Model.PunchOut.PunchOutOrderRequestExtrinsic.PunchOutOrderRequest"/>
            to this <see cref="T:InSite.Model.PunchOut.PunchOutOrderRequest"/>. If the collection all ready contains the provided parameter, do nothing.
            </summary>
            <param name="orderRequestExtrinsic"><see cref="T:InSite.Model.PunchOut.PunchOutSessionExtrinsic"/> to add to the collection <see cref="P:InSite.Model.PunchOut.PunchOutOrderRequest.PunchOutOrderRequestExtrinsics"/>.</param>
        </member>
        <member name="P:InSite.Model.PunchOut.PunchOutOrderRequest.FromIdentity">
            <summary>
            Get Set FromIdentity which represents the buying organization. 
            </summary>
        </member>
        <member name="P:InSite.Model.PunchOut.PunchOutOrderRequest.ToIdentity">
            <summary>
            Get Set ToIdentity which represents the supplier's organization
            </summary>
        </member>
        <member name="P:InSite.Model.PunchOut.PunchOutOrderRequest.SenderIdentity">
            <summary>
            Get Set SenderIdentity which represents the previous relaying entity, for example SupplierSolutions, Ariba Network, etc...
            </summary>
        </member>
        <member name="P:InSite.Model.PunchOut.PunchOutOrderRequest.FromUserAgent">
            <summary>
            Get Set FromUserAgent which represents the calling system type, for example: Procurement System 2.0
            </summary>
        </member>
        <member name="P:InSite.Model.PunchOut.PunchOutOrderRequest.OrderId">
            <summary>
            Get Set OrderId. This is comes from the OrderRequestHeader orderID attribute in the cXml.  This identifies the order, this is analogous to the
            puchase order number.
            </summary>
        </member>
        <member name="P:InSite.Model.PunchOut.PunchOutOrderRequest.OrderDate">
            <summary>
            Get Set OrderDate. This is comes from the OrderRequestHeader orderDate attribute in the cXml. The date and time the order was placed,
            in ISO 8601 format. 
            </summary>
        </member>
        <member name="P:InSite.Model.PunchOut.PunchOutOrderRequest.OrderType">
            <summary>
            Get Set OrderType. This is comes from the OrderRequestHeader orderType attribute in the cXml. This is an optional value in the cXml and may not be passed.  
            Type of order: regular, release (a release against a master agreement or against a blanket purchase order), or blanket (a blanket purchase order).
            </summary>
        </member>
        <member name="P:InSite.Model.PunchOut.PunchOutOrderRequest.ReleaseRequired">
            <summary>
            Get Set ReleaseRequired. This is comes from the OrderRequestHeader releaseRequired attribute in the cXml. This is an optional value in the cXml 
            and may not be passed. Used only if orderType is blanket to indicate whether the blanket order requires releases (purchase orders). If “yes” is 
            specified, the blanket order requires separate release orders before the supplier can act. If not specified, the supplier can act on the blanket 
            order itself. The default is unspecified.
            </summary>
        </member>
        <member name="P:InSite.Model.PunchOut.PunchOutOrderRequest.Type">
            <summary>
            Get Set Type. This is comes from the OrderRequestHeader type attribute in the cXml. This is an optional value in the cXml 
            and may not be passed. Type of request: new (default), update, or delete. Update and delete orders must use the
            DocumentReference element with the PayloadId to refer to the original purchase order.
            </summary>
        </member>
        <member name="P:InSite.Model.PunchOut.PunchOutOrderRequest.OrderVersion">
            <summary>
            Get Set OrderVersion. This is comes from the OrderRequestHeader orderVersion attribute in the cXml. This is an optional value in the cXml 
            and may not be passed. Specifies the order version number of change orders, starting with “1” for the original order.
            </summary>
        </member>
        <member name="P:InSite.Model.PunchOut.PunchOutOrderRequest.IsInternalVersion">
            <summary>
            Get Set IsInternalVersion. This is comes from the OrderRequestHeader isInternalVersion attribute in the cXml. This is an optional value in 
            the cXml and may not be passed. Indicates whether the order includes changes that are relevant only within the buying organization. 
            For example, a minor change was made that does not affect information used by the supplier. Suppliers might not see internal
            order versions, depending on their customers' configuration.
            </summary>
        </member>
        <member name="P:InSite.Model.PunchOut.PunchOutOrderRequest.AgreementId">
            <summary>
            Get Set AgreementId. This is comes from the OrderRequestHeader agreementID attribute in the cXml. This is an optional value in 
            the cXml and may not be passed. Used only if orderType is release to indicate the buyer’s identifier for associated master
            agreement or blanket purchase order.
            </summary>
        </member>
        <member name="P:InSite.Model.PunchOut.PunchOutOrderRequest.AgreementPayloadId">
            <summary>
            Get Set AgreementPayloadId. This is comes from the OrderRequestHeader agreementPayloadID attribute in the cXml. This is an optional value in 
            the cXml and may not be passed. Used only if orderType is release to indicate the XML document payload ID for the associated
            master agreement or blanket purchase order.
            </summary>
        </member>
        <member name="P:InSite.Model.PunchOut.PunchOutOrderRequest.ParentAgreementId">
            <summary>
            Get Set ParentAgreementId. This is comes from the OrderRequestHeader parentAgreementID attribute in the cXml. This is an optional value in 
            the cXml and may not be passed. Used only if orderType is blanket to indicate the parent blanket order.
            </summary>
        </member>
        <member name="P:InSite.Model.PunchOut.PunchOutOrderRequest.ParentAgreementPayloadId">
            <summary>
            Get Set ParentAgreementPayloadId. This is comes from the OrderRequestHeader parentAgreementPayloadI attribute in the cXml. This is an 
            optional value in the cXml and may not be passed. Used only if orderType is blanket to indicate the document reference identifier for
            the parent blanket order.
            </summary>
        </member>
        <member name="P:InSite.Model.PunchOut.PunchOutOrderRequest.EffectiveDate">
            <summary>
            Get Set EffectiveDate. This is comes from the OrderRequestHeader effectiveDate attribute in the cXml. This is an optional value in 
            the cXml and may not be passed. Required if orderType is blanket to indicate the date the blanket order becomes effective (the date 
            from which releases can be created or invoices submitted for the blanket order).
            </summary>
        </member>
        <member name="P:InSite.Model.PunchOut.PunchOutOrderRequest.ExpirationDate">
            <summary>
            Get Set ExpirationDate. This is comes from the OrderRequestHeader effectiveDate attribute in the cXml. This is an optional value in 
            the cXml and may not be passed. Used only if orderType is blanket to indicate the date the blanket order expires. Releases cannot be 
            created against the blanket order after this date.
            </summary>
        </member>
        <member name="P:InSite.Model.PunchOut.PunchOutOrderRequest.RequisitionId">
            <summary>
            Get Set RequisitionId. This is comes from the OrderRequestHeader requisitionID attribute in the cXml. This is an optional value in 
            the cXml and may not be passed. The buyer’s requisition identifier for this entire order. It might be the same as orderID, and it 
            might not be included at all. Must not be included if requisitionID is specified in any ItemOut elements.
            </summary>
        </member>
        <member name="P:InSite.Model.PunchOut.PunchOutOrderRequest.ShipComplete">
            <summary>
            Get Set ShipComplete. This is comes from the OrderRequestHeader shipComplete attribute in the cXml. This is an optional value in 
            the cXml and may not be passed. A preference against partial shipments. The only allowed value is “yes”. By default, items are shipped 
            when available. Because orders might include items with varying ShipTo elements, only groups of items with common shipping locations 
            should be held until complete when shipComplete=“yes”.
            </summary>
        </member>
        <member name="P:InSite.Model.PunchOut.PunchOutOrderRequest.Total">
            <summary>
            Get Set Total.  This comes from the cXML/Header/OrderRequest/OrderRequestHeader/Total/Money node in the cXml.  This element contains the total cost for the items
            in the order, excluding tax and shipping.
            </summary>
        </member>
        <member name="P:InSite.Model.PunchOut.PunchOutOrderRequest.TotalCurrency">
            <summary>
            Get Set Total Currency. This comes from the xml node attibute currency from the cXML/Header/OrderRequest/OrderRequestHeader/Total/Money node in the cXml.
            Example: USD.
            </summary>
        </member>
        <member name="P:InSite.Model.PunchOut.PunchOutOrderRequest.Shipping">
            <summary>
            Get Set Shipping. This comes from the xml node cXML/Header/OrderRequest/OrderRequestHeader/Shipping/Money node in the cXml.  This element 
            contains the total cost of shipping. If this element exists in the header, it can not exist in the ItemsOuts.  If it exists in the ItemsOuts it can not exist at the
            header level.
            </summary>
        </member>
        <member name="P:InSite.Model.PunchOut.PunchOutOrderRequest.ShippingCurrency">
            <summary>
            Get Set ShippingCurrency. This comes from the xml attribute currency from the xml node cXML/Header/OrderRequest/OrderRequestHeader/Shipping/Money node in the cXml.
            This element contains the currency type for the total cost of shipping. If this element exists in the header, it can not exist in the ItemsOuts.  
            If it exists in the ItemsOuts it can not exist at the header level. 
            </summary>
        </member>
        <member name="P:InSite.Model.PunchOut.PunchOutOrderRequest.ShippingDescription">
            <summary>
            Get Set ShippingDescription. This comes from the xml node cXML/Header/OrderRequest/OrderRequestHeader/Shipping/Money/Description node in the cXml.
            This element contains the shipping method for shipping. If this element exists in the header, it can not exist in the ItemsOuts.  
            If it exists in the ItemsOuts it can not exist at the header level. 
            </summary>
        </member>
        <member name="P:InSite.Model.PunchOut.PunchOutOrderRequest.PunchOutOrderRequestCXml">
            <summary>
            Get or Sets the raw incoming punch out setup request cXml.  Best practice is to remove the string contained in the <SharedSecret></SharedSecret> xml node. 
            </summary>
        </member>
        <member name="P:InSite.Model.PunchOut.PunchOutOrderRequest.BillToAddressId">
            <summary>
            Get or Set BillToAddressId which represents the Request/OrderRequest/BillTo/Address addressId field from the 
            PunchOutOrderRequest's cXml.
            </summary>
        </member>
        <member name="P:InSite.Model.PunchOut.PunchOutOrderRequest.BillToName">
            <summary>
            Get or Set BillToName which represents the Request/OrderRequest/BillTo/Address/Name Node from the 
            PunchOutOrderRequest's cXml.
            </summary>
        </member>
        <member name="P:InSite.Model.PunchOut.PunchOutOrderRequest.BillToDeliver1">
            <summary>
            Get or Set BillToDeliverTo1 which represents the Request/OrderRequest/BillTo/Address/PostalAddress/DeliverTo Node from the 
            PunchOutOrderRequest's cXml. There can be two deliverTo nodes.  The first one generally represents the name of the person receiving the goods.
            </summary>
        </member>
        <member name="P:InSite.Model.PunchOut.PunchOutOrderRequest.BillToDeliver2">
            <summary>
            Get or Set BillToDeliverTo2 which represents the Request/OrderRequest/BillTo/Address/PostalAddress/DeliverTo Node from the 
            PunchOutOrderRequest's cXml. There can be two deliverTo nodes.  The second one generally represents the the location for delivery
            for example (building, city, office, mailstop).
            </summary>
        </member>
        <member name="P:InSite.Model.PunchOut.PunchOutOrderRequest.BillToStreet">
            <summary>
            Get or Set BillToStreet which represents the Request/OrderRequest/BillTo/Address/PostalAddress/Street Node from the 
            PunchOutOrderRequest's cXml.
            </summary>
        </member>
        <member name="P:InSite.Model.PunchOut.PunchOutOrderRequest.BillToStreet2">
            <summary>
            Get or Set BillToStreet which represents the 2nd Request/OrderRequest/BillTo/Address/PostalAddress/Street Node from the 
            PunchOutOrderRequest's cXml.
            </summary>
        </member>
        <member name="P:InSite.Model.PunchOut.PunchOutOrderRequest.BillToStreet3">
            <summary>
            Get or Set BillToStreet which represents the 3rd Request/OrderRequest/BillTo/Address/PostalAddress/Street Node from the 
            PunchOutOrderRequest's cXml.
            </summary>
        </member>
        <member name="P:InSite.Model.PunchOut.PunchOutOrderRequest.BillToStreet4">
            <summary>
            Get or Set BillToStreet which represents the 4th Request/OrderRequest/BillTo/Address/PostalAddress/Street Node from the 
            PunchOutOrderRequest's cXml.
            </summary>
        </member>
        <member name="P:InSite.Model.PunchOut.PunchOutOrderRequest.BillToCity">
            <summary>
            Get or Set BillToCity which represents the Request/OrderRequest/BillTo/Address/PostalAddress/City Node from the 
            PunchOutOrderRequest's cXml.
            </summary>
        </member>
        <member name="P:InSite.Model.PunchOut.PunchOutOrderRequest.BillToState">
            <summary>
            Get or Set BillToState which represents the Request/OrderRequest/BillTo/Address/PostalAddress/State Node from the 
            PunchOutOrderRequest's cXml.
            </summary>
        </member>
        <member name="P:InSite.Model.PunchOut.PunchOutOrderRequest.BillToPostalCode">
            <summary>
            Get or Set BillToPostalCode which represents the Request/OrderRequest/ShipTo/Address/PostalAddress/PostalCode Node from the 
            PunchOutOrderRequest's cXml.
            </summary>
        </member>
        <member name="P:InSite.Model.PunchOut.PunchOutOrderRequest.BillToIsoCountryCode">
            <summary>
            Get or Set BillToIsoCountryCode which represents the Request/OrderRequest/ShipTo/Address/PostalAddress/Country Node's isoCountryCode property from the 
            PunchOutOrderRequest's cXml.
            </summary>
        </member>
        <member name="P:InSite.Model.PunchOut.PunchOutOrderRequest.BillToCountry">
            <summary>
            Get or Set BillToCountry which represents the Request/OrderRequest/ShipTo/Address/PostalAddress/Country Node from the 
            PunchOutOrderRequest's cXml.
            </summary>
        </member>
        <member name="P:InSite.Model.PunchOut.PunchOutOrderRequest.BillToEmail">
            <summary>
            Get or Set BillToEmail which represents the Request/OrderRequest/BillTo/Address/Email Node from the 
            PunchOutOrderRequest's cXml.
            </summary>
        </member>
        <member name="P:InSite.Model.PunchOut.PunchOutOrderRequest.BillToTelephoneNumber">
            <summary>
            Get or Set BillToTelephoneNumber which represents the Request/OrderRequest/BillTo/Address/Phone/TelephoneNumber/Number Node from the 
            PunchOutOrderRequest's cXml.
            </summary>
        </member>
        <member name="P:InSite.Model.PunchOut.PunchOutOrderRequest.BillToTelephoneCountryCode">
            <summary>
            Get or Set BillToTelephoneCountryCode which represents the Request/OrderRequest/BillTo/Address/Phone/TelephoneNumber/CountryCode Node from the 
            PunchOutOrderRequest's cXml.
            </summary>
        </member>
        <member name="P:InSite.Model.PunchOut.PunchOutOrderRequest.BillToTelephoneIsoCountryCode">
            <summary>
            Get or Set BillToTelephoneIsoCountryCode which represents an attribute from Request/OrderRequest/BillTo/Address/Phone/TelephoneNumber/CountryCode Node from the 
            PunchOutOrderRequest's cXml.
            </summary>
        </member>
        <member name="P:InSite.Model.PunchOut.PunchOutOrderRequest.BillToTelephoneAreaOrCityCode">
            <summary>
            Get or Set BillToTelephoneAreaOrCityCode which represents the Request/OrderRequest/BillTo/Address/Phone/TelephoneNumber/AreaOrCityCode Node from the 
            PunchOutOrderRequest's cXml.
            </summary>
        </member>
        <member name="P:InSite.Model.PunchOut.PunchOutOrderRequest.ShipToAddressId">
            <summary>
            Get or Set ShipToAddressId which represents the Request/OrderRequest/ShipTo/Address addressId field from the 
            PunchOutOrderRequest's cXml.
            </summary>
        </member>
        <member name="P:InSite.Model.PunchOut.PunchOutOrderRequest.ShipToName">
            <summary>
            Get or Set ShipToName which represents the Request/OrderRequest/ShipTo/Address/Name Node from the 
            PunchOutOrderRequest's cXml.
            </summary>
        </member>
        <member name="P:InSite.Model.PunchOut.PunchOutOrderRequest.ShipToDeliver1">
            <summary>
            Get or Set ShipToDeliver1 which represents the Request/OrderRequest/ShipTo/Address/PostalAddress/DeliverTo Node from the 
            PunchOutOrderRequest's cXml. There can be two deliverTo nodes.  The first one generally represents the name of the person receiving the goods.
            </summary>
        </member>
        <member name="P:InSite.Model.PunchOut.PunchOutOrderRequest.ShipToDeliver2">
            <summary>
            Get or Set ShipToDeliver2 which represents the Request/OrderRequest/ShipTo/Address/PostalAddress/DeliverTo Node from the 
            PunchOutOrderRequest's cXml. There can be two deliverTo nodes.  The second one generally represents the the location for delivery
            for example (building, city, office, mailstop).
            </summary>
        </member>
        <member name="P:InSite.Model.PunchOut.PunchOutOrderRequest.ShipToStreet">
            <summary>
            Get or Set ShipToStreet which represents the Request/OrderRequest/ShipTo/Address/PostalAddress/Street Node from the 
            PunchOutOrderRequest's cXml.
            </summary>
        </member>
        <member name="P:InSite.Model.PunchOut.PunchOutOrderRequest.ShipToStreet2">
            <summary>
            Get or Set ShipToStreet which represents the 2nd Request/OrderRequest/ShipTo/Address/PostalAddress/Street Node from the 
            PunchOutOrderRequest's cXml.
            </summary>
        </member>
        <member name="P:InSite.Model.PunchOut.PunchOutOrderRequest.ShipToStreet3">
            <summary>
            Get or Set ShipToStreet which represents the 3rd Request/OrderRequest/ShipTo/Address/PostalAddress/Street Node from the 
            PunchOutOrderRequest's cXml.
            </summary>
        </member>
        <member name="P:InSite.Model.PunchOut.PunchOutOrderRequest.ShipToStreet4">
            <summary>
            Get or Set ShipToStreet which represents the 4th Request/OrderRequest/ShipTo/Address/PostalAddress/Street Node from the 
            PunchOutOrderRequest's cXml.
            </summary>
        </member>
        <member name="P:InSite.Model.PunchOut.PunchOutOrderRequest.ShipToCity">
            <summary>
            Get or Set ShipToCity which represents the Request/OrderRequest/ShipTo/Address/PostalAddress/City Node from the 
            PunchOutOrderRequest's cXml.
            </summary>
        </member>
        <member name="P:InSite.Model.PunchOut.PunchOutOrderRequest.ShipToState">
            <summary>
            Get or Set ShipToState which represents the Request/OrderRequest/ShipTo/Address/PostalAddress/State Node from the 
            PunchOutOrderRequest's cXml.
            </summary>
        </member>
        <member name="P:InSite.Model.PunchOut.PunchOutOrderRequest.ShipToPostalCode">
            <summary>
            Get or Set ShipToPostalCode which represents the Request/OrderRequest/ShipTo/Address/PostalAddress/PostalCode Node from the 
            PunchOutOrderRequest's cXml.
            </summary>
        </member>
        <member name="P:InSite.Model.PunchOut.PunchOutOrderRequest.ShipToIsoCountryCode">
            <summary>
            Get or Set ShipToIsoCountryCode which represents the Request/OrderRequest/ShipTo/Address/PostalAddress/Country Node's isoCountryCode property from the 
            PunchOutOrderRequest's cXml.
            </summary>
        </member>
        <member name="P:InSite.Model.PunchOut.PunchOutOrderRequest.ShipToCountry">
            <summary>
            Get or Set ShipToCountry which represents the Request/OrderRequest/ShipTo/Address/PostalAddress/Country Node from the 
            PunchOutOrderRequest's cXml.
            </summary>
        </member>
        <member name="P:InSite.Model.PunchOut.PunchOutOrderRequest.ShipToEmail">
            <summary>
            Get or Set ShipToEmail which represents the Request/OrderRequest/ShipTo/Address/Email Node from the 
            PunchOutOrderRequest's cXml.
            </summary>
        </member>
        <member name="P:InSite.Model.PunchOut.PunchOutOrderRequest.ShipToTelephoneNumber">
            <summary>
            Get or Set ShipToTelephoneNumber which represents the Request/OrderRequest/ShipTo/Address/Phone/TelephoneNumber/Number Node from the 
            PunchOutOrderRequest's cXml.
            </summary>
        </member>
        <member name="P:InSite.Model.PunchOut.PunchOutOrderRequest.ShipToTelephoneCountryCode">
            <summary>
            Get or Set ShipToTelephoneCountryCode which represents the Request/OrderRequest/ShipTo/Address/Phone/TelephoneNumber/CountryCode Node from the 
            PunchOutOrderRequest's cXml.
            </summary>
        </member>
        <member name="P:InSite.Model.PunchOut.PunchOutOrderRequest.ShipToTelephoneIsoCountryCode">
            <summary>
            Get or Set ShipToTelephoneAreaOrCityCode which represents an attribute from Request/OrderRequest/ShipTo/Address/Phone/TelephoneNumber/CountryCode Node from the 
            PunchOutOrderRequest's cXml.
            </summary>
        </member>
        <member name="P:InSite.Model.PunchOut.PunchOutOrderRequest.ShipToTelephoneAreaOrCityCode">
            <summary>
            Get or Set ShipToTelephoneAreaOrCityCode which represents the Request/OrderRequest/ShipTo/Address/Phone/TelephoneNumber/AreaOrCityCode Node from the 
            PunchOutOrderRequest's cXml.
            </summary>
        </member>
        <member name="P:InSite.Model.PunchOut.PunchOutOrderRequest.OrderResponse">
            <summary>
            Get or Set the cXMl response to the Order Request.
            </summary>
        </member>
        <member name="P:InSite.Model.PunchOut.PunchOutOrderRequest.CustomerPo">
            <summary>
            Get or Set the CustomerPo coming in as an extrinsic cXML/Request/OrderRequest/OrderRequestHeader/Extrinsic with the name CustomerPO.
            </summary>
        </member>
        <member name="P:InSite.Model.PunchOut.PunchOutOrderRequest.SecretWord">
            <summary>
            Get Set SecretWord, this is a non persistable value via ORM.  This is a transient value only used for the authentication process.
            </summary>
        </member>
        <member name="P:InSite.Model.PunchOut.PunchOutOrderRequest.PunchOutOrderRequestItemsOut">
            <summary>
            Get Set PunchOutOrderRequestItemOuts which is a collection of <see cref="T:InSite.Model.PunchOut.PunchOutOrderRequestItemOut"/>'s.  They represent each  
            Product and orderline level detail.
            </summary>
        </member>
        <member name="P:InSite.Model.PunchOut.PunchOutOrderRequest.PunchOutValidationMessages">
            <summary>
            Get Set PunchOutValidationMessage which is a collection of <see cref="T:InSite.Model.PunchOut.PunchOutOrderRequestMessage"/>s. Which represent
            errors/warning on the converion of the <see cref="T:InSite.Model.PunchOut.PunchOutOrderRequest"/> to a <see cref="P:InSite.Model.PunchOut.PunchOutOrderRequest.CustomerOrder"/>. 
            </summary>
        </member>
        <member name="P:InSite.Model.PunchOut.PunchOutOrderRequest.PunchOutOrderRequestExtrinsics">
            <summary>
             Get Set PunchOutOrderRequestExtrinsics which is a collection of <see cref="T:InSite.Model.PunchOut.PunchOutOrderRequestExtrinsic"/>'s.  They represent addition data coming 
            from the originating <see cref="T:InSite.Model.PunchOut.PunchOutOrderRequest"/>
            </summary>
        </member>
        <member name="P:InSite.Model.PunchOut.PunchOutOrderRequest.Comments">
            <summary>
            Get Set Comments whiich represents the OrderRequestHeader/Comments node of the cXml.
            </summary>
        </member>
        <member name="P:InSite.Model.PunchOut.PunchOutOrderRequest.PaymentCardNumber">
            <summary>
            Get Set Credit Card Number for payment processing.  This is a transient value and will not be persisted
            to the Database.  
            </summary>
        </member>
        <member name="P:InSite.Model.PunchOut.PunchOutOrderRequest.PaymentCardDate">
            <summary>
            Get Set Credit Card Expiration Date.  This is a transient value and will not be persisted to the
            Database.
            </summary>
        </member>
        <member name="P:InSite.Model.PunchOut.PunchOutOrderRequest.CustomerOrder">
            <summary>
            <see cref="P:InSite.Model.PunchOut.PunchOutOrderRequest.CustomerOrder"/> that was submitted for this <see cref="T:InSite.Model.PunchOut.PunchOutOrderRequest"/> it can be null.
            </summary>
        </member>
        <member name="P:InSite.Model.PunchOut.PunchOutOrderRequest.UserProfile">
            <summary>
            <see cref="P:InSite.Model.PunchOut.PunchOutOrderRequest.UserProfile"/> that made the <see cref="T:InSite.Model.PunchOut.PunchOutOrderRequest"/>. It can be null;
            </summary>
        </member>
        <member name="P:InSite.Model.PunchOut.PunchOutOrderRequest.PunchOutSession">
            <summary>
            <see cref="P:InSite.Model.PunchOut.PunchOutOrderRequest.PunchOutSession"/> for <see cref="P:InSite.Model.PunchOut.PunchOutOrderRequest.CustomerOrder"/>s that originated on the website.  It can be null.
            </summary>
        </member>
        <member name="T:InSite.Model.PunchOut.PunchOutOrderRequestExtrinsic">
            <summary>
            Class which represents addition data coming from the Punch Out Order Request Extrinsic values in the cXml.
            </summary>
        </member>
        <member name="P:InSite.Model.PunchOut.PunchOutOrderRequestExtrinsic.Name">
            <summary>
            Get Set Name which represents the extrinsic key name.
            </summary>
            <example>
             <Extrinsic name="UniqueName">Joe Smith</Extrinsic> 
            The value in Name would be "UniqueName".
            </example>
        </member>
        <member name="P:InSite.Model.PunchOut.PunchOutOrderRequestExtrinsic.Value">
            <summary>
            Get Set Value with represents the extrinsic keys value.
            </summary>
            /// <example>
             <Extrinsic name="UniqueName">Joe Smith</Extrinsic> 
            The value in Value would be "Joe Smith".
            </example>
        </member>
        <member name="P:InSite.Model.PunchOut.PunchOutOrderRequestExtrinsic.PunchOutOrderRequest">
            <summary>
            Get Set <see cref="P:InSite.Model.PunchOut.PunchOutOrderRequestExtrinsic.PunchOutOrderRequest"/> which is the aggregate root for this <see cref="T:InSite.Model.PunchOut.PunchOutOrderRequestExtrinsic"/>.
            </summary>
        </member>
        <member name="T:InSite.Model.PunchOut.PunchOutOrderRequestItemOut">
            <summary>
            Class that represents the cXml PunchOutOrderRequest Item Out data.
            </summary>
        </member>
        <member name="M:InSite.Model.PunchOut.PunchOutOrderRequestItemOut.AddPunchOutValidationMessage(InSite.Model.PunchOut.PunchOutOrderRequestMessage)">
            <summary>
            Method to add a <see cref="T:InSite.Model.PunchOut.PunchOutOrderRequestMessage"/> to this <see cref="P:InSite.Model.PunchOut.PunchOutOrderRequestItemOut.PunchOutValidationMessages"/> collection.  
            If the collection <see cref="P:InSite.Model.PunchOut.PunchOutOrderRequestItemOut.PunchOutValidationMessages"/> does not contain the provided <see cref="T:InSite.Model.PunchOut.PunchOutOrderRequestMessage"/> parameter, 
            add it to the collection, associated the <see cref="P:InSite.Model.PunchOut.PunchOutOrderRequestMessage.PunchOutOrderRequestItemOut"/>
            to this <see cref="T:InSite.Model.PunchOut.PunchOutOrderRequestItemOut"/>. If the collection all ready contains the provided parameter, do nothing.
            </summary>
            <param name="message"><see cref="T:InSite.Model.PunchOut.PunchOutOrderRequestMessage"/> to add to the collection <see cref="P:InSite.Model.PunchOut.PunchOutOrderRequestItemOut.PunchOutValidationMessages"/>.</param>
        </member>
        <member name="M:InSite.Model.PunchOut.PunchOutOrderRequestItemOut.RemovePunchOutValidationMessage(InSite.Model.PunchOut.PunchOutOrderRequestMessage)">
            <summary>
            Method to remove a <see cref="T:InSite.Model.PunchOut.PunchOutOrderRequestMessage"/> from this <see cref="P:InSite.Model.PunchOut.PunchOutOrderRequestItemOut.PunchOutValidationMessages"/> collection.
            If the collection <see cref="P:InSite.Model.PunchOut.PunchOutOrderRequestItemOut.PunchOutValidationMessages"/> contains the provided <see cref="T:InSite.Model.PunchOut.PunchOutOrderRequestMessage"/> parameter, remove it
            from the <see cref="P:InSite.Model.PunchOut.PunchOutOrderRequestItemOut.PunchOutValidationMessages"/> collection.  If the <see cref="P:InSite.Model.PunchOut.PunchOutOrderRequestItemOut.PunchOutValidationMessages"/> collection does not contain the provided <see cref="T:InSite.Model.PunchOut.PunchOutOrderRequestItemOut"/> parameter do nothing
            </summary>
            <param name="message"><see cref="T:InSite.Model.PunchOut.PunchOutOrderRequestMessage"/> to remove from the <see cref="P:InSite.Model.PunchOut.PunchOutOrderRequestItemOut.PunchOutValidationMessages"/> collection.</param>
        </member>
        <member name="P:InSite.Model.PunchOut.PunchOutOrderRequestItemOut.SupplierPartId">
            <summary>
            Get Set the SupplierPartId which will represent the supplier's identifier for the Product
            </summary>
        </member>
        <member name="P:InSite.Model.PunchOut.PunchOutOrderRequestItemOut.SupplierPartAuxiliaryId">
            <summary>
            Get Set the SupplierPartAuxiliaryId which in a repunch mode will be the <see cref="T:InSite.Model.PunchOut.PunchOutSession"/> PunchOutSessionId. It comes from the
            
            
            </summary>
        </member>
        <member name="P:InSite.Model.PunchOut.PunchOutOrderRequestItemOut.Quantity">
            <summary>
            Get Set the Quantity which represents the quantity ordered. It corresponds to the cXML/Request/OrderRequest/ItemOut quantity attribute.
            </summary>
        </member>
        <member name="P:InSite.Model.PunchOut.PunchOutOrderRequestItemOut.LineNumber">
            <summary>
            Get Set the position of the item within the order. The ordinal value increases once per <see cref="T:InSite.Model.PunchOut.PunchOutOrderRequestItemOut"/> in a new
            Order Request.  Clients should always specify this attribute in an order request.  It is an optional value in the incoming cXml PunchOut Order 
            Request. It corresponds to the cXML/Request/OrderRequest/ItemOut lineNumber attribute.
            </summary>
        </member>
        <member name="P:InSite.Model.PunchOut.PunchOutOrderRequestItemOut.RequisitionId">
            <summary>
            Get Set RequisitionId. The buyers requisition identifier for this line item.  This must and will not be included if the requisition id is
            included in the OrderRequest header.  It corresponds to the cXML/Request/OrderRequest/ItemOut lineNumber attribute.
            </summary>
        </member>
        <member name="P:InSite.Model.PunchOut.PunchOutOrderRequestItemOut.AgreementItemNumber">
            <summary>
            Get Set Agreement Item Number which is the buyer's master agreement for the line item.
            It corresponds to the cXML/Request/OrderRequest/ItemOut agreementItemNumber attribute.
            </summary>
        </member>
        <member name="P:InSite.Model.PunchOut.PunchOutOrderRequestItemOut.RequestedDeliveryDate">
            <summary>
            Get Set the RequestDeliveryDate, which represents the delivery date requested for the line.  This must be in the ISO 8601 format.
            It corresponds to the cXML/Request/OrderRequest/ItemOut requestedDeliveryDate attribute.
            </summary>
        </member>
        <member name="P:InSite.Model.PunchOut.PunchOutOrderRequestItemOut.IsAdHoc">
            <summary>
            Get Set IsAdHoc, which indicates that the item is a non-catalog item.
            It corresponds to the cXML/Request/OrderRequest/ItemOut isAdHoc attribute.
            </summary>
        </member>
        <member name="P:InSite.Model.PunchOut.PunchOutOrderRequestItemOut.UnitPrice">
            <summary>
            Get Set Unit Price of Item being ordered
            It corresponds to the cXML/Request/OrderRequest/ItemOut/ItemDetail/UnitPrice.
            </summary>
        </member>
        <member name="P:InSite.Model.PunchOut.PunchOutOrderRequestItemOut.UnitPriceCurrency">
            <summary>
            Get Set UnitPriceCurrency, the type of currency the Unit Price is.
            It corresponds to the cXML/Request/OrderRequest/ItemOut/ItemDetail/UnitPrice currency attribute.
            </summary>
        </member>
        <member name="P:InSite.Model.PunchOut.PunchOutOrderRequestItemOut.Description">
            <summary>
            Get Set Description of the item.
            It corresponds to the cXML/Request/OrderRequest/ItemOut/ItemDetail/Description value.
            </summary>
        </member>
        <member name="P:InSite.Model.PunchOut.PunchOutOrderRequestItemOut.UnitOfMeasure">
            <summary>
            Get Set UnitOfMeasure of Item being ordered.
            It corresponds to the cXML/Request/OrderRequest/ItemOut/ItemDetail/UnitOfMeasure value.
            </summary>
        </member>
        <member name="P:InSite.Model.PunchOut.PunchOutOrderRequestItemOut.Classification">
            <summary>
            Get Set Classification of item being ordered for example it can be a UNSPSC code.
            It corresponds to the cXML/Request/OrderRequest/ItemOut/ItemDetail/Classification value.
            </summary>
        </member>
        <member name="P:InSite.Model.PunchOut.PunchOutOrderRequestItemOut.ClassificationDomain">
            <summary>
            Get Set ClassificationDomain of the item being ordered. For example the value of the attribute
            might me "UNSPSC".
            It corresponds to the cXML/Request/OrderRequest/ItemOut/ItemDetail/Classification domain attribute.
            </summary>
        </member>
        <member name="P:InSite.Model.PunchOut.PunchOutOrderRequestItemOut.ManufacturerPartId">
            <summary>
            Get Set ManufacturerPartId of the item being ordered.
            It corresponds to the cXML/Request/OrderRequest/ItemOut/ItemDetail/ManufacturerPartID value.
            </summary>
        </member>
        <member name="P:InSite.Model.PunchOut.PunchOutOrderRequestItemOut.ManufacturerName">
            <summary>
            Get Set ManufacturerName of the item being ordered.
            It corresponds to the cXML/Request/OrderRequest/ItemOut/ItemDetail/ManufacturerName value.
            </summary>
        </member>
        <member name="P:InSite.Model.PunchOut.PunchOutOrderRequestItemOut.Url">
            <summary>
            Get Set Url of the item being ordered.
            It corresponds to the cXML/Request/OrderRequest/ItemOut/ItemDetail/URL.
            </summary>
        </member>
        <member name="P:InSite.Model.PunchOut.PunchOutOrderRequestItemOut.BillToAddressId">
            <summary>
            Get or Set BillToAddressId which represents the cXML/Request/OrderRequest/ItemOut/BillTo/Address addressId field from the 
            PunchOutOrderRequest's cXml.
            </summary>
        </member>
        <member name="P:InSite.Model.PunchOut.PunchOutOrderRequestItemOut.BillToName">
            <summary>
            Get or Set BillToName which represents the cXML/Request/OrderRequest/ItemOut/BillTo/Address/Name Node from the 
            PunchOutOrderRequest's cXml.
            </summary>
        </member>
        <member name="P:InSite.Model.PunchOut.PunchOutOrderRequestItemOut.BillToDeliver1">
            <summary>
            Get or Set BillToDeliverTo1 which represents the cXML/Request/OrderRequest/ItemOut/BillTo/Address/PostalAddress/DeliverTo Node from the 
            PunchOutOrderRequest's cXml. There can be two deliverTo nodes.  The first one generally represents the name of the person receiving the goods.
            </summary>
        </member>
        <member name="P:InSite.Model.PunchOut.PunchOutOrderRequestItemOut.BillToDeliver2">
            <summary>
            Get or Set BillToDeliverTo2 which represents the cXML/Request/OrderRequest/ItemOut/BillTo/Address/PostalAddress/DeliverTo Node from the 
            PunchOutOrderRequest's cXml. There can be two deliverTo nodes.  The second one generally represents the the location for delivery
            for example (building, city, office, mailstop).
            </summary>
        </member>
        <member name="P:InSite.Model.PunchOut.PunchOutOrderRequestItemOut.BillToStreet">
            <summary>
            Get or Set BillToStreet which represents the cXML/Request/OrderRequest/ItemOut/BillTo/Address/PostalAddress/Street Node from the 
            PunchOutOrderRequest's cXml.
            </summary>
        </member>
        <member name="P:InSite.Model.PunchOut.PunchOutOrderRequestItemOut.BillToStreet2">
            <summary>
            Get or Set BillToStreet which represents the 2nd  cXML/Request/OrderRequest/ItemOut/BillTo/Address/PostalAddress/Street Node from the 
            PunchOutOrderRequest's cXml.
            </summary>
        </member>
        <member name="P:InSite.Model.PunchOut.PunchOutOrderRequestItemOut.BillToStreet3">
            <summary>
            Get or Set BillToStreet which represents the 3rd  cXML/Request/OrderRequest/ItemOut/BillTo/Address/PostalAddress/Street Node from the 
            PunchOutOrderRequest's cXml.
            </summary>
        </member>
        <member name="P:InSite.Model.PunchOut.PunchOutOrderRequestItemOut.BillToStreet4">
            <summary>
            Get or Set BillToStreet which represents the 4th  cXML/Request/OrderRequest/ItemOut/BillTo/Address/PostalAddress/Street Node from the 
            PunchOutOrderRequest's cXml.
            </summary>
        </member>
        <member name="P:InSite.Model.PunchOut.PunchOutOrderRequestItemOut.BillToCity">
            <summary>
            Get or Set BillToCity which represents the cXML/Request/OrderRequest/ItemOut/BillTo/Address/PostalAddress/City Node from the 
            PunchOutOrderRequest's cXml.
            </summary>
        </member>
        <member name="P:InSite.Model.PunchOut.PunchOutOrderRequestItemOut.BillToState">
            <summary>
            Get or Set BillToState which represents the cXML/Request/OrderRequest/ItemOut/BillTo/Address/PostalAddress/State Node from the 
            PunchOutOrderRequest's cXml.
            </summary>
        </member>
        <member name="P:InSite.Model.PunchOut.PunchOutOrderRequestItemOut.BillToPostalCode">
            <summary>
            Get or Set BillToPostalCode which represents the cXML/Request/OrderRequest/ItemOut/BillTo/Address/PostalAddress/PostalCode Node from the 
            PunchOutOrderRequest's cXml.
            </summary>
        </member>
        <member name="P:InSite.Model.PunchOut.PunchOutOrderRequestItemOut.BillToIsoCountryCode">
            <summary>
            Get or Set BillToIsoCountryCode which represents the cXML/Request/OrderRequest/ItemOut/BillTo/Address/PostalAddress/Country Node's isoCountryCode property from the 
            PunchOutOrderRequest's cXml.
            </summary>
        </member>
        <member name="P:InSite.Model.PunchOut.PunchOutOrderRequestItemOut.BillToCountry">
            <summary>
            Get or Set BillToCountry which represents the cXML/Request/OrderRequest/ItemOut/BillTo/Address/PostalAddress/Country Node from the 
            PunchOutOrderRequest's cXml.
            </summary>
        </member>
        <member name="P:InSite.Model.PunchOut.PunchOutOrderRequestItemOut.ShipToAddressId">
            <summary>
            Get or Set ShipToAddressId which represents the cXML/Request/OrderRequest/ItemOut/BillTo/Address addressId field from the 
            PunchOutOrderRequest's cXml.
            </summary>
        </member>
        <member name="P:InSite.Model.PunchOut.PunchOutOrderRequestItemOut.ShipToName">
            <summary>
            Get or Set ShipToName which represents the cXML/Request/OrderRequest/ItemOut/BillTo/Address/Name Node from the 
            PunchOutOrderRequest's cXml.
            </summary>
        </member>
        <member name="P:InSite.Model.PunchOut.PunchOutOrderRequestItemOut.ShipToDeliver1">
            <summary>
            Get or Set ShipToDeliver1 which represents the cXML/Request/OrderRequest/ItemOut/BillTo/Address/PostalAddress/DeliverTo Node from the 
            PunchOutOrderRequest's cXml. There can be two deliverTo nodes.  The first one generally represents the name of the person receiving the goods.
            </summary>
        </member>
        <member name="P:InSite.Model.PunchOut.PunchOutOrderRequestItemOut.ShipToDeliver2">
            <summary>
            Get or Set ShipToDeliver2 which represents the cXML/Request/OrderRequest/ItemOut/BillTo/Address/PostalAddress/DeliverTo Node from the 
            PunchOutOrderRequest's cXml. There can be two deliverTo nodes.  The second one generally represents the the location for delivery
            for example (building, city, office, mailstop).
            </summary>
        </member>
        <member name="P:InSite.Model.PunchOut.PunchOutOrderRequestItemOut.ShipToStreet">
            <summary>
            Get or Set ShipToStreet which represents the cXML/Request/OrderRequest/ItemOut/BillTo/Address/PostalAddress/Street Node from the 
            PunchOutOrderRequest's cXml.
            </summary>
        </member>
        <member name="P:InSite.Model.PunchOut.PunchOutOrderRequestItemOut.ShipToStreet2">
            <summary>
            Get or Set ShipToStreet which represents the 2nd cXML/Request/OrderRequest/ItemOut/BillTo/Address/PostalAddress/Street Node from the 
            PunchOutOrderRequest's cXml.
            </summary>
        </member>
        <member name="P:InSite.Model.PunchOut.PunchOutOrderRequestItemOut.ShipToStreet3">
            <summary>
            Get or Set ShipToStreet which represents the 3rd cXML/Request/OrderRequest/ItemOut/BillTo/Address/PostalAddress/Street Node from the 
            PunchOutOrderRequest's cXml.
            </summary>
        </member>
        <member name="P:InSite.Model.PunchOut.PunchOutOrderRequestItemOut.ShipToStreet4">
            <summary>
            Get or Set ShipToStreet which represents the 4th cXML/Request/OrderRequest/ItemOut/BillTo/Address/PostalAddress/Street Node from the 
            PunchOutOrderRequest's cXml.
            </summary>
        </member>
        <member name="P:InSite.Model.PunchOut.PunchOutOrderRequestItemOut.ShipToCity">
            <summary>
            Get or Set ShipToCity which represents the cXML/Request/OrderRequest/ItemOut/BillTo/Address/PostalAddress/City Node from the 
            PunchOutOrderRequest's cXml.
            </summary>
        </member>
        <member name="P:InSite.Model.PunchOut.PunchOutOrderRequestItemOut.ShipToState">
            <summary>
            Get or Set ShipToState which represents the cXML/Request/OrderRequest/ItemOut/BillTo/Address/PostalAddress/State Node from the 
            PunchOutOrderRequest's cXml.
            </summary>
        </member>
        <member name="P:InSite.Model.PunchOut.PunchOutOrderRequestItemOut.ShipToPostalCode">
            <summary>
            Get or Set ShipToPostalCode which represents the cXML/Request/OrderRequest/ItemOut/BillTo/Address/PostalAddress/PostalCode Node from the 
            PunchOutOrderRequest's cXml.
            </summary>
        </member>
        <member name="P:InSite.Model.PunchOut.PunchOutOrderRequestItemOut.ShipToIsoCountryCode">
            <summary>
            Get or Set ShipToIsoCountryCode which represents the cXML/Request/OrderRequest/ItemOut/BillTo/Address/PostalAddress/Country Node's isoCountryCode property from the 
            PunchOutOrderRequest's cXml.
            </summary>
        </member>
        <member name="P:InSite.Model.PunchOut.PunchOutOrderRequestItemOut.ShipToCountry">
            <summary>
            Get or Set ShipToCountry which represents the cXML/Request/OrderRequest/ItemOut/BillTo/Address/PostalAddress/Country Node from the 
            PunchOutOrderRequest's cXml.
            </summary>
        </member>
        <member name="P:InSite.Model.PunchOut.PunchOutOrderRequestItemOut.Comments">
            <summary>
            Get Set Comments of the item being ordered.
            It corresponds to the cXML/Request/OrderRequest/ItemOut/Comments.
            </summary>
        </member>
        <member name="P:InSite.Model.PunchOut.PunchOutOrderRequestItemOut.PunchOutOrderRequest">
            <summary>
            Get Set <see cref="P:InSite.Model.PunchOut.PunchOutOrderRequestItemOut.PunchOutOrderRequest"/> which is the aggregate root for this <see cref="T:InSite.Model.PunchOut.PunchOutOrderRequestItemOut"/>'s PunchOutOrderRequest.
            </summary>
        </member>
        <member name="P:InSite.Model.PunchOut.PunchOutOrderRequestItemOut.OrderLine">
            <summary>
            Get Set <see cref="P:InSite.Model.PunchOut.PunchOutOrderRequestItemOut.OrderLine"/>. The corresponding <see cref="P:InSite.Model.PunchOut.PunchOutOrderRequestItemOut.OrderLine"/> that was created for this <see cref="T:InSite.Model.PunchOut.PunchOutOrderRequestItemOut"/>.
            The value can be null.
            </summary>
        </member>
        <member name="P:InSite.Model.PunchOut.PunchOutOrderRequestItemOut.PunchOutValidationMessages">
            <summary>
            Get Set PunchOutValidationMessage which is a collection of <see cref="T:InSite.Model.PunchOut.PunchOutOrderRequestMessage"/>s. Which represent
            errors/warning on the converion of the <see cref="T:InSite.Model.PunchOut.PunchOutOrderRequestItemOut"/> to an <see cref="P:InSite.Model.PunchOut.PunchOutOrderRequestItemOut.OrderLine"/> for a <see cref="T:InSite.Model.CustomerOrder"/>. 
            </summary>
        </member>
        <member name="T:InSite.Model.PunchOut.PunchOutOrderRequestMessage">
            <summary>
            Validation Message which represents a validation warning/error on the <see cref="P:InSite.Model.PunchOut.PunchOutOrderRequestMessage.PunchOutOrderRequest"/>.
            These can be associated at the <see cref="P:InSite.Model.PunchOut.PunchOutOrderRequestMessage.PunchOutOrderRequest"/> and <see cref="P:InSite.Model.PunchOut.PunchOutOrderRequestMessage.PunchOutOrderRequestItemOut"/>.
            </summary>
        </member>
        <member name="P:InSite.Model.PunchOut.PunchOutOrderRequestMessage.ValidationMessageType">
            <summary>
            Get Set enum which represents the type of validation message.
            </summary>
        </member>
        <member name="P:InSite.Model.PunchOut.PunchOutOrderRequestMessage.Message">
            <summary>
            Get Set message to be consumed.
            </summary>
        </member>
        <member name="P:InSite.Model.PunchOut.PunchOutOrderRequestMessage.PunchOutOrderRequest">
            <summary>
            Get Set - Parent <see cref="P:InSite.Model.PunchOut.PunchOutOrderRequestMessage.PunchOutOrderRequest"/> if this is a header level message.
            </summary>
        </member>
        <member name="P:InSite.Model.PunchOut.PunchOutOrderRequestMessage.PunchOutOrderRequestItemOut">
            <summary>
            Get Set - Parent <see cref="P:InSite.Model.PunchOut.PunchOutOrderRequestMessage.PunchOutOrderRequestItemOut"/> if this is a line level message.
            </summary>
        </member>
        <member name="T:InSite.Model.PunchOut.PunchOutOrderRequestMessageType">
            <summary>
            Enum which represents validation message types for the <see cref="T:InSite.Model.CustomerOrder"/> and the <see cref="T:InSite.Model.OrderLine"/>
            </summary>
        </member>
        <member name="F:InSite.Model.PunchOut.PunchOutOrderRequestMessageType.AddressShipToMappingResolved">
            <summary>
            Represents if the <see cref="P:InSite.Model.CustomerOrder.ShipTo"/> is resolved against a <see cref="P:InSite.Model.PunchOut.PunchOutCustomerUserProfileMap.Customer"/>.
            </summary>
        </member>
        <member name="F:InSite.Model.PunchOut.PunchOutOrderRequestMessageType.AddressBillToMappingResolved">
            <summary>
            Represents if the <see cref="P:InSite.Model.CustomerOrder.Customer"/> is resolved against a <see cref="T:InSite.Model.PunchOut.PunchOutCustomerUserProfileMap"/>.
            </summary>
        </member>
        <member name="F:InSite.Model.PunchOut.PunchOutOrderRequestMessageType.AddressPunchOutSessionResolved">
            <summary>
            Represents if the <see cref="P:InSite.Model.CustomerOrder.Customer"/> and <see cref="P:InSite.Model.CustomerOrder.ShipTo"/> is resolved to a <see cref="P:InSite.Model.PunchOut.PunchOutSession.CustomerOrder"/>'s
            <see cref="P:InSite.Model.CustomerOrder.Customer"/> and <see cref="P:InSite.Model.CustomerOrder.ShipTo"/> values.
            </summary>
        </member>
        <member name="F:InSite.Model.PunchOut.PunchOutOrderRequestMessageType.AddressDefaultCustomerMapping">
            <summary>
            Represents if the <see cref="P:InSite.Model.CustomerOrder.Customer"/> and <see cref="P:InSite.Model.CustomerOrder.ShipTo"/> values are resolved to values from
            <see cref="M:InSite.Model.Interfaces.IDefaultCustomerProvider.GetDefaultCustomer(InSite.Model.WebSite,InSite.Model.UserProfile)"/> and <see cref="M:InSite.Model.Interfaces.IDefaultShipToProvider.GetDefaultShipTo(InSite.Model.WebSite,InSite.Model.UserProfile,InSite.Model.Customer,System.Boolean)"/>.
            </summary>
        </member>
        <member name="F:InSite.Model.PunchOut.PunchOutOrderRequestMessageType.Custom">
            <summary>
            Represents a custom message.
            </summary>
        </member>
        <member name="F:InSite.Model.PunchOut.PunchOutOrderRequestMessageType.DirectOrder">
            <summary>
            Represents if the <see cref="T:InSite.Model.CustomerOrder"/> was placed directly verses being created in the Commerce application.
            </summary>
        </member>
        <member name="F:InSite.Model.PunchOut.PunchOutOrderRequestMessageType.MultipleProductsFound">
            <summary>
            Represents if multiple products were found.
            </summary>
        </member>
        <member name="F:InSite.Model.PunchOut.PunchOutOrderRequestMessageType.PoEmpty">
            <summary>
            Represents where a Purchase Order Number was empty.
            </summary>
        </member>
        <member name="F:InSite.Model.PunchOut.PunchOutOrderRequestMessageType.ProductNotFound">
            <summary>
            Respresents if a <see cref="T:InSite.Model.Product"/> was not found and the not found <see cref="T:InSite.Model.Product"/> was substituted.
            </summary>
        </member>
        <member name="F:InSite.Model.PunchOut.PunchOutOrderRequestMessageType.ProductPriceIsZero">
            <summary>
            Represents where a price passed in was 0.
            </summary>
        </member>
        <member name="F:InSite.Model.PunchOut.PunchOutOrderRequestMessageType.PunchOutSessionId">
            <summary>
            Represents the <see cref="T:InSite.Model.PunchOut.PunchOutSession"/>.PunchOutSessionId.
            </summary>
        </member>
        <member name="F:InSite.Model.PunchOut.PunchOutOrderRequestMessageType.ShipToSubstituted">
            <summary>
            Respresents if we could not resolve the ShipTo on the <see cref="T:InSite.Model.CustomerOrder"/> and are using a default. 
            </summary>
        </member>
        <member name="F:InSite.Model.PunchOut.PunchOutOrderRequestMessageType.Unknown">
            <summary>
            Represents an unknown message.
            </summary>
        </member>
        <member name="F:InSite.Model.PunchOut.PunchOutOrderRequestMessageType.UnitOfMeasureNotFoundForProduct">
            <summary>
            Represents if we could not resolve the unit of measure for the <see cref="T:InSite.Model.Product"/> ordered.
            </summary>
        </member>
        <member name="F:InSite.Model.PunchOut.PunchOutOrderRequestMessageType.UnitOfMeasureSynonymNotFound">
            <summary>
            Respresent if we could not resolve the unit of measure to a synonym.
            </summary>
        </member>
        <member name="F:InSite.Model.PunchOut.PunchOutOrderRequestMessageType.UnitOfMeasureNotProvided">
            <summary>
            The Unit of measure was not provided for the line item ordered.
            </summary>
        </member>
        <member name="F:InSite.Model.PunchOut.PunchOutOrderRequestMessageType.UnitOfMeasureNotResolved">
            <summary>
            Represents if the Unit Of Measure was not resolved in any manner.
            </summary>
        </member>
        <member name="F:InSite.Model.PunchOut.PunchOutOrderRequestMessageType.UnitOfMeasureReplacedWithSynonym">
            <summary>
            Represents if we replaced on the orderline the UnitOfMeasure with a synonym.
            </summary>
        </member>
        <member name="F:InSite.Model.PunchOut.PunchOutOrderRequestMessageType.ProductIsInActive">
            <summary>
            Represents the product found is inactive on the site.
            </summary>
        </member>
        <member name="F:InSite.Model.PunchOut.PunchOutOrderRequestMessageType.ProductRestriction">
            <summary>
            Represents the product found fails product restrictions.
            </summary>
        </member>
        <member name="F:InSite.Model.PunchOut.PunchOutOrderRequestMessageType.CurrencyNotFound">
            <summary>
            Represents if the <see cref="T:InSite.Model.Currency"/> could not be found.
            </summary>
        </member>
        <member name="F:InSite.Model.PunchOut.PunchOutOrderRequestMessageType.CurrencyReplacedWithDefaultSystemCurrency">
            <summary>
            Represents if the <see cref="P:InSite.Model.CustomerOrder.Currency"/> was replaced by the base system <see cref="T:InSite.Model.Currency"/>.
            </summary>
        </member>
        <member name="F:InSite.Model.PunchOut.PunchOutOrderRequestMessageType.CurrencyMultipleCurrenciesInRequest">
            <summary>
            Represents if the <see cref="T:InSite.Model.PunchOut.PunchOutOrderRequest"/> has more than 1 <see cref="T:InSite.Model.Currency"/>.
            </summary>
        </member>
        <member name="F:InSite.Model.PunchOut.PunchOutOrderRequestMessageType.CurrencyChangedFromOriginal">
            <summary>
            Represents if the <see cref="P:InSite.Model.CustomerOrder.Currency"/> was changed from its start state.
            </summary>
        </member>
        <member name="F:InSite.Model.PunchOut.PunchOutOrderRequestMessageType.CurrencyNotProvidedInRequest">
            <summary>
            Represents if for every <see cref="P:InSite.Model.PunchOut.PunchOutOrderRequestItemOut.UnitPriceCurrency"/> is empty.
            </summary>
        </member>
        <member name="F:InSite.Model.PunchOut.PunchOutOrderRequestMessageType.CurrencyWebsiteCurrencyNotAvailable">
            <summary>
            Represents if the default <see cref="T:InSite.Model.Currency"/> for the <see cref="T:InSite.Model.WebSite"/>.
            </summary>
        </member>
        <member name="F:InSite.Model.PunchOut.PunchOutOrderRequestMessageType.CurrencyReplacedWithWebsiteCurrency">
            <summary>
            Represents if the <see cref="P:InSite.Model.CustomerOrder.Currency"/> was replaced with the default <see cref="T:InSite.Model.Currency"/> for the <see cref="T:InSite.Model.WebSite"/>.
            </summary>
        </member>
        <member name="F:InSite.Model.PunchOut.PunchOutOrderRequestMessageType.CurrencyUsingOriginalCustomerOrderCurrency">
            <summary>
            Represents if the <see cref="P:InSite.Model.CustomerOrder.Currency"/> is using the <see cref="T:InSite.Model.Currency"/> that the <see cref="P:InSite.Model.CustomerOrder.Currency"/> started with.
            </summary>
        </member>
        <member name="F:InSite.Model.PunchOut.PunchOutOrderRequestMessageType.CurrencyReplacedWithOrderCurrency">
            <summary>
            Represents if the <see cref="T:InSite.Model.OrderLine"/> currency is subsituted for the <see cref="P:InSite.Model.CustomerOrder.Currency"/>.
            </summary>
        </member>
        <member name="F:InSite.Model.PunchOut.PunchOutOrderRequestMessageType.CurrencyNotSetOnCustomerOrder">
            <summary>
            Represents if the <see cref="P:InSite.Model.CustomerOrder.Currency"/> is not set.
            </summary>
        </member>
        <member name="T:InSite.Model.PunchOut.PunchOutProfileTransactionRequest">
            <summary>
            Class which represents a PunchOutProfileTransactionRequest
            </summary>
        </member>
        <member name="P:InSite.Model.PunchOut.PunchOutProfileTransactionRequest.FromIdentity">
            <summary>
            Get Set FromIdentity, defines the buying organization.
            </summary>
        </member>
        <member name="P:InSite.Model.PunchOut.PunchOutProfileTransactionRequest.SenderIdentity">
            <summary>
            Get Set SenderIdentity, defines the sending organization, for example SupplierSolutions or Ariba.
            </summary>     
        </member>
        <member name="P:InSite.Model.PunchOut.PunchOutProfileTransactionRequest.SecretWord">
            <summary>
            Get Set SecretWord, defines the password for the Sender
            </summary>
        </member>
        <member name="T:InSite.Model.PunchOut.PunchOutSession">
            <summary>
            Class that represents a PunchOutSession that can be reloaded and used multiple times aka repunch 
            (with different modes, create, edit, inspect.
            </summary>
        </member>
        <member name="M:InSite.Model.PunchOut.PunchOutSession.UpdateEditPunchOutSession(InSite.Model.PunchOut.PunchOutSession)">
            <summary>
            Method that updates this <see cref="T:InSite.Model.PunchOut.PunchOutSession"/> with values from another <see cref="T:InSite.Model.PunchOut.PunchOutSession"/>.
            </summary>
            <param name="punchOutSessionValues"><see cref="T:InSite.Model.PunchOut.PunchOutSession"/> to use as parameters to update this instance of a 
            <see cref="T:InSite.Model.PunchOut.PunchOutSession"/> with.  The values being updated are <see cref="P:InSite.Model.PunchOut.PunchOutSession.BrowserFormPost"/>, <see cref="P:InSite.Model.PunchOut.PunchOutSession.BuyerCookie"/>,
            <see cref="P:InSite.Model.PunchOut.PunchOutSession.ToIdentity"/>, <see cref="P:InSite.Model.PunchOut.PunchOutSession.FromIdentity"/> and the <see cref="P:InSite.Model.PunchOut.PunchOutSession.PunchOutSessionMode"/>.</param>
        </member>
        <member name="M:InSite.Model.PunchOut.PunchOutSession.AddPunchOutSetupRequest(InSite.Model.PunchOut.PunchOutSetupRequest)">
            <summary>
            Method to add a <see cref="T:InSite.Model.PunchOut.PunchOutSetupRequest"/> to this <see cref="P:InSite.Model.PunchOut.PunchOutSession.PunchOutSetupRequests"/> collection.  
            If the collection <see cref="P:InSite.Model.PunchOut.PunchOutSession.PunchOutSetupRequests"/> does not contain the provided <see cref="T:InSite.Model.PunchOut.PunchOutSetupRequest"/> parameter, 
            add it to the collection, associated the <see cref="P:InSite.Model.PunchOut.PunchOutSetupRequest.PunchOutSession"/>
            to this <see cref="T:InSite.Model.PunchOut.PunchOutSession"/>. If the collection all ready contains the provided parameter, do nothing.
            </summary>
            <param name="setupRequest"><see cref="T:InSite.Model.PunchOut.PunchOutSetupRequest"/> to add to the collection <see cref="P:InSite.Model.PunchOut.PunchOutSession.PunchOutSetupRequests"/>.</param>
        </member>
        <member name="M:InSite.Model.PunchOut.PunchOutSession.AddPunchOutSessionExtrisic(InSite.Model.PunchOut.PunchOutSessionExtrinsic)">
            <summary>
            Method to add a <see cref="T:InSite.Model.PunchOut.PunchOutSessionExtrinsic"/> to this <see cref="P:InSite.Model.PunchOut.PunchOutSession.PunchOutSessionExtrinsics"/> collection.  
            If the collection <see cref="P:InSite.Model.PunchOut.PunchOutSession.PunchOutSessionExtrinsics"/> does not contain the provided <see cref="T:InSite.Model.PunchOut.PunchOutSessionExtrinsic"/> parameter, 
            add it to the collection, associated the <see cref="P:InSite.Model.PunchOut.PunchOutSessionExtrinsic.PunchOutSession"/>
            to this <see cref="T:InSite.Model.PunchOut.PunchOutSession"/>. If the collection all ready contains the provided parameter, do nothing.
            </summary>
            <param name="sessionExtrinsic"><see cref="T:InSite.Model.PunchOut.PunchOutSessionExtrinsic"/> to add to the collection <see cref="P:InSite.Model.PunchOut.PunchOutSession.PunchOutSessionExtrinsics"/>.</param>
        </member>
        <member name="M:InSite.Model.PunchOut.PunchOutSession.AddPunchOutSessionAccess(InSite.Model.PunchOut.PunchOutSessionAccess)">
            <summary>
            Method to add a <see cref="T:InSite.Model.PunchOut.PunchOutSessionAccess"/> to this <see cref="P:InSite.Model.PunchOut.PunchOutSession.PunchOutSessionAccesses"/> collection.  
            If the collection <see cref="T:InSite.Model.PunchOut.PunchOutSessionAccess"/> does not contain the provided <see cref="T:InSite.Model.PunchOut.PunchOutSessionExtrinsic"/> parameter, 
            add it to the collection, associate the <see cref="P:InSite.Model.PunchOut.PunchOutSessionExtrinsic.PunchOutSession"/>
            to this <see cref="T:InSite.Model.PunchOut.PunchOutSession"/>. If the collection all ready contains the provided parameter, do nothing.
            </summary>
            <param name="punchOutSessionAccess"><see cref="T:InSite.Model.PunchOut.PunchOutSessionAccess"/> to add to the collection <see cref="P:InSite.Model.PunchOut.PunchOutSession.PunchOutSessionAccesses"/>.</param>
        </member>
        <member name="M:InSite.Model.PunchOut.PunchOutSession.AddPunchOutSessionItemIn(InSite.Model.PunchOut.PunchOutSessionItemIn)">
            <summary>
            Method to add a <see cref="T:InSite.Model.PunchOut.PunchOutSessionItemIn"/> to this <see cref="P:InSite.Model.PunchOut.PunchOutSession.PunchOutSessionItemIns"/> collection.
            If the collection <see cref="P:InSite.Model.PunchOut.PunchOutSession.PunchOutSessionItemIns"/> does not contain the provided <see cref="T:InSite.Model.PunchOut.PunchOutSessionItemIn"/> parameter,
            add it to the collection, associate tne <see cref="P:InSite.Model.PunchOut.PunchOutSessionItemIn.PunchOutSession"/> to this
            <see cref="T:InSite.Model.PunchOut.PunchOutSession"/>. If the collection all ready contains the provided parameter, do nothing
            </summary>
            <param name="punchOutSessionItemIn"><see cref="T:InSite.Model.PunchOut.PunchOutSessionItemIn"/> to add to the collection <see cref="P:InSite.Model.PunchOut.PunchOutSession.PunchOutSessionItemIns"/>.</param>
        </member>
        <member name="M:InSite.Model.PunchOut.PunchOutSession.RemovePunchOutSessionItemIn(InSite.Model.PunchOut.PunchOutSessionItemIn)">
            <summary>
            Method to remove a <see cref="T:InSite.Model.PunchOut.PunchOutSessionItemIn"/> from this <see cref="P:InSite.Model.PunchOut.PunchOutSession.PunchOutSessionItemIns"/> collection.
            If the collection <see cref="P:InSite.Model.PunchOut.PunchOutSession.PunchOutSessionItemIns"/> contains the provided <see cref="T:InSite.Model.PunchOut.PunchOutSessionItemIn"/> parameter, remove it
            from the <see cref="P:InSite.Model.PunchOut.PunchOutSession.PunchOutSessionItemIns"/> collection.  If the <see cref="P:InSite.Model.PunchOut.PunchOutSession.PunchOutSessionItemIns"/> collection does not contain the provided <see cref="T:InSite.Model.PunchOut.PunchOutSessionItemIn"/> parameter do nothing
            </summary>
            <param name="punchOutSessionItemIn"><see cref="T:InSite.Model.PunchOut.PunchOutSessionItemIn"/> to remove from the <see cref="P:InSite.Model.PunchOut.PunchOutSession.PunchOutSessionItemIns"/> collection.</param>
        </member>
        <member name="M:InSite.Model.PunchOut.PunchOutSession.CanModifyOrder">
            <summary>
            Method that exposes whether you can modify any order value.  If the <see cref="P:InSite.Model.PunchOut.PunchOutSession.PunchOutSessionMode"/> is Unknown or Inspect we will 
            return false, if the <see cref="P:InSite.Model.PunchOut.PunchOutSession.PunchOutSessionMode"/> is Edit or Create it will return true
            </summary>
        </member>
        <member name="P:InSite.Model.PunchOut.PunchOutSession.FromIdentity">
            <summary>
            Get Set FromIdentity which represents the buying organization. 
            </summary>
        </member>
        <member name="P:InSite.Model.PunchOut.PunchOutSession.ToIdentity">
            <summary>
            Get Set ToIdentity which represents the supplier's organization
            </summary>
        </member>
        <member name="P:InSite.Model.PunchOut.PunchOutSession.SenderIdentity">
            <summary>
            Get Set SenderIdentity which represents the previous relaying entity, for example SupplierSolutions, Ariba Network, etc...
            </summary>
        </member>
        <member name="P:InSite.Model.PunchOut.PunchOutSession.FromUserAgent">
            <summary>
            Get Set FromUserAgent which represents the calling system type, for example: Procurement System 2.0
            </summary>
        </member>
        <member name="P:InSite.Model.PunchOut.PunchOutSession.BuyerCookie">
            <summary>
            Get Set BuyerCookie which represents the unique identifier that we need to pass back to PuchOut provider for their session management 
            needs.  We can not use this for our session identifier.
            </summary>
        </member>
        <member name="P:InSite.Model.PunchOut.PunchOutSession.BrowserFormPost">
            <summary>
            Get Set BrowserFormPost which represents the destination for the final PunchOutOrderMessage.
            </summary>
        </member>
        <member name="P:InSite.Model.PunchOut.PunchOutSession.CustomerOrder">
            <summary>
            Get Set CustomerOrder. The <see cref="P:InSite.Model.PunchOut.PunchOutSession.CustomerOrder"/> represents the <see cref="P:InSite.Model.PunchOut.PunchOutSession.CustomerOrder"/> bound to this <see cref="T:InSite.Model.PunchOut.PunchOutSession"/>.
            </summary>
        </member>
        <member name="P:InSite.Model.PunchOut.PunchOutSession.UserProfile">
            <summary>
            Get Set UserProfile. The <see cref="P:InSite.Model.PunchOut.PunchOutSession.UserProfile"/> represents the <see cref="P:InSite.Model.PunchOut.PunchOutSession.UserProfile"/> bound to this <see cref="T:InSite.Model.PunchOut.PunchOutSession"/>.
            </summary>
        </member>
        <member name="P:InSite.Model.PunchOut.PunchOutSession.Domain">
            <summary>
            Get Set Domain, the uri this <see cref="T:InSite.Model.PunchOut.PunchOutSession"/> is tied to.
            </summary>
        </member>
        <member name="P:InSite.Model.PunchOut.PunchOutSession.ToIdentityNode">
            <summary>
            Get Set ToIdentityNode, this contains the full cXML for this node for convenience messaging purposes
            </summary>
        </member>
        <member name="P:InSite.Model.PunchOut.PunchOutSession.FromIdentityNode">
            <summary>
            Get Set FromIdentityNode, this contains the full cXML for this node for convenience messaging purposes
            </summary>
        </member>
        <member name="P:InSite.Model.PunchOut.PunchOutSession.SenderIdentityNode">
            <summary>
            Get Set SenderIdentityNode, this contains the full cXML for this node for convenience messaging purposes
            </summary>
        </member>
        <member name="P:InSite.Model.PunchOut.PunchOutSession.ShipToAddressId">
            <summary>
            Get or Set ShipToAddressId which represents the Request/PunchOutSetupRequest/ShipTo/Address addressId field from the 
            PunchOutSetupRequests cXml.
            </summary>
        </member>
        <member name="P:InSite.Model.PunchOut.PunchOutSession.ShipToName">
            <summary>
            Get or Set ShipToName which represents the Request/PunchOutSetupRequest/ShipTo/Address/Name Node from the 
            PunchOutSetupRequests cXml.
            </summary>
        </member>
        <member name="P:InSite.Model.PunchOut.PunchOutSession.ShipToDeliverTo">
            <summary>
            Get or Set ShipToDeliverTo which represents the Request/PunchOutSetupRequest/ShipTo/Address/PostalAddress/DeliverTo Node from the 
            PunchOutSetupRequests cXml.
            </summary>
        </member>
        <member name="P:InSite.Model.PunchOut.PunchOutSession.ShipToStreet">
            <summary>
            Get or Set ShipToStreet which represents the Request/PunchOutSetupRequest/ShipTo/Address/PostalAddress/Street Node from the 
            PunchOutSetupRequests cXml.
            </summary>
        </member>
        <member name="P:InSite.Model.PunchOut.PunchOutSession.ShipToCity">
            <summary>
            Get or Set ShipToCity which represents the Request/PunchOutSetupRequest/ShipTo/Address/PostalAddress/City Node from the 
            PunchOutSetupRequests cXml.
            </summary>
        </member>
        <member name="P:InSite.Model.PunchOut.PunchOutSession.ShipToState">
            <summary>
            Get or Set ShipToState which represents the Request/PunchOutSetupRequest/ShipTo/Address/PostalAddress/State Node from the 
            PunchOutSetupRequests cXml.
            </summary>
        </member>
        <member name="P:InSite.Model.PunchOut.PunchOutSession.ShipToPostalCode">
            <summary>
            Get or Set ShipToPostalCode which represents the Request/PunchOutSetupRequest/ShipTo/Address/PostalAddress/PostalCode Node from the 
            PunchOutSetupRequests cXml.
            </summary>
        </member>
        <member name="P:InSite.Model.PunchOut.PunchOutSession.ShipToIsoCountryCode">
            <summary>
            Get or Set ShipToIsoCountryCode which represents the Request/PunchOutSetupRequest/ShipTo/Address/PostalAddress/Country Node's isoCountryCode property from the 
            PunchOutSetupRequests cXml.
            </summary>
        </member>
        <member name="P:InSite.Model.PunchOut.PunchOutSession.ShipToCountry">
            <summary>
            Get or Set ShipToCountry which represents the Request/PunchOutSetupRequest/ShipTo/Address/PostalAddress/Country Node from the 
            PunchOutSetupRequests cXml.
            </summary>
        </member>
        <member name="P:InSite.Model.PunchOut.PunchOutSession.SecretWord">
            <summary>
            Get Set Secret, this is a non persistable value via ORM.  This is a transient value only used for the authentication process.
            </summary>
        </member>
        <member name="P:InSite.Model.PunchOut.PunchOutSession.PunchOutSessionMode">
            <summary>
            Get Set PunchOutSessionMode which represents what type of operation the <see cref="T:InSite.Model.PunchOut.PunchOutSession"/> will operate as.
            </summary>
        </member>
        <member name="P:InSite.Model.PunchOut.PunchOutSession.PunchOutSetupRequests">
            <summary>
            Get Set PunchOutSetupRequests which is a collection of <see cref="T:InSite.Model.PunchOut.PunchOutSetupRequest"/>'s.  Multiple <see cref="T:InSite.Model.PunchOut.PunchOutSetupRequest"/>'s can be
            tied to a <see cref="T:InSite.Model.PunchOut.PunchOutSession"/>.
            </summary>
        </member>
        <member name="P:InSite.Model.PunchOut.PunchOutSession.PunchOutSessionExtrinsics">
            <summary>
             Get Set PunchOutSessionExtrinsics which is a collection of <see cref="T:InSite.Model.PunchOut.PunchOutSessionExtrinsic"/>'s.  They represent addition data coming 
            from the originating <see cref="T:InSite.Model.PunchOut.PunchOutSetupRequest"/>
            </summary>
        </member>
        <member name="P:InSite.Model.PunchOut.PunchOutSession.PunchOutSessionAccesses">
            <summary>
            Get Set PunchOutSessionAccesses which is a collection of <see cref="T:InSite.Model.PunchOut.PunchOutSessionAccess"/>'s.  They represent each time 
            a <see cref="T:InSite.Model.PunchOut.PunchOutSession"/> is tied to a web context <see cref="T:InSite.Model.PunchOut.PunchOutSetupRequest"/>
            </summary>
        </member>
        <member name="P:InSite.Model.PunchOut.PunchOutSession.PunchOutSessionItemIns">
            <summary>
            Get Set PunchOutSessionItemIns which is a collection of <see cref="T:InSite.Model.PunchOut.PunchOutSessionItemIn"/>'s.  They represent each  
            Product and orderline level detail.
            </summary>
        </member>
        <member name="P:InSite.Model.PunchOut.PunchOutSession.ShipAddressIdResolved">
            <summary>
            Get Set ShipAddressIdResolved, which represents if the CustomerOrder has the passed in ShipAddressId
            Fully resolved to <see cref="P:InSite.Model.CustomerOrder.ShipTo"/>
            </summary>
        </member>
        <member name="T:InSite.Model.PunchOut.PunchOutSessionAccess">
            <summary>
            Class the represents loading of a <see cref="P:InSite.Model.PunchOut.PunchOutSessionAccess.PunchOutSession"/> in a web session.
            </summary>
        </member>
        <member name="P:InSite.Model.PunchOut.PunchOutSessionAccess.IpAddress">
            <summary>
            Get or Set the IP Address of the incoming Punch Out Setup Request
            </summary>
        </member>
        <member name="P:InSite.Model.PunchOut.PunchOutSessionAccess.PunchOutSession">
            <summary>
            Get or Set the <see cref="P:InSite.Model.PunchOut.PunchOutSessionAccess.PunchOutSession"/> that this <see cref="T:InSite.Model.PunchOut.PunchOutSetupRequest"/>
            is associated with, if the <see cref="T:InSite.Model.PunchOut.PunchOutSetupRequest"/> is valid and the <see cref="T:InSite.Model.UserProfile"/> 
            and the credentials are valid.
            </summary>
        </member>
        <member name="T:InSite.Model.PunchOut.PunchOutSessionExtrinsic">
            <summary>
            Class which represents addition data coming from the Punch Out Set up Request Extrinsic values in the cXml.
            </summary>
        </member>
        <member name="P:InSite.Model.PunchOut.PunchOutSessionExtrinsic.Name">
            <summary>
            Get Set Name which represents the extrinsic key name.
            </summary>
            <example>
             <Extrinsic name="UniqueName">Joe Smith</Extrinsic> 
            The value in Name would be "UniqueName".
            </example>
        </member>
        <member name="P:InSite.Model.PunchOut.PunchOutSessionExtrinsic.Value">
            <summary>
            Get Set Value with represents the extrinsic keys value.
            </summary>
            /// <example>
             <Extrinsic name="UniqueName">Joe Smith</Extrinsic> 
            The value in Value would be "Joe Smith".
            </example>
        </member>
        <member name="P:InSite.Model.PunchOut.PunchOutSessionExtrinsic.PunchOutSession">
            <summary>
            Get Set <see cref="P:InSite.Model.PunchOut.PunchOutSessionExtrinsic.PunchOutSession"/> which is the aggregate root for this <see cref="T:InSite.Model.PunchOut.PunchOutSessionExtrinsic"/>.
            </summary>
        </member>
        <member name="T:InSite.Model.PunchOut.PunchOutSessionItemIn">
            <summary>
            Class which represents PunchOutSetupRequest ItemIn data
            </summary>
        </member>
        <member name="P:InSite.Model.PunchOut.PunchOutSessionItemIn.SupplierPartId">
            <summary>
            Get Set the SupplierPartId which will represent the supplier's identifier for the Product
            </summary>
        </member>
        <member name="P:InSite.Model.PunchOut.PunchOutSessionItemIn.SupplierPartAuxiliaryId">
            <summary>
            Get Set the SupplierPartAuxiliaryId which in a repunch mode will be the <see cref="P:InSite.Model.PunchOut.PunchOutSessionItemIn.PunchOutSession"/> PunchOutSessionId
            </summary>
        </member>
        <member name="P:InSite.Model.PunchOut.PunchOutSessionItemIn.PunchOutSession">
            <summary>
            Get Set <see cref="P:InSite.Model.PunchOut.PunchOutSessionItemIn.PunchOutSession"/> which is the aggregate root for this <see cref="P:InSite.Model.PunchOut.PunchOutSessionItemIn.PunchOutSession"/>'s PunchOutSessionId.
            </summary>
        </member>
        <member name="T:InSite.Model.PunchOut.PunchOutSessionMode">
            <summary>
            Enum represents the possible and unknown states a punch out session or punch out request may ask for/be.
            </summary>
        </member>
        <member name="T:InSite.Model.PunchOut.PunchOutSetupRequest">
            <summary>
            This class represents and abstracted Punch Out Setup Request. Best practices state that we should scrub the SecretWord
            aka password before persisting in the <see cref="P:InSite.Model.PunchOut.PunchOutSetupRequest.PunchOutSetupRequestCXml"/> property.
            </summary>
        </member>
        <member name="P:InSite.Model.PunchOut.PunchOutSetupRequest.PunchOutSetupRequestCXml">
            <summary>
            Get or Sets the raw incoming punch out setup request cXml.  Best practice is to remove the string contained in the <SharedSecret></SharedSecret> xml node. 
            </summary>
        </member>
        <member name="P:InSite.Model.PunchOut.PunchOutSetupRequest.IpAddress">
            <summary>
            Get or Set the IP Address of the incoming Punch Out Setup Request.
            </summary>
        </member>
        <member name="P:InSite.Model.PunchOut.PunchOutSetupRequest.PunchOutSession">
            <summary>
            Get or Set the <see cref="P:InSite.Model.PunchOut.PunchOutSetupRequest.PunchOutSession"/> that this <see cref="T:InSite.Model.PunchOut.PunchOutSetupRequest"/>
            is associated with, if the <see cref="T:InSite.Model.PunchOut.PunchOutSetupRequest"/> is valid and the <see cref="T:InSite.Model.UserProfile"/> 
            and the credentials are valid.
            </summary>
        </member>
        <member name="P:InSite.Model.PunchOut.PunchOutSetupRequest.SetupRequestResponse">
            <summary>
            Get or Set the cXMl response to the Setup Request.
            </summary>
        </member>
        <member name="M:InSite.Model.RestrictionGroup.IsRestricted(System.Guid,InSite.Model.Customer,InSite.Model.Customer)">
            <summary>
            Evaluates a product permission based on the RestictionGroup it belongs to
            </summary>
            <param name="productId">the id of the product to evaluate</param>
            <param name="customer">customer attempting to view the product (may be null)</param>        
            <param name="shipTo">current shipto attempt to view the produt (may be null) </param>
            <returns>true if the current customer and shipto does not have permission view the product.</returns>
        </member>
        <member name="P:InSite.Model.RestrictionGroup.Name">
            <summary>
            Human readable unique key.
            </summary>        
        </member>
        <member name="P:InSite.Model.RestrictionGroup.Description">
            <summary>
            Description of the group.
            </summary>
        </member>
        <member name="P:InSite.Model.RestrictionGroup.DefaultCondition">
            <summary>
            Indicates how the products in the restriction group are visible to customers who are NOT assigned
            to the restriction group. "Include All" = visible. "Exclude All" = hidden.
            </summary>        
        </member>
        <member name="P:InSite.Model.RestrictionGroup.Allow">
            <summary>
            Indicates if the products in the restriction group are visible to normal customers.
            </summary>
        </member>
        <member name="P:InSite.Model.SearchSynonym.Language">
            <summary>
            Gets or sets the language.
            </summary>
        </member>
        <member name="P:InSite.Model.SearchSynonym.LanguageCode">
            <summary>
            Gets or sets the language code (used for the Management Console).
            </summary>
        </member>
        <member name="T:InSite.Model.Services.ApplicationLogProvider_Generic">
            <summary>Where logging is done in the system</summary>
        </member>
        <member name="M:InSite.Model.Services.AppSettingProvider.ResetToDefault">
            <summary>The reset to default.</summary>
        </member>
        <member name="P:InSite.Model.Services.AppSettingProvider.Current">
            <summary>Gets or sets the current.</summary>
        </member>
        <member name="F:InSite.Model.Carrier.ShippingCalculationNone">
            <summary>
            $0 No Charge Calculation type string
            </summary>
            <returns>None</returns>
        </member>
        <member name="F:InSite.Model.Carrier.ShippingCalculationFlat">
            <summary>
            Flat Fee Charges per ShipVia Calculation type string
            </summary>
            <returns>Flat</returns>
        </member>
        <member name="F:InSite.Model.Carrier.ShippingCalculationPercent">
            <summary>
            Percent of Order Total Calculation type string
            </summary>
            <returns>Percent</returns>
        </member>
        <member name="F:InSite.Model.Carrier.ShippingCalculationRate">
            <summary>
            Rate via service Calculation type string
            </summary>
            <returns>Rate</returns>
        </member>
        <member name="F:InSite.Model.Carrier.ShippingCalculationMileageRate">
            <summary>
            Rate for Mileage Calculation type string
            </summary>
            <returns>Mileage</returns>
        </member>
        <member name="F:InSite.Model.Carrier.ShippingCalculationProductShippingCostOverride">
            <summary>
            Product Shipping Cost Override Calculation type string
            </summary>
            <returns>ProductCostOverride</returns>
        </member>
        <member name="F:InSite.Model.Carrier.RatingServiceNone">
            <summary>
            None Rating Service string
            </summary>
            <returns>None</returns>
        </member>
        <member name="F:InSite.Model.Carrier.RatingServiceUPS">
            <summary>
            UPS Rating Service string
            </summary>
            <returns>UPS</returns>
        </member>
        <member name="F:InSite.Model.Carrier.RatingServiceFedEx">
            <summary>
            Fedex Rating Service string
            </summary>
            <returns>Fedex</returns>
        </member>
        <member name="F:InSite.Model.Carrier.RatingServiceFreightQuote">
            <summary>
            FreightQuote Rating Service string
            </summary>
            <returns>FreightQuote</returns>
        </member>
        <member name="F:InSite.Model.Carrier.RatingServiceMileage">
            <summary>
            Mileage Rating Service string
            </summary>
            <returns>Mileage</returns>
        </member>
        <member name="F:InSite.Model.Carrier.RatingServiceSpeedeeDelivery">
            <summary>
            Speedee Delivery Rating Service string
            </summary>
            <returns>SpeedeeDelivery</returns>
        </member>
        <member name="F:InSite.Model.Carrier.RatingServiceConway">
            <summary>
            Conway Rating Service string 
            </summary>
            <returns>Conway</returns>
        </member>
        <member name="F:InSite.Model.Carrier.RatingServiceABF">
            <summary>
            ABF Rating Service string
            </summary>
            <returns>ABF</returns>
        </member>
        <member name="M:InSite.Model.Carrier.GetByName(System.String)">
            <summary>
            Static Method which returns <see cref="T:InSite.Model.Carrier"/> if it exists else returns null
            </summary>
            <param name="name">Name of carrier to be retrieved</param>
            <returns></returns>
        </member>
        <member name="M:InSite.Model.Carrier.AddShipVia(InSite.Model.ShipVia)">
            <summary>
            Add ShipVia to Carrier
            </summary>
            <param name="value">ShipVia</param>
        </member>
        <member name="M:InSite.Model.Carrier.RemoveShipVia(InSite.Model.ShipVia)">
            <summary>
            Removes <see cref="T:InSite.Model.ShipVia"/> from this <see cref="T:InSite.Model.Carrier"/> is the <see cref="T:InSite.Model.Carrier"/> has the provided <see cref="T:InSite.Model.ShipVia"/>
            </summary>
            <param name="value"><see cref="T:InSite.Model.ShipVia"/> to remove from <see cref="T:InSite.Model.Carrier"/></param>
        </member>
        <member name="M:InSite.Model.Carrier.HasShipCode(System.String)">
            <summary>
            Returns true/false if a carrier has a ShipCode matching the input string
            </summary>
            <param name="shipCode"></param>
            <returns>bool</returns>
        </member>
        <member name="M:InSite.Model.Carrier.HasShipName(System.String)">
            <summary>
            Returns true/false if carriers has a description matching the input string.
            </summary>
            <param name="shipName"></param>
            <returns>bool</returns>
        </member>
        <member name="M:InSite.Model.Carrier.GetShipVia(System.String)">
            <summary>
            Returns a ShipVia if it can find one matching the shipCode input parameter.  Returns null if it can not find a ShipVia.
            </summary>
            <param name="shipCode"></param>
            <returns></returns>
        </member>
        <member name="M:InSite.Model.Carrier.GetShipViaByDescription(System.String)">
            <summary>
            Get <see cref="T:InSite.Model.ShipVia"/> by <see cref="P:InSite.Model.ShipVia.Description"/>
            </summary>
            <param name="description"><see cref="P:InSite.Model.ShipVia.Description"/> to search for</param>
            <returns><see cref="T:InSite.Model.ShipVia"/> if found else throws <see cref="T:System.Exception"/></returns>
            <exception cref="T:System.Exception">If we can not find <see cref="T:InSite.Model.ShipVia"/> by <see cref="P:InSite.Model.ShipVia.Description"/></exception>
        </member>
        <member name="M:InSite.Model.Carrier.AddCustomer(InSite.Model.Customer)">
            <summary>
            Add <see cref="T:InSite.Model.Customer"/> to <see cref="T:InSite.Model.Carrier"/>
            </summary>
            <param name="value"><see cref="T:InSite.Model.Customer"/> to add to <see cref="T:InSite.Model.Carrier"/></param>
        </member>
        <member name="M:InSite.Model.Carrier.RemoveCustomer(InSite.Model.Customer)">
            <summary>
            Remove <see cref="T:InSite.Model.Customer"/> from <see cref="P:InSite.Model.Carrier.Customers"/> collection
            </summary>
            <param name="value"><see cref="T:InSite.Model.Customer"/> to remove from <see cref="P:InSite.Model.Carrier.Customers"/> collection</param>
        </member>
        <member name="M:InSite.Model.Carrier.AddWebSite(InSite.Model.WebSite)">
            <summary>
            Add <see cref="T:InSite.Model.WebSite"/> to <see cref="T:InSite.Model.Carrier"/>
            </summary>
            <param name="value">WebSite</param>
        </member>
        <member name="M:InSite.Model.Carrier.RemoveWebSite(InSite.Model.WebSite)">
            <summary>
            Removes WebSite from Carrier
            </summary>
            <param name="value">WebSite</param>
        </member>
        <member name="M:InSite.Model.Carrier.AddShipRule(InSite.Model.ShipRule)">
            <summary>
            Add <see cref="T:InSite.Model.ShipVia"/> to this <see cref="T:InSite.Model.Carrier"/>
            </summary>
            <param name="value"><see cref="T:InSite.Model.ShipRule"/> to be added</param>
            <remarks>Will add <see cref="T:InSite.Model.ShipRule"/> to <see cref="T:InSite.Model.Carrier"/> if the <see cref="T:InSite.Model.Carrier"/> does not all ready contain this <see cref="T:InSite.Model.ShipRule"/></remarks>
        </member>
        <member name="M:InSite.Model.Carrier.RemoveShipRule(InSite.Model.ShipRule)">
            <summary>
            Method to remove <see cref="T:InSite.Model.ShipRule"/> from this <see cref="T:InSite.Model.Carrier"/>
            </summary>
            <param name="value"><see cref="P:InSite.Model.Carrier.ShipRules"/> to remove</param>
            <remarks>
            if this <see cref="T:InSite.Model.Carrier"/> contains the supplied <see cref="T:InSite.Model.ShipRule"/> remove it else do nothing
            </remarks>
        </member>
        <member name="M:InSite.Model.Carrier.AddShipCharge(InSite.Model.ShipCharge)">
            <summary>
            Method to add <see cref="T:InSite.Model.ShipCharge"/> to this <see cref="T:InSite.Model.Carrier"/>
            </summary>
            <param name="value"><see cref="T:InSite.Model.ShipCharge"/> to be added to <see cref="T:InSite.Model.Carrier"/></param>
            <remarks>
            Adds <see cref="T:InSite.Model.ShipCharge"/> to <see cref="T:InSite.Model.Carrier"/> if the <see cref="T:InSite.Model.Carrier"/> does not have this <see cref="T:InSite.Model.ShipCharge"/> in its collection of <see cref="P:InSite.Model.Carrier.ShipCharges"/>
            </remarks>
        </member>
        <member name="M:InSite.Model.Carrier.RemoveShipCharge(InSite.Model.ShipCharge)">
            <summary>
            Method to remove <see cref="T:InSite.Model.ShipCharge"/> from <see cref="T:InSite.Model.Carrier"/>'s <see cref="P:InSite.Model.Carrier.ShipCharges"/>
            </summary>
            <param name="value"><see cref="T:InSite.Model.ShipCharge"/> to remove from <see cref="P:InSite.Model.Carrier.ShipCharges"/></param>
            <remarks>
            Removes <see cref="T:InSite.Model.ShipCharge"/> from <see cref="T:InSite.Model.Carrier"/> if the <see cref="T:InSite.Model.ShipCharge"/> is in the collection of <see cref="P:InSite.Model.Carrier.ShipCharges"/>
            </remarks>
        </member>
        <member name="M:InSite.Model.Carrier.AddCarrierPackage(InSite.Model.CarrierPackage)">
            <summary>
            Method to Add a <see cref="T:InSite.Model.CarrierPackage"/> to the <see cref="T:InSite.Model.Carrier"/>
            </summary>
            <param name="value"><see cref="T:InSite.Model.CarrierPackage"/> to add to the <see cref="P:InSite.Model.Carrier.CarrierPackages"/> collection</param>
            <remarks>
            Adds <see cref="T:InSite.Model.CarrierPackage"/> to <see cref="P:InSite.Model.Carrier.CarrierPackages"/> collection if the collection does not contain the provided <see cref="T:InSite.Model.CarrierPackage"/> in the <see cref="P:InSite.Model.Carrier.CarrierPackages"/> collection
            </remarks>
        </member>
        <member name="M:InSite.Model.Carrier.RemoveCarrierPackage(InSite.Model.CarrierPackage)">
            <summary>
            Method to remove the provided <see cref="T:InSite.Model.CarrierPackage"/> from the <see cref="P:InSite.Model.Carrier.CarrierPackages"/> collection
            </summary>
            <param name="value"><see cref="T:InSite.Model.CarrierPackage"/> to remove from <see cref="T:InSite.Model.Carrier"/>'s <see cref="P:InSite.Model.Carrier.CarrierPackages"/> collection</param>
            <remarks>Removes <see cref="T:InSite.Model.CarrierPackage"/> from the <see cref="T:InSite.Model.Carrier"/>'s <see cref="P:InSite.Model.Carrier.CarrierPackages"/> collection if the <see cref="P:InSite.Model.Carrier.CarrierPackages"/> collection contains the provided <see cref="T:InSite.Model.CarrierPackage"/> </remarks>
        </member>
        <member name="M:InSite.Model.Carrier.IsValid(InSite.Model.CustomerOrder)">
            <summary>
            Method that returns whether the <see cref="T:InSite.Model.Carrier"/> passes all the <see cref="P:InSite.Model.Carrier.ShipRules"/>
            </summary>
            <param name="customerOrder"><see cref="T:InSite.Model.CustomerOrder"/> to validate if <see cref="T:InSite.Model.Carrier"/> is allowed to Rate the provided <see cref="T:InSite.Model.CustomerOrder"/></param>
            <returns><see cref="T:System.Boolean"/> that represents whether this <see cref="T:InSite.Model.Carrier"/> is a valid <see cref="T:InSite.Model.Carrier"/> for the provided <see cref="T:InSite.Model.CustomerOrder"/></returns>
            <remarks>
            Validates all <see cref="P:InSite.Model.Carrier.ShipRules"/>, if the carrier is <see cref="P:InSite.Model.Carrier.Enable"/>
            </remarks>
        </member>
        <member name="M:InSite.Model.Carrier.AddCarrierZone(InSite.Model.CarrierZone)">
            <summary>
            Method to Add <see cref="T:InSite.Model.CarrierZone"/> to the <see cref="T:InSite.Model.Carrier"/>
            </summary>
            <param name="value"><see cref="T:InSite.Model.CarrierZone"/> to Add to <see cref="T:InSite.Model.Carrier"/></param>
            <remarks>
            Add <see cref="T:InSite.Model.CarrierZone"/> to <see cref="T:InSite.Model.Carrier"/> if the <see cref="P:InSite.Model.Carrier.CarrierZones"/> collection does not contain the provided <see cref="T:InSite.Model.CarrierZone"/>
            </remarks>
        </member>
        <member name="M:InSite.Model.Carrier.RemoveCarrierZone(InSite.Model.CarrierZone)">
            <summary>
            Method to remove the provided <see cref="T:InSite.Model.CarrierZone"/> from the <see cref="P:InSite.Model.Carrier.CarrierZones"/> collection
            </summary>
            <param name="value"><see cref="T:InSite.Model.CarrierZone"/> to remove from <see cref="T:InSite.Model.Carrier"/>'s <see cref="P:InSite.Model.Carrier.CarrierZones"/> collection</param>
            <remarks>Removes <see cref="T:InSite.Model.CarrierZone"/> from the <see cref="T:InSite.Model.Carrier"/>'s <see cref="P:InSite.Model.Carrier.CarrierZones"/> collection if the <see cref="P:InSite.Model.Carrier.CarrierZones"/> collection contains the provided <see cref="T:InSite.Model.CarrierZone"/> </remarks>
        </member>
        <member name="M:InSite.Model.Carrier.GetCarrierZone(System.String)">
            <summary>
            Method to return the <see cref="T:InSite.Model.CarrierZone"/> for the provided Postal Code from <see cref="T:InSite.Model.Carrier"/> 
            </summary>
            <param name="postalCode">postalCode to get <see cref="T:InSite.Model.CarrierZone"/></param>
            <returns><see cref="T:InSite.Model.CarrierZone"/> for postalCode or null</returns>
        </member>
        <member name="M:InSite.Model.Carrier.ClearCarrierZones">
            <summary>
            Method to clear all <see cref="P:InSite.Model.Carrier.CarrierZones"/> for the <see cref="T:InSite.Model.Carrier"/>
            </summary>
        </member>
        <member name="P:InSite.Model.Carrier.Name">
            <summary>
            Gets or sets a name for a carrier
            </summary>
        </member>
        <member name="P:InSite.Model.Carrier.Description">
            <summary>
            Gets or Sets a Description
            </summary>
        </member>
        <member name="P:InSite.Model.Carrier.ImagePath">
            <summary>
            Gets or Sets the Image Path
            </summary>
        </member>
        <member name="P:InSite.Model.Carrier.UserName">
            <summary>
            Gets or Sets the User Name for the rating services
            </summary>
        </member>
        <member name="P:InSite.Model.Carrier.Password">
            <summary>
            Gets or sets the password for rating services
            </summary>
        </member>
        <member name="P:InSite.Model.Carrier.AccountNumber">
            <summary>
            Gets or sets the account number for rating services
            </summary>
        </member>
        <member name="P:InSite.Model.Carrier.AccessKey">
            <summary>
            Gets or sets and access key for rating services
            </summary>
        </member>
        <member name="P:InSite.Model.Carrier.Enable">
            <summary>
            Gets or Sets whether this Carrier is enabled or disables.
            </summary>
        </member>
        <member name="P:InSite.Model.Carrier.IsLive">
            <summary>
            Gets or Sets whether the Carrier Processing is Live or Test.
            </summary>
        </member>
        <member name="P:InSite.Model.Carrier.LiveUrl">
            <summary>
            Gets or Sets the Live URL for Rating.
            </summary>
        </member>
        <member name="P:InSite.Model.Carrier.TestUrl">
            <summary>
            Gets or Sets the Test URL for Rating.
            </summary>
        </member>
        <member name="P:InSite.Model.Carrier.ShippingCalculation">
            <summary>
            Gets or Sets the ShippingCalculation type
            </summary>
        </member>
        <member name="P:InSite.Model.Carrier.IsPrimaryCarrier">
            <summary>
            Gets or Sets whether this Carrier is a primary Shipping Carrier. 
            </summary>
        </member>
        <member name="P:InSite.Model.Carrier.RatingService">
            <summary>
            Gets or sets the Rating Processor
            </summary>
        </member>
        <member name="P:InSite.Model.Carrier.ContactName">
            <summary>
            Gets or sets the Contact Name for the carrier
            </summary>
        </member>
        <member name="P:InSite.Model.Carrier.ContactPhone">
            <summary>
            Gets or Sets the Contact Phone number
            </summary>
        </member>
        <member name="P:InSite.Model.Carrier.ContactEmail">
            <summary>
            Gets or sets the Contacts email address
            </summary>
        </member>
        <member name="P:InSite.Model.Carrier.BackUpCarrier">
            <summary>
            Gets or Sets a BackUp <see cref="T:InSite.Model.Carrier"/> for this carrier for the shipping processor.
            </summary>
        </member>
        <member name="P:InSite.Model.Carrier.Currency">
            <summary>
            <see cref="P:InSite.Model.Carrier.Currency"/> that freight is represented in.
            </summary>
        </member>
        <member name="P:InSite.Model.Carrier.CurrencyCode">
            <summary>
            <see cref="P:InSite.Model.Carrier.Currency"/>.CurrencyCode that freight is represented in.
            </summary>
        </member>
        <member name="P:InSite.Model.Carrier.BackUpCarrierName">
            <summary>
            Get or Sets the Backup <see cref="T:InSite.Model.Carrier"/> for this carrier by BackupCarrierName.
            </summary>
        </member>
        <member name="P:InSite.Model.Carrier.HasBackUpCarrier">
            <summary>
            Get HasBackUpCarrier
            </summary>
            <remarks>Will return whether this <see cref="T:InSite.Model.Carrier"/> has a backup <see cref="T:InSite.Model.Carrier"/> </remarks>
        </member>
        <member name="P:InSite.Model.Carrier.ShipChargeAmount">
            <summary>
            Get ShipChargeAmount - will return a sum of all the enabled <see cref="T:InSite.Model.ShipCharge"/>s for this <see cref="T:InSite.Model.Carrier"/>
            </summary>
        </member>
        <member name="P:InSite.Model.Carrier.ShipVias">
            <summary>
            Gets a list of ShipVias this Carrier is associated with.
            </summary>
        </member>
        <member name="P:InSite.Model.Carrier.Customers">
            <summary>
            Gets a list of Customers this Carrier is associated with.
            </summary>
        </member>
        <member name="P:InSite.Model.Carrier.WebSites">
            <summary>
            Gets a list of Websites this Carrier is associated with.
            </summary>
        </member>
        <member name="P:InSite.Model.Carrier.ShipRules">
            <summary>
            Gets/Sets a collection of Shipping Rules that the Shipping Engine will use
            to Validate whether the carrier can be used for the order
            </summary>
        </member>
        <member name="P:InSite.Model.Carrier.CarrierZones">
            <summary>
            Gets/Sets a collection of Carrier Zones used for zone
            rating such as sir speedy
            </summary>
        </member>
        <member name="P:InSite.Model.Carrier.ShipCharges">
            <summary>
            Get or Sets the <see cref="T:InSite.Model.ChildList`1"/> of <see cref="P:InSite.Model.Carrier.ShipCharges"/> for this <see cref="T:InSite.Model.Carrier"/> 
            </summary>
        </member>
        <member name="P:InSite.Model.Carrier.CarrierPackages">
            <summary>
            Get or Sets the <see cref="T:InSite.Model.ChildList`1"/> of <see cref="T:InSite.Model.CarrierPackage"/> for this <see cref="T:InSite.Model.Carrier"/> 
            </summary>
        </member>
        <member name="P:InSite.Model.Carrier.Url">
            <summary>
            Returns a URL, if IsLive is true, returns LiveUrl else it returns TestUrl.
            </summary>
        </member>
        <member name="T:InSite.Model.CarrierPackage">
            <summary>
            Represents a package for Rating for the <see cref="P:InSite.Model.CarrierPackage.Carrier"/>
            </summary>
        </member>
        <member name="P:InSite.Model.CarrierPackage.Name">
            <summary>
            Gets or sets a name for a <see cref="P:InSite.Model.CarrierPackage.Carrier"/>
            </summary>
        </member>
        <member name="P:InSite.Model.CarrierPackage.Length">
            <summary>
            Gets or sets Length of the <see cref="T:InSite.Model.CarrierPackage"/>
            </summary>
        </member>
        <member name="P:InSite.Model.CarrierPackage.Width">
            <summary>
            Gets or sets Width of the <see cref="T:InSite.Model.CarrierPackage"/>
            </summary>
        </member>
        <member name="P:InSite.Model.CarrierPackage.Height">
            <summary>
            Gets or sets the Height of the <see cref="T:InSite.Model.CarrierPackage"/>
            </summary>
        </member>
        <member name="P:InSite.Model.CarrierPackage.Weight">
            <summary>
            Gets or sets the Weight of the <see cref="T:InSite.Model.CarrierPackage"/>
            </summary>
        </member>
        <member name="P:InSite.Model.CarrierPackage.IsActive">
            <summary>
            Gets or sets whether the <see cref="T:InSite.Model.CarrierPackage"/> is Active
            </summary>
        </member>
        <member name="P:InSite.Model.CarrierPackage.Carrier">
            <summary>
            Gets or sets the <see cref="P:InSite.Model.CarrierPackage.Carrier"/> for the <see cref="T:InSite.Model.CarrierPackage"/>
            </summary>
        </member>
        <member name="T:InSite.Model.CarrierZone">
            <summary>
            Represents a CarrierZone
            </summary>
        </member>
        <member name="M:InSite.Model.CarrierZone.AddCarrierZoneRate(InSite.Model.CarrierZoneRate)">
            <summary>
            Method to Add <see cref="T:InSite.Model.CarrierZoneRate"/> to the <see cref="P:InSite.Model.CarrierZone.CarrierZoneRates"/> collection for the <see cref="T:InSite.Model.CarrierZone"/>
            </summary>
            <param name="value"><see cref="T:InSite.Model.CarrierZoneRate"/> to add the <see cref="P:InSite.Model.CarrierZone.CarrierZoneRates"/> collection </param>
            <remarks>
            Adds <see cref="T:InSite.Model.CarrierZoneRate"/> to the <see cref="P:InSite.Model.CarrierZone.CarrierZoneRates"/> collection if the <see cref="P:InSite.Model.CarrierZone.CarrierZoneRates"/> collection does not contain the provided <see cref="T:InSite.Model.CarrierZoneRate"/>
            </remarks>
        </member>
        <member name="M:InSite.Model.CarrierZone.RemoveCarrierZoneRate(InSite.Model.CarrierZoneRate)">
            <summary>
            Method to remove the <see cref="T:InSite.Model.CarrierZoneRate"/> from the <see cref="T:InSite.Model.CarrierZone"/>'s <see cref="P:InSite.Model.CarrierZone.CarrierZoneRates"/> collection
            </summary>
            <param name="value"><see cref="T:InSite.Model.CarrierZoneRate"/> to be removed from the <see cref="P:InSite.Model.CarrierZone.CarrierZoneRates"/> collection</param>
            <remarks>
            Removes <see cref="T:InSite.Model.CarrierZoneRate"/> from the <see cref="P:InSite.Model.CarrierZone.CarrierZoneRates"/> collection if the <see cref="P:InSite.Model.CarrierZone.CarrierZoneRates"/> collection contains the provided <see cref="T:InSite.Model.CarrierZoneRate"/>
            </remarks>
        </member>
        <member name="M:InSite.Model.CarrierZone.IsValid(System.String)">
            <summary>
            Method to check if this <see cref="T:InSite.Model.CarrierZone"/> is valid for the provided postal code
            </summary>
            <param name="postalCode">parameter for checking if <see cref="T:InSite.Model.CarrierZone"/> is valid for provided postal code</param>
            <returns><see cref="T:System.Boolean"/></returns>
        </member>
        <member name="M:InSite.Model.CarrierZone.GetCarrierZoneRate(System.Decimal)">
            <summary>
            Method to return <see cref="T:InSite.Model.CarrierZoneRate"/> from <see cref="P:InSite.Model.CarrierZone.CarrierZoneRates"/> by weight
            </summary>
            <param name="weight">weight for <see cref="T:InSite.Model.CarrierZoneRate"/> retrieval</param>
            <returns><see cref="T:InSite.Model.CarrierZoneRate"/> for the provided weight or null</returns>
        </member>
        <member name="P:InSite.Model.CarrierZone.Carrier">
            <summary>
            Gets or sets the <see cref="P:InSite.Model.CarrierZone.Carrier"/>
            </summary>
        </member>
        <member name="P:InSite.Model.CarrierZone.Zone">
            <summary>
            Gets or sets the Zone
            </summary>
        </member>
        <member name="P:InSite.Model.CarrierZone.CarrierZoneRates">
            <summary>
            Gets or sets the <see cref="P:InSite.Model.CarrierZone.CarrierZoneRates"/> collection
            </summary>
        </member>
        <member name="P:InSite.Model.CarrierZone.CarrierZonePostalCodeRanges">
            <summary>
            Gets or sets the <see cref="P:InSite.Model.CarrierZone.CarrierZonePostalCodeRanges"/> collection
            </summary>
        </member>
        <member name="T:InSite.Model.CarrierZoneRate">
            <summary>
            Represents a CarrierZoneRate for a CarrierZone
            </summary>
        </member>
        <member name="M:InSite.Model.CarrierZoneRate.IsValid(System.Decimal)">
            <summary>
            Method to determine if this <see cref="T:InSite.Model.CarrierZoneRate"/> is valid for the weight provided
            </summary>
            <param name="weight">weight to validate whether this <see cref="T:InSite.Model.CarrierZoneRate"/> is valid for the weight provided</param>
            <returns><see cref="T:System.Boolean"/></returns>
        </member>
        <member name="P:InSite.Model.CarrierZoneRate.CarrierZone">
            <summary>
            Gets or sets the Parent <see cref="P:InSite.Model.CarrierZoneRate.CarrierZone"/>
            </summary>
        </member>
        <member name="P:InSite.Model.CarrierZoneRate.Weight">
            <summary>
            Gets or sets the Weight for this <see cref="T:InSite.Model.CarrierZoneRate"/>
            </summary>
        </member>
        <member name="P:InSite.Model.CarrierZoneRate.Rate">
            <summary>
            Gets or sets the Rate for this <see cref="T:InSite.Model.CarrierZoneRate"/>
            </summary>
        </member>
        <member name="T:InSite.Model.CarrierZonePostalCodeRange">
            <summary>
            Represents a CarrierZonePostalCodeRange
            </summary>
        </member>
        <member name="M:InSite.Model.CarrierZonePostalCodeRange.IsValid(System.String)">
            <summary>
            Method to validate whether this <see cref="T:InSite.Model.CarrierZonePostalCodeRange"/> is valid for the provided postal code
            </summary>
            <param name="postalCode">postal code to validate whether this <see cref="T:InSite.Model.CarrierZonePostalCodeRange"/> is valid</param>
            <returns><see cref="T:System.Boolean"/></returns>
            <remarks>
            returns <see cref="T:System.Boolean"/> of if the postal code provided is in the <see cref="P:InSite.Model.CarrierZonePostalCodeRange.PostalCodeStartRange"/> and <see cref="P:InSite.Model.CarrierZonePostalCodeRange.PostalCodeEndRange"/>
            </remarks>
        </member>
        <member name="P:InSite.Model.CarrierZonePostalCodeRange.PostalCodeStartRange">
            <summary>
            Gets or sets the postal code start range
            </summary>
        </member>
        <member name="P:InSite.Model.CarrierZonePostalCodeRange.PostalCodeEndRange">
            <summary>
            Gets or sets the postal code end range
            </summary>
        </member>
        <member name="P:InSite.Model.CarrierZonePostalCodeRange.CarrierZone">
            <summary>
            Gets or sets the <see cref="P:InSite.Model.CarrierZonePostalCodeRange.CarrierZone"/> for this <see cref="T:InSite.Model.CarrierZonePostalCodeRange"/>
            </summary>
        </member>
        <member name="T:InSite.Model.BootStrapper.BootStrapper">
            <summary>
            Standard <see cref="T:InSite.Model.BootStrapper.IBootStrapper"/> implementation that gets run on application startup.
            </summary>
        </member>
        <member name="T:InSite.Model.BootStrapper.IBootStrapper">
            <summary>
            Interface to implement to customize the BootStrapper that gets run on application startup.
            </summary>
        </member>
        <member name="M:InSite.Model.BootStrapper.IBootStrapper.Boot">
            <summary>
            Method that gets run on application startup.
            </summary>
        </member>
        <member name="M:InSite.Model.BootStrapper.BootStrapper.#ctor(InSite.Model.BootStrapper.IDependencyRegistrar)">
            <summary>
            Dependency Injection Constructor.
            </summary>
            <param name="dependencyRegistrar"><see cref="T:InSite.Model.BootStrapper.IDependencyRegistrar"/></param>
        </member>
        <member name="M:InSite.Model.BootStrapper.BootStrapper.Boot">
            <summary>
            Method that gets run when the application starts, goes through assemblies to find implementations of <see cref="T:InSite.Model.BootStrapper.IStartupTask"/> and
            then goes through them by <see cref="T:InSite.Model.BootStrapperOrder"/> and calls their Run method.
            </summary>
        </member>
        <member name="T:InSite.Model.Services.CartOrderProviderFactory">
            <summary>
            Concrete implementation of the <see cref="T:InSite.Model.Interfaces.ICartOrderProviderFactory"/>.  The implemented classes responsibility is to implement
            a factory that can return <see cref="T:InSite.Model.ICartOrderProvider"/> by name.
            </summary>
        </member>
        <member name="F:InSite.Model.Services.CartOrderProviderFactory.ServiceLocator">
            <summary>The service locator.</summary>
        </member>
        <member name="F:InSite.Model.Services.CartOrderProviderFactory.UnitOfWorkFactory">
            <summary>The unit of work factory.</summary>
        </member>
        <member name="M:InSite.Model.Services.CartOrderProviderFactory.#ctor(Microsoft.Practices.ServiceLocation.IServiceLocator,InSite.Model.Interfaces.IUnitOfWorkFactory)">
            <summary>Initializes a new instance of the <see cref="T:InSite.Model.Services.CartOrderProviderFactory"/> class. Initializes a new instance of the class with dependencies passed in.</summary>
            <param name="serviceLocator">The Service Locator used to resolve the request to create a new  <see cref="T:InSite.Model.ICartOrderProvider"/>.</param>
            <param name="unitOfWorkFactory">The unit Of Work Factory.</param>
        </member>
        <member name="M:InSite.Model.Services.CartOrderProviderFactory.GetCartOrderProvider">
            <summary>Creates a new instances of <see cref="T:InSite.Model.ICartOrderProvider"/> by resolving the name of the cart order provider which is registered in the Ioc Container.</summary>
            <returns>A new instance of an object that implements <see cref="T:InSite.Model.ICartOrderProvider"/></returns>
        </member>
        <member name="T:InSite.Model.CartOrderProviderByCustomer">
            <summary>
            Stores/Retrieves the Shopping Cart by Customer
            </summary>
        </member>
        <member name="T:InSite.Model.CartOrderProvider_Generic">
            <summary>Generic implementation of the component to get the current shopping cart order</summary>
        </member>
        <member name="T:InSite.Model.ICartOrderProvider">
            <summary>Implement this interface to customize the value of the current shopping cart order.</summary>
        </member>
        <member name="M:InSite.Model.ICartOrderProvider.GetCartOrder">
            <summary>Retrieve the value of the contexts current cart.</summary>
            <returns>The CustomerOrder that represents the value of the contexts current cart.</returns>
        </member>
        <member name="M:InSite.Model.ICartOrderProvider.GetOrCreateCartOrder">
            <summary>Gets the current or creates a new shopping cart CustomerOrder</summary>
            <returns>The CustomerOrder that represents the value of the contexts current cart.</returns>
        </member>
        <member name="M:InSite.Model.ICartOrderProvider.SetCartOrder(InSite.Model.CustomerOrder)">
            <summary>Sets  the value of the contexts current cart.</summary>
            <param name="customerOrder">The CustomerOrder that represents the value of the contexts current cart.</param>
        </member>
        <member name="F:InSite.Model.CartOrderProvider_Generic.CustomerOrderKey">
            <summary>The customer order key.</summary>
        </member>
        <member name="F:InSite.Model.CartOrderProvider_Generic.CookieManager">
            <summary>The cookie manager.</summary>
        </member>
        <member name="F:InSite.Model.CartOrderProvider_Generic.DefaultShipToProvider">
            <summary>The default ship to provider.</summary>
        </member>
        <member name="F:InSite.Model.CartOrderProvider_Generic.PerRequestCacheManager">
            <summary>The per request cache manager.</summary>
        </member>
        <member name="F:InSite.Model.CartOrderProvider_Generic.UnitOfWork">
            <summary>The unit of work.</summary>
        </member>
        <member name="F:InSite.Model.CartOrderProvider_Generic.ContextProvider">
            <summary>The context provider.</summary>
        </member>
        <member name="F:InSite.Model.CartOrderProvider_Generic.shoppingCartRetentionDays">
            <summary>The shopping cart retention days.</summary>
        </member>
        <member name="M:InSite.Model.CartOrderProvider_Generic.#ctor(InSite.Model.Managers.ICookieManager,InSite.Model.Managers.IPerRequestCacheManager,InSite.Model.Interfaces.IUnitOfWorkFactory)">
            <summary>Initializes a new instance of the <see cref="T:InSite.Model.CartOrderProvider_Generic"/> class. Default Constructor that sets the ContextProvider</summary>
            <param name="cookieManager">The cookie Manager.</param>
            <param name="perRequestCacheManager">The per Request Cache Manager.</param>
            <param name="unitOfWorkFactory">The unit Of Work Factory.</param>
        </member>
        <member name="M:InSite.Model.CartOrderProvider_Generic.GetCartOrder">
            <summary>The get cart order.</summary>
            <returns>The <see cref="T:InSite.Model.CustomerOrder"/>.</returns>
        </member>
        <member name="M:InSite.Model.CartOrderProvider_Generic.GetOrCreateCartOrder">
            <summary>The get or create cart order.</summary>
            <returns>The <see cref="T:InSite.Model.CustomerOrder"/>.</returns>
        </member>
        <member name="M:InSite.Model.CartOrderProvider_Generic.SetCartOrder(InSite.Model.CustomerOrder)">
            <summary>The set cart order.</summary>
            <param name="customerOrder">The customer order.</param>
        </member>
        <member name="M:InSite.Model.CartOrderProvider_Generic.GetAbandonedCartCustomer">
            <summary>The get abandoned cart customer.</summary>
            <returns>The <see cref="T:InSite.Model.Customer"/>.</returns>
        </member>
        <member name="M:InSite.Model.CartOrderProvider_Generic.LookupCustomerOrder">
            <summary>The lookup customer order.</summary>
            <returns>The <see cref="T:InSite.Model.CustomerOrder"/>.</returns>
        </member>
        <member name="M:InSite.Model.CartOrderProvider_Generic.ReplaceWithApprovalOrderIfNeeded(InSite.Model.CustomerOrder)">
            <summary>The replace with approval order if needed.</summary>
            <param name="customerOrder">The customer order.</param>
            <returns>The <see cref="T:InSite.Model.CustomerOrder"/>.</returns>
        </member>
        <member name="P:InSite.Model.CartOrderProvider_Generic.CartCookieName">
            <summary>Gets the cart cookie name.</summary>
        </member>
        <member name="P:InSite.Model.CartOrderProvider_Generic.ShoppingCartRetentionDays">
            <summary>
            ShoppingCartRetentionDays - Number of days to retain shopping cart
            </summary>
        </member>
        <member name="T:InSite.Model.CartOrderProviderByShipTo">
            <summary>
            Stores/Retrieves the Shopping Cart by ShipTo
            </summary>
        </member>
        <member name="M:InSite.Model.Category.GetByWebSiteCategoryName(System.String)">
            <summary>
            Gets Category or throws CategoryNotFoundException
            </summary>
            <param name="webSiteCategoryName">Colon delimited string containing webSiteName:CategoryName:CategoryName ... where CategoryName is CategoryName at each level of the Category Tree (ex SiteName:TopCat or SiteName:TopCat:SubCat)</param>
            <returns>Category or throws CategoryNotFoundException</returns>
        </member>
        <member name="M:InSite.Model.Category.GetActiveByWebSiteCategoryName(System.String)">
            <summary>
            Gets Category, if not Active throws CategoryNotActiveException, if not found throws CategoryNotFoundException
            </summary>
            <param name="webSiteCategoryName">Colon delimited string containing webSiteName:CategoryName:CategoryName ... where CategoryName is CategoryName at each level of the Category Tree (ex SiteName:TopCat or SiteName:TopCat:SubCat)</param>
            <returns>Category, if not Active throws CategoryNotActiveException, if not found throws CategoryNotFoundException</returns>
        </member>
        <member name="M:InSite.Model.Category.HasAvailableProductChildren(System.Nullable{System.Boolean},InSite.Model.Customer,InSite.Model.Customer)">
            <summary>
            Determines whether this category or child cateogories have any available products.
            </summary>
            <param name="customerProductInclude">null to ignore customer product rules, true to include only customer products, 
              false to exclude customer products</param>
            <param name="currentCustomer"> </param>
            <param name="currentShipTo"> </param>
            <returns>true if any available products exist in category or subcategories</returns>
        </member>
        <member name="M:InSite.Model.Category.GetCategoryPath">
            <summary>Gets the path for this category</summary>
            <returns>Slash separated path to category including all categories down to the base category</returns>
        </member>
        <member name="M:InSite.Model.Category.AddCategoryRelatedProduct(InSite.Model.CategoryRelatedProduct)">
            <summary>
            Adds the category related product.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:InSite.Model.Category.RemoveCategoryRelatedProduct(InSite.Model.CategoryRelatedProduct)">
            <summary>
            Removes the category related product.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:InSite.Model.Category.AddRelatedProduct(InSite.Model.ProductInfo,InSite.Model.MiscellaneousCode,System.Int32)">
            <summary>
            Adds the related product.
            </summary>
            <param name="relatedProduct">The related product.</param>
            <param name="miscellaneousCode">The miscellaneous code.</param>
            <param name="sortOrder">The sort order.</param>
        </member>
        <member name="M:InSite.Model.Category.RemoveRelatedProduct(InSite.Model.ProductInfo,System.String)">
            <summary>
            Removes the related product.
            </summary>
            <param name="relatedProduct">The related product.</param>
            <param name="type">The type.</param>
        </member>
        <member name="M:InSite.Model.Category.GetActiveProducts(System.Int32,System.Int32)">
            <summary>
            Retrives a SortOrder, Name sorted list of Products in this category that are currently active.
            Provides parameters for use with an ObjectDataSource paging.
            </summary>
            <param name="startRow">Index of the first Product to return</param>
            <param name="pageSize">Number of Products to return</param>
            <returns>List of Products pulled from Category.Products</returns>
        </member>
        <member name="M:InSite.Model.Category.GetActiveProducts(System.Int32,System.Int32,System.String)">
            <summary>
            Retrives a list of Products in this category that are currently active.
            Provides parameters for use with an ObjectDataSource paging.
            </summary>
            <param name="startRow">Index of the first Product to return</param>
            <param name="pageSize">Number of Products to return</param>
            <param name="sort">Sort</param>
            <returns>List of Products pulled from Category.Products</returns>
        </member>
        <member name="M:InSite.Model.Category.Copy(InSite.Model.WebSite,InSite.Model.Category)">
            <summary>
            make a copy of this Category object 
            </summary>
            <param name="website">Set the website of the copy this website.</param>
            <param name="parentCategory">Set the parentCategory of the copy to this category.</param>
            <returns>Category object.</returns>
        </member>
        <member name="M:InSite.Model.Category.GetProperty(System.String,System.String)">
            <summary>Retrieves the value for the property identified by <paramref name="name"/></summary>
            <param name="name">The name of the property to retrieve</param>
            <param name="defaultValue">The value to use if the property does not exist</param>
        </member>
        <member name="M:InSite.Model.Category.SetProperty(System.String,System.String)">
            <summary>Sets the value for the property identified by <paramref name="name"/></summary>
            <param name="name">The name of the property to retrieve</param>
            <param name="value">The value to set</param>
        </member>
        <member name="P:InSite.Model.Category.ConfigDataSetSchemaProvider">
            <summary>
            ConfigDataSetSchemaProvider PlugIn
            </summary>
        </member>
        <member name="P:InSite.Model.Category.UrlSegment">
            <summary>Category identifier used in URLs</summary>
        </member>
        <member name="P:InSite.Model.Category.ImageAltText">
            <summary>Alt Text for category image</summary>
        </member>
        <member name="P:InSite.Model.Category.CategoryRelatedProducts">
            <summary>
            Gets or sets the related products.
            </summary>
            <value>
            The related products.
            </value>
        </member>
        <member name="P:InSite.Model.Category.CrossSells">
            <summary>Collection of ProductInfos that are the CrossSells of this Product</summary>
        </member>
        <member name="P:InSite.Model.Category.HtmlContent">
            <summary>Gets ContentManager.CurrentContent.HtmlContent, standard field for Content Management used throughout the system</summary>
        </member>
        <member name="P:InSite.Model.Category.ContentManager">
            <summary>The ContentManager manages the Content</summary>
        </member>
        <member name="P:InSite.Model.Category.Documents">
            <summary>A shortcut property to DocumentManager.Documents</summary>
        </member>
        <member name="P:InSite.Model.Category.DocumentManager">
            <summary>The DocumentManager manages uploaded files for this Category</summary>
        </member>
        <member name="P:InSite.Model.CategoryAttributeType.DetailDisplaySequence">
            <summary>
            Indicates that the attribute value should display in the product detail display and the order in which it will display.
            </summary>
        </member>
        <member name="P:InSite.Model.CategoryAttributeType.AttributeTypeName">
            <summary>
            The <see cref="P:InSite.Model.CategoryAttributeType.AttributeType"/>.Name.
            </summary>
        </member>
        <member name="T:InSite.Model.CategoryInfo">
            <summary>
            A simplified view of the Category Object
            </summary>
        </member>
        <member name="P:InSite.Model.CategoryInfo.UrlSegment">
            <summary>Category identifier used in URLs</summary>
        </member>
        <member name="P:InSite.Model.CategoryProperty.Name">
            <summary>
            Gets or sets Name
            </summary>
        </member>
        <member name="P:InSite.Model.CategoryProperty.Value">
            <summary>
            Gets or sets Value
            </summary>
        </member>
        <member name="P:InSite.Model.CategoryProperty.Category">
            <summary>
            Gets or sets Category
            </summary>
        </member>
        <member name="T:InSite.Model.IApplicationLogDigestEmail">
            <summary>Implement the IApplicationLogDigestEmail interface by to customize the batch Application Log digest email that can be scheduled to be sent out</summary>
            <remarks>A digest email of the ApplicationLog can be sent out on a periodic basis by creating a ScheduledTask with a Type of ExecuteQuery and a Parameter
            of ApplicationLogDigestEmail.  Creating your own implementation of this plugin allows you to customize who the email goes to and the contents of this
            email.</remarks>
        </member>
        <member name="M:InSite.Model.IApplicationLogDigestEmail.Send(System.DateTime)">
            <summary>This method is called from a ScheduledTask with the Type set to ExecuteQuery and the Parameter set to ApplicationLogDigestEmail</summary>
            <param name="digestDate">From the ScheduledTask, this parameter will default to 24 hours ago to include all ApplicationLogs created in the last 24 hours</param>
        </member>
        <member name="T:InSite.Model.Interfaces.IUnitOfWork">
            <summary>The IUnitOfWork interface is the abstraction layer to the object session management of the system.  Currently only NHibernate is supported.</summary>
            <remarks>The first time the UnitOfWork is accessed, it will create an instance of the UnitOfWork in HttpContext.Current.Items which lasts for the current
            web request.  Subsequent access of UnitOfWork will return this instance.  This creates an NHibernate session that lasts for the current web request
            and by default will be flushed by the NHibernate Helper HttpModule if it's set up in the web.config</remarks>
        </member>
        <member name="M:InSite.Model.Interfaces.IUnitOfWork.GetRepository``1">
            <summary>Returns an IRepository for an object that will be tracked within this UnitOfWork's session</summary>
        </member>
        <member name="M:InSite.Model.Interfaces.IUnitOfWork.GetTypedRepository``1">
            <summary>Returns a specific type of IRepository that will be tracked within this UnitOfWork's session</summary>
        </member>
        <member name="M:InSite.Model.Interfaces.IUnitOfWork.GetRepository(System.Type)">
            <summary>Returns an IRepository for an object that will be tracked within this UnitOfWork's session</summary>
        </member>
        <member name="M:InSite.Model.Interfaces.IUnitOfWork.BeginTransaction">
            <summary>This method starts a Database Transaction</summary>                        
        </member>
        <member name="M:InSite.Model.Interfaces.IUnitOfWork.CommitTransaction">
            <summary>Commits a previously started Database Transaction</summary>
        </member>
        <member name="M:InSite.Model.Interfaces.IUnitOfWork.RollbackTransaction">
            <summary>Rolls back a previously started Database Transaction</summary>
        </member>
        <member name="M:InSite.Model.Interfaces.IUnitOfWork.Save">
            <summary>Saves all of the changes in the object in the current UnitOfWork session to the Database</summary>
        </member>
        <member name="M:InSite.Model.Interfaces.IUnitOfWork.Clear">
            <summary>This method clears the objects out of the UnitOfWork session, the objects will still be valid objects, but they will no longer be persisted to
            the database.  This method is useful when working with large sets of data for example during a refresh.</summary>
        </member>
        <member name="M:InSite.Model.Interfaces.IUnitOfWork.Evict(System.Object)">
            <summary>Removes a single object from the UnitOfWork session.  The object is still a valid object, but will no longer persist to the database.</summary>
        </member>
        <member name="M:InSite.Model.Interfaces.IUnitOfWork.Reattach(System.Object)">
            <summary>Reattaches a previously Evicted object to the session</summary>
        </member>
        <member name="M:InSite.Model.Interfaces.IUnitOfWork.Refresh(System.Object)">
            <summary>Refresh an object from the database.</summary>
        </member>
        <member name="M:InSite.Model.Interfaces.IUnitOfWork.EagerLoad(System.Object)">
            <summary>Forces a load of a proxy, does not cascade.</summary>
        </member>
        <member name="M:InSite.Model.Interfaces.IUnitOfWork.UnProxy(System.Object)">
            <summary>Convert a proxied object into the real thing.</summary>
        </member>
        <member name="M:InSite.Model.Interfaces.IUnitOfWork.Close">
            <summary>Close the Session.</summary>
        </member>
        <member name="P:InSite.Model.Interfaces.IUnitOfWork.DataProvider">
            <summary>The Persistant Data Provider</summary>
        </member>
        <member name="P:InSite.Model.Company.Name">
            <summary>
            Gets or sets Name
            </summary>
        </member>
        <member name="P:InSite.Model.Company.Address">
            <summary>
            Gets or sets Address
            </summary>
        </member>
        <member name="P:InSite.Model.Company.City">
            <summary>
            Gets or sets City
            </summary>
        </member>
        <member name="P:InSite.Model.Company.State">
            <summary>
            Gets or sets State
            </summary>
        </member>
        <member name="P:InSite.Model.Company.PostalCode">
            <summary>
            Gets or sets PostalCode
            </summary>
        </member>
        <member name="P:InSite.Model.Company.Country">
            <summary>
            Gets or sets Country
            </summary>
        </member>
        <member name="P:InSite.Model.Company.LogoImagePath">
            <summary>
            Gets or sets LogoImagePath
            </summary>
        </member>
        <member name="P:InSite.Model.Company.Phone">
            <summary>
            Gets or sets Phone
            </summary>
        </member>
        <member name="P:InSite.Model.Company.Fax">
            <summary>
            Gets or sets Fax
            </summary>
        </member>
        <member name="P:InSite.Model.Company.TollFreePhone">
            <summary>
            Gets or sets TollFreePhone
            </summary>
        </member>
        <member name="P:InSite.Model.Company.ReplaceLogoImage">
            <summary>
            Gets or sets ReplaceLogoImage
            </summary>
        </member>
        <member name="P:InSite.Model.Company.WebSite">
            <summary>
            Gets or sets WebSite
            </summary>
        </member>
        <member name="M:InSite.Model.ContentManager.Copy">
            <summary>
            Makes a copy of a content manager and all of its child content, and writes it to storage.
            </summary>
            <returns>ContentManager object.</returns>
        </member>
        <member name="M:InSite.Model.CreditCardTransaction.PurgeEncryptedNumbers(System.Int32)">
            <summary>
            Used to clean out encrypted numbers that are older than daysToStore days
            </summary>
            <param name="daysToStore"></param>
        </member>
        <member name="M:InSite.Model.CreditCardTransaction.PurgeCreditCardNumber">
            <summary>
            Sets the CreditCardNumber field to the 'xxxx' version of the Card Number.
            </summary>
        </member>
        <member name="P:InSite.Model.CreditCardTransaction.Currency">
            <summary>
            <see cref="P:InSite.Model.CreditCardTransaction.Currency"/> that the transaction was processed in.
            </summary>
        </member>
        <member name="P:InSite.Model.CreditCardTransaction.CurrencyCode">
            <summary>
            <see cref="P:InSite.Model.CreditCardTransaction.Currency"/>.CurrencyCode that the transaction was processed in.
            </summary>
        </member>
        <member name="P:InSite.Model.CreditCardTransaction.CurrencyAmount">
            <summary>
            Amount processed in the alternate <see cref="P:InSite.Model.CreditCardTransaction.Currency"/>.
            </summary>
        </member>
        <member name="T:InSite.Model.Customer">
            <summary>
            The Customer is used to represent both the BillTo and ShipTo customers in the system.
            </summary>
        </member>
        <member name="F:InSite.Model.Customer.AbandonedCartNumber">
            <summary>
            The concept of the Abandoned Cart customer is that all orders need a customer associated with them and
            until a user creates an account there is no customer, so an Abandoned Cart customer exists to associate 
            to orders in this state
            </summary>
        </member>
        <member name="M:InSite.Model.Customer.GetByNumber(System.String)">
            <summary>
            Get a Customer by <see cref="P:InSite.Model.Customer.CustomerNumber">CustomerNumber</see>
            </summary>
            <param name="customerNumber">The <see cref="P:InSite.Model.Customer.CustomerNumber">CustomerNumber</see></param>
            <returns>The Customer or null if not found</returns>
        </member>
        <member name="M:InSite.Model.Customer.GetByNumberSequence(System.String,System.String)">
            <summary>
            Get a Customer by <see cref="P:InSite.Model.Customer.CustomerNumber">CustomerNumber</see> and CustomerSequence
            </summary>
            <param name="customerNumber">The CustomerNumber</param>
            <param name="customerSequence">The <see cref="P:InSite.Model.Customer.CustomerSequence">CustomerSequence</see>. 0 or blank indicates the Customer is a BillTo, 
            while a <see cref="P:InSite.Model.Customer.CustomerSequence">CustomerSequence</see> not equal to 0 and not blank indicates the Customer is a ShipTo</param>
            <returns>The Customer or null if not found</returns>
        </member>
        <member name="M:InSite.Model.Customer.GetCustomerListByCustomerProperty(System.String,System.String)">
            <summary>
            Get all customers that have the specified <see cref="T:InSite.Model.CustomerProperty">CustomerProperty</see> Name/Value pair
            </summary>
            <param name="customerProperty">The <see cref="T:InSite.Model.CustomerProperty">CustomerProperty</see> name</param>
            <param name="customerPropertyValue">The <see cref="T:InSite.Model.CustomerProperty">CustomerProperty</see> value</param>
            <returns>A List of Customers</returns>
        </member>
        <member name="M:InSite.Model.Customer.SetPrimarySalesperson(System.String)">
            <summary>
            Set this Salesperson's Primary Salesperson to the passed in salesperson number.
            </summary>
            <param name="salespersonNumber"></param>
            <remarks>
            </remarks>
        </member>
        <member name="M:InSite.Model.Customer.AddShipTo(InSite.Model.Customer)">
            <summary>
            Associate ShipTo Customer to the BillTo Customer if it does not already exist
            </summary>
            <param name="value">The ShipTo Customer</param>
        </member>
        <member name="M:InSite.Model.Customer.RemoveShipTo(InSite.Model.Customer)">
            <summary>
            Remove ShipTo Customer from the BillTo Customer
            </summary>
            <param name="value">The ShipTo Customer</param>
        </member>
        <member name="M:InSite.Model.Customer.GetShipTo(System.String)">
            <summary>
            Retrieve the ShipTo for this Customer with the matching CustomerSequence
            </summary>
            <param name="customerSequence">The CustomerSequence to retrieve</param>
            <returns><see cref="T:InSite.Model.Customer"/></returns>
        </member>
        <member name="M:InSite.Model.Customer.AddUserProfile(InSite.Model.UserProfile)">
            <summary>
            Associate <see cref="T:InSite.Model.UserProfile">UserProfile</see> with Customer
            </summary>
            <param name="value">The <see cref="T:InSite.Model.UserProfile">UserProfile</see></param>
        </member>
        <member name="M:InSite.Model.Customer.RemoveUserProfile(InSite.Model.UserProfile)">
            <summary>
            Remove <see cref="T:InSite.Model.UserProfile">UserProfile</see> association with the Customer
            </summary>
            <param name="value">The <see cref="T:InSite.Model.UserProfile">UserProfile</see></param>
        </member>
        <member name="M:InSite.Model.Customer.GetCustomerUser(System.String)">
            <summary>
            Get the <see cref="T:InSite.Model.UserProfile">UserProfile</see> associated with the Customer with a matching <see cref="P:InSite.Model.UserProfile.UserName">UserProfile.UserName</see>
            </summary>
            <param name="userName">The <see cref="P:InSite.Model.UserProfile.UserName">UserName</see> of the <see cref="T:InSite.Model.UserProfile">UserProfile</see></param>
            <returns>The <see cref="T:InSite.Model.UserProfile">UserProfile</see></returns>
        </member>
        <member name="M:InSite.Model.Customer.AddCarrier(InSite.Model.Carrier)">
            <summary>
            Associate <see cref="T:InSite.Model.Carrier">Carrier</see> with the Customer
            </summary>
            <param name="value">The <see cref="T:InSite.Model.Carrier">Carrier</see></param>
        </member>
        <member name="M:InSite.Model.Customer.RemoveCarrier(InSite.Model.Carrier)">
            <summary>
            Remove <see cref="T:InSite.Model.Carrier">Carrier</see> association with the Customer
            </summary>
            <param name="value">The <see cref="T:InSite.Model.Carrier">Carrier</see></param>
        </member>
        <member name="M:InSite.Model.Customer.AddSalesperson(InSite.Model.Salesperson)">
            <summary>
            Associate <see cref="T:InSite.Model.Salesperson">Salesperson</see> with the Customer
            </summary>
            <param name="value">The <see cref="T:InSite.Model.Salesperson">Salesperson</see></param>
        </member>
        <member name="M:InSite.Model.Customer.RemoveSalesperson(InSite.Model.Salesperson)">
            <summary>
            Remove <see cref="T:InSite.Model.Salesperson">Salesperson</see> association with the Customer
            </summary>
            <param name="value">The <see cref="T:InSite.Model.Salesperson">Salesperson</see></param>
        </member>
        <member name="M:InSite.Model.Customer.AddCustomerProduct(InSite.Model.CustomerProduct)">
            <summary>
            Associate a <see cref="T:InSite.Model.CustomerProduct">CustomerProduct</see> with the Customer
            </summary>
            <param name="value">The <see cref="T:InSite.Model.CustomerProperty">CustomerProduct</see></param>
        </member>
        <member name="M:InSite.Model.Customer.RemoveCustomerProduct(InSite.Model.CustomerProduct)">
            <summary>
            Remove the <see cref="T:InSite.Model.CustomerProduct">CustomerProduct</see> association with the Customer
            </summary>
            <param name="value">The <see cref="T:InSite.Model.CustomerProduct">CustomerProduct</see></param>
        </member>
        <member name="M:InSite.Model.Customer.GetCustomerProduct(InSite.Model.Product)">
            <summary>
            Get the <see cref="T:InSite.Model.CustomerProduct">CustomerProduct</see> for the supplied Customer and <see cref="T:InSite.Model.Product">Product</see>
            </summary>
            <param name="product">The <see cref="T:InSite.Model.Product">Product</see></param>
            <returns>The <see cref="T:InSite.Model.CustomerProduct">CustomerProduct</see></returns>
        </member>
        <member name="M:InSite.Model.Customer.GetCustomerProduct(System.String)">
            <summary>
            Get the <see cref="T:InSite.Model.CustomerProduct">CustomerProduct</see> of the supplied Customer and <see cref="P:InSite.Model.Product.Name">Product.Name</see>
            </summary>
            <param name="productName">The <see cref="P:InSite.Model.Product.Name">Product.Name</see></param>
            <returns>The <see cref="T:InSite.Model.CustomerProduct">CustomerProduct</see></returns>
        </member>
        <member name="M:InSite.Model.Customer.AddCustomerProductSet(InSite.Model.CustomerProductSet)">
            <summary>
            Associate a <see cref="T:InSite.Model.CustomerProductSet">CustomerProductSet</see> with the Customer
            </summary>
            <param name="value">The <see cref="T:InSite.Model.CustomerProductSet">CustomerProductSet</see></param>
        </member>
        <member name="M:InSite.Model.Customer.RemoveCustomerProductSet(InSite.Model.CustomerProductSet)">
            <summary>
            Remove the <see cref="T:InSite.Model.CustomerProductSet">CustomerProductSet</see> association with the Customer
            </summary>
            <param name="value">The <see cref="T:InSite.Model.CustomerProductSet">CustomerProductSet</see></param>
        </member>
        <member name="M:InSite.Model.Customer.AddCustomerRestrictionGroup(InSite.Model.CustomerRestrictionGroup)">
            <summary>
            Associate a <see cref="T:InSite.Model.CustomerRestrictionGroup"/> with the Customer.
            </summary>
            <param name="value">The <see cref="T:InSite.Model.CustomerRestrictionGroup"/></param>
        </member>
        <member name="M:InSite.Model.Customer.RemoveCustomerRestrictionGroup(InSite.Model.CustomerRestrictionGroup)">
            <summary>
            Remove the <see cref="T:InSite.Model.CustomerRestrictionGroup"/> association with the Customer.
            </summary>
            <param name="value">The <see cref="T:InSite.Model.CustomerRestrictionGroup"/></param>
        </member>
        <member name="M:InSite.Model.Customer.AddCustomerProperty(InSite.Model.CustomerProperty)">
            <summary>
            Associate the <see cref="T:InSite.Model.CustomerProperty">CustomerProperty</see> with the Customer
            </summary>
            <param name="value">The <see cref="T:InSite.Model.CustomerProperty">CustomerProperty</see></param>
        </member>
        <member name="M:InSite.Model.Customer.RemoveCustomerProperty(InSite.Model.CustomerProperty)">
            <summary>
            Remove the <see cref="T:InSite.Model.CustomerProperty">CustomerProperty</see> association with the Customer
            </summary>
            <param name="value">The <see cref="T:InSite.Model.CustomerProperty">CustomerProperty</see></param>
        </member>
        <member name="M:InSite.Model.Customer.GetCustomerProperty(System.String)">
            <summary>
            Get the <see cref="T:InSite.Model.CustomerProperty">CustomerProperty</see> with the name specified, if not found, a new 
            <see cref="T:InSite.Model.CustomerProperty">CustomerProperty</see> is created with that name and a blank value
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:InSite.Model.Customer.GetCustomerProperty(System.String,System.String)">
            <summary>
            Get the <see cref="T:InSite.Model.CustomerProperty"/> with the name specified, if not found, a new 
            <see cref="T:InSite.Model.CustomerProperty"/> is created with that name and the value specified
            </summary>
            <param name="name">The <see cref="P:InSite.Model.CustomerProperty.Name"/></param>
            <param name="defaultValue">The default <see cref="P:InSite.Model.CustomerProperty.Value"/></param>
            <returns>The <see cref="T:InSite.Model.CustomerProperty"/></returns>
        </member>
        <member name="M:InSite.Model.Customer.AddWishList(InSite.Model.WishList)">
            <summary>
            Associate the <see cref="T:InSite.Model.WishList">WishList</see> with the Customer
            </summary>
            <param name="value">The <see cref="T:InSite.Model.WishList">WishList</see></param>
        </member>
        <member name="M:InSite.Model.Customer.RemoveWishList(InSite.Model.WishList)">
            <summary>
            Remove the <see cref="T:InSite.Model.WishList">WishList</see> association with the Customer
            </summary>
            <param name="value">The <see cref="T:InSite.Model.WishList">WishList</see></param>
        </member>
        <member name="M:InSite.Model.Customer.AddCostCode(InSite.Model.CustomerCostCode)">
            <summary>
            Associate the <see cref="T:InSite.Model.CustomerCostCode">Cost Code</see> with the Customer
            </summary>
            <param name="value">The <see cref="T:InSite.Model.CustomerCostCode">Cost Code</see></param>
        </member>
        <member name="M:InSite.Model.Customer.RemoveCostCode(InSite.Model.CustomerCostCode)">
            <summary>
            Remove the <see cref="T:InSite.Model.CustomerCostCode">CustomerCostCode</see> association with the Customer
            </summary>
            <param name="value">The <see cref="T:InSite.Model.CustomerCostCode">Cost Code</see></param>
        </member>
        <member name="M:InSite.Model.Customer.AddBudgetCalendar(InSite.Model.BudgetCalendar)">
            <summary>
            Associate the <see cref="T:InSite.Model.BudgetCalendar">BudgetCalendar</see> with the Customer
            </summary>
            <param name="value">The <see cref="T:InSite.Model.BudgetCalendar">BudgetCalendar</see></param>
        </member>
        <member name="M:InSite.Model.Customer.RemoveBudgetCalendar(InSite.Model.BudgetCalendar)">
            <summary>
            Remove the <see cref="T:InSite.Model.BudgetCalendar">BudgetCalendar</see> association with the Customer
            </summary>
            <param name="value">The <see cref="T:InSite.Model.BudgetCalendar">BudgetCalendar</see></param>
        </member>
        <member name="M:InSite.Model.Customer.AddAllowedWebSite(InSite.Model.WebSiteInfo)">
            <summary>
            Associate <see cref="T:InSite.Model.WebSiteInfo">WebSite</see> with Customer
            </summary>
            <param name="value">The <see cref="T:InSite.Model.WebSite">WebSite</see></param>
        </member>
        <member name="M:InSite.Model.Customer.RemoveAllowedWebSite(InSite.Model.WebSiteInfo)">
            <summary>
            Remove <see cref="T:InSite.Model.WebSiteInfo">WebSite</see> association with the Customer
            </summary>
            <param name="value">The <see cref="T:InSite.Model.WebSite">WebSite</see></param>
        </member>
        <member name="M:InSite.Model.Customer.ImportChildrenXLS(System.Data.DataRow)">
            <summary>
            This method imports various children of this object.  It takes a row of data
            and then parses the row for the data relevant to the child being imported.
            </summary>
            <param name="row">data row that has the data to be imported for the object</param>
        </member>
        <member name="M:InSite.Model.Customer.GetProperty(System.String,System.String)">
            <summary>Retrieves the value for the property identified by <paramref name="name"/></summary>
            <param name="name">The name of the property to retrieve</param>
            <param name="defaultValue">The value to use if the property does not exist</param>
        </member>
        <member name="M:InSite.Model.Customer.SetProperty(System.String,System.String)">
            <summary>Sets the value for the property identified by <paramref name="name"/></summary>
            <param name="name">The name of the property to retrieve</param>
            <param name="value">The value to set</param>
        </member>
        <member name="P:InSite.Model.Customer.Current">
            <summary>
            Returns the BillTo customer for a user that is logged into the website. If the user is not logged in there
            will be no valid customer and an Abandoned Cart customer will be returned
            </summary>
        </member>
        <member name="P:InSite.Model.Customer.DataSet">
            <summary>
            DataSet is the DataSet representation of this Customer that is used for ERP Integration to submit the Customer
            </summary>
        </member>
        <member name="P:InSite.Model.Customer.CustomerInfo">
            <summary>
            CustomerInfo is a simplified view of the Customer
            </summary>
        </member>
        <member name="P:InSite.Model.Customer.CustomerNumber">
            <summary>
            The <see cref="P:InSite.Model.Customer.CustomerNumber">CustomerNumber</see> is a Secondary Unique Identifier (in conjunction with the <see cref="P:InSite.Model.Customer.CustomerSequence">CustomerSequence</see>)
            </summary>
        </member>
        <member name="P:InSite.Model.Customer.CustomerSequence">
            <summary>
            The <see cref="P:InSite.Model.Customer.CustomerSequence">CustomerSequence</see> is a Secondary Unique Identifier (in conjunction with the <see cref="P:InSite.Model.Customer.CustomerNumber">CustomerNumber</see>). 
            0 indicates the Customer is a BillTo, while a <see cref="P:InSite.Model.Customer.CustomerSequence">CustomerSequence</see> &gt; 0 indicates the Customer is a ShipTo        
            </summary>
        </member>
        <member name="P:InSite.Model.Customer.CustomerNumberSequenceName">
            <summary>
            The <see cref="P:InSite.Model.Customer.CustomerNumber">CustomerNumber</see>, <see cref="P:InSite.Model.Customer.CustomerSequence">CustomerSequence</see> and <see cref="P:InSite.Model.Customer.CustomerName">CustomerName</see> concatenated together with colon delimeters
            </summary>
        </member>
        <member name="P:InSite.Model.Customer.CustomerName">
            <summary>
            The <see cref="P:InSite.Model.Customer.CompanyName">Company</see>, <see cref="P:InSite.Model.Customer.LastName">LastName</see> and <see cref="P:InSite.Model.Customer.FirstName">FirstName</see> concatenated together with space delimiters
            </summary>
        </member>
        <member name="P:InSite.Model.Customer.CustomerType">
            <summary>
            CustomerType of the Customer
            </summary>
        </member>
        <member name="P:InSite.Model.Customer.CompanyName">
            <summary>
            Company name of the Customer
            </summary>
        </member>
        <member name="P:InSite.Model.Customer.ContactFullName">
            <summary>
            Contact Full Name of the Customer
            </summary>
        </member>
        <member name="P:InSite.Model.Customer.FirstName">
            <summary>
            FirstName of the Customer
            </summary>
        </member>
        <member name="P:InSite.Model.Customer.MiddleName">
            <summary>
            MiddleName of the Customer
            </summary>
        </member>
        <member name="P:InSite.Model.Customer.LastName">
            <summary>
            LastName of the Customer
            </summary>
        </member>
        <member name="P:InSite.Model.Customer.Phone">
            <summary>
            Phone of the Customer
            </summary>
        </member>
        <member name="P:InSite.Model.Customer.Fax">
            <summary>
            Fax of the Customer
            </summary>
        </member>
        <member name="P:InSite.Model.Customer.TermsCode">
            <summary>
            TermsCode of the Customer
            </summary>
        </member>
        <member name="P:InSite.Model.Customer.ShipCode">
            <summary>
            ShipCode of the Customer
            </summary>
        </member>
        <member name="P:InSite.Model.Customer.BankCode">
            <summary>
            BankCode of the Customer
            </summary>
        </member>
        <member name="P:InSite.Model.Customer.TaxCode1">
            <summary>
            TaxCode1 of the Customer
            </summary>
        </member>
        <member name="P:InSite.Model.Customer.TaxCode2">
            <summary>
            TaxCode2 of the Customer
            </summary>
        </member>
        <member name="P:InSite.Model.Customer.PriceCode">
            <summary>
            PriceCode of the Customer
            </summary>
        </member>
        <member name="P:InSite.Model.Customer.CurrencyCode">
            <summary>
            CurrencyCode of the Customer
            </summary>
        </member>
        <member name="P:InSite.Model.Customer.Currency">
            <summary>
            <see cref="P:InSite.Model.Customer.Currency"/> of the Customer.
            </summary>
        </member>
        <member name="P:InSite.Model.Customer.EndUserType">
            <summary>
            EndUserType of the Customer
            </summary>
        </member>
        <member name="P:InSite.Model.Customer.ShipSite">
            <summary>
            ShipSite of the Customer
            </summary>
        </member>
        <member name="P:InSite.Model.Customer.DefaultWarehouse">
            <summary>
            Warehouse of the Customer
            </summary>
        </member>
        <member name="P:InSite.Model.Customer.DefaultWarehouseName">
            <summary>
            The Name of the DefaultWarehouse
            </summary>
        </member>
        <member name="P:InSite.Model.Customer.PrimarySalespersonNumber">
            <summary>
            Returns the primary salesperson number
            </summary>
        </member>
        <member name="P:InSite.Model.Customer.PrimarySalesperson">
            <summary>
            Primary Salesperson of the Customer
            </summary>
        </member>
        <member name="P:InSite.Model.Customer.ShipEarly">
            <summary>
            ShipEarly flag of the Customer
            </summary>
        </member>
        <member name="P:InSite.Model.Customer.ShipPartial">
            <summary>
            ShipPartial flag of the Customer
            </summary>
        </member>
        <member name="P:InSite.Model.Customer.Address1">
            <summary>
            Address1 of the Customer
            </summary>
        </member>
        <member name="P:InSite.Model.Customer.Address2">
            <summary>
            Address2 of the Customer
            </summary>
        </member>
        <member name="P:InSite.Model.Customer.Address3">
            <summary>
            Address3 of the Customer
            </summary>
        </member>
        <member name="P:InSite.Model.Customer.Address4">
            <summary>
            Address4 of the Customer
            </summary>
        </member>
        <member name="P:InSite.Model.Customer.City">
            <summary>
            City of the Customer
            </summary>
        </member>
        <member name="P:InSite.Model.Customer.State">
            <summary>
            State of the Customer
            </summary>
        </member>
        <member name="P:InSite.Model.Customer.PostalCode">
            <summary>
            Zip of the Customer
            </summary>
        </member>
        <member name="P:InSite.Model.Customer.Country">
            <summary>
            Country of the Customer
            </summary>
        </member>
        <member name="P:InSite.Model.Customer.CreditHold">
            <summary>
            CreditHold flag of the Customer
            </summary>
        </member>
        <member name="P:InSite.Model.Customer.CreditLimit">
            <summary>
            CreditLimit of the Customer
            </summary>
        </member>
        <member name="P:InSite.Model.Customer.Email">
            <summary>
            Email of the Customer
            </summary>
        </member>
        <member name="P:InSite.Model.Customer.ParentCustomer">
            <summary>
            ParentCustomer of the Customer. Only ShipTo Customers will have a ParentCustomer 
            and it will correspond to the BillTo Customer. BillTo Customers will return a null ParentCustomer
            </summary>
        </member>
        <member name="P:InSite.Model.Customer.PricingCustomer">
            <summary>
            PricingCustomer of the Customer. 
            </summary>
        </member>
        <member name="P:InSite.Model.Customer.SendEmail">
            <summary>
            SendEmail flag of the Customer
            </summary>
        </member>
        <member name="P:InSite.Model.Customer.DiscountPercent">
            <summary>
            DiscountPercent for the Customer
            </summary>
        </member>
        <member name="P:InSite.Model.Customer.IsActive">
            <summary>
            IsActive flag for the Customer
            </summary>
        </member>
        <member name="P:InSite.Model.Customer.AllowDropShip">
            <summary>
            AllowDropShip flag for the Customer
            </summary>
        </member>
        <member name="P:InSite.Model.Customer.DropShipFeeRequired">
            <summary>
            DropShipFeeRequired flag for the Customer
            </summary>
        </member>
        <member name="P:InSite.Model.Customer.AvailableCreditLimit">
            <summary>
            AvailableCreditLimit for the Customer. 
            this.CreditLimit - this.OpenOrderAmount
            </summary>
        </member>
        <member name="P:InSite.Model.Customer.IsDropShip">
            <summary>
            IsDropShip flag for the Customer
            </summary>
        </member>
        <member name="P:InSite.Model.Customer.IsGuest">
            <summary>
            IsGuest flag for the Customer. The Customer will be flagged IsGuest if guest checkout is selected on checkout
            </summary>
        </member>
        <member name="P:InSite.Model.Customer.ERPNumber">
            <summary>
            ErpNumber for the Customer
            </summary>
        </member>
        <member name="P:InSite.Model.Customer.ERPSequence">
            <summary>
            ErpSequence for the Customer
            </summary>
        </member>
        <member name="P:InSite.Model.Customer.Territory">
            <summary>
            Territory for the Customer
            </summary>
        </member>
        <member name="P:InSite.Model.Customer.CustomerCountry">
            <summary>
            CustomerCountry for the Customer
            </summary>
        </member>
        <member name="P:InSite.Model.Customer.HasCountry">
            <summary>
            Calculated field to tell if a <see cref="T:InSite.Model.Customer"/> has its country set in either its <see cref="P:InSite.Model.Customer.Country"/> field 'CustomerCountry'
            or its string 'Country' field set.
            </summary>
        </member>
        <member name="P:InSite.Model.Customer.CustomerState">
            <summary>
            CustomerState for the Customer
            </summary>
        </member>
        <member name="P:InSite.Model.Customer.HasState">
            <summary>
            Calculated field to tell if a <see cref="T:InSite.Model.Customer"/> has its state set in either its <see cref="P:InSite.Model.Customer.State"/> field 'CustomerState'
            or its string 'State' field set.
            </summary>
        </member>
        <member name="P:InSite.Model.Customer.ShipTos">
            <summary>
            List of ShipTo Customers associated with the BillTo Customer via the ParentId
            </summary>
            <remarks>Use IDefaultShipToProvider or IContextProvider.CurrentAvailableShipTos instead.</remarks>
        </member>
        <member name="P:InSite.Model.Customer.ShipTosByCompany">
            <summary>
            List of ShipTo Customers associated with the BillTo Customer, sorted by <see cref="P:InSite.Model.Customer.CompanyName">Company</see>, <see cref="P:InSite.Model.Customer.CustomerSequence">CustomerSequence</see>
            </summary>
        </member>
        <member name="P:InSite.Model.Customer.ActiveShipTosWithoutBillTo">
            <summary>
            List of active ShipTo Customers associated with the BillTo Customer. Dont include the BillTo Customer in the return list.        
            </summary>
            <remarks>Use IDefaultShipToProvider or IContextProvider.CurrentAvailableShipTos instead.</remarks>
        </member>
        <member name="P:InSite.Model.Customer.ActiveShipTosWithBillTo">
            <summary>
            List of active ShipTo Customers associated with the BillTo Customer. Include the BillTo Customer in the return list
            </summary>
            <remarks>Use IDefaultShipToProvider or IContextProvider.CurrentAvailableShipTos instead.</remarks>
        </member>
        <member name="P:InSite.Model.Customer.UserProfiles">
            <summary>
            List of <see cref="T:InSite.Model.UserProfile">UserProfiles</see> that are associated with the Customer
            </summary>
        </member>
        <member name="P:InSite.Model.Customer.CustomerProducts">
            <summary>
            Obsolete Use UnitOfWork.GetRepository&lt;CustomerProduct&gt;, this property causes serious performance issues.
            Holds Customer specific extended information about <see cref="T:InSite.Model.Product">Products</see> (ex. Customer Product Name)
            </summary>
        </member>
        <member name="P:InSite.Model.Customer.HasCustomerProducts">
            <summary>
            Returns true if this Customer has any <see cref="T:InSite.Model.CustomerProduct"/>s.
            </summary>
        </member>
        <member name="P:InSite.Model.Customer.CustomerProductSets">
            <summary>
            Holds a list of Products Sets attached to this Customer.
            </summary>
        </member>
        <member name="P:InSite.Model.Customer.CustomerRestrictionGroups">
            <summary>
            Holds a list of <see cref="T:InSite.Model.CustomerRestrictionGroup"/>s associated to this Customer.
            </summary>
        </member>
        <member name="P:InSite.Model.Customer.Carriers">
            <summary>
            Sets/Gets a list of <see cref="T:InSite.Model.Carrier">carriers</see> for this customer if the this is a shipto for a customer it 
            returns the shipto <see cref="T:InSite.Model.Carrier">carriers</see> list no matter what. 
            </summary>
        </member>
        <member name="P:InSite.Model.Customer.CustomerCarriers">
            <summary>
            Gets a list of <see cref="T:InSite.Model.Carrier">Carriers</see> for this customer.
            if the customer is a shipto it will return the shipto carriers if they have more than 0 carriers, 
            if the <see cref="T:InSite.Model.Carrier">carrier</see> count is 0 and there is a parent it will return the parents carriers.  
            </summary>
        </member>
        <member name="P:InSite.Model.Customer.CustomerSalesmen">
            <summary>
            Gets a list of <see cref="T:InSite.Model.Salesperson">Salespersons</see> for this customer.
            if the customer is a shipto it will return the shipto <see cref="T:InSite.Model.Salesperson">Salespersons</see> if they have more than 0 <see cref="T:InSite.Model.Salesperson">Salespersons</see>, 
            if the <see cref="T:InSite.Model.Salesperson">Salespersons</see> count is 0 and there is a parent it will return the parents <see cref="T:InSite.Model.Salesperson">Salespersons</see>.  
            </summary>
        </member>
        <member name="P:InSite.Model.Customer.Salespersons">
            <summary>
            List of <see cref="T:InSite.Model.Salesperson">Salespersons</see> associated with the Customer
            </summary>
        </member>
        <member name="P:InSite.Model.Customer.CustomerProperties">
            <summary>
            List of <see cref="T:InSite.Model.CustomerProperty">CustomerProperties</see> associated with the Customer
            </summary>
        </member>
        <member name="P:InSite.Model.Customer.CustomerOrders">
            <summary>
            List of <see cref="T:InSite.Model.CustomerOrder">CustomerOrders</see> associated with the Customer
            </summary>
        </member>
        <member name="P:InSite.Model.Customer.NonCartOrders">
            <summary>
            List of <see cref="T:InSite.Model.CustomerOrder">CustomerOrders</see> associated with the Customer that are not in Cart Status
            </summary>
        </member>
        <member name="P:InSite.Model.Customer.WishLists">
            <summary>
            List of <see cref="T:InSite.Model.WishList">WishLists</see> associated with the Customer
            </summary>
        </member>
        <member name="P:InSite.Model.Customer.CostCodes">
            <summary>
            List of <see cref="T:InSite.Model.WishList">WishLists</see> associated with the Customer
            </summary>
        </member>
        <member name="P:InSite.Model.Customer.BudgetEnforcementLevel">
            <summary>
            The level to enforce a budget for a customer.
            </summary>
            <remarks>
            The possible values are none, ShipTo, User and CostCode.
            </remarks>
        </member>
        <member name="P:InSite.Model.Customer.CostCodeDescription">
            <summary>
            This is used to define what the cost code is called to the user.
            </summary>
        </member>
        <member name="P:InSite.Model.Customer.DefaultCostCode">
            <summary>
            This is the default cost code for this customer.
            </summary>
        </member>
        <member name="P:InSite.Model.Customer.IgnoreProductRestrictions">
            <summary>
            The IgnoreProductRestrictions of the customer
            </summary>
        </member>
        <member name="P:InSite.Model.Customer.IsBillTo">
            <summary>
            Gets or sets a value indicating whether this instance is bill to.
            </summary>
            <value>
            <c>true</c> if this instance is bill to; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:InSite.Model.Customer.IsShipTo">
            <summary>
            Gets or sets a value indicating whether this instance is ship to.
            </summary>
            <value>
            <c>true</c> if this instance is ship to; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:InSite.Model.Customer.IsSoldTo">
            <summary>
            Gets or sets a value indicating whether this instance is sold to.
            </summary>
            <value>
            <c>true</c> if this instance is sold to; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:InSite.Model.Customer.BudgetCalendars">
            <summary>
            List of <see cref="T:InSite.Model.BudgetCalendar">BudgetCalendars</see> associated with the Customer
            </summary>
        </member>
        <member name="P:InSite.Model.Customer.AllowedWebSites">
            <summary>
            List of <see cref="T:InSite.Model.WebSiteInfo">WebSites</see> allowed for the customer (on restricted websites)
            </summary>
        </member>
        <member name="P:InSite.Model.Customer.FullAddress">
            <summary>
            Ship to address as a string separated by commas
            </summary>
        </member>
        <member name="T:InSite.Model.CustomerInfo">
            <summary>
            A simplified view of the Customer Object
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerInfo.CustomerNumber">
            <summary>
            The <see cref="P:InSite.Model.CustomerInfo.CustomerNumber">CustomerNumber</see> is a Secondary Unique Identifier (in conjunction with the <see cref="P:InSite.Model.CustomerInfo.CustomerSequence">CustomerSequence</see>)
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerInfo.CustomerSequence">
            <summary>
            The <see cref="P:InSite.Model.CustomerInfo.CustomerSequence">CustomerSequence</see> is a Secondary Unique Identifier (in conjunction with the <see cref="P:InSite.Model.CustomerInfo.CustomerNumber">CustomerNumber</see>). 
            0 indicates the Customer is a BillTo, while a <see cref="P:InSite.Model.CustomerInfo.CustomerSequence">CustomerSequence</see> &gt; 0 indicates the Customer is a ShipTo        
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerInfo.ERPNumber">
            <summary>
            ErpNumber for the Customer
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerInfo.ERPSequence">
            <summary>
            ErpSequence for the Customer
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerInfo.CustomerNumberSequence">
            <summary>
            A convenience method to return the customer number and sequence separated by a colon.  
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerInfo.CustomerName">
            <summary>
            The <see cref="P:InSite.Model.CustomerInfo.CompanyName">Company</see>, <see cref="P:InSite.Model.CustomerInfo.LastName">LastName</see> and <see cref="P:InSite.Model.CustomerInfo.FirstName">FirstName</see> concatenated together with space delimiters
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerInfo.CompanyName">
            <summary>
            Company name of the Customer
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerInfo.FirstName">
            <summary>
            FirstName of the Customer
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerInfo.MiddleName">
            <summary>
            MiddleName of the Customer
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerInfo.LastName">
            <summary>
            LastName of the Customer
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerInfo.Phone">
            <summary>
            Phone of the Customer
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerInfo.Fax">
            <summary>
            Fax of the Customer
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerInfo.Email">
            <summary>
            Email of the Customer
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerInfo.IsActive">
            <summary>
            IsActive flag for the Customer
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerInfo.Address1">
            <summary>
            Address1 of the Customer
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerInfo.Address2">
            <summary>
            Address2 of the Customer
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerInfo.Address3">
            <summary>
            Address3 of the Customer
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerInfo.Address4">
            <summary>
            Address4 of the Customer
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerInfo.City">
            <summary>
            City of the Customer
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerInfo.State">
            <summary>
            State of the Customer
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerInfo.PostalCode">
            <summary>
            PostalCode of the Customer
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerInfo.Country">
            <summary>
            Country of the Customer
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerInfo.CurrencyCode">
            <summary>
            CurrencyCode of the Customer
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerInfo.Currency">
            <summary>
            <see cref="P:InSite.Model.CustomerInfo.Currency"/> of the Customer.
            </summary>
        </member>
        <member name="T:InSite.Model.CustomerOrderProperty">
            <summary>
            Domain Object which represents addition properties for the <see cref="P:InSite.Model.CustomerOrderProperty.CustomerOrder"/> that fall outside the scope of the base <see cref="P:InSite.Model.CustomerOrderProperty.CustomerOrder"/>.
            </summary>
        </member>
        <member name="M:InSite.Model.CustomerOrderProperty.ToString">
            <summary>
            Override for the ToString() method, returns the Name property.
            </summary>
            <returns>The Name</returns>
        </member>
        <member name="P:InSite.Model.CustomerOrderProperty.Name">
            <summary>
            Name property acts as the key in the key value pairing. A <see cref="P:InSite.Model.CustomerOrderProperty.CustomerOrder"/> can have as many <see cref="T:InSite.Model.CustomerOrderProperty"/>'s as you like
            but the Name will be unique to the collection.
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerOrderProperty.Value">
            <summary>
            The value of this <see cref="T:InSite.Model.CustomerOrderProperty"/>.
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerOrderProperty.CustomerOrder">
            <summary>
            Get Set the parent <see cref="P:InSite.Model.CustomerOrderProperty.CustomerOrder"/> which contains this <see cref="T:InSite.Model.CustomerOrderProperty"/> in it's collection of CustomerOrderProperties.
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerProduct.CustomerProductName">
            <summary>
            This is the associated <see cref="P:InSite.Model.CustomerProduct.Customer"/>'s custom name(part number) for the associated <see cref="P:InSite.Model.CustomerProduct.Product"/>
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerProduct.Name">
            <summary>
            This is a shortcut to get the value of Name from the associated <see cref="P:InSite.Model.CustomerProduct.Product"/>
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerProduct.ShortDescription">
            <summary>
            This is a shortcut to get the value of ShortDescription from the associated <see cref="P:InSite.Model.CustomerProduct.Product"/>
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerProductSet.RestrictionGroup">
            <summary>
            The RestrictionGroup associated with the product set, if any.
            </summary>
            <remarks>
            The Name field is used as an unenforced key to the RestrictionGroup Name field.
            </remarks>
        </member>
        <member name="T:InSite.Model.CustomerProperty">
            <summary>
            Domain Object which represents addition properties for the <see cref="P:InSite.Model.CustomerProperty.Customer"/> that fall outside the scope of the base <see cref="P:InSite.Model.CustomerProperty.Customer"/>
            </summary>
        </member>
        <member name="M:InSite.Model.CustomerProperty.ToString">
            <summary>
            override ToString()
            </summary>
            <returns><see cref="T:System.String"/></returns>
            <remarks>Override for the ToString() method, returns the Name property</remarks>
        </member>
        <member name="M:InSite.Model.CustomerProperty.GetHashCode">
            <summary>
            Returns Hashcode
            </summary>
            <returns><see cref="T:System.Int32"/></returns>
            <remarks>Returns Hashcode by Value.GetHashCode()</remarks>
        </member>
        <member name="P:InSite.Model.CustomerProperty.Name">
            <summary>
            Get Set Name
            </summary>
            <remarks>Name property acts as the key in the key value pairing. An <see cref="P:InSite.Model.CustomerProperty.Customer"/> can have as many <see cref="T:InSite.Model.CustomProperty"/>'s as you like
            but the Name will be unique to the collection</remarks>
        </member>
        <member name="P:InSite.Model.CustomerProperty.Value">
            <summary>
            Get Set Value
            </summary>
            <remarks>The value of this <see cref="T:InSite.Model.CustomerProperty"/></remarks>
        </member>
        <member name="P:InSite.Model.CustomerProperty.Customer">
            <summary>
            Get Set <see cref="P:InSite.Model.CustomerProperty.Customer"/>
            </summary>
            <remarks>Get Set the parent <see cref="P:InSite.Model.CustomerProperty.Customer"/> which contains this <see cref="T:InSite.Model.CustomerProperty"/> in it's collection of CustomerProperties</remarks>
        </member>
        <member name="T:InSite.Model.Dealer">
            <summary>The Dealer is where information about Dealers who sell your <see cref="T:InSite.Model.Product"/>s is stored</summary>
        </member>
        <member name="M:InSite.Model.Dealer.AddCategory(InSite.Model.Category)">
            <summary>
            Add a <see cref="T:InSite.Model.Category"/> to the <see cref="P:InSite.Model.Dealer.Categories"/> collection.
            </summary>
            <param name="value"><see cref="T:InSite.Model.Category"/> to add.</param>
        </member>
        <member name="M:InSite.Model.Dealer.RemoveCategory(InSite.Model.Category)">
            <summary>
            Remove a <see cref="T:InSite.Model.Category"/> from the <see cref="P:InSite.Model.Dealer.Categories"/> collection.
            </summary>
            <param name="value"><see cref="T:InSite.Model.Category"/> to remote.</param>
        </member>
        <member name="M:InSite.Model.Dealer.AddProduct(InSite.Model.Product)">
            <summary>
            Add a <see cref="T:InSite.Model.Product"/> to the <see cref="P:InSite.Model.Dealer.Products"/> collection.
            </summary>
            <param name="value"><see cref="T:InSite.Model.Product"/> to add.</param>
        </member>
        <member name="M:InSite.Model.Dealer.RemoveProduct(InSite.Model.Product)">
            <summary>
            Remove a <see cref="T:InSite.Model.Product"/> from the <see cref="P:InSite.Model.Dealer.Products"/> collection.
            </summary>
            <param name="value"><see cref="T:InSite.Model.Product"/> to remove.</param>
        </member>
        <member name="M:InSite.Model.Dealer.AddDealerProperty(InSite.Model.DealerProperty)">
            <summary>
            Add a <see cref="T:InSite.Model.DealerProperty"/> to the <see cref="P:InSite.Model.Dealer.DealerProperties"/> collection.
            </summary>
            <param name="value"><see cref="T:InSite.Model.DealerProperty"/> to add.</param>
        </member>
        <member name="M:InSite.Model.Dealer.RemoveDealerProperty(InSite.Model.DealerProperty)">
            <summary>
            Remove a <see cref="T:InSite.Model.DealerProperty"/> from the <see cref="P:InSite.Model.Dealer.DealerProperties"/> collection.
            </summary>
            <param name="value"><see cref="T:InSite.Model.DealerProperty"/> to remove.</param>
        </member>
        <member name="M:InSite.Model.Dealer.GetDealerProperty(System.String,System.String)">
            <summary>
            Get a <see cref="T:InSite.Model.DealerProperty"/> by name from the <see cref="P:InSite.Model.Dealer.DealerProperties"/> collection.  If not found, a new <see cref="T:InSite.Model.DealerProperty"/> will get created with the default value.
            </summary>
            <param name="name">Name of the <see cref="T:InSite.Model.DealerProperty"/> to find/create.</param>
            <param name="defaultValue">The default value</param>
            <returns>Existing or newly created <see cref="T:InSite.Model.DealerProperty"/>.</returns>
        </member>
        <member name="M:InSite.Model.Dealer.GetProperty(System.String,System.String)">
            <summary>Retrieves the value for the property identified by <paramref name="name"/></summary>
            <param name="name">The name of the property to retrieve</param>
            <param name="defaultValue">The value to use if the property does not exist</param>
        </member>
        <member name="M:InSite.Model.Dealer.SetProperty(System.String,System.String)">
            <summary>Sets the value for the property identified by <paramref name="name"/></summary>
            <param name="name">The name of the property to retrieve</param>
            <param name="value">The value to set</param>
        </member>
        <member name="P:InSite.Model.Dealer.Name">
            <summary>
            Name of the Dealer
            </summary>
        </member>
        <member name="P:InSite.Model.Dealer.Address1">
            <summary>
            Address1 of the Dealer
            </summary>
        </member>
        <member name="P:InSite.Model.Dealer.Address2">
            <summary>
            Address2 of the Dealer
            </summary>
        </member>
        <member name="P:InSite.Model.Dealer.City">
            <summary>
            City of the Dealer
            </summary>
        </member>
        <member name="P:InSite.Model.Dealer.State">
            <summary>
            State of the Dealer
            </summary>
        </member>
        <member name="P:InSite.Model.Dealer.PostalCode">
            <summary>
            PostalCode of the Dealer
            </summary>
        </member>
        <member name="P:InSite.Model.Dealer.Country">
            <summary>
            <see cref="P:InSite.Model.Dealer.Country"/>.Abbreviation of the Dealer
            </summary>
        </member>
        <member name="P:InSite.Model.Dealer.Phone">
            <summary>
            Phone of the Dealer
            </summary>
        </member>
        <member name="P:InSite.Model.Dealer.Fax">
            <summary>
            Fax of the Dealer
            </summary>
        </member>
        <member name="P:InSite.Model.Dealer.Manager">
            <summary>
            Manager of the Dealer
            </summary>
        </member>
        <member name="P:InSite.Model.Dealer.Latitude">
            <summary>
            Latitude of the Dealer
            </summary>
        </member>
        <member name="P:InSite.Model.Dealer.Longitude">
            <summary>
            Longitude of the Dealer
            </summary>
        </member>
        <member name="P:InSite.Model.Dealer.WebSiteUrl">
            <summary>
            Website Url of the Dealer
            </summary>
        </member>
        <member name="P:InSite.Model.Dealer.DealerCountry">
            <summary>
            <see cref="P:InSite.Model.Dealer.Country"/> of the Dealer
            </summary>
        </member>
        <member name="P:InSite.Model.Dealer.WebSites">
            <summary>
            <see cref="T:InSite.Model.WebSite"/> of the Dealer
            </summary>
        </member>
        <member name="P:InSite.Model.Dealer.HtmlContent">
            <summary>Gets ContentManager.CurrentContent.HtmlContent, standard field for Content Management used throughout the system</summary>
        </member>
        <member name="P:InSite.Model.Dealer.ContentManager">
            <summary>The ContentManager manages the Content</summary>
        </member>
        <member name="P:InSite.Model.Dealer.Categories">
            <summary>
            <see cref="T:InSite.Model.Category"/>s of the Dealer
            </summary>
        </member>
        <member name="P:InSite.Model.Dealer.Products">
            <summary>
            <see cref="T:InSite.Model.Product"/>s of the Dealer
            </summary>
        </member>
        <member name="P:InSite.Model.Dealer.DealerProperties">
            <summary>
            <see cref="T:InSite.Model.DealerProperty"/>s of the Dealer
            </summary>
        </member>
        <member name="T:InSite.Model.DealerProperty">
            <summary>
            Domain Object which represents addition properties for the <see cref="P:InSite.Model.DealerProperty.Dealer"/> that fall outside the scope of the base <see cref="P:InSite.Model.DealerProperty.Dealer"/>
            </summary>
        </member>
        <member name="P:InSite.Model.DealerProperty.Name">
            <summary>
            Get Set Name
            </summary>
            <remarks>Name property acts as the key in the key value pairing. An <see cref="P:InSite.Model.DealerProperty.Dealer"/> can have as many <see cref="T:InSite.Model.DealerProperty"/>'s as you like
            but the Name will be unique to the collection</remarks>
        </member>
        <member name="P:InSite.Model.DealerProperty.Value">
            <summary>
            Get Set Value
            </summary>
            <remarks>The value of this <see cref="T:InSite.Model.DealerProperty"/></remarks>
        </member>
        <member name="P:InSite.Model.DealerProperty.Dealer">
            <summary>
            Get Set <see cref="P:InSite.Model.DealerProperty.Dealer"/>
            </summary>
            <remarks>Get Set the parent <see cref="P:InSite.Model.DealerProperty.Dealer"/> which contains this <see cref="T:InSite.Model.DealerProperty"/> in it's collection of DealerProperties</remarks>
        </member>
        <member name="P:InSite.Model.DictionaryLabel.Language">
            <summary>
            Gets or sets the language.
            </summary>
        </member>
        <member name="P:InSite.Model.DictionaryLabel.LanguageCode">
            <summary>
            Gets or sets the language code (used for the Management Console).
            </summary>
        </member>
        <member name="M:InSite.Model.Document.GetFileTypeString">
            <summary>
            Parses the FileName of this <see cref="T:InSite.Model.Document"/>and returns the document type.
            </summary>
            <returns>Returns the human readable type of a document (translated)</returns>
        </member>
        <member name="P:InSite.Model.Document.Language">
            <summary>
            Gets or sets the language.
            </summary>
        </member>
        <member name="P:InSite.Model.Document.LanguageCode">
            <summary>
            Gets or sets the language code (used for the Management Console).
            </summary>
        </member>
        <member name="P:InSite.Model.Document.InternalUseOnly">
            <summary>
            Gets or sets a value indicating whether [internal use only].
            </summary>
            <value>
              <c>true</c> if [internal use only]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:InSite.Model.Services.ConnectionStringProvider">
            <summary>The connection string provider.</summary>
        </member>
        <member name="P:InSite.Model.Services.ConnectionStringProvider.Current">
            <summary>Gets or sets the current.</summary>
        </member>
        <member name="P:InSite.Model.Services.ConnectionStringProvider.ConnectionStringName">
            <summary>Gets the connection string name.</summary>
        </member>
        <member name="P:InSite.Model.Services.ConnectionStringProvider.ConnectionString">
            <summary>Gets the connection string.</summary>
        </member>
        <member name="T:InSite.Model.Services.DefaultConnectionStringProvider">
            <summary>The default connection string provider.</summary>
        </member>
        <member name="P:InSite.Model.Services.DefaultConnectionStringProvider.ConnectionStringName">
            <summary>Gets the connection string name.</summary>
        </member>
        <member name="P:InSite.Model.Services.DefaultConnectionStringProvider.ConnectionString">
            <summary>
            Gets the proper connection string used to connect to the database
            </summary>
        </member>
        <member name="T:InSite.Model.Services.ContentProvider_MultiLanguage">
            <summary>
            Content provider supporting multiple languages, devices, and personas
            </summary>
        </member>
        <member name="M:InSite.Model.Services.ContentProvider_MultiLanguage.#ctor(InSite.Model.Interfaces.IContextProvider,InSite.Model.Interfaces.IUnitOfWorkFactory)">
            <summary>
            Dependency Injection Constructor
            </summary>
            <param name="contextProvider"><see cref="T:InSite.Model.Interfaces.IContextProvider"/></param>
            <param name="unitOfWorkFactory"><see cref="T:InSite.Model.Interfaces.IUnitOfWorkFactory"/></param>
        </member>
        <member name="M:InSite.Model.Services.ContentProvider_MultiLanguage.LatestPublishedContent(System.Collections.Generic.IEnumerable{InSite.Model.Content})">
            <summary>
            Finds the latest published site <see cref="T:InSite.Model.Content"/>  item in a list of <see cref="T:InSite.Model.Content"/> .
            </summary>
            <param name="contentList">List of Content items.</param>
            <returns>The Content item with the latest publish date and revision number.</returns>
        </member>
        <member name="M:InSite.Model.Services.ContentProvider_MultiLanguage.PublishedContent(System.Collections.Generic.IEnumerable{InSite.Model.Content})">
            <summary>
            Finds the latest published site <see cref="T:InSite.Model.Content"/>  item in a list of <see cref="T:InSite.Model.Content"/> .
            </summary>
            <param name="contentList">List of Content items.</param>
            <returns>The Content item with the latest publish date and revision number.</returns>
        </member>
        <member name="M:InSite.Model.Services.ContentProvider_MultiLanguage.LatestUnpublishedContent(System.Collections.Generic.IEnumerable{InSite.Model.Content})">
            <summary>
            Finds the latest unplublished site <see cref="T:InSite.Model.Content"/> item in a list of <see cref="T:InSite.Model.Content"/> .
            </summary>
            <param name="contentList">List of Content items.</param>
            <returns>The Content item with the latest revision number.</returns>
        </member>
        <member name="M:InSite.Model.Services.ContentProvider_MultiLanguage.ResolveContent(InSite.Model.ContentManager,System.Boolean,InSite.Model.Language,InSite.Model.Interfaces.DeviceType,InSite.Model.Persona,System.Boolean,System.Boolean)">
            <summary>
            Finds the latest <see cref="T:InSite.Model.Content"/> based on language, device, persona 
            </summary>
            <param name="contentManager"><see cref="T:InSite.Model.ContentManager"/></param>
            <param name="published">Specifies whether result should be published or unpublished.</param>
            <param name="language">Language definition.</param>
            <param name="deviceType">Device type.</param>
            <param name="persona">Persona.</param>
            <param name="resolveExact">True to resolve exactly for Language, DeviceType and Persona</param>
            <param name="includeFutureRevisions">True to resolve exactly for Language, DeviceType and Persona</param>
            <returns>Latest content.</returns>
        </member>
        <member name="M:InSite.Model.Services.ContentProvider_MultiLanguage.GetContent(InSite.Model.ContentManager,System.Boolean,InSite.Model.Language,InSite.Model.Interfaces.DeviceType,InSite.Model.Persona,System.Boolean,System.Boolean)">
            <summary>
            Get the actual <see cref="T:InSite.Model.Content"/>.
            </summary>
            <param name="contentManager"><see cref="T:InSite.Model.ContentManager"/></param>
            <param name="published">Specifies whether result should be published or unpublished.</param>
            <param name="language">Language definition.</param>
            <param name="deviceType">Device type.</param>
            <param name="persona">Persona identifier.</param>
            <param name="resolveExact">True to resolve exactly for Language, DeviceType and Persona</param>
            <param name="includeFutureRevisions">Look at future published content when resolving content.</param>
            <returns>Latest content.</returns>
        </member>
        <member name="M:InSite.Model.Services.ContentProvider_MultiLanguage.FilterContent(InSite.Model.ContentManager,System.Func{System.Collections.Generic.IEnumerable{InSite.Model.Content},InSite.Model.Content},InSite.Model.Language,InSite.Model.Interfaces.DeviceType,InSite.Model.Persona)">
            <summary>
            Filters and runs the query to get the <see cref="T:InSite.Model.Content"/>.
            </summary>
            <param name="contentManager"><see cref="T:InSite.Model.ContentManager"/></param>
            <param name="latestContent">Either <see cref="M:InSite.Model.Services.ContentProvider_MultiLanguage.LatestPublishedContent(System.Collections.Generic.IEnumerable{InSite.Model.Content})"/> or <see cref="M:InSite.Model.Services.ContentProvider_MultiLanguage.LatestUnpublishedContent(System.Collections.Generic.IEnumerable{InSite.Model.Content})"/> function.</param>
            <param name="filterLanguage"><see cref="T:InSite.Model.Language"/> to filter by.</param>
            <param name="filterDeviceType"><see cref="T:InSite.Model.Interfaces.DeviceType"/> to filter by.</param>
            <param name="filterPersona"><see cref="T:InSite.Model.Persona"/> to filter by.</param>
            <returns>Matching <see cref="T:InSite.Model.Content"/>.</returns>
        </member>
        <member name="M:InSite.Model.Services.ContentProvider_MultiLanguage.GetCurrentApprovedRevision(InSite.Model.ContentManager,InSite.Model.Language,System.Nullable{InSite.Model.Interfaces.DeviceType},InSite.Model.Persona)">
            <summary>
            Get current approved content
            </summary>
            <param name="contentManager"><see cref="T:InSite.Model.ContentManager"/></param>
            <param name="language">Language definition.</param>
            <param name="deviceType">Device type.</param>
            <param name="persona">Persona.</param>
            <returns>Latest specified content or null if none found.</returns>
        </member>
        <member name="M:InSite.Model.Services.ContentProvider_MultiLanguage.GetCurrentOrFutureApprovedRevision(InSite.Model.ContentManager,InSite.Model.Language,System.Nullable{InSite.Model.Interfaces.DeviceType},InSite.Model.Persona)">
            <summary>
            Get current or future approved content
            </summary>
            <param name="contentManager"><see cref="T:InSite.Model.ContentManager"/></param>
            <param name="language">Language definition.</param>
            <param name="deviceType">Device type.</param>
            <param name="persona">Persona.</param>
            <returns>Latest specified content or null if none found.</returns>
        </member>
        <member name="M:InSite.Model.Services.ContentProvider_MultiLanguage.GetCurrentUnapprovedRevision(InSite.Model.ContentManager,InSite.Model.Language,System.Nullable{InSite.Model.Interfaces.DeviceType},InSite.Model.Persona,System.Boolean)">
            <summary>
            Get current unapproved content
            </summary>
            <param name="contentManager"><see cref="T:InSite.Model.ContentManager"/></param>
            <param name="language">Language definition.</param>
            <param name="deviceType">Device type.</param>
            <param name="persona">Persona identifier.</param>
            <param name="resolveExact">True to resolve exactly for Language, DeviceType and Persona</param>
            <returns>Latest specified content or null if none found.</returns>
        </member>
        <member name="T:InSite.Model.Services.ContextProvider_Generic">
            <summary>
            Class that encapsulates the application context for an InSite.Commerce website.
            </summary>
        </member>
        <member name="M:InSite.Model.Services.ContextProvider_Generic.#ctor(System.Web.HttpContextBase,InSite.Model.Interfaces.IUnitOfWork,InSite.Model.Interfaces.ICurrentCustomerProvider,InSite.Model.Interfaces.ICurrentShipToProvider,InSite.Model.Interfaces.ICartOrderProviderFactory,InSite.Model.Interfaces.ICurrentUserProfileProvider,InSite.Model.Interfaces.ICurrentWebSiteProvider,InSite.Model.Interfaces.IDeviceTypeProvider,InSite.Model.Interfaces.ICurrentLocationProviderFactory,InSite.Model.Interfaces.IRulesEngine,InSite.Model.Interfaces.IContentModeProvider,InSite.Model.Managers.IPerRequestCacheManager,InSite.Model.Managers.ICookieManager)">
            <summary>
            Constructor
            </summary>
            <param name="httpContextBase">Provides access to HttpContext.</param>
            <param name="unitOfWork"><see cref="T:InSite.Model.Interfaces.IUnitOfWork"/> to offer factory creation of <see cref="T:InSite.Model.Interfaces.Repositories.IRepository`1"/>.</param>
            <param name="currentCustomerProvider"><see cref="T:InSite.Model.Interfaces.ICurrentCustomerProvider"/> provides the current <see cref="T:InSite.Model.Customer"/>.</param>
            <param name="currentShipToProvider"><see cref="T:InSite.Model.Interfaces.ICurrentShipToProvider"/> provides the current ShipTo <see cref="T:InSite.Model.Customer"/>.</param>
            <param name="cartOrderProviderFactory"><see cref="T:InSite.Model.ICartOrderProvider"/> provides the current Cart <see cref="T:InSite.Model.CustomerOrder"/>.</param>
            <param name="currentUserProfileProvider"><see cref="T:InSite.Model.Interfaces.ICurrentUserProfileProvider"/> provides the current <see cref="T:InSite.Model.UserProfile"/>.</param>
            <param name="currentWebSiteProvider"><see cref="T:InSite.Model.Interfaces.ICurrentWebSiteProvider"/> provides the current <see cref="T:InSite.Model.WebSite"/>.</param>
            <param name="deviceTypeProvider">provides details of the user's browser.</param>
            <param name="currentLocationProviderFactory">provides the default <see cref="T:InSite.Model.Interfaces.ICurrentLocationProvider"/> implementation used when determining the users current location.</param>
            <param name="rulesEngine">Provides access to the rules engine for Persona resolution</param>
            <param name="contentModeProvider">Provides access to the content mode</param>
            <param name="perRequestCacheManager"></param>
            <param name="cookieManager"></param>
        </member>
        <member name="M:InSite.Model.Services.ContextProvider_Generic.CanRequestQuote">
            <summary>
            Get whether we can request a quote.
            </summary>
            <returns></returns>
        </member>
        <member name="M:InSite.Model.Services.ContextProvider_Generic.SetCurrentCurrencyCode(System.String)">
            <summary>
            Sets <see cref="P:InSite.Model.Services.ContextProvider_Generic.CurrentCurrency"/> based off the incoming <paramref name="currencyCode"/>
            </summary>
            <param name="currencyCode"><see cref="P:InSite.Model.Currency.CurrencyCode"/></param>
        </member>
        <member name="M:InSite.Model.Services.ContextProvider_Generic.SetContext(InSite.Model.UserProfile,InSite.Model.Customer,InSite.Model.Customer,InSite.Model.CustomerOrder,InSite.Model.WebSite,InSite.Model.Language,InSite.Model.Currency,System.Nullable{InSite.Model.Interfaces.DeviceType})">
            <summary>
            Sets the context for the user session.
            </summary>
            <param name="userProfile"><see cref="T:InSite.Model.UserProfile"/> for the current session.</param>
            <param name="customer"><see cref="T:InSite.Model.Customer"/> aka billto for the current user session.</param>
            <param name="shipTo"><see cref="T:InSite.Model.Customer"/> shipto for the current user session.</param>
            <param name="customerOrder"><see cref="T:InSite.Model.CustomerOrder"/> for the current user session.</param>
            <param name="website"><see cref="T:InSite.Model.WebSite"/> for the current user session.</param>
            <param name="language"><see cref="T:InSite.Model.Language"/> for the current user session.</param>
            <param name="currency"><see cref="T:InSite.Model.Currency"/> for the current user session.</param>
            <param name="deviceType"><see cref="T:InSite.Model.Interfaces.DeviceType"/> for the current user session.</param>
        </member>
        <member name="M:InSite.Model.Services.ContextProvider_Generic.SetContext(InSite.Model.Customer)">
            <summary>
            Sets the context for the user session.
            </summary>
            <param name="customer"><see cref="T:InSite.Model.Customer"/> aka billto for the current user session.</param>
        </member>
        <member name="M:InSite.Model.Services.ContextProvider_Generic.SetContext(InSite.Model.Customer,InSite.Model.Customer)">
            <summary>
            Sets the context for the user session.
            </summary>
            <param name="customer"><see cref="T:InSite.Model.Customer"/> aka billto for the current user session.</param>
            <param name="shipTo"><see cref="T:InSite.Model.Customer"/> shipto for the current user session.</param>
        </member>
        <member name="M:InSite.Model.Services.ContextProvider_Generic.SetContext(InSite.Model.Language)">
            <summary>
            Sets the context for the user session.
            </summary>
            <param name="language"><see cref="T:InSite.Model.Language"/> for the current user session.</param>
        </member>
        <member name="P:InSite.Model.Services.ContextProvider_Generic.CurrentContext">
            <summary>
            Gets or sets the current context.  This is set from the WebApi base controller to set the context to the unwrapped context from the web request.
            </summary>
        </member>
        <member name="P:InSite.Model.Services.ContextProvider_Generic.CurrentCustomer">
            <summary>
            Get Set the current <see cref="T:InSite.Model.Customer"/> context for the application.
            </summary>
        </member>
        <member name="P:InSite.Model.Services.ContextProvider_Generic.CurrentShipTo">
            <summary>
            Get Set the current ShipTo <see cref="T:InSite.Model.Customer"/> context for the application.
            </summary>
        </member>
        <member name="P:InSite.Model.Services.ContextProvider_Generic.CurrentCustomerOrder">
            <summary>
            Get Set the current <see cref="T:InSite.Model.CustomerOrder"/> context for the application.
            </summary>
        </member>
        <member name="P:InSite.Model.Services.ContextProvider_Generic.CurrentCartOrderProvider">
            <summary>
            Gets the current <see cref="P:InSite.Model.Services.ContextProvider_Generic.CurrentCartOrderProvider"/> using the <see cref="T:InSite.Model.WebSiteConfiguration"/> CartOrderProvider
            </summary>
        </member>
        <member name="P:InSite.Model.Services.ContextProvider_Generic.CurrentUserProfile">
            <summary>
            Get Set the current <see cref="T:InSite.Model.UserProfile"/> context for the application.
            </summary>
        </member>
        <member name="P:InSite.Model.Services.ContextProvider_Generic.CurrentWebSite">
            <summary>
            Get Set the current <see cref="T:InSite.Model.WebSite"/> context for the application.
            </summary>
        </member>
        <member name="P:InSite.Model.Services.ContextProvider_Generic.CurrentMicroSiteIdentifier">
            <summary>
            Get the current MicroSite identifier 
            </summary>
        </member>
        <member name="P:InSite.Model.Services.ContextProvider_Generic.DefaultApplicationName">
            <summary>
            Default application name to be used for the membership provider.
            </summary>
        </member>
        <member name="P:InSite.Model.Services.ContextProvider_Generic.CurrentApplicationName">
            <summary>
            Get Set the current application name
            </summary>
        </member>
        <member name="P:InSite.Model.Services.ContextProvider_Generic.CurrentWarehouse">
            <summary>
            Returns the Current Warehouse
            </summary>
            <returns></returns>
        </member>
        <member name="P:InSite.Model.Services.ContextProvider_Generic.CurrentLanguage">
            <summary>
            Gets or sets the Current language for the current WebSite and user
            </summary>
        </member>
        <member name="P:InSite.Model.Services.ContextProvider_Generic.CurrentCurrency">
            <summary>
            Gets or sets the currency for the current user.
            </summary>
        </member>
        <member name="P:InSite.Model.Services.ContextProvider_Generic.CurrentDeviceType">
            <summary>
            Gets the device type of current user's browser.
            </summary>
        </member>
        <member name="P:InSite.Model.Services.ContextProvider_Generic.CurrentPersona">
            <summary>
            Gets the persona of the current user.
            </summary>
        </member>
        <member name="P:InSite.Model.Services.ContextProvider_Generic.CurrentLocation">
            <summary>
            Get Set the users current location as a <see cref="T:InSite.Model.LocationDto"/>.
            </summary>
        </member>
        <member name="P:InSite.Model.Services.ContextProvider_Generic.EnableLocalization">
            <summary>
            Set to false to turn off localization for the current request
            </summary>
        </member>
        <member name="T:InSite.Model.Services.CurrentLocationProvider.CurrentLocationProvider_ByShipTo">
            <summary>
            CurrentLocationProvider_ByCustomer - the ship to customer based current location provider
            </summary>
        </member>
        <member name="M:InSite.Model.Services.CurrentLocationProvider.CurrentLocationProvider_ByShipTo.GetCurrentLocation(InSite.Model.UserProfile,InSite.Model.Customer,InSite.Model.Customer,System.String)">
            <summary>
            Find the users current location as a <see cref="T:InSite.Model.LocationDto"/>
            </summary>
            <param name="userProfile" type="UserProfile">Current user profile</param>
            <param name="billTo" type="Customer">Current bill to customer</param>
            <param name="shipTo" type="Customer">Current ship to customer</param>
            <param name="ipAddress" type="Customer">Current IP address for the end user</param>
            <returns><see cref="T:InSite.Model.LocationDto"/> lat/long point corresponding to the physical address.</returns>
        </member>
        <member name="T:InSite.Model.Services.CurrentLocationProvider.CurrentLocationProvider_ByCustomer">
            <summary>
            CurrentLocationProvider_ByCustomer - the bill to customer based current location provider
            </summary>
        </member>
        <member name="M:InSite.Model.Services.CurrentLocationProvider.CurrentLocationProvider_ByCustomer.GetCurrentLocation(InSite.Model.UserProfile,InSite.Model.Customer,InSite.Model.Customer,System.String)">
            <summary>
            Find the users current location as a <see cref="T:InSite.Model.LocationDto"/>
            </summary>
            <param name="userProfile" type="UserProfile">Current user profile</param>
            <param name="billTo" type="Customer">Current bill to customer</param>
            <param name="shipTo" type="Customer">Current ship to customer</param>
            <param name="ipAddress" type="Customer">Current IP address for the end user</param>
            <returns><see cref="T:InSite.Model.LocationDto"/> lat/long point corresponding to the physical address.</returns>
        </member>
        <member name="T:InSite.Model.Services.CurrentLocationProvider.CurrentLocationProviderFactory">
            <summary>
            The standard <see cref="T:InSite.Model.Interfaces.ICurrentLocationProviderFactory"/> used to get <see cref="T:InSite.Model.Interfaces.ICurrentLocationProvider"/> objects;
            </summary>
        </member>
        <member name="M:InSite.Model.Services.CurrentLocationProvider.CurrentLocationProviderFactory.#ctor(Microsoft.Practices.ServiceLocation.IServiceLocator)">
            <summary>
            Dependency Injection constructor.
            </summary>
            <param name="serviceLocator">The ServiceLocator to use to resolve <see cref="T:InSite.Model.Interfaces.ICurrentLocationProvider"/> from Ioc.</param>
        </member>
        <member name="M:InSite.Model.Services.CurrentLocationProvider.CurrentLocationProviderFactory.GetCurrentLocationProvider(System.String)">
            <summary>
            This method will use the provided key to determine what CurrentLocationProvider to use.  If the requested key is not handled specificaly,
            a default provider will be returned
            </summary>
            <param name="implementationKey">The key used to determine what implementation of <see cref="T:InSite.Model.Interfaces.ICurrentLocationProvider"/> to return.</param>
            <returns>A new instance of an object that implements <see cref="T:InSite.Model.Interfaces.ICurrentLocationProvider"/></returns>
        </member>
        <member name="T:InSite.Model.Services.CurrentLocationProvider.CurrentLocationProvider_ByIp">
            <summary>
            CurrentLocationProvider_ByIp - the default IP based current location provider
            </summary>
        </member>
        <member name="M:InSite.Model.Services.CurrentLocationProvider.CurrentLocationProvider_ByIp.GetCurrentLocation(InSite.Model.UserProfile,InSite.Model.Customer,InSite.Model.Customer,System.String)">
            <summary>
            Find the users current location as a <see cref="T:InSite.Model.LocationDto"/>
            </summary>
            <param name="userProfile" type="UserProfile">Current user profile</param>
            <param name="billTo" type="Customer">Current bill to customer</param>
            <param name="shipTo" type="Customer">Current ship to customer</param>
            <param name="ipAddress" type="Customer">Current IP address for the end user</param>
            <returns><see cref="T:InSite.Model.LocationDto"/> lat/long point corresponding to the physical address.</returns>
        </member>
        <member name="T:InSite.Model.Services.CustomerOrderState.CustomerOrderStateQuoteRequested">
            <summary>
            Concrete implementation of CustomerOrderState for RFQ orders that have been sent to a sales rep.
            </summary>
        </member>
        <member name="T:InSite.Model.Services.CustomerOrderState.CustomerOrderStateBase">
            <summary>
            The base class implementation of <see cref="T:InSite.Model.Interfaces.ICustomerOrderState"/> that should be inherited from when implementing <see cref="T:InSite.Model.Interfaces.ICustomerOrderState"/>s.
            </summary>
        </member>
        <member name="M:InSite.Model.Services.CustomerOrderState.CustomerOrderStateBase.CheckStateChange(System.String,System.Object,System.Object)">
            <summary>
            This method gets called by property changes in the <see cref="P:InSite.Model.Services.CustomerOrderState.CustomerOrderStateBase.CustomerOrder"/> to see if the <see cref="T:InSite.Model.Interfaces.ICustomerOrderState"/> controlling the
            functions of the <see cref="P:InSite.Model.Services.CustomerOrderState.CustomerOrderStateBase.CustomerOrder"/> needs to change.  The default implementation will call the <see cref="T:InSite.Model.Interfaces.ICustomerOrderStateFactory"/>
            to get a new <see cref="T:InSite.Model.Interfaces.ICustomerOrderState"/> object if the <see cref="P:InSite.Model.Services.CustomerOrderState.CustomerOrderStateBase.CustomerOrder"/> Status property changes.
            </summary>
            <param name="propertyName">The name of the property that has changed.</param>
            <param name="oldValue">The old value of the property changing.</param>
            <param name="newValue">The value the property is changing to.</param>
        </member>
        <member name="M:InSite.Model.Services.CustomerOrderState.CustomerOrderStateBase.AddOrderLine(InSite.Model.Product,System.String,System.Decimal,System.Collections.Generic.IList{InSite.Model.OrderLineProperty},System.String,System.String)">
            <summary>Add an OrderLine to the OrderLines collection</summary>
            <param name="product">The Product purchased on this OrderLine</param>
            <param name="notes">Optional, notes will set the CustomerOrder Notes</param>
            <param name="qtyOrdered">The Quantity Ordered of the Product</param>
            <param name="orderLineProperties">The collection of OrderLineProperties describing this Product purchase, can be used for example to indicate gift wrapping options etc...</param>
            <param name="unitOfMeasure">The unit of measure of the Product being added to the order</param>
            <param name="costCode">The codt code for the line being added to the order</param>
            <remarks>If the Product added is a GiftCard, a new OrderLine for each Quantity Ordered will be created. The Line number of the OrderLine will
            automatically be incremented. If the Product is already on another OrderLine and the Product is not a GiftCard and the OrderLineProperties passed in are the
            same or null, it will either replace that OrderLine Quantity Ordered if the ApplicationSetting Web_ReplaceOnAddToCart is set to true, otherwise it will add to
            the Quantity Ordered.  The OrderLine.Release will be set to the value of the ApplicationSetting ReleaseForNewOrderLines which defaults to zero.  If
            WebSite.Current is null the OrderLine.WebSite and OrderLine.ShipSite will be set to the CustomerOrder.WebSite and CustomerOrder.WebSite.DefaultShipSite,
            otherwise they will be set to WebSite.Current and WebSite.Current.DefaultShipSite.  The OrderLine.Description is copied from the Product.ShortDescription
            and OrderLine.UnitOfMeasure is copied from Prduct.UnitOfMeasure.  If the Quantity Ordered passed in results in the OrderLine Quantity Ordered being set to
            zero, the OrderLine is removed.</remarks>
            <returns>The added OrderLine</returns>
        </member>
        <member name="M:InSite.Model.Services.CustomerOrderState.CustomerOrderStateBase.GetIsValid">
            <summary>
            Goes through all the OrderLines and checks their IsValid property and will return false
            if an OrderLine is not valid, then returns true
            </summary>
        </member>
        <member name="M:InSite.Model.Services.CustomerOrderState.CustomerOrderStateBase.AddOrderLine(InSite.Model.OrderLine)">
            <summary>Add an OrderLine to the OrderLines collection</summary>
            <param name="value">The OrderLine to be added</param>
            <remarks>If the collection already contains the value it is silently ignored. If DataStoreSingleton.BatchUpdate is set to true, the OrderLine is added to
            the collection and no further processing takes place. Otherwise the Line number is set to the Max of the current OrderLines Line numbers plus one. If the
            OrderLine WebSite is null, it sets the OrderLine WebSite to the CustomerOrder WebSite and OrderLine ShipSite to the CustomerOrder WebSite DefaultShipSite. If
            the OrderLine TaxCode1 or TaxCode2 are blank, it sets them to the CustomerOrder TaxCode1 and TaxCode2 respectively. Handling is then calculated, if the
            OrderLine is not a Promotional Item, Promotions are applied and then Taxes are calculated if these are set to auto calculate.</remarks>
        </member>
        <member name="M:InSite.Model.Services.CustomerOrderState.CustomerOrderStateBase.CalculateHandling">
            <summary>
            Implementation of the <see cref="M:InSite.Model.Interfaces.ICustomerOrderState.CalculateHandling"/> contract.  
            </summary>
        </member>
        <member name="M:InSite.Model.Services.CustomerOrderState.CustomerOrderStateBase.RemoveOrderLine(InSite.Model.OrderLine,System.Boolean)">
            <summary>Remove an OrderLine from the OrderLines collection, if renumberLines is false, return, otherwise re-number the OrderLines, re-calculate
            handling, re-apply promotions and re-calculate tax</summary>
            <param name="value">The OrderLine to be removed</param>
            <param name="renumberLines">true for standard behavior, false to just remove the OrderLine and return</param>
            <remarks>If the collection does not contain the value it is silently ignored</remarks>
        </member>
        <member name="M:InSite.Model.Services.CustomerOrderState.CustomerOrderStateBase.RemoveOrderLine(InSite.Model.OrderLine)">
            <summary>Remove an OrderLine from the OrderLines collection, re-number the OrderLines, re-calculate handling, re-apply promotions and re-calculate tax</summary>
            <remarks>If the collection does not contain the value it is silently ignored</remarks>
        </member>
        <member name="M:InSite.Model.Services.CustomerOrderState.CustomerOrderStateBase.RemoveOrderLine(System.Int32)">
            <summary>Remove an OrderLine with the Line Number specified from the OrderLines collection, re-number the OrderLines, re-calculate handling, re-apply
            promotions and re-calculate tax</summary>
            <remarks>If the collection does not contain the value it is silently ignored</remarks>
        </member>
        <member name="M:InSite.Model.Services.CustomerOrderState.CustomerOrderStateBase.RemoveShippingRestrictedOrderLines">
            <summary>Removes all OrderLines that do not pass the shipping restrictions</summary>
        </member>
        <member name="M:InSite.Model.Services.CustomerOrderState.CustomerOrderStateBase.RemovePromotion(InSite.Model.Promotion)">
            <summary>Removes a Promotion from the Promotions collection, re-calculates handling and tax</summary>
            <param name="value">The Promotion to be removed</param>
            <remarks>If the collection does not contain the value it is silently ignored</remarks>
        </member>
        <member name="M:InSite.Model.Services.CustomerOrderState.CustomerOrderStateBase.RemovePromotionCode(InSite.Model.OrderPromotionCode)">
            <summary>Removes a PromotionCode from the PromotionCodes collection and re-applies promotions</summary>
            <param name="value">The PromotionCode to be removed</param>
            <remarks>If the collection does not contain the value it is silently ignored</remarks>
        </member>
        <member name="M:InSite.Model.Services.CustomerOrderState.CustomerOrderStateBase.AddPromotion(InSite.Model.Promotion)">
            <summary>Add a Promotion to the Promotions collection</summary>
            <param name="value">The Promotion to be added</param>
            <remarks>If the collection already contains the value it is silently ignored.  Handling and then Tax are calculated if set to auto calculate.</remarks>
        </member>
        <member name="M:InSite.Model.Services.CustomerOrderState.CustomerOrderStateBase.HasPromotion(InSite.Model.Promotion)">
            <summary>Returns true if the Promotions collection has this Promotion in it</summary>
            <param name="promotion">Promotion</param>
            <returns>true or false</returns>
        </member>
        <member name="M:InSite.Model.Services.CustomerOrderState.CustomerOrderStateBase.HasProduct(InSite.Model.Product)">
            <summary>Returns true if the OrderLines collection contains an OrderLine with this Product and Status does not equal void</summary>
            <param name="product">Product</param>
            <returns>true or false</returns>
        </member>
        <member name="M:InSite.Model.Services.CustomerOrderState.CustomerOrderStateBase.ProcessShippingRestrictions">
            <summary>
            Method to Process ShippingRestrictions on a <see cref="P:InSite.Model.Services.CustomerOrderState.CustomerOrderStateBase.CustomerOrder"/>. This will first clear all the restrictions on the <see cref="P:InSite.Model.Services.CustomerOrderState.CustomerOrderStateBase.CustomerOrder"/>.
            It will then process each <see cref="T:InSite.Model.OrderLine"/> in <see cref="P:InSite.Model.CustomerOrder.OrderLines"/> collection. If the <see cref="P:InSite.Model.OrderLine.PassesShippingRestrictions"/> is
            false, it will add the <see cref="T:InSite.Model.OrderLine"/> to the <see cref="P:InSite.Model.CustomerOrder.FailedShippingRestrictionOrderLines"/> collection.
            </summary>
        </member>
        <member name="M:InSite.Model.Services.CustomerOrderState.CustomerOrderStateBase.GetOrderLine(System.String)">
            <summary>Gets an OrderLine from the OrderLines collection with that Product Name</summary>
            <param name="productName">Product Name</param>
            <returns>OrderLine or null if not found</returns>
        </member>
        <member name="M:InSite.Model.Services.CustomerOrderState.CustomerOrderStateBase.SetCustomer(InSite.Model.Customer)">
            <summary>
            Bill To Customer of the CustomerOrder
            Setting the Customer also sets the CustomerNumber, CurrencyCode, 
            TermsCode, the BT* fields on the CustomerOrder and if the ShipTo is null or AbandonedCart, it will be set as well
            </summary>
            <param name="value"><see cref="T:InSite.Model.Customer"/> to set the <see cref="T:InSite.Model.CustomerOrder"/> Billing fields to.</param>
        </member>
        <member name="M:InSite.Model.Services.CustomerOrderState.CustomerOrderStateBase.SetShipToCustomer(InSite.Model.Customer)">
            <summary>
            Ship To Customer of the CustomerOrder
            Setting the Customer also sets the CustomerNumber, CurrencyCode
            TermsCode, the ST* fields on the CustomerOrder and if the ShipTo is null or AbandonedCart, it will be set as well
            </summary>
            <param name="value"><see cref="T:InSite.Model.Customer"/> to set the <see cref="T:InSite.Model.CustomerOrder"/> Shipping fields to.</param>
        </member>
        <member name="M:InSite.Model.Services.CustomerOrderState.CustomerOrderStateBase.GetLocalTaxableTotal">
            <summary>
            Taxable Total calculated from the Local (ZipCode) of the CustomerOrder
            </summary>
        </member>
        <member name="M:InSite.Model.Services.CustomerOrderState.CustomerOrderStateBase.GetStateTaxableTotal">
            <summary>
            Taxable Total calculated from the State of the CustomerOrder
            </summary>
        </member>
        <member name="M:InSite.Model.Services.CustomerOrderState.CustomerOrderStateBase.GetOrderFreightableTotal">
            <summary>
            Total of the Shippable amounts of the CustomerOrder
            </summary>
        </member>
        <member name="M:InSite.Model.Services.CustomerOrderState.CustomerOrderStateBase.GetOrderFreightableQuantity">
            <summary>
            Total of the Shippable quantitie sof the CustomerOrder
            </summary>
        </member>
        <member name="M:InSite.Model.Services.CustomerOrderState.CustomerOrderStateBase.GetProductOverriddenFreightTotal">
            <summary>
            Total amounts of the Products with ShippingAmountOverrides of the CustomerOrder
            </summary>
        </member>
        <member name="M:InSite.Model.Services.CustomerOrderState.CustomerOrderStateBase.GetOrderTotal">
            <summary>
            OrderTotal is OrderSubTotal with Order Promotions applied of the CustomerOrder
            </summary>
        </member>
        <member name="M:InSite.Model.Services.CustomerOrderState.CustomerOrderStateBase.GetPercentOffShipping">
            <summary>
            Total of PercentOffShipping Promotions of the CustomerOrder
            </summary>
        </member>
        <member name="M:InSite.Model.Services.CustomerOrderState.CustomerOrderStateBase.GetShippingAndHandling">
            <summary>
            Shipping plus Handling of the CustomerOrder including promotions
            </summary>
        </member>
        <member name="M:InSite.Model.Services.CustomerOrderState.CustomerOrderStateBase.GetDollarOffOrder">
            <summary>
            Total of DollarOffOrder Promotions of the CustomerOrder
            </summary>
        </member>
        <member name="M:InSite.Model.Services.CustomerOrderState.CustomerOrderStateBase.GetPercentOffOrder">
            <summary>
            Total of PercentOffOrder Promotions of the CustomerOrder
            </summary>
        </member>
        <member name="M:InSite.Model.Services.CustomerOrderState.CustomerOrderStateBase.GetDollarOffShipping">
            <summary>
            Total of DollarOffShipping Promotions of the CustomerOrder
            </summary>
        </member>
        <member name="M:InSite.Model.Services.CustomerOrderState.CustomerOrderStateBase.GetOrderSubTotal">
            <summary>
            OrderSubTotal including Product Promotions of the CustomerOrder
            </summary>
        </member>
        <member name="M:InSite.Model.Services.CustomerOrderState.CustomerOrderStateBase.GetPromotionTotal">
            <summary>
            Total of Product, Order and Shipping Promotions of the CustomerOrder
            </summary>
        </member>
        <member name="M:InSite.Model.Services.CustomerOrderState.CustomerOrderStateBase.GetPromotionProductDiscountTotal">
            <summary>
            Total of Product Promotions of the CustomerOrder
            </summary>
        </member>
        <member name="M:InSite.Model.Services.CustomerOrderState.CustomerOrderStateBase.GetPromotionOrderDiscountTotal">
            <summary>
            Total of Order Promotions of the CustomerOrder
            </summary>
        </member>
        <member name="M:InSite.Model.Services.CustomerOrderState.CustomerOrderStateBase.GetOrderSubTotalWithOutProductDiscounts">
            <summary>
            OrderSubTotal excluding Product Promotions of the CustomerOrder
            </summary>
        </member>
        <member name="M:InSite.Model.Services.CustomerOrderState.CustomerOrderStateBase.GetPromotionShippingDiscountTotal(System.Decimal)">
            <summary>
            Total of Shipping Promotions of the CustomerOrder
            </summary>
        </member>
        <member name="M:InSite.Model.Services.CustomerOrderState.CustomerOrderStateBase.GetTotalWeight">
            <summary>
            Total of Quantities times ShippingWeight of the OrderLines of the CustomerOrder
            </summary>
        </member>
        <member name="M:InSite.Model.Services.CustomerOrderState.CustomerOrderStateBase.GetOrderTotalDue">
            <summary>
            Order Total Due is the OrderGrandTotal minus the GiftCardTotal of the CustomerOrder
            </summary>
        </member>
        <member name="M:InSite.Model.Services.CustomerOrderState.CustomerOrderStateBase.GetTotalItemsOrdered">
            <summary>
            Total of Quantities of the OrderLines of the CustomerOrder
            </summary>
        </member>
        <member name="M:InSite.Model.Services.CustomerOrderState.CustomerOrderStateBase.GetOrderGrandTotal">
            <summary>
            Order Grand Total including SubTotal, Tax, ShippingAndHandling and Promotions of the CustomerOrder
            </summary>
        </member>
        <member name="M:InSite.Model.Services.CustomerOrderState.CustomerOrderStateBase.GetLocalShippingAndHandlingTax">
            <summary>
            Local Tax on ShippingAndHandling of the CustomerOrder
            </summary>
        </member>
        <member name="M:InSite.Model.Services.CustomerOrderState.CustomerOrderStateBase.GetStateShippingAndHandlingTax">
            <summary>
            State Tax on ShippingAndHandling of the CustomerOrder
            </summary>
        </member>
        <member name="M:InSite.Model.Services.CustomerOrderState.CustomerOrderStateBase.GetTotalShippingAndHandlingTax">
            <summary>
            Total Tax on ShippingAndHandling of the CustomerOrder
            </summary>
        </member>
        <member name="M:InSite.Model.Services.CustomerOrderState.CustomerOrderStateBase.GetTotalSalesTax">
            <summary>
            Total Tax excluding ShippingAndHandling Tax of the CustomerOrder
            </summary>
        </member>
        <member name="M:InSite.Model.Services.CustomerOrderState.CustomerOrderStateBase.GetTotalTax">
            <summary>
            Total Tax of the CustomerOrder
            </summary>
        </member>
        <member name="M:InSite.Model.Services.CustomerOrderState.CustomerOrderStateBase.GetLocalTaxRate">
            <summary>
            LocalTaxRate Object matching the first five characters of the ShipTo Zip of the CustomerOrder
            If the ShipVia is the StorePickup ShipVia, it will be the StorePickup Zip from the ApplicationSetting TaxCalculator_StorePickupZipCode
            </summary>
        </member>
        <member name="M:InSite.Model.Services.CustomerOrderState.CustomerOrderStateBase.GetStateTaxRate">
            <summary>
            State Object matching the ShipTo State Abbreviation of the CustomerOrder
            If the ShipVia is the StorePickup ShipVia, it will be the StorePickup State from the ApplicationSetting TaxCalculator_StorePickupStateAbbreviation
            </summary>
        </member>
        <member name="M:InSite.Model.Services.CustomerOrderState.CustomerOrderStateBase.GetCanProcessOrder">
            <summary>
            CanProcessOrder will return false if the Customer is over their CreditLimit or on CreditHold
            </summary>
        </member>
        <member name="M:InSite.Model.Services.CustomerOrderState.CustomerOrderStateBase.GetIsOrderOverCreditLimit">
            <summary>
            IsOrderOverCreditLimit will return true if the OrderGrandTotal is greater than the Customers AvailableCreditLimit
            </summary>
        </member>
        <member name="M:InSite.Model.Services.CustomerOrderState.CustomerOrderStateBase.GetAvailableCreditLimit">
            <summary>
            AvailableCreditLimit is the Customers AvailableCreditLimit minus the OrderGrandTotal of the CustomerOrder
            </summary>
        </member>
        <member name="M:InSite.Model.Services.CustomerOrderState.CustomerOrderStateBase.GetShipping(System.Decimal)">
            <summary>
            Shipping of the CustomerOrder including promotions
            </summary>
        </member>
        <member name="M:InSite.Model.Services.CustomerOrderState.CustomerOrderStateBase.SetShipping">
            <summary>
            Shipping of the CustomerOrder including promotions.
            </summary>
        </member>
        <member name="M:InSite.Model.Services.CustomerOrderState.CustomerOrderStateBase.GetCustomerOrderDataSet">
            <summary>
            CustomerOrderDataSet is the DataSet representation of this CustomerOrder that is used for ERP Integration to submit the Order
            </summary>
        </member>
        <member name="M:InSite.Model.Services.CustomerOrderState.CustomerOrderStateBase.GetAmountPaid">
            <summary>Total Amount Paid with CreditCardTransactions including Sales and Captures minus Voids and Credits of the CustomerOrder</summary>
        </member>
        <member name="M:InSite.Model.Services.CustomerOrderState.CustomerOrderStateBase.GetIsGiftCardOnlyOrder">
            <summary>
            IsGiftCardOnlyOrder returns true if only GiftCards have been ordered on this CustomerOrder
            </summary>
        </member>
        <member name="M:InSite.Model.Services.CustomerOrderState.CustomerOrderStateBase.GetIsSubscriptionOnlyOrder">
            <summary>
            IsSubscriptionOnlyOrder returns true if only Subscriptions have been ordered on this CustomerOrder
            </summary>
        </member>
        <member name="M:InSite.Model.Services.CustomerOrderState.CustomerOrderStateBase.Copy">
            <summary>Returns a new CustomerOrder with values copied from this CustomerOrder</summary>
        </member>
        <member name="M:InSite.Model.Services.CustomerOrderState.CustomerOrderStateBase.SetTaxCode1(System.String,System.String)">
            <summary>
            Method that acts as an event when setting <see cref="P:InSite.Model.CustomerOrder.TaxCode1"/>.  This implementation will set each 
            <see cref="P:InSite.Model.OrderLine.TaxCode1"/> to the newTaxCode if the <see cref="P:InSite.Model.OrderLine.TaxCode1"/> is equal to the oldTaxCode.
            </summary>
            <param name="newTaxCode">value to set <see cref="P:InSite.Model.OrderLine.TaxCode1"/> to.</param>
            <param name="oldTaxCode">value to check the <see cref="P:InSite.Model.OrderLine.TaxCode1"/> for equality.</param>
        </member>
        <member name="M:InSite.Model.Services.CustomerOrderState.CustomerOrderStateBase.SetTaxCode2(System.String,System.String)">
            <summary>
            Method that acts as an event when setting <see cref="P:InSite.Model.CustomerOrder.TaxCode2"/>.  This implementation will set each 
            <see cref="P:InSite.Model.OrderLine.TaxCode2"/> to the <paramref name="newTaxCode"/> if the <see cref="P:InSite.Model.OrderLine.TaxCode1"/> is equal to the <paramref name="oldTaxCode"/>.
            </summary>
            <param name="newTaxCode">value to set <see cref="P:InSite.Model.OrderLine.TaxCode2"/> to.</param>
            <param name="oldTaxCode">value to check the <see cref="P:InSite.Model.OrderLine.TaxCode2"/> for equality.</param>
        </member>
        <member name="M:InSite.Model.Services.CustomerOrderState.CustomerOrderStateBase.GetGiftCardTotal">
            <summary>
            Total amount of GiftCard balances that will be applied of the CustomerOrder
            </summary>
        </member>
        <member name="M:InSite.Model.Services.CustomerOrderState.CustomerOrderStateBase.GetPassesShippingRestrictions">
            <summary>
            PassesShippingRestrictions returns false if any OrderLine fails any Shipping Restrictions
            </summary>
        </member>
        <member name="M:InSite.Model.Services.CustomerOrderState.CustomerOrderStateBase.SetCustomerOrderNumber(InSite.Model.CustomerOrder)">
            <summary>
            Set's the provided <see cref="P:InSite.Model.Services.CustomerOrderState.CustomerOrderStateBase.CustomerOrder"/>'s order number
            </summary>
            <param name="customerOrder"><see cref="P:InSite.Model.Services.CustomerOrderState.CustomerOrderStateBase.CustomerOrder"/> to set the order number to</param>
            <remarks>
            if the <see cref="P:InSite.Model.Services.CustomerOrderState.CustomerOrderStateBase.CustomerOrder"/>.OrderNumber is a Guid, set order number to next order number via <see cref="P:InSite.Model.Services.CustomerOrderState.CustomerOrderStateBase.CustomerOrder"/>.GetNextOrderNumber()
            </remarks>
        </member>
        <member name="M:InSite.Model.Services.CustomerOrderState.CustomerOrderStateBase.SetCustomerOrderInfo(InSite.Model.CustomerOrder)">
            <summary>
            Sets basic properties on the provided <see cref="P:InSite.Model.Services.CustomerOrderState.CustomerOrderStateBase.CustomerOrder"/>
            </summary>
            <param name="customerOrder"><see cref="P:InSite.Model.Services.CustomerOrderState.CustomerOrderStateBase.CustomerOrder"/> to set properties</param>
            <remarks>
            if the Current <see cref="T:InSite.Model.UserProfile"/> is not null set the <see cref="P:InSite.Model.Services.CustomerOrderState.CustomerOrderStateBase.CustomerOrder"/>'s user profile to the current value.
            Set the <see cref="P:InSite.Model.Services.CustomerOrderState.CustomerOrderStateBase.CustomerOrder"/>'s OrderDate to now
            </remarks>
        </member>
        <member name="P:InSite.Model.Services.CustomerOrderState.CustomerOrderStateBase.CustomerOrder">
            <summary>
            The <see cref="P:InSite.Model.Services.CustomerOrderState.CustomerOrderStateBase.CustomerOrder"/> to handle the state of
            </summary>
        </member>
        <member name="P:InSite.Model.Services.CustomerOrderState.CustomerOrderStateBase.ContextProvider">
            <summary>
            IOC provided <see cref="T:InSite.Model.Interfaces.IContextProvider"/>.
            </summary>
        </member>
        <member name="P:InSite.Model.Services.CustomerOrderState.CustomerOrderStateBase.UnitOfWorkFactory">
            <summary>
            IOC provided <see cref="T:InSite.Model.Interfaces.IUnitOfWorkFactory"/>.
            </summary>
        </member>
        <member name="P:InSite.Model.Services.CustomerOrderState.CustomerOrderStateBase.AllowCurrencyConversion">
            <summary>
            Implementation of the <see cref="P:InSite.Model.Interfaces.ICustomerOrderState.AllowCurrencyConversion"/> contract.
            </summary>
            <returns></returns>
        </member>
        <member name="T:InSite.Model.Services.CustomerOrderStateQuoteProposed">
            <summary>
            Concrete implementation of CustomerOrderState for saved orders
            </summary>
        </member>
        <member name="T:InSite.Model.Services.PathProvider">
            <summary>The path provider.</summary>
        </member>
        <member name="M:InSite.Model.Services.PathProvider.MapPath(System.String)">
            <summary>The map path.</summary>
            <param name="virtualPath">The virtual path.</param>
            <returns>The <see cref="T:System.String"/>.</returns>
        </member>
        <member name="M:InSite.Model.Services.PathProvider.ResetToDefault">
            <summary>The reset to default.</summary>
        </member>
        <member name="P:InSite.Model.Services.PathProvider.Current">
            <summary>Gets or sets the current.</summary>
        </member>
        <member name="T:InSite.Model.Services.MockPathProvider">
            <summary>The mock path provider.</summary>
        </member>
        <member name="M:InSite.Model.Services.MockPathProvider.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:InSite.Model.Services.MockPathProvider"/> class.</summary>
            <param name="basePath">The base path.</param>
        </member>
        <member name="M:InSite.Model.Services.MockPathProvider.MapPath(System.String)">
            <summary>The map path.</summary>
            <param name="virtualPath">The virtual path.</param>
            <returns>The <see cref="T:System.String"/>.</returns>
        </member>
        <member name="T:InSite.Model.Services.DefaultPathProvider">
            <summary>The default path provider.</summary>
        </member>
        <member name="M:InSite.Model.Services.DefaultPathProvider.MapPath(System.String)">
            <summary>The map path.</summary>
            <param name="virtualPath">The virtual path.</param>
            <returns>The <see cref="T:System.String"/>.</returns>
        </member>
        <member name="T:InSite.Model.Services.EmailTemplateService">
            <summary>Service to provided basic functionality around <see cref="T:InSite.Model.EmailTemplate"/> (retrieval, parsing).</summary>
        </member>
        <member name="F:InSite.Model.Services.EmailTemplateService.UnitOfWork">
            <summary>The <see cref="F:InSite.Model.Services.EmailTemplateService.UnitOfWork"/>.</summary>
        </member>
        <member name="M:InSite.Model.Services.EmailTemplateService.#ctor(InSite.Model.Interfaces.IUnitOfWorkFactory)">
            <summary>Initializes a new instance of the <see cref="T:InSite.Model.Services.EmailTemplateService"/> class.</summary>
            <param name="unitOfWorkFactory">The unit of work factory.</param>
        </member>
        <member name="M:InSite.Model.Services.EmailTemplateService.GetEmailTemplate(System.String)">
            <summary>Finds the html template to use.</summary>
            <param name="templateName">The name of the email template.</param>
            <returns>The <see cref="T:InSite.Model.EmailTemplate"/> corresponding to the provided name.</returns>
            <exception cref="T:System.ArgumentException">Thrown if not template is found in the DB or on disk.</exception>
        </member>
        <member name="M:InSite.Model.Services.EmailTemplateService.ParseTemplate(System.String,System.Dynamic.ExpandoObject,System.String)">
            <summary>Parse the template represented by the <paramref name="template"/> using the given <paramref name="model"/> parameter</summary>
            <param name="template">A template in string form that uses Razor syntax</param>
            <param name="model">An <see cref="T:System.Dynamic.ExpandoObject"/> that represents the model for the email.</param>
            <param name="templateName">template name for caching (required for good performance)</param>
            <returns>Parsed template</returns>
        </member>
        <member name="M:InSite.Model.Services.EmailTemplateService.GetTemplatePath(System.String)">
            <summary>Retrieves the path to find the email template on disk.</summary>
            <param name="templateName">The name of the email template.</param>
            <returns>The path to the expected location of the email template.</returns>
        </member>
        <member name="T:InSite.Model.Services.GeocoderProvider.GeocoderProvider_FreeGeoip">
            <summary>
            GeocodeProvider_FreeGeoip - the freegeoip.net GeocoderProvider implementation.
            </summary>
        </member>
        <member name="M:InSite.Model.Services.GeocoderProvider.GeocoderProvider_FreeGeoip.Geocode(System.String)">
            <summary>
            Find lat/long coordinate from a string containing a IP address.
            </summary>
            <param name="address">Address string (IP or hostname) string to geocode.</param>
            <returns><see cref="T:InSite.Model.LocationDto"/> lat/long point corresponding to the physical address.</returns>
        </member>
        <member name="M:InSite.Model.Services.GeocoderProvider.GeocoderProvider_FreeGeoip.ParseGeocode(System.String)">
            <summary>
            Parses the JSON returned from freegeoip.net geocoding service.
            </summary>
            <param name="json">JSON to parse and find lat/long.</param>
            <returns><see cref="T:InSite.Model.LocationDto"/> point corresponding to the IP address or hostname.</returns>
        </member>
        <member name="M:InSite.Model.Services.GeocoderProvider.GeocoderProvider_FreeGeoip.BuildGeocodeUrl(System.String)">
            <summary>
            Builds the freegeoip.net Geocode URL.
            </summary>
            <param name="address">Address string (IP or hostname) to encode in the URL for FreeGeoip to geocode.</param>
            <returns>Geocode URL to process.</returns>
        </member>
        <member name="T:InSite.Model.Services.GeocoderProvider.GeocoderProvider_Google">
            <summary>
            GeocodeProvider_Google - the Google GeocoderProvider implementation.
            </summary>
        </member>
        <member name="M:InSite.Model.Services.GeocoderProvider.GeocoderProvider_Google.Geocode(System.String)">
            <summary>
            Find lat/long coordinate from a string containing a physical address using Google's Geocoding API.
            </summary>
            <param name="address">Physical address string to geocode.</param>
            <returns><see cref="T:InSite.Model.LocationDto"/> lat/long point corresponding to the physical address.</returns>
        </member>
        <member name="M:InSite.Model.Services.GeocoderProvider.GeocoderProvider_Google.ParseGeocode(System.String)">
            <summary>
            Parses the JSON returned from Google's geocoding service.
            </summary>
            <param name="json">JSON to parse and find lat/long.</param>
            <returns><see cref="T:InSite.Model.LocationDto"/> point corresponding to the address.</returns>
        </member>
        <member name="M:InSite.Model.Services.GeocoderProvider.GeocoderProvider_Google.BuildGeocodeUrl(System.String)">
            <summary>
            Builds the Google Maps Geocode URL.
            </summary>
            <param name="address">Address string to encode in the URL for Google to geocode.</param>
            <returns>Geocode URL to process.</returns>
        </member>
        <member name="T:InSite.Model.Services.CustomerNumberProvider">
            <summary>
            Standard implementation to generate Customer Numbers and Customer Sequences.
            </summary>
        </member>
        <member name="M:InSite.Model.Services.CustomerNumberProvider.#ctor(InSite.Model.Interfaces.IUnitOfWork,InSite.Model.Interfaces.ICurrentWebSiteProvider)">
            <summary>
            Dependency Injection Constructor.
            </summary>
            <param name="unitOfWork"></param>
            <param name="currentWebSiteProvider"></param>
        </member>
        <member name="M:InSite.Model.Services.CustomerNumberProvider.GetNextCustomerNumber(System.String,System.String)">
            <summary>
            Get the next Customer Number, if prefix and format are passed in, it will get the next number
            based on looking at the current data.  If they are not passed in, it uses an internal sequence
            to generate the next number and the current WebSite.CustomerNumberPrefix and WebSite.CustomerNumberFormat.
            </summary>
            <param name="prefix">Optional Prefix for the Customer Number.</param>
            <param name="format">Optional Format for the Customer Number.</param>
            <returns>The next Customer Number.</returns>
        </member>
        <member name="M:InSite.Model.Services.CustomerNumberProvider.GetNextCustomerSequence(System.String)">
            <summary>
            Gets the next Customer Sequence for the supplied Customer Number. Uses ApplicationSettings 
            ERP_ShipToPrefix and ERP_ShipToFormat to format the value.
            </summary>
            <param name="customerNumber">Customer Number to get next Sequence for.</param>
            <returns>The next Customer Sequence.</returns>
        </member>
        <member name="P:InSite.Model.Services.CustomerNumberProvider.CustomerNumberPrefix">
            <summary>
            Returns the <see cref="P:InSite.Model.Services.CustomerNumberProvider.CustomerNumberPrefix">CustomerNumberPrefix</see> defined in the Current <see cref="T:InSite.Model.WebSite">WebSite</see>
            </summary>
        </member>
        <member name="P:InSite.Model.Services.CustomerNumberProvider.CustomerNumberFormat">
            <summary>
            Returns the <see cref="P:InSite.Model.Services.CustomerNumberProvider.CustomerNumberFormat">CustomerNumberFormat</see> defined in the Current <see cref="T:InSite.Model.WebSite">WebSite</see>
            </summary>
        </member>
        <member name="P:InSite.Model.Services.CustomerNumberProvider.CustomerSequencePrefix">
            <summary>
            Returns the <see cref="P:InSite.Model.Services.CustomerNumberProvider.CustomerSequencePrefix">CustomerSequencePrefix</see>
            </summary>
        </member>
        <member name="P:InSite.Model.Services.CustomerNumberProvider.CustomerSequenceFormat">
            <summary>
            Returns the <see cref="P:InSite.Model.Services.CustomerNumberProvider.CustomerSequenceFormat">CustomerSequenceFormat</see>
            </summary>
        </member>
        <member name="T:InSite.Model.Services.CustomerOrderState.CustomerOrderStateAwaitingApproval">
            <summary>
            Concrete implementation of CustomerOrderState for Orders Awaiting Approval.
            </summary>
        </member>
        <member name="P:InSite.Model.Services.CustomerOrderState.CustomerOrderStateAwaitingApproval.AllowCurrencyConversion">
            <summary>
            Implementation of the <see cref="P:InSite.Model.Interfaces.ICustomerOrderState.AllowCurrencyConversion"/> contract.
            </summary>
            <returns></returns>
        </member>
        <member name="T:InSite.Model.Services.CustomerOrderState.CustomerOrderStatePunchOut">
            <summary>
            Concrete implementation of CustomerOrderState for PunchOut Orders.
            </summary>
        </member>
        <member name="T:InSite.Model.Services.CustomerOrderState.CustomerOrderStateCart">
            <summary>
            The State Object that handles the <see cref="T:InSite.Model.CustomerOrder"/> methods when the <see cref="T:InSite.Model.CustomerOrder"/> is in the Status of Cart
            </summary>
        </member>
        <member name="M:InSite.Model.Services.CustomerOrderState.CustomerOrderStateCart.SetCustomer(InSite.Model.Customer)">
            <summary>Set <see cref="P:InSite.Model.CustomerOrder.Customer"/> delegate.</summary>
            <param name="value"><see cref="T:InSite.Model.Customer"/> to set the <see cref="P:InSite.Model.CustomerOrder.Customer"/> to.</param>
        </member>
        <member name="M:InSite.Model.Services.CustomerOrderState.CustomerOrderStateCart.SetShipToCustomer(InSite.Model.Customer)">
            <summary>Set <see cref="P:InSite.Model.CustomerOrder.ShipTo"/> delegate.</summary>
            <param name="value"><see cref="T:InSite.Model.Customer"/> to set the <see cref="P:InSite.Model.CustomerOrder.ShipTo"/> to.</param>
        </member>
        <member name="P:InSite.Model.Services.CustomerOrderState.CustomerOrderStateCart.AllowCurrencyConversion">
            <summary>
            Determine if an order is eligible for pricing currency conversions.
            </summary>
        </member>
        <member name="T:InSite.Model.Services.CustomerOrderState.CustomerOrderStateSaved">
            <summary>
            Concrete implementation of CustomerOrderState for saved orders
            </summary>
        </member>
        <member name="T:InSite.Model.Services.DefaultCustomerProvider_Generic">
            <summary>
            Default implementation to provide the default <see cref="T:InSite.Model.Customer"/> and available <see cref="T:InSite.Model.Customer"/>s
            </summary>
        </member>
        <member name="F:InSite.Model.Services.DefaultCustomerProvider_Generic.UnitOfWork">
            <summary>
            protected <see cref="T:InSite.Model.Interfaces.IUnitOfWork"/> to consume for persistance.
            </summary>
        </member>
        <member name="M:InSite.Model.Services.DefaultCustomerProvider_Generic.#ctor(InSite.Model.Interfaces.IUnitOfWork)">
            <summary>Initializes a new instance of the <see cref="T:InSite.Model.Services.DefaultCustomerProvider_Generic"/> class. Constructor</summary>
            <param name="unitOfWork"><see cref="T:InSite.Model.Interfaces.IUnitOfWork"/> to offer factory creation of <see cref="T:InSite.Model.Interfaces.Repositories.IRepository`1"/>.</param>
        </member>
        <member name="M:InSite.Model.Services.DefaultCustomerProvider_Generic.GetDefaultCustomer(InSite.Model.WebSite,InSite.Model.UserProfile)">
            <summary>Method to return the default <see cref="T:InSite.Model.Customer"/> for a given <see cref="T:InSite.Model.UserProfile"/></summary>
            <param name="webSite"><see cref="T:InSite.Model.WebSite"/> to query.</param>
            <param name="userProfile" type="UserProfile"></param>
            <returns>Default <see cref="T:InSite.Model.Customer"/> if found, otherwise null</returns>
        </member>
        <member name="M:InSite.Model.Services.DefaultCustomerProvider_Generic.GetAvailableCustomers(InSite.Model.WebSite,InSite.Model.UserProfile)">
            <summary>Method to return the available <see cref="T:InSite.Model.Customer"/>s for a given <see cref="T:InSite.Model.UserProfile"/></summary>
            <param name="webSite"><see cref="T:InSite.Model.WebSite"/> to query.</param>
            <param name="userProfile" type="UserProfile">UserProfile to get available customers for.</param>
            <returns>IList of available <see cref="T:InSite.Model.Customer"/>s (possibly empty)</returns>
        </member>
        <member name="M:InSite.Model.Services.DefaultCustomerProvider_Generic.GetAvailableCustomerCount(InSite.Model.WebSite,InSite.Model.UserProfile)">
            <summary>Optimized method to Get the number of available <see cref="T:InSite.Model.Customer"/>s</summary>
            <param name="webSite">The web Site.</param>
            <param name="userProfile">The user Profile.</param>
            <returns>The <see cref="T:System.Int32"/>.</returns>
        </member>
        <member name="M:InSite.Model.Services.DefaultCustomerProvider_Generic.GetSalesPersons(InSite.Model.Salesperson)">
            <summary>The sales person ids.</summary>
            <param name="salesPerson">The sales person.</param>
        </member>
        <member name="T:InSite.Model.Services.DefaultShipToProvider_Generic">
            <summary>
            Default implementation to provide the default ShipTo <see cref="T:InSite.Model.Customer"/> and available ShipTo <see cref="T:InSite.Model.Customer"/>s
            </summary>
        </member>
        <member name="F:InSite.Model.Services.DefaultShipToProvider_Generic.UnitOfWork">
            <summary>The unit of work.</summary>
        </member>
        <member name="M:InSite.Model.Services.DefaultShipToProvider_Generic.#ctor(InSite.Model.Interfaces.IUnitOfWork)">
            <summary>Initializes a new instance of the <see cref="T:InSite.Model.Services.DefaultShipToProvider_Generic"/> class. Constructor</summary>
            <param name="unitOfWork"><see cref="T:InSite.Model.Interfaces.IUnitOfWork"/> to offer factory creation of <see cref="T:InSite.Model.Interfaces.Repositories.IRepository`1"/>.</param>
        </member>
        <member name="M:InSite.Model.Services.DefaultShipToProvider_Generic.GetDefaultShipTo(InSite.Model.WebSite,InSite.Model.UserProfile,InSite.Model.Customer,System.Boolean)">
            <summary>Returns the default ShipTo <see cref="T:InSite.Model.Customer"/> for the <see cref="T:InSite.Model.UserProfile"/> and BillTo <see cref="T:InSite.Model.Customer"/></summary>
            <param name="webSite">The web Site.</param>
            <param name="userProfile">The user Profile.</param>
            <param name="billTo">The bill To.</param>
            <param name="includeBillTo">Include bill to customer (if AllowBillToAddressForShipping is true.)</param>
            <returns>Default ShipTo <see cref="T:InSite.Model.Customer"/> if found, otherwise null</returns>
        </member>
        <member name="M:InSite.Model.Services.DefaultShipToProvider_Generic.GetAvailableShipTos(InSite.Model.WebSite,InSite.Model.UserProfile,InSite.Model.Customer,System.Boolean)">
            <summary>
            Returns the ShipTo <see cref="T:InSite.Model.Customer"/>s available to the <see cref="T:InSite.Model.UserProfile"/> for the BillTo <see cref="T:InSite.Model.Customer"/>.
            This differs from the assigned ShipTos because a User that has no assigned ShipTos has all of the ShipTos available to them.
            </summary>
            <param name="webSite">The web Site.</param>
            <param name="userProfile">The user Profile.</param>
            <param name="billTo">The bill To.</param>
            <param name="includeBillto">Include bill to customer (if AllowBillToAddressForShipping is true.)</param>
            <returns>IList of available ShipTo <see cref="T:InSite.Model.Customer"/>s (possibly empty)</returns>
        </member>
        <member name="M:InSite.Model.Services.DefaultShipToProvider_Generic.GetAvailableShipToCount(InSite.Model.WebSite,InSite.Model.UserProfile,InSite.Model.Customer,System.Boolean)">
            <summary>
            Returns the count of the ShipTo <see cref="T:InSite.Model.Customer"/>s available to the <see cref="T:InSite.Model.UserProfile"/> for the BillTo <see cref="T:InSite.Model.Customer"/>.
            This differs from the assigned ShipTos because a User that has no assigned ShipTos has all of the ShipTos available to them.
            </summary>
            <param name="webSite">The web Site.</param>
            <param name="userProfile">The user Profile.</param>
            <param name="billTo">The bill To.</param>
            <param name="includeBillTo">Include bill to customer (if AllowBillToAddressForShipping is true.)</param>
            <returns>Number of available ShipTO Customers.</returns>
        </member>
        <member name="M:InSite.Model.Services.DefaultShipToProvider_Generic.GetAssignedShipTos(InSite.Model.WebSite,InSite.Model.UserProfile,InSite.Model.Customer)">
            <summary>
            Returns only the ShipTo <see cref="T:InSite.Model.Customer"/>s assigned to the <see cref="T:InSite.Model.UserProfile"/> for the BillTo <see cref="T:InSite.Model.Customer"/>.
            This differs from the available ShipTos because a User that has no assigned ShipTos has all of the ShipTos available to them.
            </summary>
            <param name="webSite">The web site.</param>
            <param name="userProfile">The user profile.</param>
            <param name="billTo">The bill to.</param>
            <returns>The <see cref="T:System.Linq.IQueryable"/>.</returns>
        </member>
        <member name="M:InSite.Model.Services.DefaultShipToProvider_Generic.GetAssignedShipToCount(InSite.Model.WebSite,InSite.Model.UserProfile,InSite.Model.Customer)">
            <summary>
            Returns the count of the ShipTo <see cref="T:InSite.Model.Customer"/>s assigned to the <see cref="T:InSite.Model.UserProfile"/> for the BillTo <see cref="T:InSite.Model.Customer"/>.
            This differs from the available ShipTos because a User that has no assigned ShipTos has all of the ShipTos available to them.
            </summary>
            <param name="webSite">The web site.</param>
            <param name="userProfile">The user profile.</param>
            <param name="billTo">The bill to.</param>
            <returns>The <see cref="T:System.Int32"/>.</returns>
        </member>
        <member name="T:InSite.Model.Services.CurrentShipToProvider_Generic">
            <summary>
            Default implementation to provide the Current ShipTo.
            </summary>
        </member>
        <member name="M:InSite.Model.Services.CurrentShipToProvider_Generic.GetCurrentShipTo">
            <summary>
            Returns the current ShipTo
            </summary>
        </member>
        <member name="M:InSite.Model.Services.CurrentShipToProvider_Generic.SetCurrentShipTo(InSite.Model.Customer)">
            <summary>
            Sets the value of the current ShipTo
            </summary>
        </member>
        <member name="T:InSite.Model.Services.CurrentCustomerProvider_Generic">
            <summary>
            Generic implementation of ICurrentCustomerProvider
            </summary>
        </member>
        <member name="M:InSite.Model.Services.CurrentCustomerProvider_Generic.GetCurrentCustomer">
            <summary>
            Returns the Current Customer
            </summary>
        </member>
        <member name="M:InSite.Model.Services.CurrentCustomerProvider_Generic.SetCurrentCustomer(InSite.Model.Customer)">
            <summary>
            Sets the Current Customer
            </summary>
            <param name="customer"></param>
        </member>
        <member name="T:InSite.Model.Services.CurrentUserProfileProvider_Generic">
            <summary>
            Default implementation of ICurrentUserProvider
            </summary>
        </member>
        <member name="M:InSite.Model.Services.CurrentUserProfileProvider_Generic.GetCurrentUserProfile(System.String)">
            <summary>
            Returns UserProfile based on IPrincipal
            </summary>
            <returns></returns>
        </member>
        <member name="M:InSite.Model.Services.CurrentUserProfileProvider_Generic.SetCurrentUserProfile(InSite.Model.UserProfile)">
            <summary>
            Sets the current UserProfile
            </summary>
            <param name="userProfile"></param>
        </member>
        <member name="T:InSite.Model.Services.CurrentWebSiteProvider_Generic">
            <summary>
            Default implementation to provide the current WebSite.
            </summary>
        </member>
        <member name="M:InSite.Model.Services.CurrentWebSiteProvider_Generic.#ctor(InSite.Model.Interfaces.IUnitOfWorkFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:InSite.Model.Services.CurrentWebSiteProvider_Generic"/> class.
            </summary>
            <param name="unitOfWorkFactory">The unit of work factory.</param>
        </member>
        <member name="M:InSite.Model.Services.CurrentWebSiteProvider_Generic.GetCurrentWebSite">
            <summary>
            Returns the value of the current WebSite
            </summary>
            <returns></returns>
        </member>
        <member name="M:InSite.Model.Services.CurrentWebSiteProvider_Generic.SetCurrentWebSite(InSite.Model.WebSite)">
            <summary>
            Sets the value of the current WebSite
            </summary>
            <param name="webSite"></param>
        </member>
        <member name="P:InSite.Model.Services.CurrentWebSiteProvider_Generic.CurrentContextModel.LanguageId">
            <summary>Gets or sets the language id.</summary>
        </member>
        <member name="P:InSite.Model.Services.CurrentWebSiteProvider_Generic.CurrentContextModel.CurrencyId">
            <summary>Gets or sets the currency id.</summary>
        </member>
        <member name="P:InSite.Model.Services.CurrentWebSiteProvider_Generic.CurrentContextModel.BillToId">
            <summary>Gets or sets the bill to id.</summary>
        </member>
        <member name="P:InSite.Model.Services.CurrentWebSiteProvider_Generic.CurrentContextModel.ShipToId">
            <summary>Gets or sets the ship to id.</summary>
        </member>
        <member name="P:InSite.Model.Services.CurrentWebSiteProvider_Generic.CurrentContextModel.PageUrl">
            <summary>Gets or sets the page url.</summary>
        </member>
        <member name="T:InSite.Model.Services.CustomerOrderState.CustomerOrderStateFactory">
            <summary>
            Concrete implementation of the <see cref="T:InSite.Model.Interfaces.ICustomerOrderStateFactory"/>.  The implemented classes responsibility is to implement
            a factory that can return <see cref="T:InSite.Model.Interfaces.ICustomerOrderState"/> for a <see cref="T:InSite.Model.CustomerOrder"/>.
            </summary>
        </member>
        <member name="F:InSite.Model.Services.CustomerOrderState.CustomerOrderStateFactory.ServiceLocator">
            <summary>The service locator.</summary>
        </member>
        <member name="M:InSite.Model.Services.CustomerOrderState.CustomerOrderStateFactory.#ctor(Microsoft.Practices.ServiceLocation.IServiceLocator)">
            <summary>
            Initializes a new instance of the <see cref="T:InSite.Model.Services.CustomerOrderState.CustomerOrderStateFactory"/> class.
            </summary>
            <param name="serviceLocator">The service locator.</param>
        </member>
        <member name="M:InSite.Model.Services.CustomerOrderState.CustomerOrderStateFactory.GetCustomerOrderState(InSite.Model.CustomerOrder)">
            <summary>
            Creates a new instances of <see cref="T:InSite.Model.Interfaces.ICustomerOrderState"/> by resolving all <see cref="T:InSite.Model.Interfaces.ICustomerOrderState"/>'s in IOC container
            and matching based on CustomerOrder.Status equals <see cref="T:InSite.Model.Interfaces.ICustomerOrderState"/>.CustomerOrderStatus.
            </summary>
            <param name="customerOrder">The <see cref="T:InSite.Model.CustomerOrder"/> to get a <see cref="T:InSite.Model.Interfaces.ICustomerOrderState"/> for.</param>
            <returns>A new instance of an object that implements <see cref="T:InSite.Model.Interfaces.ICustomerOrderState"/></returns>
        </member>
        <member name="T:InSite.Model.Services.CustomerOrderState.CustomerOrderStateNull">
            <summary>
            If a State Object is not found for the <see cref="T:InSite.Model.CustomerOrder"/>, return the Null State Object that does nothing
            </summary>
        </member>
        <member name="T:InSite.Model.Services.CustomerOrderState.CustomerOrderStatePunchOutOrderRequest">
            <summary>
            Concrete implementation of CustomerOrderState for PunchOut Orders.
            </summary>
        </member>
        <member name="M:InSite.Model.Services.CustomerOrderState.CustomerOrderStatePunchOutOrderRequest.AddOrderLine(InSite.Model.OrderLine)">
            <summary>Add an OrderLine to the OrderLines collection</summary>
            <param name="value">The OrderLine to be added</param>
            <remarks>If the collection already contains the value it is silently ignored. If DataStoreSingleton.BatchUpdate is set to true, the OrderLine is added to
            the collection and no further processing takes place.
            The default values being set when adding the <see cref="T:InSite.Model.OrderLine"/> are <see cref="P:InSite.Model.OrderLine.WebSite"/> from the <see cref="P:InSite.Model.CustomerOrder.WebSite"/> and
            the <see cref="P:InSite.Model.OrderLine.ShipSite"/> is set from the <see cref="P:InSite.Model.WebSite.DefaultShipSite"/> if the <see cref="P:InSite.Model.CustomerOrder.WebSite"/> is not null,
            if the <see cref="P:InSite.Model.CustomerOrder.WebSite"/> is null we set <see cref="P:InSite.Model.OrderLine.WebSite"/> from <see cref="P:InSite.Model.WebSite.Current"/> and the<see cref="P:InSite.Model.OrderLine.ShipSite"/> from <see cref="P:InSite.Model.WebSite.Current"/>'s <see cref="P:InSite.Model.WebSite.DefaultShipSite"/>.
            We set <see cref="P:InSite.Model.OrderLine.TaxCode1"/> from the <see cref="P:InSite.Model.CustomerOrder.TaxCode1"/> and we set <see cref="P:InSite.Model.OrderLine.TaxCode2"/> from the<see cref="P:InSite.Model.CustomerOrder.TaxCode2"/>. We set the <see cref="P:InSite.Model.OrderLine.Warehouse"/> to the value from the <see cref="P:InSite.Model.CustomerOrder.DefaultWarehouse"/>.
            We try to update the <see cref="P:InSite.Model.OrderLine.ShipSite"/> if we can return a <see cref="T:InSite.Model.Warehouse"/> that has the <see cref="P:InSite.Model.Warehouse.Name"/> that matches
            the <see cref="P:InSite.Model.CustomerOrder.DefaultWarehouse"/>'s <see cref="P:InSite.Model.Warehouse.Name"/>.
            we then set the <see cref="P:InSite.Model.OrderLine.Release"/> to the value from an <see cref="T:InSite.Model.ApplicationSetting"/> who's <see cref="P:InSite.Model.ApplicationSetting.Name"/> is
            'ReleaseForNewOrderLines'.</remarks>
        </member>
        <member name="M:InSite.Model.Services.CustomerOrderState.CustomerOrderStatePunchOutOrderRequest.CalculateHandling">
            <summary>
            Implementation of the <see cref="M:InSite.Model.Interfaces.ICustomerOrderState.CalculateHandling"/> contract.
            </summary>
        </member>
        <member name="M:InSite.Model.Services.CustomerOrderState.CustomerOrderStatePunchOutOrderRequest.SetCustomer(InSite.Model.Customer)">
            <summary>Bill To Customer of the CustomerOrder
            Setting the Customer also sets the CustomerNumber, PriceCode, CurrencyCode
            TermsCode, the BT* fields on the CustomerOrder and if the ShipTo is null or AbandonedCart, it will be set as well</summary>
            <param name="value"><see cref="T:InSite.Model.Customer"/> to set the <see cref="T:InSite.Model.CustomerOrder"/> Billing fields to.</param>
        </member>
        <member name="P:InSite.Model.Services.CustomerOrderState.CustomerOrderStatePunchOutOrderRequest.AllowCurrencyConversion">
            <summary>
            Determine if an order is eligible for pricing currency conversions.
            </summary>
        </member>
        <member name="T:InSite.Model.Services.DeviceTypeProvider_Dummy">
            <summary>
            Dummy for use when InSite.Mvc is not available that always returns <see cref="F:InSite.Model.Interfaces.DeviceType.Desktop"/>.
            </summary>
        </member>
        <member name="M:InSite.Model.Services.DeviceTypeProvider_Dummy.UserAgentToDeviceType(System.String)">
            <summary>
            Always returns DeviceType.Desktop.
            </summary>
            <param name="userAgent"></param>
            <returns></returns>
        </member>
        <member name="T:InSite.Model.DynamicCrossSellProvider_Generic">
            <summary>Provides Dynamic CrossSell list</summary>
        </member>
        <member name="T:InSite.Model.IDynamicCrossSellProvider">
            <summary>Implement this interface to provide Product Dynamic CrossSell logic.  The IDynamicCrossSellProvider implementation is called from the Product.GetDynamicCrossSells() method.</summary>
        </member>
        <member name="M:InSite.Model.IDynamicCrossSellProvider.GetDynamicCrossSells(InSite.Model.Product,System.Int32,System.Boolean)">
            <summary>Returns an IList of ProductInfo objects that represent the Dynamic CrossSells associated with the Product.</summary>
            <param name="product">The Product that you are getting the Dynamic CrossSells for.</param>
            <param name="count">The number of Dynamic CrossSells to retrieve.</param>
            <param name="checkCategory">Verify whether the Dynamic CrossSells are associated with an active Category.</param>
            <returns>An IList of ProductInfo objects that represent the Dynamic CrossSells associated with the Product.</returns>
        </member>
        <member name="M:InSite.Model.DynamicCrossSellProvider_Generic.#ctor(InSite.Model.Interfaces.IUnitOfWork)">
            <summary>
            Constructor with IUnitOfWork injected from IOC container
            </summary>
            <param name="unitOfWork"></param>
        </member>
        <member name="M:InSite.Model.DynamicCrossSellProvider_Generic.GetDynamicCrossSells(InSite.Model.Product,System.Int32,System.Boolean)">
            <summary>Get a list of ProductInfos that have been purchased with the Product specified ordered by the most purchased first</summary>
            <param name="product">Product to return also purchased ProductInfos</param>
            <param name="count">Number of ProductInfos to return</param>
            <param name="checkCategory">True to check to make sure the also purchased ProductInfos are in an active Category</param>
            <returns>IList of ProductInfos</returns>
        </member>
        <member name="M:InSite.Model.EmailList.AddEmailSubscriber(InSite.Model.EmailSubscriber)">
            <summary>
            Add an email to the subscribers of this email list.
            </summary>
            <param name="value">The EmailSubsciber to be added to the email list.</param>
        </member>
        <member name="M:InSite.Model.EmailList.RemoveEmailSubscriber(InSite.Model.EmailSubscriber)">
            <summary>
            Remove an email from the subscribers of this list.
            </summary>
            <param name="value">The EmailSubscriber to be removed from the email list.</param>
        </member>
        <member name="P:InSite.Model.EmailList.EmailSubscribers">
            <summary>
            Gets or Sets <see cref="T:InSite.Model.EmailSubscriber"/>'s for the Email List
            </summary>
            <remarks>
            Get returns <see cref="T:InSite.Model.ChildList`1"/> of <see cref="T:InSite.Model.EmailSubscriber"/>'s to prevent direct manipulation of list and list items and enforces using the Model objects methods for List manipulation
            </remarks>
        </member>
        <member name="P:InSite.Model.EmailTemplate.HtmlContent">
            <summary>Gets ContentManager.CurrentContent.HtmlContent, standard field for Content Management used throughout the system</summary>
        </member>
        <member name="P:InSite.Model.EmailTemplate.ContentManager">
            <summary>The ContentManager manages the Content</summary>
        </member>
        <member name="P:InSite.Model.Content.Type">
            <summary>Gets or sets Type</summary>
        </member>
        <member name="P:InSite.Model.Content.Name">
            <summary>Gets or sets Name</summary>
        </member>
        <member name="P:InSite.Model.Content.HtmlContent">
            <summary>Gets or sets HtmlContent</summary>
        </member>
        <member name="P:InSite.Model.Content.SubmittedForApprovalOn">
            <summary>Gets or sets SubmittedForApprovalOn</summary>
        </member>
        <member name="P:InSite.Model.Content.ApprovedOn">
            <summary>Gets or sets ApprovedOn</summary>
        </member>
        <member name="P:InSite.Model.Content.PublishToProductionOn">
            <summary>Gets or sets PublishToProductionOn</summary>
        </member>
        <member name="P:InSite.Model.Content.CreatedByUser">
            <summary>Gets or sets CreatedBy</summary>
        </member>
        <member name="P:InSite.Model.Content.CreatedByUserName">
            <summary>Gets or sets CreatedByUserName</summary>
        </member>
        <member name="P:InSite.Model.Content.ApprovedByUser">
            <summary>Gets or sets ApprovedByUser</summary>
        </member>
        <member name="P:InSite.Model.Content.ApprovedByUserName">
            <summary>Gets or sets ApprovedByUserName</summary>
        </member>
        <member name="P:InSite.Model.Content.ContentManager">
            <summary>Gets or sets ContentManager</summary>
        </member>
        <member name="P:InSite.Model.Content.Revision">
            <summary>Gets or sets Revision</summary>
        </member>
        <member name="P:InSite.Model.Content.DeviceType">
            <summary>Gets or sets DeviceType for this content</summary>
        </member>
        <member name="P:InSite.Model.Content.Persona">
            <summary>Gets or sets Persona</summary>
        </member>
        <member name="P:InSite.Model.Content.Language">
            <summary>Gets or sets the language.</summary>
        </member>
        <member name="P:InSite.Model.Content.LanguageCode">
            <summary>Gets or sets the language code (used for the Management Console).</summary>
        </member>
        <member name="P:InSite.Model.AttributeType.Label">
            <summary>
            Displayable name of the Attribute (supports translation)
            </summary>
        </member>
        <member name="P:InSite.Model.AttributeType.IsFilter">
            <summary>
            Indicates whether this attribute is included in filtering.
            </summary>
        </member>
        <member name="P:InSite.Model.AttributeType.IsComparable">
            <summary>
             Indicates whether this attribute can be used in product comparisons.
            </summary>
        </member>
        <member name="P:InSite.Model.AttributeValue.ValueDisplay">
            <summary>
            Display text for this AttributeValue (supports translation)
            </summary>
        </member>
        <member name="P:InSite.Model.GiftCard.Currency">
            <summary>
            <see cref="P:InSite.Model.GiftCard.Currency"/> that was used when purchasing the card.
            </summary>        
        </member>
        <member name="P:InSite.Model.GiftCard.CurrencyCode">
            <summary>
            <see cref="P:InSite.Model.GiftCard.Currency"/>.CurrencyCode that was used when purchasing the card.
            </summary>
        </member>
        <member name="P:InSite.Model.GiftCard.ConversionRate">
            <summary>
            Rate in effect when the card was issued.
            </summary>
        </member>
        <member name="P:InSite.Model.GiftCard.CurrencyAmount">
            <summary>
            Amount in the alternate currency.
            </summary>
        </member>
        <member name="P:InSite.Model.GiftCard.GiftCardType">
            <summary>
            Gets or sets the type of the gift card.
            </summary>
            <value>
            The type of the gift card.
            </value>
        </member>
        <member name="P:InSite.Model.GiftCard.PIN">
            <summary>
            Gets or sets the PIN (Personal Identification Number).
            </summary>
            <value>
            The pin.
            </value>
        </member>
        <member name="P:InSite.Model.GiftCardTransaction.CurrencyAmount">
            <summary>
            Amount of the transaction in the foreign currency of the card being used.
            </summary>        
        </member>
        <member name="T:InSite.Model.IBuildEmailValues">
            <summary>Implement this interface to customize behavior of order confirmation and shipment confirmation emails.</summary>
            <remarks>
            	<para>The default implementation of the CustomerOrderProcessor is used by the framework to submit orders.  One of the responsibilities of the
            CustomerOrderProcessor is to send Order confirmation emails. To accomplish this it consumes both the BuildOrderEmailValues and BuildOrderEmailToList
            methods.</para>
            	<para>
            		<br/>
            The default implementation of the ShipmentRefresh will send shipment confirmation emails at the time shipments are refreshed. To accomplish this it consumes
            both the BuildShipmentEmailValues and BuildShipmentEmailToList methods.<br/></para>
            </remarks>
        </member>
        <member name="M:InSite.Model.IBuildEmailValues.BuildOrderEmailToList(InSite.Model.CustomerOrder)">
            <summary>Populates a comma delimited string that represents the email addresses that the outgoing Order Confirmation email should be sent to.</summary>
            <param name="customerOrder">The order that was placed for which the Order Confirmation emails should be sent.</param>
            <returns>A comma delimited string that represents the email addresses that the outgoing Order Submittal email should be sent to.</returns>
        </member>
        <member name="M:InSite.Model.IBuildEmailValues.BuildShipmentEmailToList(InSite.Model.Shipment)">
            <summary>Populates a comma delimited string that represents the email addresses that the outgoing Shipment Confirmation email should be sent to.</summary>
            <param name="shipment">The shipment that was sent for which the Shipment Confirmation emails should be sent.</param>
            <returns>A comma delimited string that represents the email addresses that the outgoing Shipment Confirmation email should be sent to.</returns>
        </member>
        <member name="T:InSite.Model.IProductSearchIndexer">
            <summary>Implement the IProductSearchIndexer interface along with <see cref="T:InSite.Model.IProductSearchProvider">IProductSearchProvider Interface</see> to provide enhanced
            Product Search functionality</summary>
            <remarks>
            	<para>The standard implementations include a Lucene implementation InSite.Plugins.ProductSearchIndexer_Generic and a Solr implementation
            InSite.Domain.ProductSearchIndexer_Solr. The IProductSearchIndexer works hand-in-hand with the IProductSearchProvider where the IProductSearchIndexer indexes
            the data you want to be able to search and the IProductSearchProvider then queries that data. In the Solr implementation, the IProductSearchIndexer is gathering all of the Product related data and posting it in to the Solr
            instance and the IProductSearchProvider is querying the Solr instance when you browse the Product Catalog or search. In the Lucene implementation,
            data index data is stored locally on the server</para>
            	<para>IProductSearchIndexer.BuildProductSearchIndex is called by a ScheduledTask. To set up a ScheduledTask to call the ProductSearchIndexer, create a new
            ScheduledTask in the Management Console in Tools -&gt; Scheduled Tasks. Set the type to ExecuteQuery and set the Parameter to BuildProductSearchIndex and then
            set the MinuteInterval to specify how often you want the Products to be re-indexed, for example, every 60 minutes.</para>
            </remarks>
            <seealso cref="T:InSite.Model.IProductSearchProvider"></seealso>
        </member>
        <member name="M:InSite.Model.IProductSearchIndexer.Initialize(System.Object)">
            <summary>Call this method at start up for the search index to initialize</summary>
            <param name="container">The Ioc Container being being used by the application</param>
        </member>
        <member name="M:InSite.Model.IProductSearchIndexer.BuildProductSearchIndex(System.Action{System.String},System.Boolean)">
            <summary>This method builds the Product Search Index</summary>
            <param name="logMessage">Optional <see cref="T:System.Action"/> to log messages to.</param>
            <param name="incremental">Only refresh selected products in the index (Products with IndexStatus flag set to 1)</param>
        </member>
        <member name="T:InSite.Model.IProductSearchProvider">
            <summary>Implement the IProductSearchProvider interface along with <see cref="T:InSite.Model.IProductSearchIndexer">IProductSearchIndexer Interface</see> to provide enhanced Product
            Search functionality</summary>
            <remarks>The standard implementations include a Sql implementation InSite.Domain.ProductSearchProvider_Generic and a Solr implementation
            InSite.Domain.ProductSearchProvider_Solr. The IProductSearchProvider works hand-in-hand with the IProductSearchIndexer where the IProductSearchIndexer indexes
            the data you want to be able to search and the IProductSearchProvider then queries that data. In the case of the Sql implementation, the IProductSearchIndexer
            is gathering all of the Product related data and putting it in to the SearchLookup field on the Product table and the IProductSearchProvider is querying that
            field in the Product table. In the Solr implementation, the IProductSearchIndexer is gathering all of the Product related data and posting it in to the Solr
            instance and the IProductSearchProvider is querying the Solr instance when you browse the Product Catalog or search.</remarks>
            <seealso cref="T:InSite.Model.IProductSearchIndexer"></seealso>
        </member>
        <member name="M:InSite.Model.IProductSearchProvider.GetSearchResults(InSite.Model.IProductSearchParameter)">
            <summary>Do a product search.</summary>        
            <param name="parameter"><see cref="T:InSite.Model.IProductSearchParameter"/> specifying the search</param>
            <returns>IProductSearchResult contains the returned Products and information for providing search facets</returns>
        </member>
        <member name="M:InSite.Model.IProductSearchProvider.GetAutocompleteSearchResults(System.String,System.Int32,System.Nullable{System.Guid})">
            <summary>
            Get a list of products for auto complete searching</summary>
            <param name="searchCriteria">string to search on</param>
            <param name="maximumNumber">Maximum number of results to return</param>
            <param name="categoryId">Optional category to search within (including child categories)</param>
            <returns>IProductSearchResult containing only StyleProductInfos and Count</returns>
        </member>
        <member name="M:InSite.Model.IProductSearchProvider.GetAllCategoryFacets(System.Nullable{System.Guid})">
            <summary>
            Get the hit counts on all catagories for the current customer including restriction rules 
            </summary>
            <param name="webSiteId">optional website id</param>
            <remarks>Implemented for Lucene only</remarks>
            <returns>all categories with products and counts or null if not implemented</returns>
        </member>
        <member name="M:InSite.Model.IProductSearchProvider.IsProductVisible(System.String,System.Nullable{System.Guid})">
            <summary>
            runs quick restriction checks on a product
            </summary>
            <param name="name">exact product name</param>
            <param name="webSiteId">optional websiteid</param>
            <returns>true if the current customer and ship to is allowed to see this product</returns>
        </member>
        <member name="P:InSite.Model.IProductSearchProvider.SortOptions">
            <summary>
            return a list of items to display in sort order selectors and values to pass to SortBy
            </summary>
        </member>
        <member name="T:InSite.Model.IProductSearchParameter">
            <summary>
            Input parameters for search
            </summary>
        </member>
        <member name="P:InSite.Model.IProductSearchParameter.SearchCriteria">
            <summary>Gets or sets the optional search query string (white space separated list of tokens, all of which must be found).</summary>
        </member>
        <member name="P:InSite.Model.IProductSearchParameter.CategoryId">
            <summary>Gets or sets the optional category id to filter on.</summary>
        </member>
        <member name="P:InSite.Model.IProductSearchParameter.AttributeValueIds">
            <summary>Gets or sets the optional attribute value ids to filter on.</summary>
        </member>
        <member name="P:InSite.Model.IProductSearchParameter.StartRow">
            <summary>Gets or sets the starting product index (not page number)</summary>
        </member>
        <member name="P:InSite.Model.IProductSearchParameter.PageSize">
            <summary>Gets or sets the maximum number of products to return </summary>
        </member>
        <member name="P:InSite.Model.IProductSearchParameter.SortBy">
            <summary>Gets or sets the optional sort order string (defaults to default sort order)</summary>
        </member>
        <member name="P:InSite.Model.IProductSearchParameter.MinimumPrice">
            <summary>Gets or sets the optional minimum price (defaults to any price.)</summary>
        </member>
        <member name="P:InSite.Model.IProductSearchParameter.MaximumPrice">
            <summary>Gets or sets the optional maximum price (defaults to any price.)</summary>
        </member>
        <member name="P:InSite.Model.IProductSearchParameter.PriceFilters">
            <summary>Gets or sets the optional price filters (defaults to all)</summary>
        </member>
        <member name="P:InSite.Model.IProductSearchParameter.WebSiteId">
            <summary>Gets or sets an optional website id (defaults to current website)</summary>
        </member>
        <member name="P:InSite.Model.IProductSearchParameter.DoFacetedSearches">
            <summary>Gets or set whether to do facet searches (for attributes, categories, and prices)</summary>
        </member>
        <member name="P:InSite.Model.IProductSearchParameter.AllowedProductIds">
            <summary>Gets or sets the optional list of products to limit results to.</summary>
        </member>
        <member name="P:InSite.Model.IProductSearchParameter.MaxHits">
            <summary>Gets or sets the optional maximum hits (total result count, not page size) (default 10000). </summary>
        </member>
        <member name="T:InSite.Model.IProductSearchResult">
            <summary>The IProductSearchResult interface is the Interface of the object returned by the <see cref="T:InSite.Model.IProductSearchProvider">IProductSearchProvider Interface</see></summary>
            <remarks>The IProductSearchResult interface standard implementation is in <see cref="T:InSite.Model.ProductSearchResult">ProductSearchResult</see></remarks>
            <seealso cref="T:InSite.Model.IProductSearchResult"></seealso>
        </member>
        <member name="P:InSite.Model.IProductSearchResult.StyleProductInfos">
            <summary>The collection of <see cref="T:InSite.Model.StyleProductInfo">StyleProductInfo</see> Product information 
            returned from the calls to <see cref="T:InSite.Model.IProductSearchProvider">IProductSearchProvider
            Interface</see> GetProductList and GetSearchResults</summary>
            <value>The collection of StyleProductInfo information</value>
        </member>
        <member name="P:InSite.Model.IProductSearchResult.CategoryDtos">
            <summary>The collection of <see cref="T:InSite.Model.Category">Category</see> facet information 
            returned from the calls to <see cref="T:InSite.Model.IProductSearchProvider">IProductSearchProvider Interface</see>
            GetProductList and GetSearchResults</summary>
            <value>The collection of <see cref="T:InSite.Model.Category">Category</see> information</value>
        </member>
        <member name="P:InSite.Model.IProductSearchResult.AttributeTypeDtos">
            <summary>The collection of <see cref="T:InSite.Model.AttributeType">Attribute</see> facet information 
            returned from the calls to <see cref="T:InSite.Model.IProductSearchProvider">IProductSearchProvider
            Interface</see> GetProductList and GetSearchResults</summary>
            <value>The collection of <see cref="T:InSite.Model.AttributeType">Attribute</see> information</value>
        </member>
        <member name="P:InSite.Model.IProductSearchResult.DidYouMeanDtos">
            <summary> The collection of spell correction suggestions</summary>
        </member>
        <member name="P:InSite.Model.IProductSearchResult.SimilarResultDtos">
            <summary>The collection of <see cref="T:InSite.Model.StyleProductInfo">StyleProductInfo</see> that are similar to the ones searched for, 
            Key is the Id of the result and StyleProductInfos are the results similar to the result of Key</summary>
        </member>
        <member name="P:InSite.Model.IProductSearchResult.SortOptions">
            <summary>
            return a list of items to display in sort order selectors and values to pass to SortBy
            </summary>
        </member>
        <member name="P:InSite.Model.IProductSearchResult.Count">
            <summary>The total count of Products found by the calls to 
            <see cref="T:InSite.Model.IProductSearchProvider">IProductSearchProvider Interface</see> GetProductList and GetSearchResults</summary>
            <value>Total count of Products</value>
        </member>
        <member name="P:InSite.Model.IProductSearchResult.SortOrder">
            <summary>
            How the results were sorted (use SortOrderType constants)
            </summary>
        </member>
        <member name="P:InSite.Model.IProductSearchResult.PriceRangeDto">
            <summary>
            Price facet information.
            </summary>
        </member>
        <member name="T:InSite.Model.SortOrderType">
            <summary>
            Constant values to be used with product search sortBy parameter and returned in IProductSearchResult.SortOrder
            </summary>
        </member>
        <member name="T:InSite.Model.ProductSearchParameter">
            <summary>
            Input parameters for search
            </summary>
        </member>
        <member name="P:InSite.Model.ProductSearchParameter.SearchCriteria">
            <summary>Gets or sets the optional search query string (white space separated list of tokens, all of which must be found).</summary>
        </member>
        <member name="P:InSite.Model.ProductSearchParameter.CategoryId">
            <summary>Gets or sets the optional category id to filter on.</summary>
        </member>
        <member name="P:InSite.Model.ProductSearchParameter.AttributeValueIds">
            <summary>Gets or sets the optional attribute value ids to filter on.</summary>
        </member>
        <member name="P:InSite.Model.ProductSearchParameter.StartRow">
            <summary>Gets or sets the starting product index (not page number)</summary>
        </member>
        <member name="P:InSite.Model.ProductSearchParameter.PageSize">
            <summary>Gets or sets the maximum number of products to return </summary>
        </member>
        <member name="P:InSite.Model.ProductSearchParameter.SortBy">
            <summary>Gets or sets the optional sort order string (defaults to default sort order)</summary>
        </member>
        <member name="P:InSite.Model.ProductSearchParameter.MinimumPrice">
            <summary>Gets or sets the optional minimum price (defaults to any price.)</summary>
        </member>
        <member name="P:InSite.Model.ProductSearchParameter.MaximumPrice">
            <summary>Gets or sets the optional maximum price (defaults to any price.)</summary>
        </member>
        <member name="P:InSite.Model.ProductSearchParameter.PriceFilters">
            <summary>Gets or sets the optional price filters (defaults to all)</summary>
        </member>
        <member name="P:InSite.Model.ProductSearchParameter.WebSiteId">
            <summary>Gets or sets an optional website id (defaults to current website)</summary>
        </member>
        <member name="P:InSite.Model.ProductSearchParameter.DoFacetedSearches">
            <summary>Gets or set whether to do facet searches (for attributes, categories, and prices)</summary>
        </member>
        <member name="P:InSite.Model.ProductSearchParameter.AllowedProductIds">
            <summary>Gets or sets the optional list of products to limit results to.</summary>
        </member>
        <member name="P:InSite.Model.ProductSearchParameter.MaxHits">
            <summary>Gets or sets the optional maximum hits (total result count, not page size) (default 10000). </summary>
        </member>
        <member name="P:InSite.Model.PriceFacetDto.MinimumPrice">
            <summary>
            Minimum price of the range, inclusive.
            </summary>
        </member>
        <member name="P:InSite.Model.PriceFacetDto.MaximumPrice">
            <summary>
            Maximum price of the range, exclusive.
            </summary>
        </member>
        <member name="P:InSite.Model.PriceFacetDto.Count">
            <summary>
            Number of products in this price range.
            </summary>
        </member>
        <member name="P:InSite.Model.PriceFacetDto.Selected">
            <summary>
            true if this facet was selected to filter results
            </summary>
        </member>
        <member name="P:InSite.Model.PriceRangeDto.MinimumPrice">
            <summary>
            Exact minimum price
            </summary>
        </member>
        <member name="P:InSite.Model.PriceRangeDto.MaximumPrice">
            <summary>
            Exact maximum price.
            </summary>
        </member>
        <member name="P:InSite.Model.PriceRangeDto.Count">
            <summary>
            Total result count
            </summary>
        </member>
        <member name="P:InSite.Model.PriceRangeDto.PriceFacets">
            <summary>
            List of price facet bins with counts
            </summary>
        </member>
        <member name="P:InSite.Model.SortOrderDto.DisplayName">
            <summary>
            sort string to display in UI
            </summary>
        </member>
        <member name="P:InSite.Model.SortOrderDto.SortType">
            <summary>
            sort types (SortOrderType constants) in order to show in UI - lowest is default. pass this value to SortBy as a string. 
            </summary>
        </member>
        <member name="P:InSite.Model.SortOrderDto.SearchOnly">
            <summary>
            If true, show for searches but not for product lists
            </summary>
        </member>
        <member name="T:InSite.Model.SearchIndexNotFoundException">
            <summary>
            Exception indicating search index not found or corrupt
            </summary>
        </member>
        <member name="T:InSite.Model.IPriceCalculator">
            <summary>Implement this interface to create a plugin to customize how prices are calculated for Products and Order Lines.</summary>
            <remarks>IPriceCalculator will be used if the Application Setting UseBasicPricing is set to False.</remarks>
        </member>
        <member name="M:InSite.Model.IPriceCalculator.CalculatePrice(InSite.Model.Customer,InSite.Model.Product,System.Decimal,System.Data.DataSet,System.Boolean,System.Boolean@)">
            <summary>Calculates Price for given Customer, Product and optionally Configuration</summary>
            <param name="customer">Current Customer browsing the site, will be null if the user is not logged in</param>
            <param name="product">The Product to get Pricing for</param>
            <param name="qtyOrdered">The Quantity to get Pricing for</param>
            <param name="configDataSet">DataSet of selected configuration values if this is a Configured Product, will be null if not a Configured Product</param>
            <param name="regularPrice">If true, calculates Regular Price, if false, calculates Actual Price</param>
            <param name="isSalePrice">Output paramter that returns true if Product is on sale, otherwise false</param>
            <remarks>Consumed by Product.IsOnSale, Prouct.RegularPrice, and Product.ActualPrice. <br/>
            Product.GetIsOnSale(qty), Product.GetRegularPrice(qty), Product.GetActualPrice(qty)<br/>
            Product.GetRegularConfiguredPrice(qty,ConfigDataset), and Product.GetActualConfiguredPrice(qty,ConfigDataset)</remarks>
            <returns>The calculated Price of the Product</returns>
        </member>
        <member name="M:InSite.Model.IPriceCalculator.CalculatePrice(InSite.Model.OrderLine,System.Boolean,System.Boolean@)">
            <summary>Calculates Price for OrderLine</summary>
            <param name="orderLine">The OrderLine to calculate pricing for</param>
            <param name="regularPrice">If true, calculates Regular Price, if false, calculates Actual Price</param>
            <param name="isSalePrice">Output paramter that returns true if Sale Price is returned, false if not</param>
            <remarks>
            	<para>Consumed by OrderLine.CalculatePrice. OrderLine.ActualPrice, OrderLine.RegularPrice</para>
            	<para>CalculatePrice will be called automatically by the system if the Application Setting AutoCalculatePrice is set to True. If AutoCalculatePrice is set to
            False, you must manually call the CalculatePrice method on the CustomerOrder.</para>
            </remarks>
            <returns>The calculated Price of the Product for the OrderLine</returns>
        </member>
        <member name="T:InSite.Model.CustomerOrder">
            <summary>The CustomerOrder holds all the information about the Order</summary>
        </member>
        <member name="M:InSite.Model.CustomerOrder.GetByOrderNumber(System.String)">
            <summary>Get a CustomerOrder by Order Number</summary>
            <param name="orderNumber">The Order Number</param>
            <returns>The CustomerOrder or null if not found</returns>
        </member>
        <member name="M:InSite.Model.CustomerOrder.AddOrderLine(InSite.Model.Product,System.String,System.Data.DataSet,System.Decimal,System.String,System.String)">
            <summary>Add an OrderLine to the OrderLines collection</summary>
            <param name="product">The Product purchased on this OrderLine</param>
            <param name="notes">Optional, notes will set the CustomerOrder Notes</param>
            <param name="configDataSet">The ConfigDataSet with the options selected for this OrderLine.</param>
            <param name="qtyOrdered">The Quantity Ordered of the Product</param>
            <param name="unitOfMeasure">The unit of measure of the Product being added to the order</param>
            <param name="costCode">The cost code for the line being added to the order</param>
            <returns>The added OrderLine</returns>
        </member>
        <member name="M:InSite.Model.CustomerOrder.AddOrderLine(InSite.Model.Product,System.String,System.Decimal,System.Collections.Generic.IList{InSite.Model.OrderLineProperty},System.String,System.String)">
            <summary>Passes call to <see cref="T:InSite.Model.Interfaces.ICustomerOrderState"/></summary>
            <param name="product">The Product purchased on this OrderLine</param>
            <param name="notes">Optional, notes will set the CustomerOrder Notes</param>
            <param name="qtyOrdered">The Quantity Ordered of the Product</param>
            <param name="orderLineProperties">The collection of OrderLineProperties describing this Product purchase, can be used for example to indicate gift wrapping options etc...</param>
            <param name="unitOfMeasure">The unit of measure of the Product being added to the order</param>
            <param name="costCode">The cost code for the line being added to the order</param>
            <returns>The added OrderLine</returns>
        </member>
        <member name="M:InSite.Model.CustomerOrder.ApplyRoundingRules(InSite.Model.Product,System.String,System.Decimal)">
            <summary>
            Calculates the required rounding of a requested order quantity.
            </summary>
            <param name="product">the product on the orderline</param>
            <param name="orderLineUnitOfMeasure">the UnitOfMeasure field on the orderline</param>
            <param name="qtyOrdered">The requested quantity</param>
            <returns>The rounded quantit that should be used on the orderline</returns>
        </member>
        <member name="M:InSite.Model.CustomerOrder.GetReSubmitCustomerOrderList">
            <summary>Gets IList of CustomerOrders whose staus is Submitted, these CustomerOrders have been Submitted on the web, but have not successfully been
            Submited to the ERP System</summary>
            <returns>IList of CustomerOrders</returns>
        </member>
        <member name="M:InSite.Model.CustomerOrder.GetReSubmitCustomerOrderList(System.Int32)">
            <summary>Gets IList of CustomerOrders whose staus is Submitted and BatchNumber is the value passed in, these CustomerOrders have been Submitted on the
            web, but have not successfully been Submited to the ERP System</summary>
            <param name="batchNumber">Batch Number</param>
            <returns>IList of CustomerORders</returns>
        </member>
        <member name="M:InSite.Model.CustomerOrder.GetListForERPRefresh">
            <summary>Gets list of CustomerOrders where the status is Review, Processing or Complete</summary>
            <returns>IList of CustomerOrders</returns>
        </member>
        <member name="M:InSite.Model.CustomerOrder.GetListForERPRefresh(System.Boolean)">
            <summary>Gets list of CustomerOrders where the status is Review, Processing or if includeCompleted parameter is true Complete</summary>
            <param name="includeCompleted">Include Completed</param>
            <returns>IList of CustomerOrders</returns>
        </member>
        <member name="M:InSite.Model.CustomerOrder.GetNextOrderNumber">
            <summary>Uses the database table SeqOrderNumber's identity column to generate a unique sequential OrderNumber formatting it based on the OrderNumberPrefix
            and OrderNumberFormat set up in the WebSite</summary>
            <remarks>Gaps are possible in the Order Number sequence, but highly scalable</remarks>
            <returns>The Order Number</returns>
        </member>
        <member name="M:InSite.Model.CustomerOrder.GetNextOrderNumber(System.String,System.String)">
            <summary>Gets the max value of current Order Numbers stripping off the Prefix and then adds one to it to generate the new Order Number and then formats it
            based on the values passed in</summary>
            <param name="prefix">Order Number Prefix</param>
            <param name="format">Order Number Format</param>
            <remarks>Gaps should not happen in the Order Number sequence, but less scalable</remarks>
            <returns>The Order Number</returns>
        </member>
        <member name="M:InSite.Model.CustomerOrder.PurgeSavedOrders">
            <summary>Deletes CustomerOrders whose Status is Saved and OrderDate is older than the ApplicationSetting SavedOrderRetentionDays</summary>
        </member>
        <member name="M:InSite.Model.CustomerOrder.SetShippingCalculationNeeded">
            <summary>Gets or sets a value indicating whether recalculate shipping.</summary>
        </member>
        <member name="M:InSite.Model.CustomerOrder.PropertiesAreTheSame(System.Collections.Generic.IList{InSite.Model.OrderLineProperty},System.Collections.Generic.IList{InSite.Model.OrderLineProperty})">
            <summary>
            Method which will compares a collection of <see cref="T:InSite.Model.OrderLineProperty"/> to a new collection of <see cref="T:InSite.Model.OrderLineProperty"/>.
            </summary>
            <param name="currentProperties">A collection of <see cref="T:InSite.Model.OrderLineProperty"/>s  to compare to.</param>
            <param name="newProperties">A new collection <see cref="T:InSite.Model.OrderLineProperty"/> to compare.</param>
            <returns></returns>
        </member>
        <member name="M:InSite.Model.CustomerOrder.RemoveRestrictedOrderLines">
            <summary>Removes all OrderLines that do not pass the shipping restrictions</summary>
        </member>
        <member name="M:InSite.Model.CustomerOrder.AddOrderLine(InSite.Model.OrderLine)">
            <summary>Add an OrderLine to the OrderLines collection by delegating call to the <see cref="M:InSite.Model.Interfaces.ICustomerOrderState.AddOrderLine(InSite.Model.OrderLine)"/> method.</summary>
            <param name="value">The OrderLine to be added</param>
        </member>
        <member name="M:InSite.Model.CustomerOrder.RemoveOrderLine(InSite.Model.OrderLine,System.Boolean)">
            <summary>Remove an OrderLine from the OrderLines collection, if renumberLines is false, return, otherwise re-number the OrderLines, re-calculate
            handling, re-apply promotions and re-calculate tax</summary>
            <param name="value">The OrderLine to be removed</param>
            <param name="renumberLines">true for standard behavior, false to just remove the OrderLine and return</param>
            <remarks>If the collection does not contain the value it is silently ignored</remarks>
        </member>
        <member name="M:InSite.Model.CustomerOrder.RemoveOrderLine(InSite.Model.OrderLine)">
            <summary>Remove an OrderLine from the OrderLines collection, re-number the OrderLines, re-calculate handling, re-apply promotions and re-calculate tax</summary>
            <remarks>If the collection does not contain the value it is silently ignored</remarks>
        </member>
        <member name="M:InSite.Model.CustomerOrder.RemoveOrderLine(System.Int32)">
            <summary>Remove an OrderLine with the Line Number specified from the OrderLines collection, re-number the OrderLines, re-calculate handling, re-apply
            promotions and re-calculate tax</summary>
            <remarks>If the collection does not contain the value it is silently ignored</remarks>
        </member>
        <member name="M:InSite.Model.CustomerOrder.GetOrderLine(System.Int32)">
            <summary>Gets an OrderLine from the OrderLines collection with that Line Number</summary>
            <param name="line">Line Number</param>
            <returns>OrderLine or null if not found</returns>
        </member>
        <member name="M:InSite.Model.CustomerOrder.GetOrderLine(System.String)">
            <summary>Gets an OrderLine from the OrderLines collection with that Product Name</summary>
            <param name="productName">Product Name</param>
            <returns>OrderLine or null if not found</returns>
        </member>
        <member name="M:InSite.Model.CustomerOrder.AddPromotion(InSite.Model.Promotion)">
            <summary>Add a Promotion to the Promotions collection</summary>
            <param name="value">The Promotion to be added</param>
            <remarks>If the collection already contains the value it is silently ignored.  Handling and then Tax are calculated if set to auto calculate.</remarks>
        </member>
        <member name="M:InSite.Model.CustomerOrder.RemovePromotion(InSite.Model.Promotion)">
            <summary>Removes a Promotion from the Promotions collection, re-calculates handling and tax</summary>
            <param name="value">The Promotion to be removed</param>
            <remarks>If the collection does not contain the value it is silently ignored</remarks>
        </member>
        <member name="M:InSite.Model.CustomerOrder.AddPromotionCode(InSite.Model.OrderPromotionCode)">
            <summary>Add a PromotionCode to the PromotionCodes collection</summary>
            <param name="value">The PromotionCode to add</param>
            <remarks>If the collection already contains the value it is silently ignored. If the current WebSite is set to not allow multiple promotions, the
            PromotionCodes collection is cleared and then the new value is added.  Then Promotions are applied.</remarks>
        </member>
        <member name="M:InSite.Model.CustomerOrder.RemovePromotionCode(InSite.Model.OrderPromotionCode)">
            <summary>Removes a PromotionCode from the PromotionCodes collection and re-applies promotions</summary>
            <param name="value">The PromotionCode to be removed</param>
            <remarks>If the collection does not contain the value it is silently ignored</remarks>
        </member>
        <member name="M:InSite.Model.CustomerOrder.RemovePromotionCode(System.String)">
            <summary>Removes a PromotionCode with the Code specified from the PromotionCodes collection and re-applies promotions</summary>
            <param name="code">The Codeof the PromotionCode to be removed</param>
            <remarks>If the collection does not contain the value it is silently ignored</remarks>
        </member>
        <member name="M:InSite.Model.CustomerOrder.AddPromotionCodeOrGiftCard(System.String)">
            <summary>Adds either a PromotionCode or GiftCard to the CustomerOrder</summary>
            <param name="promotionCodeOrGiftCardNumber">The PromotionCode or GiftCard Number</param>
            <remarks>If a GiftCard is found matching the the PromotionCodeOrGiftCardNumber, that GiftCard is added to the GiftCards collection, otherwise it is
            treated as a PromotionCode and is added to the PromotionCodes collection.</remarks>
        </member>
        <member name="M:InSite.Model.CustomerOrder.AddCreditCardTransaction(InSite.Model.CreditCardTransaction)">
            <summary>Add a CreditCardTransaction to the CreditCardTransactions collection</summary>
            <param name="value">The CreditCardTransaction to be added</param>
            <remarks>If the collection already contains the value it is silently ignored</remarks>
        </member>
        <member name="M:InSite.Model.CustomerOrder.CalculateHandling">
            <summary>
            Method call to calculate and set the handling charges on the <see cref="T:InSite.Model.CustomerOrder"/>
            </summary>
        </member>
        <member name="M:InSite.Model.CustomerOrder.HasPromotion(InSite.Model.Promotion)">
            <summary>Returns true if the Promotions collection has this Promotion in it</summary>
            <param name="promotion">Promotion</param>
            <returns>true or false</returns>
        </member>
        <member name="M:InSite.Model.CustomerOrder.AddGiftCard(InSite.Model.GiftCard)">
            <summary>Add a GiftCard to the GiftCards collection</summary>
            <param name="value">The GiftCard to be added</param>
            <remarks>If the collection already contains the value it is silently ignored</remarks>
            <requirements>The GiftCard must be active, have a balance greater than zero and have an expiration date greater than the current date</requirements>
        </member>
        <member name="M:InSite.Model.CustomerOrder.RemoveGiftCard(InSite.Model.GiftCard)">
            <summary>Remove a GiftCard from the GiftCards collection</summary>
            <param name="value">The GiftCard to be removed</param>
            <remarks>If the collection does not contain the value it is silently ignored</remarks>
        </member>
        <member name="M:InSite.Model.CustomerOrder.AddGiftCardTransaction(InSite.Model.GiftCardTransaction)">
            <summary>Add a GiftCardTransaction to the GiftCardTransactions collection</summary>
            <param name="value">The GiftCardTransaction to be added</param>
            <remarks>GiftCardTransactions are normally created and attached to a CustomerOrder in the CustomerOrderProcessor.SubmitTransaction method for the amount
            of the GiftCard used on that CustomerOrder when the GiftCard is in the GiftCards collection of the CustomerOrder.  If the collection already contains the
            value it is silently ignored</remarks>
        </member>
        <member name="M:InSite.Model.CustomerOrder.HasProduct(InSite.Model.Product)">
            <summary>Returns true if the OrderLines collection contains an OrderLine with this Product and Status does not equal void</summary>
            <param name="product">Product</param>
            <returns>true or false</returns>
        </member>
        <member name="M:InSite.Model.CustomerOrder.AddCustomerOrderProperty(InSite.Model.CustomerOrderProperty)">
            <summary>Add a CustomerOrderProperty to the CustomerOrderProperties collection</summary>
            <param name="value">The CustomerOrderProperty to be added</param>
            <remarks>If the collection already contains the value it is silently ignored</remarks>
        </member>
        <member name="M:InSite.Model.CustomerOrder.RemoveCustomerOrderProperty(InSite.Model.CustomerOrderProperty)">
            <summary>Remove a CustomerOrderProperty from the CustomerOrderProperties collection</summary>
            <param name="value">The CustomerOrderProperty to be removed</param>
            <remarks>If the collection does not contain the value it is silently ignored</remarks>
        </member>
        <member name="M:InSite.Model.CustomerOrder.GetCustomerOrderProperty(System.String,System.String)">
            <summary>Gets a CustomerOrderProperty from the CustomerOrderProperties collection with the Name specified, if not found, creates a new one with the specified defalut value</summary>
            <param name="name">The Name</param>
            <param name="defaultValue">The Default Value</param>
            <returns>CustomerOrderProperty</returns>
        </member>
        <member name="M:InSite.Model.CustomerOrder.EmptyCart">
            <summary>Deletes all the OrderLines on the CustomerOrder</summary>
        </member>
        <member name="M:InSite.Model.CustomerOrder.Copy">
            <summary>Returns a new CustomerOrder with values copied from this CustomerOrder</summary>
        </member>
        <member name="M:InSite.Model.CustomerOrder.ImportChildrenXLS(System.Data.DataRow)">
            <summary>This method is called by the ImportXLS method of ModelBase if it exists in the inheriting class</summary>
            <param name="row">The current DataRow being processed by the Import</param>
        </member>
        <member name="M:InSite.Model.CustomerOrder.AddOrderLineToCollection(InSite.Model.OrderLine)">
            <summary>
            Method to only add the provided <see cref="T:InSite.Model.OrderLine"/> to the private collection.  If the collection does not contain the provided
            <see cref="T:InSite.Model.OrderLine"/> add it to the private <see cref="F:InSite.Model.CustomerOrder._orderLines"/> collection.  There is no business logic in the method. This is really used
            internally for implementations of <see cref="T:InSite.Model.Interfaces.ICustomerOrderState"/>
            </summary>
            <param name="value"><see cref="T:InSite.Model.OrderLine"/> to add to the member variable collection.</param>
        </member>
        <member name="M:InSite.Model.CustomerOrder.RemoveOrderLineFromCollection(InSite.Model.OrderLine)">
            <summary>
            Method to only remove the provided <see cref="T:InSite.Model.OrderLine"/> from the private collection.  If the collection contains the provided
            <see cref="T:InSite.Model.OrderLine"/> remove it from the private <see cref="F:InSite.Model.CustomerOrder._orderLines"/> collection.  There is no business logic in the method. This is really used
            internally for implementations of <see cref="T:InSite.Model.Interfaces.ICustomerOrderState"/>
            </summary>
            <param name="value"><see cref="T:InSite.Model.OrderLine"/> to add to the member variable collection.</param>
        </member>
        <member name="M:InSite.Model.CustomerOrder.AddPromotionToCollection(InSite.Model.Promotion)">
            <summary>Add a Promotion to the Promotions collection</summary>
            <param name="value">The Promotion to be added</param>
            <remarks>If the collection already contains the value it is silently ignored.  Handling and then Tax are calculated if set to auto calculate.</remarks>
        </member>
        <member name="M:InSite.Model.CustomerOrder.RemovePromotionFromCollection(InSite.Model.Promotion)">
            <summary>Removes a Promotion from the Promotions collection.</summary>
            <param name="value">The Promotion to be removed</param>
            <remarks>If the collection does not contain the value it is silently ignored</remarks>
        </member>
        <member name="M:InSite.Model.CustomerOrder.ClearPromotionCodesFromCollection">
            <summary>
            Method to clear the <see cref="F:InSite.Model.CustomerOrder._promotionCodes"/> collection directly.  This should be used by the <see cref="T:InSite.Model.Interfaces.ICustomerOrderState"/> only.
            </summary>
        </member>
        <member name="M:InSite.Model.CustomerOrder.RemovePromotionCodeFromCollection(InSite.Model.OrderPromotionCode)">
            <summary>Removes a PromotionCode from the PromotionCodes collection and re-applies promotions</summary>
            <param name="value">The PromotionCode to be removed</param>
            <remarks>If the collection does not contain the value it is silently ignored</remarks>
        </member>
        <member name="M:InSite.Model.CustomerOrder.ClearShippingRestrictedOrderLinesFromCollection">
            <summary>
            Method to clear the <see cref="F:InSite.Model.CustomerOrder._failedShippingRestrictionOrderLines"/> collection directly.  This should be used by the <see cref="T:InSite.Model.Interfaces.ICustomerOrderState"/> only.
            </summary>
        </member>
        <member name="M:InSite.Model.CustomerOrder.AddOrderLineToFailedShippingRestrictionOrderLinesCollection(InSite.Model.OrderLine)">
            <summary>
            Method to add an <see cref="T:InSite.Model.OrderLine"/> to the <see cref="P:InSite.Model.CustomerOrder.FailedShippingRestrictionOrderLines"/> collection directly.  This is consumed by the 
            <see cref="T:InSite.Model.Interfaces.ICustomerOrderState"/>
            </summary>
            <param name="orderLine"></param>
        </member>
        <member name="M:InSite.Model.CustomerOrder.GetProperty(System.String,System.String)">
            <summary>Retrieves the value for the property identified by <paramref name="name"/></summary>
            <param name="name">The name of the property to retrieve</param>
            <param name="defaultValue">The value to use if the property does not exist</param>
        </member>
        <member name="M:InSite.Model.CustomerOrder.SetProperty(System.String,System.String)">
            <summary>Sets the value for the property identified by <paramref name="name"/></summary>
            <param name="name">The name of the property to retrieve</param>
            <param name="value">The value to set</param>
        </member>
        <member name="M:InSite.Model.CustomerOrder.UpdateShipToRequired(InSite.Model.Customer)">
            <summary>The update ship to required.</summary>
            <param name="shipTo">The ship to.</param>
            <returns>The <see cref="T:System.Boolean"/>.</returns>
        </member>
        <member name="P:InSite.Model.CustomerOrder.CustomerOrderStateFactory">
            <summary>
            CustomerOrderStateFactory Plugin
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.CustomerOrderState">
            <summary>
            Get Set<see cref="T:InSite.Model.Interfaces.ICustomerOrderState"/>.  If the <see cref="T:InSite.Model.Interfaces.ICustomerOrderState"/> is null it will return the
            <see cref="T:InSite.Model.Interfaces.ICustomerOrderState"/> from the <see cref="T:InSite.Model.Interfaces.ICustomerOrderStateFactory"/>.
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.OrderNumberPrefix">
            <summary>
            Returns the OrderNumberPrefix defined in the Current WebSite
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.OrderNumberFormat">
            <summary>
            Returns the OrderNumberFormat defined in the Current WebSite
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.IsValid">
            <summary>
            Goes through all the OrderLines and checks their IsValid property and will return false
            if an OrderLine is not valid, then returns true
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.Type">
            <summary>
            Type for the CustomerOrder, valid values are Order and Quote from the CustomerOrder.*Type constants
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.TypeDisplay">
            <summary>
            User frendly name for the satus of CustomerOrder
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.DisableModulePricing">
            <summary>
            If false, use the normal product pricing service and not services that are specific to a feature.
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.Status">
            <summary>
            Status for the CustomerOrder, valid values are Cart, Saved, Submitted, Review, Processing, Saved, Complete
            Void and Ready For Pickup from the CustomerOrder.*Status constants
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.StatusDisplay">
            <summary>
            User frendly name for the satus of CustomerOrder
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.OrderNumber">
            <summary>OrderNumber of the CustomerOrder (unique)</summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.ERPOrderNumber">
            <summary>
            EROOrderNumber of the CustomerOrder from the ERP System
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.OrderDate">
            <summary>
            OrderDate of the CustomerOrder
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.CustomerPO">
            <summary>
            CustomerPO of the CustomerOrder
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.CurrencyCode">
            <summary>
            CurrencyCode of the CustomerOrder
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.Language">
            <summary>
            Gets or sets the language.
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.TermsCode">
            <summary>
            TermsCode of the CustomerOrder
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.TaxCode1">
            <summary>
            TaxCode1 of the CustomerOrder
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.TaxCode2">
            <summary>
            TaxCode2 of the CustomerOrder
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.DefaultWarehouse">
            <summary>
            DefaultWarehouse of the CustomerOrder 
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.DefaultWarehouseName">
            <summary>
            Returns the default warehouse name
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.ShipEarly">
            <summary>
            ShipEarly of the CustomerOrder
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.ShipPartial">
            <summary>
            ShipPartial of the CustomerOrder
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.Notes">
            <summary>
            Notes of the CustomerOrder
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.StateTax">
            <summary>
            StateTax of the CustomerOrder
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.StateTaxDisplay">
            <summary>
            Currency and culture formatted <see cref="P:InSite.Model.CustomerOrder.StateTax"/>.
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.LocalTax">
            <summary>
            LocalTax of the CustomerOrder
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.LocalTaxDisplay">
            <summary>
            Currency and culture formatted <see cref="P:InSite.Model.CustomerOrder.LocalTax"/>.
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.CustomerNumber">
            <summary>
            CustomerNumber of the CustomerOrder
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.CustomerSequence">
            <summary>
            CustomerSequence of the CustomerOrder
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.PlacedByUserName">
            <summary>
            UserName who placed the CustomerOrder
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.Currency">
            <summary>
            <see cref="P:InSite.Model.CustomerOrder.Currency"/> for the <see cref="T:InSite.Model.CustomerOrder"/>.
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.ConversionRate">
            <summary>
            The ConversionRate from the <see cref="P:InSite.Model.CustomerOrder.Currency"/> to the system base <see cref="P:InSite.Model.CustomerOrder.Currency"/>.
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.Salesperson">
            <summary>
            Salesperson of the CustomerOrder
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.HtmlBillingAddress">
            <summary>
            HTML Formatted Billing Address of the CustomerOrder
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.BTDisplayName">
            <summary>
            Bill To DisplayName of the CustomerOrder
            If BTCompanyName has a value, it will be returned, otherwise BTFirstName plus BTLastName
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.BTCompanyName">
            <summary>
            Bill To Company name of the CustomerOrder
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.BTFirstName">
            <summary>
            Bill To FirstName of the CustomerOrder
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.BTMiddleName">
            <summary>
            Bill To MiddleName of the CustomerOrder
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.BTLastName">
            <summary>
            Bill To LastName of the CustomerOrder
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.BTPhone">
            <summary>
            Bill To Phone of the CustomerOrder
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.BTAddress1">
            <summary>
            Bill To Address1 of the CustomerOrder
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.BTAddress2">
            <summary>
            Bill To Address2 of the CustomerOrder
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.BTAddress3">
            <summary>
            Bill To Address3 of the CustomerOrder
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.BTAddress4">
            <summary>
            Bill To Address4 of the CustomerOrder
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.BTCity">
            <summary>
            Bill To City of the CustomerOrder
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.BTState">
            <summary>
            Bill To State of the CustomerOrder
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.BTPostalCode">
            <summary>
            Bill To PostalCode of the CustomerOrder
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.BTCountry">
            <summary>
            Bill To Country of the CustomerOrder
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.BTEmail">
            <summary>
            Bill To Email of the CustomerOrder
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.Customer">
            <summary>
            Bill To Customer of the CustomerOrder
            Setting the Customer also sets the CustomerNumber, PriceCode, CurrencyCode
             TermsCode, the BT* fields on the CustomerOrder and if the ShipTo is null or AbandonedCart, it will be set as well
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.HtmlShippingAddress">
            <summary>
            HTML Formatted Shipping Address of the CustomerOrder
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.STDisplayName">
            <summary>
            Ship To DisplayName of the CustomerOrder
            If STCompanyName has a value, it will be returned, otherwise STFirstName plus STLastName
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.STCompanyName">
            <summary>
            Ship To Company of the CustomerOrder
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.STFirstName">
            <summary>
            Ship To FirstName of the CustomerOrder
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.STMiddleName">
            <summary>
            Ship To MiddleName of the CustomerOrder
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.STLastName">
            <summary>
            Ship To LastName of the CustomerOrder
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.STPhone">
            <summary>
            Ship To Phone of the CustomerOrder
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.STAddress1">
            <summary>
            Ship To Address1 of the CustomerOrder
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.STAddress2">
            <summary>
            Ship To Address2 of the CustomerOrder
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.STAddress3">
            <summary>
            Ship To Address3 of the CustomerOrder
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.STAddress4">
            <summary>
            Ship To Address4 of the CustomerOrder
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.STCity">
            <summary>
            Ship To City of the CustomerOrder
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.STState">
            <summary>
            Ship To State of the CustomerOrder
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.STPostalCode">
            <summary>
            Ship To PostalCode of the CustomerOrder
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.STCountry">
            <summary>
            Ship To Country of the CustomerOrder
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.STEmail">
            <summary>
            Ship To Email of the CustomerOrder
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.ShipTo">
            <summary>
            Ship To Customer of the CustomerOrder
            Setting the ShipTo sets the CustomerSequence, DefaultWarehouse, Salesperson, ShipEarly, ShipPartial, TaxCode1, TaxCode2,
            the ST* fields and calls CalculateHandling and AutoCalculateTax
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.DropShip">
            <summary>
            DropShip Customer of the CustomerOrder
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.IsDropShip">
            <summary>
            IsDropShip will return true of the DropShip Customer is specified on this CustomerOrder
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.WebSite">
            <summary>
            WebSite of the CustomerOrder
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.WebSiteName">
            <summary>
            WebSite Name of the CustomerOrder
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.Residential">
            <summary>
            Residential flag of the CustomerOrder
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.InsideDelivery">
            <summary>
            InsideDelivery flag of the CustomerOrder
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.CollectAccountNumber">
            <summary>
            CollectAccountNumber used for Shipping for the CustomerOrder
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.DiscountAmount">
            <summary>
            DiscountAmount used to manually add an Amount discount subtracted from the Order Total
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.DiscountAmountDisplay">
            <summary>
            Currency and culture formatted <see cref="P:InSite.Model.CustomerOrder.DiscountAmount"/>.
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.DiscountPercent">
            <summary>
            DiscountPercent used to manually add a Percent discount subtracted from the Order Total
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.Shipping">
            <summary>
            Shipping of the CustomerOrder including promotions
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.ShippingDisplay">
            <summary>
            Currency and culture formatted <see cref="P:InSite.Model.CustomerOrder.Shipping"/>.
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.FullShippingCharge">
            <summary>
            FullShippingCharge of the CustomerOrder excluding promotions
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.FullShippingChargeDisplay">
            <summary>
            Currency and culture formatted <see cref="P:InSite.Model.CustomerOrder.FullShippingCharge"/>.
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.Handling">
            <summary>
            Handling of the CustomerOrder
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.HandlingDisplay">
            <summary>
            Currency and culture formatted <see cref="P:InSite.Model.CustomerOrder.Handling"/>.
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.ShippingAndHandling">
            <summary>
            Shipping plus Handling of the CustomerOrder including promotions
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.ShippingAndHandlingDisplay">
            <summary>
            Currency and culture formatted <see cref="P:InSite.Model.CustomerOrder.ShippingAndHandling"/>.
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.DollarOffOrder">
            <summary>
            Total of DollarOffOrder Promotions of the CustomerOrder
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.DollarOffOrderDisplay">
            <summary>
            Currency and culture formatted <see cref="P:InSite.Model.CustomerOrder.DollarOffOrder"/>.
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.PercentOffOrder">
            <summary>
            Total of PercentOffOrder Promotions of the CustomerOrder
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.DollarOffShipping">
            <summary>
            Total of DollarOffShipping Promotions of the CustomerOrder
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.DollarOffShippingDisplay">
            <summary>
            Currency and culture formatted <see cref="P:InSite.Model.CustomerOrder.DollarOffShipping"/>.
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.PercentOffShipping">
            <summary>
            Total of PercentOffShipping Promotions of the CustomerOrder
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.OrderSubTotal">
            <summary>
            OrderSubTotal including Product Promotions of the CustomerOrder
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.OrderSubTotalDisplay">
            <summary>
            Currency and culture formatted <see cref="P:InSite.Model.CustomerOrder.OrderSubTotal"/>.
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.OrderSubTotalWithOutProductDiscounts">
            <summary>
            OrderSubTotal excluding Product Promotions of the CustomerOrder
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.OrderSubTotalWithOutProductDiscountsDisplay">
            <summary>
            Currency and culture formatted <see cref="P:InSite.Model.CustomerOrder.OrderSubTotalWithOutProductDiscounts"/>.
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.OrderTotal">
            <summary>
            OrderTotal is OrderSubTotal with Order Promotions applied of the CustomerOrder
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.OrderTotalDisplay">
            <summary>
            Currency and culture formatted <see cref="P:InSite.Model.CustomerOrder.OrderTotal"/>.
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.PromotionProductDiscountTotal">
            <summary>
            Total of Product Promotions of the CustomerOrder
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.PromotionProductDiscountTotalDisplay">
            <summary>
            Currency and culture formatted <see cref="P:InSite.Model.CustomerOrder.PromotionProductDiscountTotal"/>.
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.PromotionOrderDiscountTotal">
            <summary>
            Total of Order Promotions of the CustomerOrder
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.PromotionOrderDiscountTotalDisplay">
            <summary>
            Currency and culture formatted <see cref="P:InSite.Model.CustomerOrder.PromotionOrderDiscountTotal"/>.
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.PromotionShippingDiscountTotal">
            <summary>
            Total of Shipping Promotions of the CustomerOrder
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.PromotionShippingDiscountTotalDisplay">
            <summary>
            Currency and culture formatted <see cref="P:InSite.Model.CustomerOrder.PromotionShippingDiscountTotal"/>.
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.PromotionTotal">
            <summary>
            Total of Product, Order and Shipping Promotions of the CustomerOrder
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.PromotionTotalDisplay">
            <summary>
            Currency and culture formatted <see cref="P:InSite.Model.CustomerOrder.PromotionTotal"/>.
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.LocalTaxableTotal">
            <summary>
            Taxable Total calculated from the Local (PostalCode) of the CustomerOrder
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.LocalTaxableTotalDisplay">
            <summary>
            Currency and culture formatted <see cref="P:InSite.Model.CustomerOrder.LocalTaxableTotal"/>.
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.StateTaxableTotal">
            <summary>
            Taxable Total calculated from the State of the CustomerOrder
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.StateTaxableTotalDisplay">
            <summary>
            Currency and culture formatted <see cref="P:InSite.Model.CustomerOrder.StateTaxableTotal"/>.
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.OrderFreightableTotal">
            <summary>
            Total of the Shippable amounts of the CustomerOrder
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.OrderFreightableTotalDisplay">
            <summary>
            Currency and culture formatted <see cref="P:InSite.Model.CustomerOrder.OrderFreightableTotal"/>.
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.OrderFreightableQuantity">
            <summary>
            Total of the Shippable quantitie sof the CustomerOrder
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.ProductOverriddenFreightTotal">
            <summary>
            Total amounts of the Products with ShippingAmountOverrides of the CustomerOrder
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.ProductOverriddenFreightTotalDisplay">
            <summary>
            Currency and culture formatted <see cref="P:InSite.Model.CustomerOrder.ProductOverriddenFreightTotal"/>.
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.GiftCardTotal">
            <summary>
            Total amount of GiftCard balances that will be applied of the CustomerOrder
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.GiftCardTotalDisplay">
            <summary>
            Currency and culture formatted <see cref="P:InSite.Model.CustomerOrder.GiftCardTotal"/>.
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.AmountPaid">
            <summary>Total Amount Paid with CreditCardTransactions including Sales and Captures minus Voids and Credits of the CustomerOrder</summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.AmountPaidDisplay">
            <summary>
            Currency and culture formatted <see cref="P:InSite.Model.CustomerOrder.AmountPaid"/>.
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.OrderGrandTotal">
            <summary>
            Order Grand Total including SubTotal, Tax, ShippingAndHandling and Promotions of the CustomerOrder
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.OrderGrandTotalDisplay">
            <summary>
            Currency and culture formatted <see cref="P:InSite.Model.CustomerOrder.OrderGrandTotal"/>.
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.OrderTotalDue">
            <summary>
            Order Total Due is the OrderGrandTotal minus the GiftCardTotal of the CustomerOrder
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.OrderTotalDueDisplay">
            <summary>
            Currency and culture formatted <see cref="P:InSite.Model.CustomerOrder.OrderTotalDue"/>.
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.TotalQtyOrdered">
            <summary>
            Total of Quantities of the OrderLines of the CustomerOrder
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.TotalWeight">
            <summary>
            Total of Quantities times ShippingWeight of the OrderLines of the CustomerOrder
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.StateTaxRate">
            <summary>
            State Object matching the ShipTo State Abbreviation of the CustomerOrder
            If the ShipVia is the StorePickup ShipVia, it will be the StorePickup State from the ApplicationSetting TaxCalculator_StorePickupStateAbbreviation
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.LocalTaxRate">
            <summary>
            LocalTaxRate Object matching the first five characters of the ShipTo PostalCode of the CustomerOrder
            If the ShipVia is the StorePickup ShipVia, it will be the StorePickup PostalCode from the ApplicationSetting TaxCalculator_StorePickupZipCode
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.LocalShippingAndHandlingTax">
            <summary>
            Local Tax on ShippingAndHandling of the CustomerOrder
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.LocalShippingAndHandlingTaxDisplay">
            <summary>
            Currency and culture formatted <see cref="P:InSite.Model.CustomerOrder.LocalShippingAndHandlingTax"/>.
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.StateShippingAndHandlingTax">
            <summary>
            State Tax on ShippingAndHandling of the CustomerOrder
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.StateShippingAndHandlingTaxDisplay">
            <summary>
            Currency and culture formatted <see cref="P:InSite.Model.CustomerOrder.StateShippingAndHandlingTax"/>.
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.TotalShippingAndHandlingTax">
            <summary>
            Total Tax on ShippingAndHandling of the CustomerOrder
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.TotalShippingAndHandlingTaxDisplay">
            <summary>
            Currency and culture formatted <see cref="P:InSite.Model.CustomerOrder.TotalShippingAndHandlingTax"/>.
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.TotalSalesTax">
            <summary>
            Total Tax excluding ShippingAndHandling Tax of the CustomerOrder
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.TotalSalesTaxDisplay">
            <summary>
            Currency and culture formatted <see cref="P:InSite.Model.CustomerOrder.TotalSalesTax"/>.
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.TotalTax">
            <summary>
            Total Tax of the CustomerOrder
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.TotalTaxDisplay">
            <summary>
            Currency and culture formatted <see cref="P:InSite.Model.CustomerOrder.TotalTax"/>.
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.OrderAffiliate">
            <summary>
            Affiliate of the CustomerOrder
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.ShipmentQuoteNumber">
            <summary>
            ShipmentQuoteNumber of the CustomerOrder
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.CustomerReference1">
            <summary>
            CustomerReference1 of the CustomerOrder
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.CustomerReference2">
            <summary>
            CustomerReference2 of the CustomerOrder
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.Buyer">
            <summary>
            Buyer of the CustomerOrder
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.BatchNumber">
            <summary>
            BatchNumber set by integration if submitted in a batch of the CustomerOrder
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.CanProcessOrder">
            <summary>
            CanProcessOrder will return false if the Customer is over their CreditLimit or on CreditHold
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.IsOrderOverCreditLimit">
            <summary>
            IsOrderOverCreditLimit will return true if the OrderGrandTotal is greater than the Customers AvailableCreditLimit
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.AvailableCreditLimit">
            <summary>
            AvailableCreditLimit is the Customers AvailableCreditLimit minus the OrderGrandTotal of the CustomerOrder
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.DataSet">
            <summary>
            DataSet is the DataSet representation of this CustomerOrder that is used for ERP Integration to submit the Order
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.IsGiftCardOnlyOrder">
            <summary>
            IsGiftCardOnlyOrder returns true if only GiftCards have been ordered on this CustomerOrder
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.IsSubscriptionOnlyOrder">
            <summary>
            IsSubscriptionOnlyOrder returns true if only Subscriptions have been ordered on this CustomerOrder
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.PassesShippingRestrictions">
            <summary>
            PassesShippingRestrictions returns false if any OrderLine fails any Shipping Restrictions
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.UserProfile">
            <summary>
            UserProfile is the UserProfile gotten by the CustomerOrder PlacedByUserName
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.OrderLines">
            <summary>
            List of OrderLines of the CustomerOrder
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.FailedShippingRestrictionOrderLines">
            <summary>
            List of OrderLines that fails Shipping Restrictions of the CustomerOrder
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.CreditCardTransactions">
            <summary>
            List of CreditCardTransactions of the CustomerOrder
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.Shipments">
            <summary>
            List of Shipments of the CustomerOrder
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.ShipmentPackages">
            <summary>
            List of ShipmentPackages of the CustomerOrder
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.CustomerOrderProperties">
            <summary>
            List of Custom Properties of the CustomerOrder
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.GiftCards">
            <summary>
            List of GiftCars applied to the CustomerOrder sorted by Balance
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.GiftCardTransactions">
            <summary>
            List of GiftCardTransactions created by the processing of the CustomerOrder
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.PromotionCodes">
            <summary>
            List of PromotionCodes that have been added to the CustomerOrder
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.AppliedPromoCodes">
            <summary>
            Comma Separated list of Promotion Codes that have been applied to the CustomerOrder
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.Promotions">
            <summary>
            List of Promotions applied to the CustomerOrder
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.Subscription">
            <summary>
            Subscription that created this CustomerOrder if it was created via Subscription Processing
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.Subscriptions">
            <summary>
            List of Subscriptions created by Subscription Products on this CustomerOrder
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.IsSubscription">
            <summary>
            IsSubscription will return true if the Subscription object is not null
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.HasSubscription">
            <summary>
            Will return true if this Order has an OrderLine that is a Subscription Product
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.InitiatedBy">
            <summary>
            
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.Approver">
            <summary>
            
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.InitiatedByUserName">
            <summary>
            
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.ApproverUserName">
            <summary>
            
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.ApproverMessage">
            <summary>
            
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.AllowCurrencyConversion">
            <summary>
            Determine if this order is eligible for currency conversions.</summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.RecalculatePromotions">
            <summary>Gets or sets a value indicating whether recalculate promotions.</summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.RecalculateTax">
            <summary>Gets or sets a value indicating whether recalculate tax.</summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.RequestedShipDate">
            <summary>
            RequestedShipDate of the CustomerOrder.
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.ShipVia">
            <summary>
            ShipVia of the CustomerOrder
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.ShipCode">
            <summary>
            Gets the ship code.
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.ERPShipCode">
            <summary>
            The ShipVia.ErpShipCode of the CustomerOrder
            </summary>
        </member>
        <member name="P:InSite.Model.CustomerOrder.VerificationSent">
            <summary>
            VerificationSent does not appear to be used anywhere
            </summary>
        </member>
        <member name="M:InSite.Model.ApplicationMessage.GenerateAllMessages">
            <summary>
            creates all possible application messages in the database, based on an embedded list
            </summary>
            <returns>string list of labels</returns>
        </member>
        <member name="P:InSite.Model.ApplicationMessage.Name">
            <summary>
            Gets or sets Name
            </summary>
        </member>
        <member name="P:InSite.Model.ApplicationMessage.WebSite">
            <summary>
            WebSite for the ApplicationMessage
            </summary>
        </member>
        <member name="P:InSite.Model.ApplicationMessage.WebSiteName">
            <summary>
            WebSite Name of the ApplicationMessage
            </summary>
        </member>
        <member name="P:InSite.Model.ApplicationMessage.Message">
            <summary>
            Gets or sets Message
            </summary>
        </member>
        <member name="T:InSite.Model.Menu">
            <summary>
            Contains the Management Console Menu
            </summary>
        </member>
        <member name="P:InSite.Model.Menu.Language">
            <summary> 
            Gets or sets the language.
            </summary>
        </member>
        <member name="T:InSite.Model.OrderLine">
            <summary>The OrderLine holds all the <see cref="P:InSite.Model.OrderLine.Product"/>s purchased in the <see cref="P:InSite.Model.OrderLine.CustomerOrder"/>.</summary>
        </member>
        <member name="M:InSite.Model.OrderLine.AddOrderLineProperty(InSite.Model.OrderLineProperty)">
            <summary>Add an <see cref="T:InSite.Model.OrderLineProperty"/> to the OrderLineProperties collection.</summary>
            <param name="value">The <see cref="T:InSite.Model.OrderLineProperty"/> to add</param>
            <remarks>If the collection already contains the value it is silently ignored</remarks>
        </member>
        <member name="M:InSite.Model.OrderLine.RemoveOrderLineProperty(InSite.Model.OrderLineProperty)">
            <summary>Remove an <see cref="T:InSite.Model.OrderLineProperty"/> from the OrderLineProperties collection.</summary>
            <param name="value">The <see cref="T:InSite.Model.OrderLineProperty"/> to be removed</param>
            <remarks>If the collection does not contain the value it is silently ignored</remarks>
        </member>
        <member name="M:InSite.Model.OrderLine.GetOrderLineProperty(System.String)">
            <summary>
            Get an <see cref="T:InSite.Model.OrderLineProperty"/> by name, if it does not exist, a new one with that name is created.
            </summary>
            <param name="name">The name of the <see cref="T:InSite.Model.OrderLineProperty"/> to get.</param>
            <returns><see cref="T:InSite.Model.OrderLineProperty"/></returns>
        </member>
        <member name="M:InSite.Model.OrderLine.GetOrderLinePropertyValue(System.String)">
            <summary>
            Get the Value of an <see cref="T:InSite.Model.OrderLineProperty"/> by name, if it does not exist, it returns blank.
            </summary>
            <param name="name">The name of the <see cref="T:InSite.Model.OrderLineProperty"/> to get.</param>
            <returns>The named <see cref="T:InSite.Model.OrderLineProperty"/>'s Value or blank if not found</returns>
        </member>
        <member name="M:InSite.Model.OrderLine.AddOrderLineConfigurationValue(InSite.Model.OrderLineConfigurationValue)">
            <summary>Add an <see cref="T:InSite.Model.OrderLineConfigurationValue"/> to the OrderConfigurationValues collection.</summary>
            <param name="value">The <see cref="T:InSite.Model.OrderLineConfigurationValue"/> to add</param>
            <remarks>If the collection already contains the value it is silently ignored</remarks>
        </member>
        <member name="M:InSite.Model.OrderLine.RemoveOrderLineConfigurationValue(InSite.Model.OrderLineConfigurationValue)">
            <summary>Remove an <see cref="T:InSite.Model.OrderLineConfigurationValue"/> from the OrderLineConfigurationValues collection.</summary>
            <param name="value">The <see cref="T:InSite.Model.OrderLineConfigurationValue"/> to be removed</param>
            <remarks>If the collection does not contain the value it is silently ignored</remarks>
        </member>
        <member name="M:InSite.Model.OrderLine.CalculatePrice(System.Boolean)">
            <summary>Delegates to <see cref="M:InSite.Model.Interfaces.IOrderLineState.CalculatePrice(System.Boolean)"/> to calculate the price for this OrderLine.</summary>
        </member>
        <member name="M:InSite.Model.OrderLine.SaveConfigDataSet">
            <summary>Saves the ConfigDataSet changes to the <see cref="P:InSite.Model.OrderLine.Product"/> on this OrderLine.</summary>
            <remarks>Must be called after you make changes to the ConfigDataSet</remarks>
        </member>
        <member name="M:InSite.Model.OrderLine.Copy">
            <summary>Returns a Copy of this OrderLine.</summary>
            <returns>The new OrderLine that is a copy of this OrderLine.</returns>
        </member>
        <member name="P:InSite.Model.OrderLine.OrderLineStateFactory">
            <summary>
            OrderLineStateFactory Plugin
            </summary>
        </member>
        <member name="P:InSite.Model.OrderLine.OrderLineState">
            <summary>
            Get Set<see cref="T:InSite.Model.Interfaces.IOrderLineState"/>.  If the <see cref="T:InSite.Model.Interfaces.IOrderLineState"/> is null it will return the
            <see cref="T:InSite.Model.Interfaces.IOrderLineState"/> from the <see cref="T:InSite.Model.Interfaces.IOrderLineStateFactory"/>.
            </summary>
        </member>
        <member name="P:InSite.Model.OrderLine.OrderNumber">
            <summary>The <see cref="P:InSite.Model.OrderLine.CustomerOrder"/> OrderNumber.</summary>
        </member>
        <member name="P:InSite.Model.OrderLine.Status">
            <summary>The OrderLine Status.</summary>
        </member>
        <member name="P:InSite.Model.OrderLine.IsActive">
            <summary>Delegates to <see cref="M:InSite.Model.Interfaces.IOrderLineState.GetIsActive"/> to determine if this OrderLine is Active.</summary>
        </member>
        <member name="P:InSite.Model.OrderLine.IsLocalTaxable">
            <summary>Delegates to <see cref="M:InSite.Model.Interfaces.IOrderLineState.GetIsLocalTaxable"/> to determine if this OrderLine is taxable at the local level.</summary>
        </member>
        <member name="P:InSite.Model.OrderLine.IsStateTaxable">
            <summary>Delegates to <see cref="M:InSite.Model.Interfaces.IOrderLineState.GetIsStateTaxable"/> to determine if this OrderLine is taxable at the state level.</summary>
        </member>
        <member name="P:InSite.Model.OrderLine.PassesShippingRestrictions">
            <summary>Delegates to <see cref="M:InSite.Model.Interfaces.IOrderLineState.GetPassesShippingRestrictions"/> to determine if this OrderLine passes shipping restrctions.</summary>
        </member>
        <member name="P:InSite.Model.OrderLine.Line">
            <summary>The OrderLine Line Number.</summary>
        </member>
        <member name="P:InSite.Model.OrderLine.CustomerPOLine">
            <summary>The OrderLine Customer PO Line.</summary>
        </member>
        <member name="P:InSite.Model.OrderLine.Release">
            <summary>The OrderLine Release Number.</summary>
        </member>
        <member name="P:InSite.Model.OrderLine.ProductName">
            <summary>The OrderLine.<see cref="P:InSite.Model.OrderLine.Product"/> Name.</summary>
        </member>
        <member name="P:InSite.Model.OrderLine.ERPNumber">
            <summary>The OrderLine.<see cref="P:InSite.Model.OrderLine.Product"/> ERPNumber.</summary>
        </member>
        <member name="P:InSite.Model.OrderLine.CustomerProductNumber">
            <summary>Delegates to <see cref="M:InSite.Model.Interfaces.IOrderLineState.GetCustomerProductNumber"/> to get the Customer Product Number.</summary>
        </member>
        <member name="P:InSite.Model.OrderLine.IsGiftCard">
            <summary>True if the OrderLine.<see cref="P:InSite.Model.OrderLine.Product"/> IsGiftCard is true.</summary>
        </member>
        <member name="P:InSite.Model.OrderLine.IsSubscription">
            <summary>True if the OrderLine contains a <see cref="P:InSite.Model.OrderLine.Product"/> that is a Subscription.</summary>
        </member>
        <member name="P:InSite.Model.OrderLine.SubscriptionProductName">
            <summary>If it is a Subscription, returns the <see cref="P:InSite.Model.OrderLine.Product"/>.Name.</summary>
        </member>
        <member name="P:InSite.Model.OrderLine.Description">
            <summary>The OrderLine Description.</summary>
        </member>
        <member name="P:InSite.Model.OrderLine.DescriptionWithAttributes">
            <summary>
            Returns the description of the OrderLine along with all OrderLineProperty name/value pairs in the following format:
            </summary>
        </member>
        <member name="P:InSite.Model.OrderLine.Notes">
            <summary>The OrderLine Notes.</summary>
        </member>
        <member name="P:InSite.Model.OrderLine.QtyOrdered">
            <summary>The OrderLine QtyOrdered.  Setting the value calls <see cref="M:InSite.Model.Interfaces.IOrderLineState.SetQtyOrdered(System.Decimal)"/>.</summary>
        </member>
        <member name="P:InSite.Model.OrderLine.QtySold">
            <summary>Gets or sets the quantity sold.</summary>
        </member>
        <member name="P:InSite.Model.OrderLine.RegularPrice">
            <summary>The OrderLine RegularPrice.</summary>
        </member>
        <member name="P:InSite.Model.OrderLine.RegularPriceDisplay">
            <summary>Currency and culture formatted <see cref="P:InSite.Model.OrderLine.RegularPrice"/>.</summary>
        </member>
        <member name="P:InSite.Model.OrderLine.ExtendedRegularPrice">
            <summary>Delegates to <see cref="M:InSite.Model.Interfaces.IOrderLineState.GetExtendedRegularPrice"/> to get the Extended Regular Price.</summary>
        </member>
        <member name="P:InSite.Model.OrderLine.ExtendedRegularPriceDisplay">
            <summary>Currency and culture formatted <see cref="P:InSite.Model.OrderLine.ExtendedRegularPrice"/>.</summary>
        </member>
        <member name="P:InSite.Model.OrderLine.ActualPrice">
            <summary>The OrderLine ActualPrice. Setting the value calls <see cref="M:InSite.Model.Interfaces.IOrderLineState.SetActualPrice(System.Decimal)"/>.</summary>
        </member>
        <member name="P:InSite.Model.OrderLine.ActualPriceDisplay">
            <summary>Currency and culture formatted <see cref="P:InSite.Model.OrderLine.ActualPrice"/>.</summary>
        </member>
        <member name="P:InSite.Model.OrderLine.ExtendedActualPrice">
            <summary>Delegates to <see cref="M:InSite.Model.Interfaces.IOrderLineState.GetExtendedActualPrice"/> to get the Extended Regular Price.</summary>
        </member>
        <member name="P:InSite.Model.OrderLine.ExtendedActualPriceDisplay">
            <summary>Currency and culture formatted <see cref="P:InSite.Model.OrderLine.ExtendedActualPrice"/>.</summary>
        </member>
        <member name="P:InSite.Model.OrderLine.UnitOfMeasure">
            <summary>The OrderLine UnitOfMeasure.</summary>
        </member>
        <member name="P:InSite.Model.OrderLine.UnitOfMeasureDisplay">
            <summary>Display version of UnitOfMeasure (supports translation)</summary>
        </member>
        <member name="P:InSite.Model.OrderLine.QtyShipped">
            <summary>The OrderLine QtyShipped.</summary>
        </member>
        <member name="P:InSite.Model.OrderLine.TaxCode1">
            <summary>The OrderLine TaxCode1.</summary>
        </member>
        <member name="P:InSite.Model.OrderLine.TaxCode2">
            <summary>The OrderLine TaxCode2.</summary>
        </member>
        <member name="P:InSite.Model.OrderLine.DueDate">
            <summary>The OrderLine DueDate.</summary>
        </member>
        <member name="P:InSite.Model.OrderLine.PromiseDate">
            <summary>The OrderLine PromiseDate.</summary>
        </member>
        <member name="P:InSite.Model.OrderLine.ShipSite">
            <summary>The OrderLine ShipSite.</summary>
        </member>
        <member name="P:InSite.Model.OrderLine.Warehouse">
            <summary>The OrderLine Warehouse.</summary>
        </member>
        <member name="P:InSite.Model.OrderLine.ShipDate">
            <summary>The OrderLine ShipDate.</summary>
        </member>
        <member name="P:InSite.Model.OrderLine.CostCode">
            <summary>The OrderLine CostCode.</summary>
        </member>
        <member name="P:InSite.Model.OrderLine.AdditionalCharges">
            <summary>
            Gets or sets the additional charges.
            </summary>
            <value>
            The additional charges.
            </value>
        </member>
        <member name="P:InSite.Model.OrderLine.LineGrandTotal">
            <summary>
            Gets or sets the line grand total.
            </summary>
            <value>
            The line grand total.
            </value>
        </member>
        <member name="P:InSite.Model.OrderLine.WebSite">
            <summary>The OrderLine <see cref="P:InSite.Model.OrderLine.WebSite"/>.</summary>
        </member>
        <member name="P:InSite.Model.OrderLine.CustomerOrder">
            <summary>The OrderLine <see cref="P:InSite.Model.OrderLine.CustomerOrder"/>.</summary>
        </member>
        <member name="P:InSite.Model.OrderLine.Product">
            <summary>The OrderLine <see cref="P:InSite.Model.OrderLine.Product"/>.</summary>
        </member>
        <member name="P:InSite.Model.OrderLine.OrderLineSavingsAmount">
            <summary>Delegates to <see cref="M:InSite.Model.Interfaces.IOrderLineState.GetOrderLineSavingsAmount"/> to get the Savings Amount.</summary>
        </member>
        <member name="P:InSite.Model.OrderLine.OrderLineSavingsAmountDisplay">
            <summary>Currency and culture formatted <see cref="P:InSite.Model.OrderLine.OrderLineSavingsAmount"/>.</summary>
        </member>
        <member name="P:InSite.Model.OrderLine.OrderLineSavingsPercent">
            <summary>Delegates to <see cref="M:InSite.Model.Interfaces.IOrderLineState.GetOrderLineSavingsPercent"/> to get the Savings Percent.</summary>
        </member>
        <member name="P:InSite.Model.OrderLine.ProductId">
            <summary>Primary Unique Identifier of the <see cref="P:InSite.Model.OrderLine.Product"/> on this OrderLine.</summary>
        </member>
        <member name="P:InSite.Model.OrderLine.IsPromotionItem">
            <summary>Returns true if the product in the OrderLine is completely free due to the application of a promotion.</summary>
        </member>
        <member name="P:InSite.Model.OrderLine.PromotionName">
            <summary>If there is a <see cref="T:InSite.Model.Promotion"/> applied to this OrderLine, the Name of the <see cref="T:InSite.Model.Promotion"/>, blank otherwise.</summary>
        </member>
        <member name="P:InSite.Model.OrderLine.PromotionResult">
            <summary>The <see cref="P:InSite.Model.OrderLine.PromotionResult"/> applied to this OrderLine if there is one.</summary>
        </member>
        <member name="P:InSite.Model.OrderLine.GiftCard">
            <summary>
            If this OrderLine contains a <see cref="P:InSite.Model.OrderLine.Product"/> that is a <see cref="P:InSite.Model.OrderLine.GiftCard"/>,
            this will be the generated <see cref="P:InSite.Model.OrderLine.GiftCard"/> after order submission.
            </summary>
        </member>
        <member name="P:InSite.Model.OrderLine.OrderLineRfq">
            <summary>
            Request for Quote details saved in <see cref="P:InSite.Model.OrderLine.OrderLineRfq"/> if this orderline is on an RFQ order.
            </summary>
        </member>
        <member name="P:InSite.Model.OrderLine.GiftCardNumber">
            <summary>
            If this OrderLine contains a <see cref="P:InSite.Model.OrderLine.Product"/> that is a <see cref="P:InSite.Model.OrderLine.GiftCard"/>,
            this will be the generated <see cref="P:InSite.Model.OrderLine.GiftCard"/>.GiftCardNumber after order submission.
            </summary>
        </member>
        <member name="P:InSite.Model.OrderLine.GiftCardAmount">
            <summary>
            If this OrderLine contains a <see cref="P:InSite.Model.OrderLine.Product"/> that is a <see cref="P:InSite.Model.OrderLine.GiftCard"/>,
            this will be the generated <see cref="P:InSite.Model.OrderLine.GiftCard"/>.GiftCardAmount after order submission.
            </summary>
        </member>
        <member name="P:InSite.Model.OrderLine.GiftCardAmountDisplay">
            <summary>Currency and culture formatted <see cref="P:InSite.Model.OrderLine.GiftCardAmount"/>.</summary>
        </member>
        <member name="P:InSite.Model.OrderLine.GiftCardBalance">
            <summary>
            If this OrderLine contains a <see cref="P:InSite.Model.OrderLine.Product"/> that is a <see cref="P:InSite.Model.OrderLine.GiftCard"/>,
            this will be the generated <see cref="P:InSite.Model.OrderLine.GiftCard"/>.GiftCardBalance after order submission.
            </summary>
        </member>
        <member name="P:InSite.Model.OrderLine.GiftCardBalanceDisplay">
            <summary>Currency and culture formatted <see cref="P:InSite.Model.OrderLine.GiftCardBalance"/>.</summary>
        </member>
        <member name="P:InSite.Model.OrderLine.GiftCardExpiration">
            <summary>
            If this OrderLine contains a <see cref="P:InSite.Model.OrderLine.Product"/> that is a <see cref="P:InSite.Model.OrderLine.GiftCard"/>,
            this will be the generated <see cref="P:InSite.Model.OrderLine.GiftCard"/>.GiftCardExpiration after order submission.
            </summary>
        </member>
        <member name="P:InSite.Model.OrderLine.OrderLineProperties">
            <summary>The <see cref="T:InSite.Model.OrderLineProperty"/>s attached to this OrderLine.</summary>
        </member>
        <member name="P:InSite.Model.OrderLine.OrderLineConfigurationValues">
            <summary>
            If this OrderLine contains a <see cref="P:InSite.Model.OrderLine.Product"/> that is attached to a <see cref="T:InSite.Model.Configuration"/>,
            <see cref="T:InSite.Model.OrderLineConfigurationValue"/>s contain the options selected during the Configuration process.
            </summary>
        </member>
        <member name="P:InSite.Model.OrderLine.ConfigDataSet">
            <summary>DataSet representing the Configuration Information for the <see cref="P:InSite.Model.OrderLine.Product"/> on this OrderLine.</summary>
        </member>
        <member name="P:InSite.Model.OrderLine.ConfiguredOptions">
            <summary>Gets the list of selected Configuration Options.</summary>
        </member>
        <member name="P:InSite.Model.OrderLine.DescriptionWithConfiguredOptions">
            <summary>Gets OrderLine Description with the list of selected Configuration Options.</summary>
        </member>
        <member name="T:InSite.Model.OrderLineProperty">
            <summary>
            Domain Object which represents addition attributes for the orderline that fall outside the scope of the base orderline
            </summary>
        </member>
        <member name="M:InSite.Model.OrderLineProperty.ToString">
            <summary>
            override ToString()
            </summary>
            <returns><see cref="T:System.String"/></returns>
            <remarks>Override for the ToString() method, returns the Name property</remarks>
        </member>
        <member name="P:InSite.Model.OrderLineProperty.Name">
            <summary>
            Get Set Name
            </summary>
            <remarks>Name property acts as the key in the key value pairing. An <see cref="P:InSite.Model.OrderLineProperty.OrderLine"/> can have as many <see cref="T:InSite.Model.OrderLineProperty"/>'s as you like
            but the Name will be unique to the collection
            </remarks>
        </member>
        <member name="P:InSite.Model.OrderLineProperty.Value">
            <summary>
            Get Set Value
            </summary>
            <remarks>The value of this <see cref="T:InSite.Model.OrderLineProperty"/></remarks>
        </member>
        <member name="P:InSite.Model.OrderLineProperty.OrderLine">
            <summary>
            Get Set <see cref="P:InSite.Model.OrderLineProperty.OrderLine"/>
            </summary>
            <remarks>Returns the parent <see cref="P:InSite.Model.OrderLineProperty.OrderLine"/> which contains this <see cref="T:InSite.Model.OrderLineProperty"/> in it's collection of OrderLineProperties</remarks>
        </member>
        <member name="P:InSite.Model.OrderLineProperty.Hidden">
            <summary>
            Get Set Hidden
            </summary>
            <remarks>Convenience property to be consumed by the UI for visibility of this <see cref="T:InSite.Model.OrderLineProperty"/></remarks>
        </member>
        <member name="T:InSite.Model.ShipmentPackageLine">
            <summary>
            Represents a ShipmentPackageLine on the <see cref="P:InSite.Model.ShipmentPackageLine.ShipmentPackage"/> 
            </summary>
        </member>
        <member name="P:InSite.Model.ShipmentPackageLine.ShipmentPackage">
            <summary>
            Gets or sets the parent <see cref="P:InSite.Model.ShipmentPackageLine.ShipmentPackage"/> for this <see cref="T:InSite.Model.ShipmentPackageLine"/>
            </summary>
        </member>
        <member name="P:InSite.Model.ShipmentPackageLine.ProductName">
            <summary>
            Gets or sets the ProductName
            </summary>
        </member>
        <member name="P:InSite.Model.ShipmentPackageLine.ProductCode">
            <summary>
            Gets or sets the ProductCode
            </summary>
        </member>
        <member name="P:InSite.Model.ShipmentPackageLine.ProductDescription">
            <summary>
            Gets or sets the ProductDescription
            </summary>
        </member>
        <member name="P:InSite.Model.ShipmentPackageLine.Price">
            <summary>
            Gets or sets the Price
            </summary>
        </member>
        <member name="P:InSite.Model.ShipmentPackageLine.QtyOrdered">
            <summary>
            Gets or sets the QtyOrdered
            </summary>
        </member>
        <member name="P:InSite.Model.ShipmentPackageLine.QtyShipped">
            <summary>
            Gets or sets the QtyShipped
            </summary>
        </member>
        <member name="P:InSite.Model.ShipmentPackageLine.ExtendedPrice">
            <summary>
            Gets or sets the ExtendedPrice
            </summary>
        </member>
        <member name="P:InSite.Model.ShipmentPackageLine.OrderLine">
            <summary>
            Gets or sets <see cref="P:InSite.Model.ShipmentPackageLine.OrderLine"/> that this <see cref="T:InSite.Model.ShipmentPackageLine"/> represents
            </summary>
            <remarks>
            When setting, it will also set the <see cref="P:InSite.Model.ShipmentPackageLine.ProductName"/> from <see cref="P:InSite.Model.ShipmentPackageLine.OrderLine"/>'s <see cref="P:InSite.Model.Product.Name"/> and
            <see cref="P:InSite.Model.ShipmentPackageLine.ProductDescription"/> from the <see cref="P:InSite.Model.ShipmentPackageLine.OrderLine"/>.Description and the <see cref="P:InSite.Model.ShipmentPackageLine.ProductCode"/> from the <see cref="P:InSite.Model.ShipmentPackageLine.OrderLine"/>.<see cref="P:InSite.Model.Product.ProductCode"/> and
            <see cref="P:InSite.Model.ShipmentPackageLine.QtyOrdered"/> from the <see cref="P:InSite.Model.ShipmentPackageLine.OrderLine"/>.QtyOrdered
            </remarks>
        </member>
        <member name="M:InSite.Model.PaymentMethod.IsMatch(System.String)">
            <summary>
            Method returns bool of whether provided name matches the <see cref="T:InSite.Model.PaymentMethod"/>
            </summary>
            <param name="name">name to see if this <see cref="T:InSite.Model.PaymentMethod"/> matches the provided parameter</param>
            <returns><see cref="T:System.Boolean"/></returns>
            <remarks>
            Matches on <see cref="P:InSite.Model.PaymentMethod.Name"/> to see if the provided name matches
            </remarks>
        </member>
        <member name="P:InSite.Model.PaymentMethod.Name">
            <summary>
            Get or set Name
            </summary>
        </member>
        <member name="P:InSite.Model.PaymentMethod.Description">
            <summary>
            Get or set Description
            </summary>
        </member>
        <member name="P:InSite.Model.PaymentMethod.ActivateOn">
            <summary>
            Get or set of ActivateOn
            </summary>
        </member>
        <member name="P:InSite.Model.PaymentMethod.DeactivateOn">
            <summary>
            Get or set of DeactivateOn
            </summary>
        </member>
        <member name="P:InSite.Model.PaymentMethod.IsCreditCard">
            <summary>
            Get or set of IsCreditCard
            </summary>
        </member>
        <member name="P:InSite.Model.PaymentMethod.IsActive">
            <summary>
            Get of IsActive
            </summary>
            <remarks>
            returns true if <see cref="P:InSite.Model.PaymentMethod.IsActive"/> is greater than <see cref="T:InSite.Model.Services.DateTimeProvider"/>.Current.Now and <see cref="P:InSite.Model.PaymentMethod.DeactivateOn"/> is not null and greater than <see cref="T:InSite.Model.Services.DateTimeProvider"/>.Current.Now
            </remarks>
        </member>
        <member name="T:InSite.Model.Services.EmailService">
            <summary>
            Service that offers functions for sending emails and parsing email templates
            </summary>
        </member>
        <member name="M:InSite.Model.Services.EmailService.#ctor(InSite.Model.Interfaces.IUnitOfWorkFactory)">
            <summary>
            Dependency Injection constructor.
            </summary>
            <param name="unitOfWorkFactory"><see cref="T:InSite.Model.Interfaces.IUnitOfWork"/></param>
        </member>
        <member name="M:InSite.Model.Services.EmailService.ParseTemplate(System.String,System.Dynamic.ExpandoObject)">
            <summary>
            Parse the template represented by the <paramref name="template"/> using the given <paramref name="model"/> parameter
            </summary>
            <param name="template">A template in string form that uses Razor syntax</param>
            <param name="model">An <see cref="T:System.Dynamic.ExpandoObject"/> that represents the model for the email.</param>
            <returns></returns>
        </member>
        <member name="M:InSite.Model.Services.EmailService.ParseTemplate(System.String,System.Dynamic.ExpandoObject,System.String)">
            <summary>
            Parse the template represented by the <paramref name="template"/> using the given <paramref name="model"/> parameter
            </summary>
            <param name="template">A template in string form that uses Razor syntax</param>
            <param name="model">An <see cref="T:System.Dynamic.ExpandoObject"/> that represents the model for the email.</param>
            <param name="templateName">template name for caching (required for good performance)</param>
            <returns></returns>
        </member>
        <member name="M:InSite.Model.Services.EmailService.ProcessEmailQueue">
            <summary>
            Looks for any <see cref="T:InSite.Model.EmailMessage"/> that have not been delivered yet and attempts to resend them.
            </summary>
        </member>
        <member name="M:InSite.Model.Services.EmailService.ConvertEmailMessageToMailMessage(InSite.Model.EmailMessage)">
            <summary>
            Converts the given <paramref name="emailMessage"/> into a <see cref="T:System.Net.Mail.MailMessage"/>
            </summary>
            <param name="emailMessage"></param>
            <returns><see cref="T:System.Net.Mail.MailMessage"/></returns>
        </member>
        <member name="M:InSite.Model.Services.EmailService.SendEmail(InSite.Model.Interfaces.SendEmailParameter)">
            <summary>
            Sends an email
            </summary>
            <param name="parameter">The <see cref="T:InSite.Model.Interfaces.SendEmailParameter"/>.</param>
            <remarks>This will create an <see cref="T:InSite.Model.EmailMessage"/> and then try to send the Email with the current SMTP settings. On failure the exception is caught and stored in a related
            <see cref="T:InSite.Model.EmailMessageDeliveryAttempt"/>. The <see cref="T:InSite.Model.EmailMessage"/> can be resent later using new SMTP settings.</remarks>
        </member>
        <member name="M:InSite.Model.Services.EmailService.GetOrCreateEmailList(System.String,System.String)">
            <summary>
            Gets or creates an <see cref="T:InSite.Model.EmailList"/> for the given <paramref name="name"/>. Will create with <paramref name="defaultSubject"/>.
            </summary>
            <param name="name"></param>
            <param name="defaultSubject"></param>
            <returns><see cref="T:InSite.Model.EmailList"/></returns>
        </member>
        <member name="M:InSite.Model.Services.EmailService.SendEmailList(InSite.Model.EmailList,System.Collections.Generic.IList{System.String},System.Dynamic.ExpandoObject,System.String)">
            <summary>
            Sends the given <see cref="T:InSite.Model.EmailList"/> to the supplied <paramref name="toAddresses"/> parsing the <see cref="T:InSite.Model.EmailTemplate"/> with the given <paramref name="templateModel"/>.
            and using the given <paramref name="subject"/>, falling back to the <see cref="T:InSite.Model.EmailList"/>.Subject if the <paramref name="subject"/> is not supplied.
            </summary>
            <param name="emailList"></param>
            <param name="toAddresses"></param>
            <param name="templateModel"></param>
            <param name="subject"></param>
        </member>
        <member name="M:InSite.Model.Services.EmailService.ParseAndSendEmail(System.String,System.Dynamic.ExpandoObject,System.String,InSite.Model.Interfaces.SendEmailParameter)">
            <summary>
            Creates an email from a Razor template and sends it
            </summary>
            <param name="htmlTemplate">Razor template</param>
            <param name="templateModel">data to apply to template</param>
            <param name="emailTemplateName">caching key for template</param>
            <param name="sendEmailParamter">email parameters</param>
        </member>
        <member name="M:InSite.Model.Services.EmailService.SendEmailList(InSite.Model.EmailList,System.String,System.Dynamic.ExpandoObject,System.String)">
            <summary>
            Sends the given <see cref="T:InSite.Model.EmailList"/> to the supplied <paramref name="toAddress"/> parsing the <see cref="T:InSite.Model.EmailTemplate"/> with the given <paramref name="templateModel"/>
            and using the given <paramref name="subject"/>, falling back to the <see cref="T:InSite.Model.EmailList"/>.Subject if the <paramref name="subject"/> is not supplied.
            </summary>
            <param name="emailList"></param>
            <param name="toAddress"></param>
            <param name="templateModel"></param>
            <param name="subject"></param>
        </member>
        <member name="M:InSite.Model.Services.EmailService.SubscribeEmailToList(System.String,System.String,InSite.Model.Interfaces.IUnitOfWork)">
            <summary>
            Subscribes the given <paramref name="email"/> to the <see cref="T:InSite.Model.EmailList"/> identified by <paramref name="emailListName"/>
            </summary>
            <param name="emailListName"></param>
            <param name="email"></param>
            <param name="unitOfWork"></param>
        </member>
        <member name="M:InSite.Model.Services.EmailService.UnsubscribeEmailFromList(System.String,System.String,InSite.Model.Interfaces.IUnitOfWork)">
            <summary>
            Unsubscribes the given <paramref name="email"/> to the <see cref="T:InSite.Model.EmailList"/> identified by <paramref name="emailListName"/>
            </summary>
            <param name="emailListName"></param>
            <param name="email"></param>
            <param name="unitOfWork"></param>
        </member>
        <member name="M:InSite.Model.Services.EmailService.IsEmailSubscribedToList(System.String,System.String,InSite.Model.Interfaces.IUnitOfWork)">
            <summary>
            Determines whether [is email subscribed to list] [the specified email list name].
            </summary>
            <param name="emailListName">Name of the email list.</param>
            <param name="email">The email.</param>
            <param name="unitOfWork">The unit of work.</param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:InSite.Model.Services.GeocoderProvider.GeocoderProviderFactory">
            <summary>
            The standard <see cref="T:InSite.Model.Interfaces.IGeocoderProviderFactory"/> used to get <see cref="T:InSite.Model.Interfaces.IGeocoderProvider"/> objects;
            </summary>
        </member>
        <member name="M:InSite.Model.Services.GeocoderProvider.GeocoderProviderFactory.#ctor(Microsoft.Practices.ServiceLocation.IServiceLocator)">
            <summary>
            Dependency Injection constructor.
            </summary>
            <param name="serviceLocator">The ServiceLocator to use to resolve <see cref="T:InSite.Model.Interfaces.IGeocoderProvider"/> from Ioc.</param>
        </member>
        <member name="M:InSite.Model.Services.GeocoderProvider.GeocoderProviderFactory.GetGeocoderProvider(System.String)">
            <summary>
            This method will use the provided key to determine what GeocoderProvider to use.  If the requested key is not handled specificaly,
            a default provider will be returned
            </summary>
            <param name="geocoderKey">The key used to determine what implementation of <see cref="T:InSite.Model.Interfaces.IGeocoderProvider"/> to return.</param>
            <returns>A new instance of an object that implements <see cref="T:InSite.Model.Interfaces.IGeocoderProvider"/></returns>
        </member>
        <member name="T:InSite.Model.Services.ImportExport.DealerImportExport">
            <summary>The Standard Dealer Import/Export Service</summary>
        </member>
        <member name="T:InSite.Model.Services.ImportExport.ImportExportService_Generic`1">
            <summary>
            Standard Base Generic implementation of the Import and Export Service for BusinessObjects
            Inherit from this class to create your own implementation of an Import/Export for a BusinessObject
            </summary>
            <typeparam name="T">Business Object Type</typeparam>
        </member>
        <member name="M:InSite.Model.Services.ImportExport.ImportExportService_Generic`1.#ctor(InSite.Model.Interfaces.IUnitOfWork)">
            <summary>Constructor which will get IUnitOfWork injected from IOC Container</summary>
            <param name="unitOfWork"></param>
        </member>
        <member name="M:InSite.Model.Services.ImportExport.ImportExportService_Generic`1.ImportFile(System.String,System.String)">
            <summary>Import a File to Insert and Update Objects, standard method reads an Excel Spreadsheet in to a DataSet using Gembox</summary>
            <param name="pathName">Path to File</param>
            <param name="fileName">Name of File</param>
            <returns>List of imported Objects (they are not saved to the database)</returns>
        </member>
        <member name="M:InSite.Model.Services.ImportExport.ImportExportService_Generic`1.NormalImport(System.Data.DataSet)">
            <summary>NormalImport imports Normal / Parent Objects, called from ImportFile when doing a Normal Import and not a Child Import</summary>
            <param name="dataSet">DataSet of data to read from Import File</param>
            <returns></returns>
        </member>
        <member name="M:InSite.Model.Services.ImportExport.ImportExportService_Generic`1.GetOrCreateObjectForRow(System.Collections.Generic.List{`0},System.Data.DataRow)">
            <summary>GetOrCreateObjectForRow is called from NormalImport at the top of the loop through the Import DataSet to get or create the Object we are Importing for that Row</summary>
            <param name="list">List of objects currently being imported</param>
            <param name="row">DataRow we are Importing</param>
            <returns>Instance of the Object found or Created for the DataRow we are Importing</returns>
        </member>
        <member name="M:InSite.Model.Services.ImportExport.ImportExportService_Generic`1.ChildImport(System.Data.DataSet)">
            <summary>ChildImport imports the Children Records specified by the Id column of the Parent in the Import File, called from Import File when doing a Child Import</summary>
            <param name="dataSet">DataSet of data to read from Import File</param>
            <returns></returns>
        </member>
        <member name="M:InSite.Model.Services.ImportExport.ImportExportService_Generic`1.GetOrCreateChildObjectForRow(`0,System.String,System.Data.DataRow)">
            <summary>GetOrCreateChildObjectForRow is called from ChildImport at the top of the loop through the Import DataSet to get or create the Object we are Importing for that Row</summary>
            <param name="parentObject">The Parent Object</param>
            <param name="childObjectName">The Name of the Child Object Type</param>
            <param name="row">DataRow we are Importing</param>
            <returns>Instance of the Child Object found ror Created for the DataRow we are Importing</returns>
        </member>
        <member name="M:InSite.Model.Services.ImportExport.ImportExportService_Generic`1.UpdateObjectWithRow(System.Object,System.Data.DataRow)">
            <summary>UpdateObjectWithRow updates the passed in Model Object with the current iteration of the DataRow, called from NormalImport and ChildImport</summary>
            <param name="row">DataRow to update Model Object with</param>
            <param name="modelObject">Model Object to update</param>
        </member>
        <member name="M:InSite.Model.Services.ImportExport.ImportExportService_Generic`1.ProcessImportDictionaries(System.String,System.Data.DataSet)">
            <summary>ProccessImportDictionaries processes the ApplicationDictionaries for the Object in the Import File</summary>
            <param name="objectName">Object to Import</param>
            <param name="dataSet">DataSet of data read from Import File</param>
            <returns></returns>
        </member>
        <member name="M:InSite.Model.Services.ImportExport.ImportExportService_Generic`1.ExportFile(System.String,InSite.Model.SOAFilterObject,System.IO.Stream,System.String)">
            <summary>Export a List of Objects based on the Application Dictionaries to the specified outputStream</summary>
            <param name="objectName">Name of Objects to Export</param>
            <param name="filter">How to filter the Objects to Export</param>
            <param name="outputStream">Stream to write the Export to</param>
            <param name="childPropertyName">If Exporting Children of Object, name of Child Property</param>
        </member>
        <member name="M:InSite.Model.Services.ImportExport.ImportExportService_Generic`1.ExportXls(System.Collections.IList,System.IO.Stream,System.String)">
            <summary>ExportXls writes the list of Objects out to the outputStream using Gembox to write and Excel Spreadsheet, called from ExportFile</summary>
            <param name="list">Objects to write</param>
            <param name="outputStream">Stream to write Excel Spreadsheet to</param>
            <param name="parentPropertyName">Optional name of Parent Property</param>
        </member>
        <member name="M:InSite.Model.Services.ImportExport.ImportExportService_Generic`1.FilterExportList(System.Collections.IList)">
            <summary>
            Hook to allow filtering the data list in inherited classes, base implementation does nothing.
            </summary>
            <param name="list"></param>
            <returns></returns>
        </member>
        <member name="M:InSite.Model.Services.ImportExport.ImportExportService_Generic`1.CreateExportParentLabels(System.String,System.Type,GemBox.Spreadsheet.ExcelWorksheet,System.Int32,System.Int32,System.Collections.Generic.List{InSite.Model.ApplicationDictionary})">
            <summary>
            Create the Labels for the Parent Object in the spreadsheet if it's a Child Export.
            </summary>
            <param name="parentPropertyName"></param>
            <param name="type"></param>
            <param name="ws"></param>
            <param name="rowIndex"></param>
            <param name="cellIndex"></param>
            <param name="parentDicts"></param>
            <returns></returns>
        </member>
        <member name="M:InSite.Model.Services.ImportExport.ImportExportService_Generic`1.CreateExportObjectLabels(System.Type,GemBox.Spreadsheet.ExcelWorksheet,System.Int32,System.Int32,System.Collections.Generic.IList{InSite.Model.ApplicationDictionary})">
            <summary>
            Create the Labels for the Object in the spreadsheet.
            </summary>
            <param name="type"></param>
            <param name="ws"></param>
            <param name="rowIndex"></param>
            <param name="cellIndex"></param>
            <param name="dicts"></param>
        </member>
        <member name="M:InSite.Model.Services.ImportExport.ImportExportService_Generic`1.CreateExportParentRow(System.Object,System.Object,GemBox.Spreadsheet.ExcelWorksheet,System.Int32,System.Int32,System.Collections.Generic.List{InSite.Model.ApplicationDictionary})">
            <summary>
            Creates the Data Row for the Parent Object in the spreadsheet if it's a Child Export.
            </summary>
            <param name="parent"></param>
            <param name="obj"></param>
            <param name="ws"></param>
            <param name="rowIndex"></param>
            <param name="cellIndex"></param>
            <param name="parentDicts"></param>
            <returns></returns>
        </member>
        <member name="M:InSite.Model.Services.ImportExport.ImportExportService_Generic`1.CreateExportObjectRow(System.Type,System.Object,GemBox.Spreadsheet.ExcelWorksheet,System.Int32,System.Int32,System.Collections.Generic.IList{InSite.Model.ApplicationDictionary})">
            <summary>
            Create the Data Row for the Object in the spreadsheet.
            </summary>
            <param name="type"></param>
            <param name="obj"></param>
            <param name="ws"></param>
            <param name="rowIndex"></param>
            <param name="cellIndex"></param>
            <param name="dicts"></param>
        </member>
        <member name="M:InSite.Model.Services.ImportExport.ImportExportService_Generic`1.GetLabel(InSite.Model.ApplicationDictionary)">
            <summary>
            Gets the Label Value for the <see cref="T:InSite.Model.ApplicationDictionary"/> of the property.
            </summary>
            <param name="applicationDictionary"></param>
            <returns></returns>
        </member>
        <member name="M:InSite.Model.Services.ImportExport.DealerImportExport.UpdateObjectWithRow(System.Object,System.Data.DataRow)">
            <summary>UpdateObjectWithRow updates the passed in Model Object with the current iteration of the DataRow, called from NormalImport and ChildImport</summary>
            <param name="row">DataRow to update Model Object with</param>
            <param name="modelObject">Model Object to update</param>
        </member>
        <member name="T:InSite.Model.Services.ImportExport.CategoryImportExport">
            <summary>The Standard Category Import/Export Service</summary>
        </member>
        <member name="M:InSite.Model.Services.ImportExport.CategoryImportExport.UpdateObjectWithRow(System.Object,System.Data.DataRow)">
            <summary>UpdateObjectWithRow updates the passed in Model Object with the current iteration of the DataRow, called from NormalImport and ChildImport</summary>
            <param name="row">DataRow to update Model Object with</param>
            <param name="modelObject">Model Object to update</param>
        </member>
        <member name="M:InSite.Model.Services.ImportExport.CategoryImportExport.ImportChildren(InSite.Model.Category,System.Data.DataRow)">
            <summary>ImportChildren extends the Import to allow Child Columns to be specified in the Import Spreadsheet for Category to Import Children Objects</summary>
            <param name="parentCategory">The Category being Imported</param>
            <param name="row">The current DataRow being processed by the Import</param>
        </member>
        <member name="T:InSite.Model.Services.ImportExport.ContentManagerImportExport">
            <summary>The Standard <see cref="T:InSite.Model.ContentManager"/> Import/Export Service</summary>
        </member>
        <member name="M:InSite.Model.Services.ImportExport.ContentManagerImportExport.GetOrCreateChildObjectForRow(InSite.Model.ContentManager,System.String,System.Data.DataRow)">
            <summary>
            Override to get the current un-approved revision, if there is none, create a new revision.
            </summary>
            <param name="parentObject"></param>
            <param name="childObjectName"></param>
            <param name="row"></param>
            <returns></returns>
        </member>
        <member name="M:InSite.Model.Services.ImportExport.ContentManagerImportExport.UpdateObjectWithRow(System.Object,System.Data.DataRow)">
            <summary>
            Override to only update the HtmlContent field.
            </summary>
            <param name="modelObject"></param>
            <param name="row"></param>
        </member>
        <member name="M:InSite.Model.Services.ImportExport.ContentManagerImportExport.ExportFile(System.String,InSite.Model.SOAFilterObject,System.IO.Stream,System.String)">
            <summary>
            Override to always export the <see cref="T:InSite.Model.Content"/>s Collection of the <see cref="T:InSite.Model.ContentManager"/>.
            </summary>
            <param name="objectName"></param>
            <param name="filter"></param>
            <param name="outputStream"></param>
            <param name="childPropertyName"></param>
        </member>
        <member name="M:InSite.Model.Services.ImportExport.ContentManagerImportExport.CreateExportParentLabels(System.String,System.Type,GemBox.Spreadsheet.ExcelWorksheet,System.Int32,System.Int32,System.Collections.Generic.List{InSite.Model.ApplicationDictionary})">
            <summary>
            Override to provide Parent Labels for <see cref="T:InSite.Model.Content"/> from <see cref="T:InSite.Model.ContentManager"/>.
            </summary>
            <param name="parentPropertyName"></param>
            <param name="type"></param>
            <param name="ws"></param>
            <param name="rowIndex"></param>
            <param name="cellIndex"></param>
            <param name="parentDicts"></param>
            <returns></returns>
        </member>
        <member name="M:InSite.Model.Services.ImportExport.ContentManagerImportExport.CreateExportParentRow(System.Object,System.Object,GemBox.Spreadsheet.ExcelWorksheet,System.Int32,System.Int32,System.Collections.Generic.List{InSite.Model.ApplicationDictionary})">
            <summary>
            Override to provider Parent Data Row for <see cref="T:InSite.Model.Content"/> from <see cref="T:InSite.Model.ContentManager"/>.
            </summary>
            <param name="parent"></param>
            <param name="obj"></param>
            <param name="ws"></param>
            <param name="rowIndex"></param>
            <param name="cellIndex"></param>
            <param name="parentDicts"></param>
            <returns></returns>
        </member>
        <member name="M:InSite.Model.Services.ImportExport.ContentManagerImportExport.CreateExportObjectLabels(System.Type,GemBox.Spreadsheet.ExcelWorksheet,System.Int32,System.Int32,System.Collections.Generic.IList{InSite.Model.ApplicationDictionary})">
            <summary>
            Override to provider <see cref="T:InSite.Model.Content"/> Labels.
            </summary>
            <param name="type"></param>
            <param name="ws"></param>
            <param name="rowIndex"></param>
            <param name="cellIndex"></param>
            <param name="dicts"></param>
        </member>
        <member name="M:InSite.Model.Services.ImportExport.ContentManagerImportExport.CreateExportObjectRow(System.Type,System.Object,GemBox.Spreadsheet.ExcelWorksheet,System.Int32,System.Int32,System.Collections.Generic.IList{InSite.Model.ApplicationDictionary})">
            <summary>
            Override to provide <see cref="T:InSite.Model.Content"/> Data.
            </summary>
            <param name="type"></param>
            <param name="obj"></param>
            <param name="ws"></param>
            <param name="rowIndex"></param>
            <param name="cellIndex"></param>
            <param name="dicts"></param>
        </member>
        <member name="M:InSite.Model.Services.ImportExport.ContentManagerImportExport.IncludeRow(InSite.Model.Content)">
            <summary>
            Only export the latest Contents that match the current filtering.
            </summary>
            <param name="content"></param>
            <returns></returns>
        </member>
        <member name="T:InSite.Model.Services.ImportExport.EmailTemplateImportExport">
            <summary>The Standard EmailTemplate Import/Export Service</summary>
        </member>
        <member name="M:InSite.Model.Services.ImportExport.EmailTemplateImportExport.UpdateObjectWithRow(System.Object,System.Data.DataRow)">
            <summary>UpdateObjectWithRow updates the passed in Model Object with the current iteration of the DataRow, called from NormalImport and ChildImport</summary>
            <param name="row">DataRow to update Model Object with</param>
            <param name="modelObject">Model Object to update</param>
        </member>
        <member name="T:InSite.Model.Services.ImportExport.JobDefinitionImportExport">
            <summary>
            Implements Import / Export of <see cref="T:InSite.Model.JobDefinition"/> to XML files of the entire object graph.
            </summary>
        </member>
        <member name="M:InSite.Model.Services.ImportExport.JobDefinitionImportExport.#ctor(InSite.Model.Interfaces.IUnitOfWork)">
            <summary>
            Dependency injection constructor.
            </summary>
            <param name="unitOfWork"></param>
        </member>
        <member name="T:InSite.Model.Services.ImportExport.ProductImportExport">
            <summary>The Standard Product Import/Export Service</summary>
        </member>
        <member name="F:InSite.Model.Services.ImportExport.ProductImportExport.ProductRepository">
            <summary><see cref="T:InSite.Model.Interfaces.Repositories.IProductRepository"/></summary>
        </member>
        <member name="F:InSite.Model.Services.ImportExport.ProductImportExport.PersonaRepository">
            <summary><see cref="T:InSite.Model.Interfaces.Repositories.IRepository`1"/></summary>
        </member>
        <member name="F:InSite.Model.Services.ImportExport.ProductImportExport.LanguageRepository">
            <summary><see cref="T:InSite.Model.Interfaces.Repositories.IRepository`1"/></summary>
        </member>
        <member name="M:InSite.Model.Services.ImportExport.ProductImportExport.#ctor(InSite.Model.Interfaces.IUnitOfWork)">
            <summary>
            Dependency Injection Constructor.
            </summary>
            <param name="unitOfWork"><see cref="T:InSite.Model.Interfaces.IUnitOfWork"/></param>
        </member>
        <member name="M:InSite.Model.Services.ImportExport.ProductImportExport.GetOrCreateObjectForRow(System.Collections.Generic.List{InSite.Model.Product},System.Data.DataRow)">
            <summary>Overridden standard method to look up Product by Name or ERPNumber first, then if not found, look up by ProductId column in the spreadsheet</summary>
            <param name="list">List of objects currently being imported</param>
            <param name="row">DataRow we are Importing</param>
            <returns>Instance of the Object found or Created for the DataRow we are Importing</returns>
        </member>
        <member name="M:InSite.Model.Services.ImportExport.ProductImportExport.GetProduct(System.Func{InSite.Model.Product,System.Boolean},System.Func{System.String,InSite.Model.Product},System.String,System.Collections.Generic.List{InSite.Model.Product},System.Func{System.Object[],InSite.Model.Product})">
            <summary>
            Get the Product based on ProductId, Name or ERPNumber.
            </summary>
            <param name="predicate">Predicate to look for either ProductId, Name or ERPNumber.</param>
            <param name="getFunc">Product.Get for ProductId or Product.GetByName for Name.</param>
            <param name="lookupValue">The value of either ProductId, Name or ERPNumber.</param>
            <param name="list">The list that has been imported so far.</param>
            <param name="getNaturalFunc">Product.GetByNaturalKey for ERPNumber</param>
            <returns>The Product if found or null if not.</returns>
        </member>
        <member name="M:InSite.Model.Services.ImportExport.ProductImportExport.UpdateObjectWithRow(System.Object,System.Data.DataRow)">
            <summary>UpdateObjectWithRow updates the passed in Model Object with the current iteration of the DataRow, called from NormalImport and ChildImport</summary>
            <param name="row">DataRow to update Model Object with</param>
            <param name="modelObject">Model Object to update</param>
        </member>
        <member name="M:InSite.Model.Services.ImportExport.ProductImportExport.GetLanguageCode(System.Data.DataRow)">
            <summary>
            Method to return language code from the provided DataRow.  We return the value from the row LanguageCode.  If the row is null, we return an empty string.
            </summary>
            <param name="row">DataRow to retrieve LanguageCode</param>
            <returns> We return the value from the row LanguageCode.  If the row is null, we return an empty string.</returns>
        </member>
        <member name="M:InSite.Model.Services.ImportExport.ProductImportExport.ImportChildren(InSite.Model.Product,System.Data.DataRow)">
            <summary>ImportChildren extends the Import to allow Child Columns to be specified in the Import Spreadsheet for Product to Import Children Objects</summary>
            <param name="parentProduct">The Product being Imported</param>
            <param name="row">The current DataRow being processed by the Import</param>
        </member>
        <member name="T:InSite.Model.Services.ImportExport.WebPageImportExport">
            <summary>The Standard WebPage Import/Export Service</summary>
        </member>
        <member name="M:InSite.Model.Services.ImportExport.WebPageImportExport.UpdateObjectWithRow(System.Object,System.Data.DataRow)">
            <summary>UpdateObjectWithRow updates the passed in Model Object with the current iteration of the DataRow, called from NormalImport and ChildImport</summary>
            <param name="row">DataRow to update Model Object with</param>
            <param name="modelObject">Model Object to update</param>
        </member>
        <member name="T:InSite.Model.Services.QuantityFormatProvider_Generic">
            <summary>
            Generic implementation of <see cref="T:InSite.Model.Interfaces.IQuantityFormatProvider"/> which gets the string representation of the quantity which truncates partial values.
            </summary>
        </member>
        <member name="T:InSite.Model.Services.InventoryProvider_Generic">
            <summary>
            Generic implementation of <see cref="T:InSite.Model.Interfaces.IInventoryProvider"/> which maintains inventory via the <see cref="T:InSite.Model.ProductWarehouse"/> table.
            </summary>
        </member>
        <member name="M:InSite.Model.Services.InventoryProvider_Generic.#ctor(InSite.Model.Interfaces.IUnitOfWork,InSite.Model.Interfaces.IContextProvider)">
            <summary>
            Dependency Injection Constructor.
            </summary>
            <param name="unitOfWork"><see cref="T:InSite.Model.Interfaces.IUnitOfWork"/></param>
            <param name="contextProvider"><see cref="T:InSite.Model.Interfaces.IContextProvider"/></param>
        </member>
        <member name="M:InSite.Model.Services.InventoryProvider_Generic.GetQtyOnHand(InSite.Model.Product,InSite.Model.Warehouse)">
            <summary>
            Get the inventory quantity for the <see cref="T:InSite.Model.Product"/> and the specified <see cref="T:InSite.Model.Warehouse"/> including its assigned alternate warehouses.
            </summary>        
            <param name="product">The <see cref="T:InSite.Model.Product"/> you are requesting inventory for.</param>
            <param name="warehouse">The <see cref="T:InSite.Model.Warehouse"/> you are requesting inventory from. If the <see cref="T:InSite.Model.Warehouse"/> is not specified 
            it will retrieve inventory from the default <see cref="T:InSite.Model.Warehouse"/>.</param>
            <returns>
            The inventory quantity for the <see cref="T:InSite.Model.Product"/> and the specified <see cref="T:InSite.Model.Warehouse"/> including its assigned alternate warehouses.
            </returns>
        </member>
        <member name="M:InSite.Model.Services.InventoryProvider_Generic.DecrementQtyOnHand(System.Decimal,InSite.Model.Product,InSite.Model.Warehouse)">
            <summary>
            Decrement the inventory quantity for the <see cref="T:InSite.Model.Product"/> from the specified <see cref="T:InSite.Model.Warehouse"/>.
            </summary>
            <param name="qtyToDecrement">The inventory quantity to decrement.</param>
            <param name="product">The <see cref="T:InSite.Model.Product"/> you are decrementing inventory for.</param>
            <param name="warehouse">The <see cref="T:InSite.Model.Warehouse"/> you are decrementing inventory from. If the <see cref="T:InSite.Model.Warehouse"/> is not specified 
            it will decrement inventory from the default <see cref="T:InSite.Model.Warehouse"/>.</param>
        </member>
        <member name="M:InSite.Model.Services.InventoryProvider_Generic.GetValidWarehouse(InSite.Model.Warehouse)">
            <summary>
            Method to return a warehouse.
            </summary>
            <param name="warehouse"><see cref="T:InSite.Model.Warehouse"/></param>
            <returns>if warehouse is not null return warehouse, else return warehouse based off of <see cref="P:InSite.Model.Interfaces.IContextProvider.CurrentWarehouse"/>.</returns>
        </member>
        <member name="M:InSite.Model.Services.InventoryProvider_Generic.InventoryContextInValid(InSite.Model.Product,InSite.Model.Warehouse)">
            <summary>
            Method to determine if Inventory context is valid.
            </summary>
            <param name="product"><see cref="T:InSite.Model.Product"/></param>
            <param name="warehouse"><see cref="T:InSite.Model.Warehouse"/></param>
            <returns>true if product or warehouse is null.</returns>
        </member>
        <member name="P:InSite.Model.Services.InventoryProvider_Generic.ContextProvider">
            <summary>
            Get Set <see cref="T:InSite.Model.Interfaces.IContextProvider"/>.
            </summary>
        </member>
        <member name="P:InSite.Model.Services.InventoryProvider_Generic.UnitOfWork">
            <summary>
            Get Set <see cref="T:InSite.Model.Interfaces.IUnitOfWork"/>.
            </summary>
        </member>
        <member name="T:InSite.Model.Services.OrderLineState.OrderLineStateBase">
            <summary>
            The base class implementation of <see cref="T:InSite.Model.Interfaces.IOrderLineState"/> that should be inherited from when implementing <see cref="T:InSite.Model.Interfaces.IOrderLineState"/>s.
            </summary>
        </member>
        <member name="M:InSite.Model.Services.OrderLineState.OrderLineStateBase.#ctor(InSite.Model.Interfaces.IUnitOfWork,InSite.Model.Interfaces.IContextProvider,InSite.Model.Interfaces.IPricingServiceFactory)">
            <summary>
            Dependency Injection Constructor
            </summary>
            <param name="unitOfWork"></param>
            <param name="contextProvider"></param>
            <param name="pricingServiceFactory"></param>
        </member>
        <member name="M:InSite.Model.Services.OrderLineState.OrderLineStateBase.CheckStateChange(System.String,System.Object,System.Object)">
            <summary>
            This method gets called by property changes in the <see cref="P:InSite.Model.Services.OrderLineState.OrderLineStateBase.OrderLine"/> to see if the <see cref="T:InSite.Model.Interfaces.IOrderLineState"/> controlling the
            functions of the <see cref="P:InSite.Model.Services.OrderLineState.OrderLineStateBase.OrderLine"/> needs to change.
            </summary>
            <param name="propertyName">The name of the property that has changed.</param>
            <param name="oldValue">The old value of the property changing.</param>
            <param name="newValue">The value the property is changing to.</param>
        </member>
        <member name="M:InSite.Model.Services.OrderLineState.OrderLineStateBase.GetIsActive">
            <summary>Returns true if the <see cref="P:InSite.Model.Services.OrderLineState.OrderLineStateBase.OrderLine"/> is Active.</summary>
        </member>
        <member name="M:InSite.Model.Services.OrderLineState.OrderLineStateBase.GetIsLocalTaxable">
            <summary>Returns true if the <see cref="P:InSite.Model.Services.OrderLineState.OrderLineStateBase.OrderLine"/> is locally taxable.</summary>
        </member>
        <member name="M:InSite.Model.Services.OrderLineState.OrderLineStateBase.GetIsStateTaxable">
            <summary>Returns true if the <see cref="P:InSite.Model.Services.OrderLineState.OrderLineStateBase.OrderLine"/> is state taxable.</summary>
        </member>
        <member name="M:InSite.Model.Services.OrderLineState.OrderLineStateBase.GetPassesShippingRestrictions">
            <summary>Returns true if the <see cref="P:InSite.Model.Services.OrderLineState.OrderLineStateBase.OrderLine"/> passes shipping restrictions.</summary>
        </member>
        <member name="M:InSite.Model.Services.OrderLineState.OrderLineStateBase.GetCustomerProductNumber">
            <summary>Returns the Customer Product Number for the <see cref="T:InSite.Model.Product"/> on the <see cref="P:InSite.Model.Services.OrderLineState.OrderLineStateBase.OrderLine"/>.</summary>
        </member>
        <member name="M:InSite.Model.Services.OrderLineState.OrderLineStateBase.GetDescriptionWithAttributes">
            <summary>Returns the <see cref="P:InSite.Model.Services.OrderLineState.OrderLineStateBase.OrderLine"/> Description with all of it's <see cref="T:InSite.Model.OrderLineProperty"/>s.</summary>
        </member>
        <member name="M:InSite.Model.Services.OrderLineState.OrderLineStateBase.SetQtyOrdered(System.Decimal)">
            <summary>
            Runs the logic to execute when the <see cref="P:InSite.Model.Services.OrderLineState.OrderLineStateBase.OrderLine"/>.QtyOrdered is changed.
            </summary>
            <param name="qtyOrdered">The updated QtyOrdered.</param>
        </member>
        <member name="M:InSite.Model.Services.OrderLineState.OrderLineStateBase.SetActualPrice(System.Decimal)">
            <summary>
            Runs the logic to execute when the <see cref="P:InSite.Model.Services.OrderLineState.OrderLineStateBase.OrderLine"/>.ActualPrice is changed.
            </summary>
            <param name="actualPrice">The updated ActualPrice.</param>
        </member>
        <member name="M:InSite.Model.Services.OrderLineState.OrderLineStateBase.CalculatePrice(System.Boolean)">
            <summary>
            Runs the <see cref="T:InSite.Model.Interfaces.IPricingService"/> to calculate the price for the <see cref="P:InSite.Model.Services.OrderLineState.OrderLineStateBase.OrderLine"/>.
            </summary>
        </member>
        <member name="M:InSite.Model.Services.OrderLineState.OrderLineStateBase.GetExtendedRegularPrice">
            <summary>Returns the <see cref="P:InSite.Model.Services.OrderLineState.OrderLineStateBase.OrderLine"/>.ExtendedRegularPrice.</summary>
        </member>
        <member name="M:InSite.Model.Services.OrderLineState.OrderLineStateBase.GetExtendedActualPrice">
            <summary>Returns the <see cref="P:InSite.Model.Services.OrderLineState.OrderLineStateBase.OrderLine"/>.ExtendedActualPrice.</summary>
        </member>
        <member name="M:InSite.Model.Services.OrderLineState.OrderLineStateBase.SetProduct(InSite.Model.Product)">
            <summary>
            Runs the logic to execute when the <see cref="P:InSite.Model.Services.OrderLineState.OrderLineStateBase.OrderLine"/>.<see cref="T:InSite.Model.Product"/> is changed.
            </summary>
            <param name="product">The updated <see cref="T:InSite.Model.Product"/>.</param>
        </member>
        <member name="M:InSite.Model.Services.OrderLineState.OrderLineStateBase.GetOrderLineSavingsAmount">
            <summary>Returns the <see cref="P:InSite.Model.Services.OrderLineState.OrderLineStateBase.OrderLine"/>s amount saved between the RegularPrice and ActualPrice.</summary>
        </member>
        <member name="M:InSite.Model.Services.OrderLineState.OrderLineStateBase.GetOrderLineSavingsPercent">
            <summary>Returns the <see cref="P:InSite.Model.Services.OrderLineState.OrderLineStateBase.OrderLine"/>s percent saved between the RegularPrice and ActualPrice.</summary>
        </member>
        <member name="M:InSite.Model.Services.OrderLineState.OrderLineStateBase.GetOrderLineProperty(System.String)">
            <summary>Returns the <see cref="P:InSite.Model.Services.OrderLineState.OrderLineStateBase.OrderLine"/>s <see cref="T:InSite.Model.OrderLineProperty"/> by name.</summary>
        </member>
        <member name="M:InSite.Model.Services.OrderLineState.OrderLineStateBase.GetOrderLinePropertyValue(System.String)">
            <summary>Returns the <see cref="P:InSite.Model.Services.OrderLineState.OrderLineStateBase.OrderLine"/>s <see cref="T:InSite.Model.OrderLineProperty"/>.Value by name.</summary>
        </member>
        <member name="M:InSite.Model.Services.OrderLineState.OrderLineStateBase.GetConfigDataSet">
            <summary>Returns the <see cref="P:InSite.Model.Services.OrderLineState.OrderLineStateBase.OrderLine"/>s ConfigDataSet.</summary>
        </member>
        <member name="M:InSite.Model.Services.OrderLineState.OrderLineStateBase.SetConfigDataSet(System.Data.DataSet)">
            <summary>
            Runs the logic to execute when the <see cref="P:InSite.Model.Services.OrderLineState.OrderLineStateBase.OrderLine"/>.ConfigDataSet is changed.
            </summary>
            <param name="configDataSet">The updated ConfigDataSet.</param>
        </member>
        <member name="M:InSite.Model.Services.OrderLineState.OrderLineStateBase.SaveConfigDataSet">
            <summary>Saves the <see cref="P:InSite.Model.Services.OrderLineState.OrderLineStateBase.OrderLine"/>s ConfigDataSet to an <see cref="T:InSite.Model.OrderLineProperty"/> named Configuration.</summary>
        </member>
        <member name="M:InSite.Model.Services.OrderLineState.OrderLineStateBase.GetConfiguredOptions">
            <summary>Returns the <see cref="P:InSite.Model.Services.OrderLineState.OrderLineStateBase.OrderLine"/>s selected Configuration Options from the ConfigDataSet.</summary>
        </member>
        <member name="M:InSite.Model.Services.OrderLineState.OrderLineStateBase.GetDescriptionWithConfiguredOptions">
            <summary>Returns the <see cref="P:InSite.Model.Services.OrderLineState.OrderLineStateBase.OrderLine"/>s Description with the selected Configuration Options from the ConfigDataSet.</summary>
        </member>
        <member name="M:InSite.Model.Services.OrderLineState.OrderLineStateBase.Copy">
            <summary>Returns a Copy of the <see cref="P:InSite.Model.Services.OrderLineState.OrderLineStateBase.OrderLine"/>.</summary>
        </member>
        <member name="P:InSite.Model.Services.OrderLineState.OrderLineStateBase.OrderLine">
            <summary>
            The <see cref="P:InSite.Model.Services.OrderLineState.OrderLineStateBase.OrderLine"/> to handle the state of.
            </summary>
        </member>
        <member name="T:InSite.Model.Services.OrderLineState.OrderLineStateFactory">
            <summary>
            Concrete implementation of the <see cref="T:InSite.Model.Interfaces.IOrderLineStateFactory"/>.  The implemented classes responsibility is to implement
            a factory that can return <see cref="T:InSite.Model.Interfaces.IOrderLineState"/> for an <see cref="T:InSite.Model.OrderLine"/>.
            </summary>
        </member>
        <member name="M:InSite.Model.Services.OrderLineState.OrderLineStateFactory.#ctor(Microsoft.Practices.ServiceLocation.IServiceLocator)">
            <summary>Initializes a new instance of the class with dependencies passed in.</summary>
            <param name="serviceLocator">The Service Locator used to resolve the request to create a new  <see cref="T:InSite.Model.Interfaces.ICustomerOrderState"/>.</param>
        </member>
        <member name="M:InSite.Model.Services.OrderLineState.OrderLineStateFactory.GetOrderLineState(InSite.Model.OrderLine)">
            <summary>Creates a new instances of <see cref="T:InSite.Model.Interfaces.IOrderLineState"/> by resolving all <see cref="T:InSite.Model.Interfaces.IOrderLineState"/>'s in IOC container and matching based on OrderLine.Status equals <see cref="T:InSite.Model.Interfaces.IOrderLineState"/>.OrderLineStatus.</summary>
            <param name="orderLine">The <see cref="T:InSite.Model.OrderLine"/> to get a <see cref="T:InSite.Model.Interfaces.IOrderLineState"/> for.</param>
            <returns>A new instance of an object that implements <see cref="T:InSite.Model.Interfaces.IOrderLineState"/></returns>
        </member>
        <member name="T:InSite.Model.Services.OrderLineState.OrderLineState_Quoted">
            <summary>
            Implementation of <see cref="T:InSite.Model.Interfaces.IOrderLineState"/> for when an <see cref="T:InSite.Model.CustomerOrder"/> is in Cart status.
            </summary>
        </member>
        <member name="T:InSite.Model.Services.OrderLineState.OrderLineState_Cart">
            <summary>
            Implementation of <see cref="T:InSite.Model.Interfaces.IOrderLineState"/> for when an <see cref="T:InSite.Model.CustomerOrder"/> is in Cart status.
            </summary>
        </member>
        <member name="T:InSite.Model.Services.OrderLineState.OrderLineState_Null">
            <summary>
            Implementation of <see cref="T:InSite.Model.Interfaces.IOrderLineState"/> that will be used if no other appropriate state object is found.
            </summary>
        </member>
        <member name="T:InSite.Model.Services.PriceCalculator_Generic">
            <summary>
            PriceCalculator_Generic - the Generic or Standard Price Calculator
            </summary>
        </member>
        <member name="M:InSite.Model.Services.PriceCalculator_Generic.CalculatePrice(InSite.Model.Customer,InSite.Model.Product,System.Decimal,System.Data.DataSet,System.Boolean,System.Boolean@)">
            <summary>
            Calculates Price for given Customer, Product and optionally Configuration
            </summary>
            <param name="customer">Can be null</param>
            <param name="product">Required</param>
            <param name="qtyOrdered">Required</param>
            <param name="configDataSet">Can be null</param>
            <param name="regularPrice">If true, calculates Regular Price, if false, calculates Actual Price</param>
            <param name="isSalePrice">Output paramter that returns true if Sale Price is returned, false if not</param>
            <returns>Price</returns>
        </member>
        <member name="M:InSite.Model.Services.PriceCalculator_Generic.CalculatePrice(InSite.Model.OrderLine,System.Boolean,System.Boolean@)">
            <summary>
            Calculates Price for OrderLine
            </summary>
            <param name="orderLine"></param>
            <param name="regularPrice">If true, calculates Regular Price, if false, calculates Actual Price</param>
            <param name="isSalePrice">Output parameter that returns true if Sale Price is returned, false if not</param>
            <returns>Price</returns>
        </member>
        <member name="M:InSite.Model.Services.PriceCalculator_Generic.ConfigurePrice(System.Decimal,System.Data.DataSet)">
            <summary>
            Calculates price for configured options
            </summary>
            <param name="price"></param>
            <param name="configDataSet"></param>
            <returns></returns>
        </member>
        <member name="T:InSite.Model.Product">
            <summary>The Product is the main place where information about what you are selling is stored</summary>
        </member>
        <member name="M:InSite.Model.Product.GetByName(System.String)">
            <summary>Gets a Product by Name</summary>
            <param name="productName">The Product Name</param>
            <remarks>Returns null if the Product is not found</remarks>
            <returns>Product or null if not found</returns>
        </member>
        <member name="M:InSite.Model.Product.GetActiveByName(System.String)">
            <summary>Gets an active Product by Name</summary>
            <param name="productName">The Product Name</param>
            <remarks>If the Product for the Name specified is not Active this method throws the ProductNotActiveException, if the Product is not found it
            throws the ProductNotFoundException</remarks>
            <returns>The Product</returns>
        </member>
        <member name="M:InSite.Model.Product.GetFirstByERPNumber(System.String)">
            <summary>Gets first Product for the ErpNumber specified</summary>
            <param name="erpNumber">The ErpNumber</param>
            <returns>Product or null if not found</returns>
        </member>
        <member name="M:InSite.Model.Product.GetERPList(System.String)">
            <summary>Gets list of Products for ErpNumber specified</summary>
            <param name="erpNumber">The ErpNumber</param>
            <returns>IList of Products</returns>
        </member>
        <member name="M:InSite.Model.Product.AddProductAttribute(InSite.Model.ProductAttribute)">
            <summary>
            Add a new <see cref="T:InSite.Model.ProductAttribute"/> to the ProductAttributes list
            </summary>
            <param name="productAttribute">Attribute to add</param>
        </member>
        <member name="M:InSite.Model.Product.GetDynamicCrossSells(System.Int32,System.Boolean)">
            <summary>Default Plugin gets a list of active ProductInfos that have been purchased with this Product ordered by the most purchased first</summary>
            <param name="count">Number of ProductInfos to return</param>
            <param name="checkCategory">True to check to make sure the also purchased ProductInfos are in an active Category (Default true)</param>
            <returns>IList of ProductInfos</returns>
        </member>
        <member name="M:InSite.Model.Product.GetDocument(System.String)">
            <summary>Gets a Document from the Documents collection</summary>
            <param name="name">The Document Name</param>
            <returns>Document or null if not found</returns>
            <seealso cref="P:InSite.Model.Product.Documents"></seealso>
        </member>
        <member name="M:InSite.Model.Product.AddCategoryInfo(InSite.Model.CategoryInfo)">
            <summary>Add a <see cref="T:InSite.Model.CategoryInfo"/> to the <see cref="P:InSite.Model.Product.CategoryInfos"/> collection. If the collection already contains the value it is silently ignored.</summary>
            <param name="categoryInfo">The <see cref="T:InSite.Model.CategoryInfo"/> to be added.</param>
        </member>
        <member name="M:InSite.Model.Product.RemoveCategoryInfo(InSite.Model.CategoryInfo)">
            <summary>Remove a <see cref="T:InSite.Model.CategoryInfo"/> from the <see cref="P:InSite.Model.Product.CategoryInfos"/> collection. If the collection does not contain the value it is silently ignored.</summary>
            <param name="categoryInfo">The <see cref="T:InSite.Model.CategoryInfo"/> to be removed.</param>
        </member>
        <member name="M:InSite.Model.Product.GetCategoryProductPath(InSite.Model.Category)">
            <summary>Gets the product path for a specific category</summary>
            <param name="category">The category.</param>
            <returns>Slash separated path to product including all categories down to the base category</returns>
        </member>
        <member name="M:InSite.Model.Product.AddProductRelatedProduct(InSite.Model.ProductRelatedProduct)">
            <summary>
            Adds the product related product.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:InSite.Model.Product.RemoveProductRelatedProduct(InSite.Model.ProductRelatedProduct)">
            <summary>
            Removes the product related product.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:InSite.Model.Product.AddRelatedProduct(InSite.Model.ProductInfo,InSite.Model.MiscellaneousCode,System.Int32)">
            <summary>
            Adds the related product.
            </summary>
            <param name="relatedProduct">The related product.</param>
            <param name="miscellaneousCode">The miscellaneous code.</param>
            <param name="sortOrder">The sort order.</param>
        </member>
        <member name="M:InSite.Model.Product.RemoveRelatedProduct(InSite.Model.ProductInfo,System.String)">
            <summary>
            Removes the related product.
            </summary>
            <param name="relatedProduct">The related product.</param>
            <param name="type">The type.</param>
        </member>
        <member name="M:InSite.Model.Product.AddCrossSell(InSite.Model.ProductInfo,System.Int32)">
            <summary>
            Add a ProductInfo to the CrossSells collection
            </summary>
            <param name="value">The ProductInfo to add</param>
            <param name="sortOrder">The sort order.</param>
            <remarks>
            If the collection already contains the value it is silently ignored
            </remarks>
        </member>
        <member name="M:InSite.Model.Product.AddCrossSell(InSite.Model.ProductInfo)">
            <summary>
            Add a ProductInfo to the CrossSells collection
            </summary>
            <param name="value">The ProductInfo to add</param>
            <remarks>
            If the collection already contains the value it is silently ignored
            </remarks>
        </member>
        <member name="M:InSite.Model.Product.RemoveCrossSell(InSite.Model.ProductInfo)">
            <summary>Remove a ProductInfo from the CrossSells collection</summary>
            <param name="value">The ProductInfo to be removed</param>
            <remarks>If the collection does not contain the value it is silently ignored</remarks>
        </member>
        <member name="M:InSite.Model.Product.GetCrossSellByName(System.String)">
            <summary>
            Get the CrossSell for the name specified, returns null if not found
            </summary>
            <param name="name">The CrossSell Name</param>
            <returns>ProductInfo CrossSell or null if not found</returns>
        </member>
        <member name="M:InSite.Model.Product.AddSpecification(InSite.Model.Specification)">
            <summary>Add a Specification to the Specifications collection</summary>
            <param name="value">The Specification to add</param>
            <remarks>If the collection already contains the value it is silently ignored</remarks>
        </member>
        <member name="M:InSite.Model.Product.RemoveSpecification(InSite.Model.Specification)">
            <summary>Remove a Specification from the Specifications collection</summary>
            <param name="value">The Specification to be removed</param>
            <remarks>If the collection does not contain the value it is silently ignored</remarks>
        </member>
        <member name="M:InSite.Model.Product.GetSpecificationByName(System.String)">
            <summary>Gets a Specification for the Name specified</summary>
            <param name="name">Specification Name</param>
            <returns>Specification or null if not found</returns>
        </member>
        <member name="M:InSite.Model.Product.AddProductProperty(InSite.Model.ProductProperty)">
            <summary>Add a ProductProperty to the ProductProperties collection</summary>
            <param name="value">The ProductProperty to add</param>
            <remarks>If the collection already contains the value it is silently ignored</remarks>
        </member>
        <member name="M:InSite.Model.Product.RemoveProductProperty(InSite.Model.ProductProperty)">
            <summary>Remove a ProductProperty from the ProductProperties collection</summary>
            <param name="value">The ProductProperty to be removed</param>
            <remarks>If the collection does not contain the value it is silently ignored</remarks>
        </member>
        <member name="M:InSite.Model.Product.GetProductPropertyByName(System.String)">
            <summary>
            Get the Product Custom Property for the name specified, returns null if not found
            </summary>
            <param name="name">The Product Property Name</param>
            <returns>ProductProperty or null if not found</returns>
        </member>
        <member name="M:InSite.Model.Product.GetOrCreateProductPropertyByName(System.String,System.String)">
            <summary>Get the Product Custom Property for the name specified, if not found, a new Custom Property is created with that name and the value specified</summary>
            <param name="name">The Product Property Name</param>
            <param name="defaultValue">The Product Property Defaul Value</param>
            <returns>ProductProperty</returns>
        </member>
        <member name="M:InSite.Model.Product.GetProductProperty(System.String)">
            <summary>Get the Product Custom Property for the name specified, if not found, a new Custom Property is created with that name and a blank value</summary>
            <param name="name">The Product Property Name</param>
            <returns>ProductProperty</returns>
        </member>
        <member name="M:InSite.Model.Product.GetProductProperty(System.String,System.String)">
            <summary>Get the Product Custom Property for the name specified, if not found, a new Custom Property is created with that name and the value specified</summary>
            <param name="name">The Product Property Name</param>
            <param name="defaultValue">The Product Property Defaul Value</param>
            <returns>ProductProperty</returns>
        </member>
        <member name="M:InSite.Model.Product.AddShippingRestriction(InSite.Model.ShippingRestriction)">
            <summary>Add a ShippingRestriction to the Shipping Restrictions collection</summary>
            <param name="value">The ShippingRestriction to add</param>
            <remarks>If the collection already contains the value it is silently ignored</remarks>
        </member>
        <member name="M:InSite.Model.Product.RemoveShippingRestriction(InSite.Model.ShippingRestriction)">
            <summary>Remove a ShippingRestriction from the Shipping Restrictions collection</summary>
            <param name="value">The ShippingRestriction to be removed</param>
            <remarks>If the collection does not contain the value it is silently ignored</remarks>
        </member>
        <member name="M:InSite.Model.Product.GetShippingRestrictionByName(System.String)">
            <summary>Gets a ShippingRestriction for the Name specified</summary>
            <param name="name">ShippingRestriction Name</param>
            <returns>ShippingRestriction or null if not found</returns>
        </member>
        <member name="M:InSite.Model.Product.PassesShippingRestrictions(InSite.Model.CustomerOrder)">
            <summary>Will return true if the CustomerOrder specified has a ShipTo whose State is not in the ShippingRestrictions collection of this Product and any Categories
            this Product is assigned to</summary>
            <param name="customerOrder">The CustomerOrder</param>
            <returns>true or false</returns>
        </member>
        <member name="M:InSite.Model.Product.AddDealer(InSite.Model.Dealer)">
            <summary>Add a Dealer to the Dealers collection</summary>
            <param name="value">The Dealer to add</param>
            <remarks>If the collection already contains the value it is silently ignored</remarks>
        </member>
        <member name="M:InSite.Model.Product.RemoveDealer(InSite.Model.Dealer)">
            <summary>Remove a Dealer from the Dealers collection</summary>
            <param name="value">The Dealer to be removed</param>
            <remarks>If the collection does not contain the value it is silently ignored</remarks>
        </member>
        <member name="M:InSite.Model.Product.AddTaxExemption(InSite.Model.TaxExemption)">
            <summary>Add a TaxExemption to the TaxExemptions collection</summary>
            <param name="value">The TaxExemption to add</param>
            <remarks>If the collection already contains the value it is silently ignored</remarks>
        </member>
        <member name="M:InSite.Model.Product.RemoveTaxExemption(InSite.Model.TaxExemption)">
            <summary>Remove a TaxExemption from the TaxExemptions collection</summary>
            <param name="value">The TaxExemption to be removed</param>
            <remarks>If the collection does not contain the value it is silently ignored</remarks>
        </member>
        <member name="M:InSite.Model.Product.AddAccessory(InSite.Model.ProductInfo,System.Int32)">
            <summary>
            Add a ProductInfo to the Accessories collection
            </summary>
            <param name="value">The ProductInfo to be added</param>
            <param name="sortOrder">The sort order.</param>
            <remarks>
            If the collection already contains the value it is silently ignored
            </remarks>
        </member>
        <member name="M:InSite.Model.Product.AddAccessory(InSite.Model.ProductInfo)">
            <summary>
            Add a ProductInfo to the Accessories collection
            </summary>
            <param name="value">The ProductInfo to be added</param>
            <remarks>
            If the collection already contains the value it is silently ignored
            </remarks>
        </member>
        <member name="M:InSite.Model.Product.RemoveAccessory(InSite.Model.ProductInfo)">
            <summary>Remove a ProductInfo from the Accessories collection</summary>
            <param name="value">The ProductInfo to be removed</param>
            <remarks>If the collection does not contain the value it is silently ignored</remarks>
        </member>
        <member name="M:InSite.Model.Product.GetAccessoryByName(System.String)">
            <summary>
            Get the Accessory for the name specified, returns null if not found
            </summary>
            <param name="name">The Accessory Name</param>
            <returns>ProductInfo Accessory or null if not found</returns>
        </member>
        <member name="M:InSite.Model.Product.AddSubscriptionProduct(InSite.Model.SubscriptionProduct)">
            <summary>Add a SubscriptionProduct to the SubscriptionProducts collection</summary>
            <param name="value">The SubscriptionProduct to add</param>
            <remarks>If the collection already contains the value it is silently ignored</remarks>
        </member>
        <member name="M:InSite.Model.Product.RemoveSubscriptionProduct(InSite.Model.SubscriptionProduct)">
            <summary>Removes a SubscriptionProduct from the SubscriptionProducts collection</summary>
            <param name="value">The SubscriptionProduct to be removed</param>
            <remarks>If the collection does not contain the value it is silently ignored</remarks>
        </member>
        <member name="M:InSite.Model.Product.AddAttributeValue(InSite.Model.AttributeValue)">
            <summary>Add a AttributeValue to the AttributeValues collection</summary>
            <param name="value">The AttributeValue to add</param>
            <remarks>If the collection already contains the value it is silently ignored</remarks>
        </member>
        <member name="M:InSite.Model.Product.RemoveAttributeValue(InSite.Model.AttributeValue)">
            <summary>Remove a AttributeValue from the AttributeValues collection</summary>
            <param name="value">The AttributeValue to be removed</param>
            <remarks>If the collection does not contain the value it is silently ignored</remarks>
        </member>
        <member name="M:InSite.Model.Product.AddProductWarehouse(InSite.Model.ProductWarehouse)">
            <summary>Add a ProductWarehouse to the ProductWarehouses collection</summary>
            <param name="value">The ProductWarehouse to add</param>
            <remarks>If the collection already contains the value it is silently ignored</remarks>
        </member>
        <member name="M:InSite.Model.Product.RemoveProductWarehouse(InSite.Model.ProductWarehouse)">
            <summary>Remove a ProductWarehouse from the ProductWarehouses collection</summary>
            <param name="value">The ProductWarehouse to be removed</param>
            <remarks>If the collection does not contain the value it is silently ignored</remarks>
        </member>
        <member name="M:InSite.Model.Product.AddProductUnitOfMeasure(InSite.Model.ProductUnitOfMeasure)">
            <summary>Add a ProductUnitOfMeasure to the ProductUnitOfMeasures collection</summary>
            <param name="value">The ProductUnitOfMeasure to add</param>
            <remarks>If the collection already contains the value it is silently ignored</remarks>
        </member>
        <member name="M:InSite.Model.Product.RemoveProductUnitOfMeasure(InSite.Model.ProductUnitOfMeasure)">
            <summary>Remove a ProductUnitOfMeasure from the ProductUnitOfMeasures collection</summary>
            <param name="value">The ProductUnitOfMeasure to be removed</param>
            <remarks>If the collection does not contain the value it is silently ignored</remarks>
        </member>
        <member name="M:InSite.Model.Product.GetDefaultUnitOfMeasure">
            <summary>
            Get the default Unit Of Measure for the Product. The following order of precedence is used;
            1) Use the CustomerProduct.UnitOfMeasure if one is defined.
            2) Use the ProductUnitOfMeasures.UnitOfMeasure if one is flagged as IsDefault.
            3) Use the Product.UnitOfMeasure.
            </summary>
            <returns>The default Unit Of Measure</returns>
        </member>
        <member name="M:InSite.Model.Product.ToString">
            <summary>ToString method override</summary>
            <returns>Returns the Product.Name</returns>
        </member>
        <member name="M:InSite.Model.Product.GetQtyOnHand(System.DateTime)">
            <summary>
            Get the inventory quantity for the <see cref="T:InSite.Model.Product"/> and the default <see cref="T:InSite.Model.Warehouse"/>.
            </summary>
            <returns>The inventory quantity for the <see cref="T:InSite.Model.Product"/> and the default <see cref="T:InSite.Model.Warehouse"/>.</returns>
        </member>
        <member name="M:InSite.Model.Product.GetQtyOnHand">
            <summary>
            Get the inventory quantity for the <see cref="T:InSite.Model.Product"/> and the default <see cref="T:InSite.Model.Warehouse"/>.
            </summary>
            <returns>The inventory quantity for the <see cref="T:InSite.Model.Product"/> and the default <see cref="T:InSite.Model.Warehouse"/>.</returns>
        </member>
        <member name="M:InSite.Model.Product.GetQtyOnHand(InSite.Model.Warehouse)">
            <summary>
            Get the inventory quantity for the <see cref="T:InSite.Model.Product"/> and the specified <see cref="T:InSite.Model.Warehouse"/>.
            </summary>
            <param name="warehouse">The <see cref="T:InSite.Model.Warehouse"/> you are requesting inventory from.</param>
            <returns>The inventory quantity for the <see cref="T:InSite.Model.Product"/> and the specified <see cref="T:InSite.Model.Warehouse"/>.</returns>
        </member>
        <member name="M:InSite.Model.Product.IsInStock(System.Decimal)">
            <summary>
            	<para>If TrackInventory is set to true, will return true if the quantity on hand is greater than or equal to the quantity specified</para>
            	<para>If TrackInventory is set to false, will always return true</para>
            </summary>
            <param name="qtyToOrder">Quantity to check</param>
            <returns>true or false</returns>
            <seealso cref="P:InSite.Model.Product.TrackInventory"></seealso>
        </member>
        <member name="M:InSite.Model.Product.DecrementQtyOnHand(System.Decimal)">
            <summary>
            Decrement the inventory quantity for the <see cref="T:InSite.Model.Product"/> from the default <see cref="T:InSite.Model.Warehouse"/>.
            </summary>
            <param name="qtyToDecrement">The inventory quantity to decrement.</param>        
        </member>
        <member name="M:InSite.Model.Product.DecrementQtyOnHand(System.Decimal,InSite.Model.Warehouse)">
            <summary>
            Decrement the inventory quantity for the <see cref="T:InSite.Model.Product"/> from the specified <see cref="T:InSite.Model.Warehouse"/>.
            </summary>
            <param name="qtyToDecrement">The inventory quantity to decrement.</param>        
            <param name="warehouse">The <see cref="T:InSite.Model.Warehouse"/> you are decrementing inventory from.</param>
        </member>
        <member name="M:InSite.Model.Product.GetProductPricing(InSite.Model.Services.PricingService.PricingServiceParameter)">
            <summary>
            Get Calculated Product Pricing, using the IPricingService implementation.
            </summary>
            <param name="pricingServiceParameter"><see cref="T:InSite.Model.Services.PricingService.PricingServiceParameter"/> of information necessary to calculate the Product Price</param>
            <returns><see cref="T:InSite.Model.Services.PricingService.PricingServiceResult"/> of Product Pricing Information</returns>
        </member>
        <member name="M:InSite.Model.Product.GetUnitCost(System.String)">
            <summary>
            Get the unit cost for this product by warehouse.
            </summary>
            <param name="warehouseName">Name of the warehouse.</param>
            <returns>Product Cost</returns>
        </member>
        <member name="M:InSite.Model.Product.Copy">
            <summary>Returns a Copy of this Product</summary>
            <remarks>Copies the simple properties, ContentManager, Specifications and ProductProperties</remarks>
            <returns>The new Product that is a copy of this Product</returns>
        </member>
        <member name="M:InSite.Model.Product.IsRestricted">
            <summary>
            Evaluates a product permission based on the RestictionGroup it belongs to
            </summary>        
            <returns>true if the current customer and shipto does not have permission view the product.</returns>
        </member>
        <member name="M:InSite.Model.Product.GetConfigSections">
            <summary>Gets DataRowCollection of ConfigSections from the ConfigDataSet</summary>
            <returns>DataRowCollection of ConfigSections</returns>
        </member>
        <member name="M:InSite.Model.Product.GetSectionOptions(System.String)">
            <summary>Gets OrderedEnumerableRowCollection of SectionOptions for the SectionName specified from the Configuration DataSet</summary>
            <param name="sectionName">Section Name</param>
            <returns>OrderedEnumerableRowCollection of SectionOption DataRows</returns>
        </member>
        <member name="M:InSite.Model.Product.SaveConfigDataSet">
            <summary>Saves the ConfigDataSet changes to the Product</summary>
            <remarks>Must be called after you make changes to the ConfigDataSet</remarks>
        </member>
        <member name="M:InSite.Model.Product.GetProperty(System.String,System.String)">
            <summary>Retrieves the value for the property identified by <paramref name="name"/></summary>
            <param name="name">The name of the property to retrieve</param>
            <param name="defaultValue">The value to use if the property does not exist</param>
        </member>
        <member name="M:InSite.Model.Product.SetProperty(System.String,System.String)">
            <summary>Sets the value for the property identified by <paramref name="name"/></summary>
            <param name="name">The name of the property to retrieve</param>
            <param name="value">The value to set</param>
        </member>
        <member name="P:InSite.Model.Product.PricingServiceFactory">
            <summary>
            PricingService Factory PlugIn
            </summary>
        </member>
        <member name="P:InSite.Model.Product.PricingService">
            <summary>
            PricingService PlugIn
            </summary>
        </member>
        <member name="P:InSite.Model.Product.DynamicCrossSellProvider">
            <summary>
            DynamicCrossSellProvider PlugIn
            </summary>
        </member>
        <member name="P:InSite.Model.Product.ConfigDataSetSchemaProvider">
            <summary>
            ConfigDataSetSchemaProvider PlugIn
            </summary>
        </member>
        <member name="P:InSite.Model.Product.InventoryProvider">
            <summary>
            InventoryProvider PlugIn
            </summary>
        </member>
        <member name="P:InSite.Model.Product.ProductInfo">
            <summary>
            ProductInfo is a simplified view of the Product
            </summary>
        </member>
        <member name="P:InSite.Model.Product.Name">
            <summary>Name of the Product (unique)</summary>
        </member>
        <member name="P:InSite.Model.Product.ShortDescription">
            <summary>Short Description of the Product</summary>
            <returns>The translated ShortDescription, or the ErpDescription if ShortDescription is empty.</returns>
        </member>
        <member name="P:InSite.Model.Product.ERPManaged">
            <summary>Will be set to true for Products that are refreshed in from an ERP System</summary>
        </member>
        <member name="P:InSite.Model.Product.ERPNumber">
            <summary>The ERP Identifier Number for this Product in the ERP System.  If blank, will return Product.Name</summary>
        </member>
        <member name="P:InSite.Model.Product.ERPDescription">
            <summary>The Description refreshed from the ERP System</summary>
        </member>
        <member name="P:InSite.Model.Product.ProductCode">
            <summary>Product Code for the Product</summary>
        </member>
        <member name="P:InSite.Model.Product.PriceCode">
            <summary>Price Code for the Product</summary>
        </member>
        <member name="P:InSite.Model.Product.UrlSegment">
            <summary>Product identifier used in url of product detail page</summary>
        </member>
        <member name="P:InSite.Model.Product.UnitOfMeasure">
            <summary>UnitOfMeasure of the Product</summary>
        </member>
        <member name="P:InSite.Model.Product.UnitOfMeasureDisplay">
            <summary>
            Display version of UnitOfMeasure (supports translation)
            </summary>
        </member>
        <member name="P:InSite.Model.Product.SmallImagePath">
            <summary>Image Path for Small Image</summary>
        </member>
        <member name="P:InSite.Model.Product.MediumImagePath">
            <summary>Image Path for Medium Image</summary>
        </member>
        <member name="P:InSite.Model.Product.LargeImagePath">
            <summary>Image Path for Large Image</summary>
        </member>
        <member name="P:InSite.Model.Product.ImageAltText">
            <summary>Alt Text for product image</summary>
        </member>
        <member name="P:InSite.Model.Product.Sku">
            <summary>Sku of the Product</summary>
        </member>
        <member name="P:InSite.Model.Product.UPCCode">
            <summary>UPCCode of the Product</summary>
        </member>
        <member name="P:InSite.Model.Product.ModelNumber">
            <summary>The Model Number of the Product</summary>
        </member>
        <member name="P:InSite.Model.Product.SortOrder">
            <summary>Order to Sort when Products are in a Collection</summary>
        </member>
        <member name="P:InSite.Model.Product.TaxCode1">
            <summary>TaxCode1 for the Product used by the standard Tax Calculator, if set to the TaxFreeTaxCode in the WebSite, makes the Product a Tax Free Product</summary>
        </member>
        <member name="P:InSite.Model.Product.TaxCode2">
            <summary>TaxCode2 for the Product, not used by the standard tax calculation</summary>
        </member>
        <member name="P:InSite.Model.Product.ShippingClassification">
            <summary>Shipping Classification for this Product</summary>
        </member>
        <member name="P:InSite.Model.Product.ShippingLength">
            <summary>Field that can be used for custom Order Packaging</summary>
        </member>
        <member name="P:InSite.Model.Product.ShippingWidth">
            <summary>Field that can be used for custom Order Packaging</summary>
        </member>
        <member name="P:InSite.Model.Product.ShippingHeight">
            <summary>Field that can be used for custom Order Packaging</summary>
        </member>
        <member name="P:InSite.Model.Product.ShippingWeight">
            <summary>The Weight of this Product used for calculating shipping</summary>
        </member>
        <member name="P:InSite.Model.Product.QtyPerShippingPackage">
            <summary>Field that can be used for custom Order Packaging</summary>
        </member>
        <member name="P:InSite.Model.Product.ShippingAmountOverride">
            <summary>Amount to override any Shipping calculation for this Product, can be null</summary>
        </member>
        <member name="P:InSite.Model.Product.HandlingAmountOverride">
            <summary>Amount to override any Handling calculation for this Product, can be null</summary>
        </member>
        <member name="P:InSite.Model.Product.MetaDescription">
            <summary>SEO information fields for Product</summary>
        </member>
        <member name="P:InSite.Model.Product.MetaKeywords">
            <summary>SEO information fields for Product</summary>
        </member>
        <member name="P:InSite.Model.Product.PageTitle">
            <summary>SEO information fields for Product</summary>
        </member>
        <member name="P:InSite.Model.Product.IsGiftCard">
            <summary>Set to true to make this Product a Gift Card, Gift Cards will then be generated on Order Submission</summary>
        </member>
        <member name="P:InSite.Model.Product.AllowAnyGiftCardAmount">
            <summary>Set to true and when the Gift Card is created during order submit it will use the amount on the OrderLine to determine the value of the Gift Card
            rather than the Product Price, you can then allow the user to enter the amount for the Gift Card they are buying and store that in the OrderLine.ActualPrice</summary>
        </member>
        <member name="P:InSite.Model.Product.TaxCategory">
            <summary>TaxCategory for the Product</summary>
        </member>
        <member name="P:InSite.Model.Product.IsActive">
            <summary>Calculated property based on Active and Deactivate DateTimes</summary>
        </member>
        <member name="P:InSite.Model.Product.ActivateOn">
            <summary>The DateTime this Product is Active, can not be null</summary>
        </member>
        <member name="P:InSite.Model.Product.DeactivateOn">
            <summary>The DateTime the Product will no longer be Active, can be null</summary>
        </member>
        <member name="P:InSite.Model.Product.HasMsds">
            <summary>This bool indicates that this product has a Material Safety Data Sheet associated with it. </summary>
        </member>
        <member name="P:InSite.Model.Product.IsHazardousGood">
            <summary> This bool indicates that the item is a hazardous good. </summary>
        </member>
        <member name="P:InSite.Model.Product.IsDiscontinued">
            <summary> This bool indicates that we should sell out the quantity we have and then stop selling the item. </summary>
        </member>
        <member name="P:InSite.Model.Product.CanBackOrder">
            <summary>
            This bool indicates whether this product can be back ordered, considering the Web_AllowBackOrder setting and whether it is discontinued.
            </summary>
        </member>
        <member name="P:InSite.Model.Product.Unspsc">
            <summary>This field is used to uniquely identify the product for punch-out purposes. </summary>
        </member>
        <member name="P:InSite.Model.Product.ManufacturerItem">
            <summary> This field is used to identify the item using the manufacturer’s number – this may not be unique in the db. </summary>
        </member>
        <member name="P:InSite.Model.Product.RoundingRule">
            <summary>This field is used to decide in what way the cost of the product should be rounded.</summary>
            <example>  Round, Round Up, No Rounding, Multiple Only</example>
        </member>
        <member name="P:InSite.Model.Product.MultipleSaleQty">
            <summary> This integer represents the quantity of the good that the item must be sold in. </summary>
             <example> If the number is 12 and the UOM is EA, then the user could order 12, 24, 36 etc. but not 6. </example>
        </member>
        <member name="P:InSite.Model.Product.IsSpecialOrder">
            <summary>This field indicates that the Product is not stocked by the ERP and reuires a Purchase Order when ordered.</summary>
        </member>
        <member name="P:InSite.Model.Product.IndexStatus">
             <summary>This field indicates the search index status for this Product. 
             0 – product is indexed, 
             1 – product needs indexing,
             2 – product should never be indexed
            </summary>
        </member>
        <member name="P:InSite.Model.Product.IsSubscription">
            <summary>Set to true to make this Product a Subscription "Phantom" parent Product</summary>
        </member>
        <member name="P:InSite.Model.Product.SubscriptionCyclePeriod">
            <summary>Cycle Period for Subscription, Month or Day</summary>
        </member>
        <member name="P:InSite.Model.Product.SubscriptionPeriodsPerCycle">
            <summary>Periods Per Cycle, if the Cycle Period is Month, then 12 periods per Cycle would be monthly for a one year Cycle, if Day, 7 would be daily
            for a one week Cycle</summary>
        </member>
        <member name="P:InSite.Model.Product.SubscriptionTotalCycles">
            <summary>Total Number of Cycles for the Subscription</summary>
        </member>
        <member name="P:InSite.Model.Product.SubscriptionFixedPrice">
            <summary>If set to true, the Subscription will use the Product Price when the Subscription was purchased for all future orders, if set to false, future
            orders will be created with the current Product Price</summary>
        </member>
        <member name="P:InSite.Model.Product.SubscriptionShipVia">
            <summary>The ShipVia to use t deliver Orders generated by this Subscription</summary>
        </member>
        <member name="P:InSite.Model.Product.SubscriptionAddToInitialOrder">
            <summary>Add Products in this Subscription with the order this Subscription was purchased on</summary>
        </member>
        <member name="P:InSite.Model.Product.SubscriptionJanuary">
            <summary>Create Subscription Order in this month</summary>
        </member>
        <member name="P:InSite.Model.Product.SubscriptionFebruary">
            <summary>Create Subscription Order in this month</summary>
        </member>
        <member name="P:InSite.Model.Product.SubscriptionMarch">
            <summary>Create Subscription Order in this month</summary>
        </member>
        <member name="P:InSite.Model.Product.SubscriptionApril">
            <summary>Create Subscription Order in this month</summary>
        </member>
        <member name="P:InSite.Model.Product.SubscriptionMay">
            <summary>Create Subscription Order in this month</summary>
        </member>
        <member name="P:InSite.Model.Product.SubscriptionJune">
            <summary>Create Subscription Order in this month</summary>
        </member>
        <member name="P:InSite.Model.Product.SubscriptionJuly">
            <summary>Create Subscription Order in this month</summary>
        </member>
        <member name="P:InSite.Model.Product.SubscriptionAugust">
            <summary>Create Subscription Order in this month</summary>
        </member>
        <member name="P:InSite.Model.Product.SubscriptionSeptember">
            <summary>Create Subscription Order in this month</summary>
        </member>
        <member name="P:InSite.Model.Product.SubscriptionOctober">
            <summary>Create Subscription Order in this month</summary>
        </member>
        <member name="P:InSite.Model.Product.SubscriptionNovember">
            <summary>Create Subscription Order in this month</summary>
        </member>
        <member name="P:InSite.Model.Product.SubscriptionDecember">
            <summary>Create Subscription Order in this month</summary>
        </member>
        <member name="P:InSite.Model.Product.Vendor">
            <summary>The Vendor for this Product</summary>
        </member>
        <member name="P:InSite.Model.Product.ConfigurationObject">
            <summary> Configuration Object that defines Configuration for this Product</summary>
        </member>
        <member name="P:InSite.Model.Product.ConfigurationNameAndRevision">
            <summary> Configuration Object Name and Revision if set, colon delimited.</summary>
        </member>
        <member name="P:InSite.Model.Product.CategoryInfos">
            <summary>Collection of CategoryInfos this Product belongs to</summary>
        </member>
        <member name="P:InSite.Model.Product.CategoryProducts">
            <summary>Collection of CategoryProduct this Product belongs to</summary>
        </member>
        <member name="P:InSite.Model.Product.CategoryTree">
            <summary>Collection of Categories that goes from this Products assigned Categories up to the parent level Category</summary>
        </member>
        <member name="P:InSite.Model.Product.CrossSells">
            <summary>Collection of ProductInfos that are the CrossSells of this Product</summary>
        </member>
        <member name="P:InSite.Model.Product.ActiveCrossSells">
            <summary>The CrossSells collection excluding any Products that are not Active</summary>
        </member>
        <member name="P:InSite.Model.Product.ProductIsValidOnWebsite">
            <summary>true if the product has a category on the current website</summary>
        </member>
        <member name="P:InSite.Model.Product.Specifications">
            <summary>Collection of Specifications</summary>
        </member>
        <member name="P:InSite.Model.Product.ActiveSpecifications">
            <summary>Collection of Active Specifications</summary>
        </member>
        <member name="P:InSite.Model.Product.ProductProperties">
            <summary>Collection of the Products Custom ProductProperties</summary>
        </member>
        <member name="P:InSite.Model.Product.ShippingRestrictions">
            <summary>Collection of Shipping Restrictions</summary>
        </member>
        <member name="P:InSite.Model.Product.ActiveShippingRestrictions">
            <summary>Collection of Active Shipping Restrictions</summary>
        </member>
        <member name="P:InSite.Model.Product.Dealers">
            <summary>Collection of Dealers for this Prduct</summary>
        </member>
        <member name="P:InSite.Model.Product.TaxExemptions">
            <summary>Collection of TaxExemption rules that can be created to exempt this Product from being charged tax</summary>
        </member>
        <member name="P:InSite.Model.Product.WishListProducts">
            <summary>Collection of WishListProducts this Product is attached to</summary>
        </member>
        <member name="P:InSite.Model.Product.Accessories">
            <summary>Collection of ProductInfo that are the Accessories of this Product</summary>
        </member>
        <member name="P:InSite.Model.Product.ActiveAccessories">
            <summary>The Accessories Collection excluding and Products that are not Active</summary>
        </member>
        <member name="P:InSite.Model.Product.SubscriptionProducts">
            <summary>Collection of Products to be included in this Subscription</summary>
        </member>
        <member name="P:InSite.Model.Product.AttributeValues">
            <summary>Collection of AttributeValues assigned to this Product</summary>
        </member>
        <member name="P:InSite.Model.Product.ProductWarehouses">
            <summary>Collection of product specific warehouse information</summary>
        </member>
        <member name="P:InSite.Model.Product.HtmlContent">
            <summary>Gets ContentManager.CurrentContent.HtmlContent, standard field for Content Management used throughout the system</summary>
        </member>
        <member name="P:InSite.Model.Product.ContentManager">
            <summary>The ContentManager manages the Content</summary>
        </member>
        <member name="P:InSite.Model.Product.Documents">
            <summary>A shortcut property to DocumentManager.Documents</summary>
        </member>
        <member name="P:InSite.Model.Product.DocumentManager">
            <summary>The DocumentManager manages uploaded files for this Product</summary>
        </member>
        <member name="P:InSite.Model.Product.StyleProductInfo">
            <summary>Styled Product view of this Product, applies to Styled Product Parents</summary>
        </member>
        <member name="P:InSite.Model.Product.StyleTraits">
            <summary>If this Product is a Styled Product Parent, this property will return the Collection of StyleTraits for the StyleClass this Product is assigned to</summary>
        </member>
        <member name="P:InSite.Model.Product.ProductAttributes">
            <summary>
            The <see cref="T:InSite.Model.AttributeValue"/> for each <see cref="T:InSite.Model.AttributeType"/> that is assigned to this Product.
            </summary>
        </member>
        <member name="P:InSite.Model.Product.AttributeLabelDatas">
            <summary>
            <see cref="T:InSite.Model.LabelData"/> representation of <see cref="T:InSite.Model.AttributeType"/>s from <see cref="T:InSite.Model.Category"/>s this Product is assigned to.
            </summary>
        </member>
        <member name="P:InSite.Model.Product.TrackInventory">
            <summary>Set to true to have purchases create InventoryTransaction records decrementing the QtyOnHand for Web Orders</summary>
        </member>
        <member name="P:InSite.Model.Product.QtyOnHand">
            <summary>
            Get the inventory quantity for the <see cref="T:InSite.Model.Product"/> and the default <see cref="T:InSite.Model.Warehouse"/>.
            </summary>
        </member>
        <member name="P:InSite.Model.Product.UnitCost">
            <summary>The Product unit cost that may be used for pricing</summary>
        </member>
        <member name="P:InSite.Model.Product.BasicListPrice">
            <summary>The List Price of the Product, only used if ApplicationSetting UseBasicPricing is set to true</summary>
        </member>
        <member name="P:InSite.Model.Product.BasicSalePrice">
            <summary>The Sale Price of the Product, only used if ApplicationSetting UseBasicPricing is set to true</summary>
        </member>
        <member name="P:InSite.Model.Product.BasicSaleStartDate">
            <summary>The Sale Start DateTime of the Product, can be null, only used if ApplicationSetting UseBasicPricing is set to true</summary>
        </member>
        <member name="P:InSite.Model.Product.BasicSaleEndDate">
            <summary>The Sale End DateTime of the Product, can be null, only used if ApplicationSetting UseBasicPricing is set to true</summary>
        </member>
        <member name="P:InSite.Model.Product.IsConfigured">
            <summary>Set to true to make this a Configurable Product</summary>
        </member>
        <member name="P:InSite.Model.Product.IsFixedConfiguration">
            <summary>The ConfigDataSet represents a static list of child products (a kit or bundle)</summary>
        </member>
        <member name="P:InSite.Model.Product.Configuration">
            <summary>The XML DataSet string representation of ConfigDataSet</summary>
        </member>
        <member name="P:InSite.Model.Product.ConfigDataSet">
            <summary>DataSet representing the Configuration Information for this Product</summary>
        </member>
        <member name="T:InSite.Model.ProductInfo">
            <summary>
            A simplified view of the Product Object
            </summary>
        </member>
        <member name="P:InSite.Model.ProductInfo.UrlSegment">
            <summary>Product identifier used in url of product detail page</summary>
        </member>
        <member name="P:InSite.Model.ProductInfo.IsOnSale">
            <summary>
            IsOnSale returns if this Product is on sale for a Quantity of 1
            </summary>
        </member>
        <member name="P:InSite.Model.ProductInfo.ImageAltText">
            <summary>Alt Text for product image</summary>
        </member>
        <member name="P:InSite.Model.ProductInfo.ERPManaged">
            <summary>Will be set to true for Products that are refreshed in from an ERP System</summary>
        </member>
        <member name="T:InSite.Model.ProductProperty">
            <summary>
            Domain Object which represents addition properties for the <see cref="P:InSite.Model.ProductProperty.Product"/> that fall outside the scope of the base <see cref="P:InSite.Model.ProductProperty.Product"/>
            </summary>
        </member>
        <member name="M:InSite.Model.ProductProperty.ToString">
            <summary>
            override ToString()
            </summary>
            <returns><see cref="T:System.String"/></returns>
            <remarks>Override for the ToString() method, returns the Name property</remarks>
        </member>
        <member name="P:InSite.Model.ProductProperty.Name">
            <summary>
            Get Set Name
            </summary>
            <remarks>Name property acts as the key in the key value pairing. An <see cref="P:InSite.Model.ProductProperty.Product"/> can have as many <see cref="T:InSite.Model.ProductProperty"/>'s as you like
            but the Name will be unique to the collection</remarks>
        </member>
        <member name="P:InSite.Model.ProductProperty.Value">
            <summary>
            Get Set Value
            </summary>
            <remarks>The value of this <see cref="T:InSite.Model.ProductProperty"/></remarks>
        </member>
        <member name="P:InSite.Model.ProductProperty.Product">
            <summary>
            Get Set <see cref="P:InSite.Model.ProductProperty.Product"/>
            </summary>
            <remarks>Get Set the parent <see cref="P:InSite.Model.ProductProperty.Product"/> which contains this <see cref="T:InSite.Model.ProductProperty"/> in it's collection of ProductProperties</remarks>
        </member>
        <member name="T:InSite.Model.PromotionResultAddFreeProductFromCategory">
            <summary>
            <see cref="T:InSite.Model.PromotionResult"/> to add free <see cref="T:InSite.Model.Product"/> from a <see cref="T:InSite.Model.Category"/> to a <see cref="T:InSite.Model.CustomerOrder"/>
            </summary>
        </member>
        <member name="M:InSite.Model.PromotionResultAddFreeProductFromCategory.ApplyPromotionResult(InSite.Model.CustomerOrder)">
            <summary>
            Method to apply this <see cref="T:InSite.Model.PromotionRule"/> to the provided <see cref="T:InSite.Model.CustomerOrder"/>
            </summary>
            <param name="customerOrder"></param>
            <returns>adjusted <see cref="T:InSite.Model.CustomerOrder"/> with <see cref="T:InSite.Model.PromotionResult"/> applied</returns>
        </member>
        <member name="M:InSite.Model.PromotionResultAddFreeProductFromCategory.UnApplyPromotionResult(InSite.Model.CustomerOrder)">
            <summary>
            Method to remove this <see cref="T:InSite.Model.PromotionRule"/> from the provided <see cref="T:InSite.Model.CustomerOrder"/>
            </summary>
            <param name="customerOrder"> to remove this <see cref="T:InSite.Model.PromotionResult"/> from</param>
            <returns>adjusted <see cref="T:InSite.Model.CustomerOrder"/> with <see cref="T:InSite.Model.PromotionResult"/> removed</returns>
            <remarks>Overridden Method - Clears Promotion Result</remarks>
        </member>
        <member name="M:InSite.Model.PromotionResultAddFreeProductFromCategory.ClearPromotionResult(InSite.Model.CustomerOrder)">
            <summary>
            Method to clear this <see cref="T:InSite.Model.PromotionResult"/> from the provided <see cref="T:InSite.Model.CustomerOrder"/>
            </summary>
            <param name="customerOrder"><see cref="T:InSite.Model.CustomerOrder"/> to clear this <see cref="T:InSite.Model.PromotionResult"/> from</param>
            <returns>adjusted <see cref="T:InSite.Model.CustomerOrder"/> with <see cref="T:InSite.Model.PromotionResult"/> removed</returns>
            <remarks>Removes orderlines of the free product</remarks>
        </member>
        <member name="M:InSite.Model.PromotionResultAddFreeProductFromCategory.ProductDiscount(InSite.Model.CustomerOrder)">
            <summary>
            Method to return the product discount amount for the provided <see cref="T:InSite.Model.CustomerOrder"/>
            </summary>
            <param name="customerOrder"><see cref="T:InSite.Model.CustomerOrder"/> to determine the product discount for this <see cref="T:InSite.Model.PromotionResult"/> gave</param>
            <returns>0</returns>
            <remarks>Returns the accumalative regular price * qtyOrdered of all free <see cref="T:InSite.Model.OrderLine"/>s.</remarks>
        </member>
        <member name="M:InSite.Model.PromotionResultAddFreeProductFromCategory.ProductDiscountPerEach(InSite.Model.OrderLine)">
            <summary>
            Method to return the product discount amount per each for the provided <see cref="T:InSite.Model.OrderLine"/>.
            </summary>
            <param name="orderLine"><see cref="T:InSite.Model.CustomerOrder"/> to determine the product discount for this <see cref="T:InSite.Model.PromotionResult"/> gave for this <see cref="T:InSite.Model.OrderLine"/>.</param>
            <returns>the <see cref="P:InSite.Model.Services.PricingService.PricingServiceResult.RegularPrice"/> for the <see cref="T:InSite.Model.OrderLine"/>.</returns>
        </member>
        <member name="P:InSite.Model.PromotionResultAddFreeProductFromCategory.CategoryInfo">
            <summary>
            Get or set <see cref="P:InSite.Model.PromotionResultAddFreeProductFromCategory.CategoryInfo"/>
            </summary>
            <remarks><see cref="T:InSite.Model.Category"/> to add a free <see cref="T:InSite.Model.Product"/> from </remarks>
        </member>
        <member name="P:InSite.Model.PromotionResultAddFreeProductFromCategory.Amount">
            <summary>
            Get or set Amount
            </summary>
            <remarks>The number of free items allowed</remarks>
        </member>
        <member name="P:InSite.Model.PromotionResultAddFreeProductFromCategory.MaxValue">
            <summary>
            Get or set MaxValue
            </summary>
            <remarks>
            MaxValue represents the Maximum <see cref="M:InSite.Model.Product.GetProductPricing(InSite.Model.Services.PricingService.PricingServiceParameter)"/> price for a qualifying <see cref="T:InSite.Model.Product"/>
            </remarks>
        </member>
        <member name="P:InSite.Model.PromotionResultAddFreeProductFromCategory.AvailableProducts">
            <summary>
            Get
            </summary>
            <remarks>returns an <see cref="T:System.Collections.IList"/> of <see cref="T:InSite.Model.Product"/> that can be chosen as Free </remarks>
        </member>
        <member name="T:InSite.Model.PromotionResultDiscountProductsInCategory">
            <summary>
            <see cref="T:InSite.Model.PromotionResult"/> to discount all <see cref="T:InSite.Model.Product"/>s from a <see cref="T:InSite.Model.Category"/> to a <see cref="T:InSite.Model.CustomerOrder"/>
            </summary>
        </member>
        <member name="M:InSite.Model.PromotionResultDiscountProductsInCategory.ApplyPromotionResult(InSite.Model.CustomerOrder)">
            <summary>
            Method to apply this <see cref="T:InSite.Model.PromotionRule"/> to the provided <see cref="T:InSite.Model.CustomerOrder"/>
            </summary>
            <param name="customerOrder"><see cref="T:InSite.Model.CustomerOrder"/> to determine and apply the product discount for this <see cref="T:InSite.Model.PromotionResult"/></param>
            <returns>adjusted <see cref="T:InSite.Model.CustomerOrder"/> with <see cref="T:InSite.Model.PromotionResult"/> applied</returns>
            <remarks>Overridden Method - Will discount all <see cref="T:InSite.Model.OrderLine"/>s for all <see cref="T:InSite.Model.Product"/>s where the <see cref="P:InSite.Model.OrderLine.Product"/>'s <see cref="T:InSite.Model.Category"/> matches <see cref="P:InSite.Model.PromotionResultDiscountProductsInCategory.CategoryInfo"/></remarks>
        </member>
        <member name="M:InSite.Model.PromotionResultDiscountProductsInCategory.UnApplyPromotionResult(InSite.Model.CustomerOrder)">
            <summary>
            UnApplyPromotionResult - Called from within OrderLine.CalculatePrice, only difference between this and ClearPromotionResult is 
            that it doesn't set the PromotionResult to null, so we don't get a null reference exception on the next
            line where it re-applies the promotion result
            </summary>
            <param name="customerOrder"> to remove this <see cref="T:InSite.Model.PromotionResult"/> from</param>
            <returns>adjusted <see cref="T:InSite.Model.CustomerOrder"/> with <see cref="T:InSite.Model.PromotionResult"/> removed</returns>
        </member>
        <member name="M:InSite.Model.PromotionResultDiscountProductsInCategory.ClearPromotionResult(InSite.Model.CustomerOrder)">
            <summary>
            Method to clear this <see cref="T:InSite.Model.PromotionResult"/> from the provided <see cref="T:InSite.Model.CustomerOrder"/>
            </summary>
            <param name="customerOrder"><see cref="T:InSite.Model.CustomerOrder"/> to clear this <see cref="T:InSite.Model.PromotionResult"/> from</param>
            <returns>adjusted <see cref="T:InSite.Model.CustomerOrder"/> with <see cref="T:InSite.Model.PromotionResult"/> removed</returns>
            <remarks>Resets all <see cref="P:InSite.Model.OrderLine.ActualPrice"/> back to <see cref="M:InSite.Model.Product.GetProductPricing(InSite.Model.Services.PricingService.PricingServiceParameter)"/> for the <see cref="T:InSite.Model.OrderLine"/>s with this <see cref="T:InSite.Model.PromotionResult"/></remarks>
        </member>
        <member name="M:InSite.Model.PromotionResultDiscountProductsInCategory.ProductDiscount(InSite.Model.CustomerOrder)">
            <summary>
            Method to return the product discount amount for the provided <see cref="T:InSite.Model.CustomerOrder"/>
            </summary>
            <param name="customerOrder"><see cref="T:InSite.Model.CustomerOrder"/> to determine the product discount for this <see cref="T:InSite.Model.PromotionResult"/> gave</param>
            <returns><see cref="T:System.Decimal"/></returns>
            <remarks>Returns the accumalative discounted price of all <see cref="T:InSite.Model.OrderLine"/>'s which contain this <see cref="T:InSite.Model.PromotionResult"/></remarks>
        </member>
        <member name="M:InSite.Model.PromotionResultDiscountProductsInCategory.ProductDiscountPerEach(InSite.Model.OrderLine)">
            <summary>
            Method to return the product discount amount per each for the provided <see cref="T:InSite.Model.CustomerOrder"/>
            </summary>
            <param name="orderLine"><see cref="T:InSite.Model.OrderLine"/> to determine the product discount for this <see cref="T:InSite.Model.PromotionResult"/> gave</param>
            <returns>the result of <see cref="M:InSite.Model.PromotionResult.GetOrderLineDiscountFromActualPrice(InSite.Model.OrderLine)"/> if the <see cref="T:InSite.Model.OrderLine"/>
            contains this <see cref="T:InSite.Model.PromotionResult"/> else it returns 0.
            </returns>
        </member>
        <member name="P:InSite.Model.PromotionResultDiscountProductsInCategory.CategoryInfo">
            <summary>
            Get or set CategoryInfo
            </summary>
            <remarks><see cref="T:InSite.Model.Category"/> to discount all <see cref="T:InSite.Model.OrderLine"/>s that the <see cref="P:InSite.Model.OrderLine.Product"/>'s <see cref="T:InSite.Model.Category"/> matches this <see cref="T:InSite.Model.PromotionResult"/>'s <see cref="P:InSite.Model.PromotionResultDiscountProductsInCategory.CategoryInfo"/></remarks>
        </member>
        <member name="P:InSite.Model.PromotionResultDiscountProductsInCategory.Amount">
            <summary>
            Get or set Amount
            </summary>
            <remarks>Amount to discount for each <see cref="T:InSite.Model.Product"/> in <see cref="P:InSite.Model.PromotionResultDiscountProductsInCategory.CategoryInfo"/></remarks>
        </member>
        <member name="P:InSite.Model.PromotionResultDiscountProductsInCategory.IsPercent">
            <summary>
            Get or set IsPercent
            </summary>
            <remarks>
            Dictates whether the discount given is actual amount or a percent amount
            </remarks>
        </member>
        <member name="T:InSite.Model.PromotionResultDiscountProductsOfVendor">
            <summary>
            <see cref="T:InSite.Model.PromotionResult"/> to discount all <see cref="T:InSite.Model.Product"/>s from a <see cref="P:InSite.Model.PromotionResultDiscountProductsOfVendor.Vendor"/> for a <see cref="T:InSite.Model.CustomerOrder"/>
            </summary>
        </member>
        <member name="M:InSite.Model.PromotionResultDiscountProductsOfVendor.ApplyPromotionResult(InSite.Model.CustomerOrder)">
            <summary>
            Method apply this <see cref="T:InSite.Model.PromotionRule"/> to the provided <see cref="T:InSite.Model.CustomerOrder"/>
            </summary>
            <param name="customerOrder"><see cref="T:InSite.Model.CustomerOrder"/> to determine and apply the product discount for this <see cref="T:InSite.Model.PromotionResult"/></param>
            <returns>adjusted <see cref="T:InSite.Model.CustomerOrder"/> with <see cref="T:InSite.Model.PromotionResult"/> applied</returns>
            <remarks>Overridden Method - Will discount all <see cref="T:InSite.Model.OrderLine"/>'s for all <see cref="T:InSite.Model.Product"/>s 
            where the <see cref="P:InSite.Model.OrderLine.Product"/>'s <see cref="T:InSite.Model.Vendor"/> matches <see cref="P:InSite.Model.PromotionResultDiscountProductsOfVendor.Vendor"/></remarks>
        </member>
        <member name="M:InSite.Model.PromotionResultDiscountProductsOfVendor.UnApplyPromotionResult(InSite.Model.CustomerOrder)">
            <summary>
            UnApplyPromotionResult - Called from within OrderLine.CalculatePrice, only difference between this and ClearPromotionResult is 
            that it doesn't set the PromotionResult to null, so we don't get a null reference exception on the next
            line where it re-applies the promotion result
            </summary>
            <param name="customerOrder"> to remove this <see cref="T:InSite.Model.PromotionResult"/> from</param>
            <returns>adjusted <see cref="T:InSite.Model.CustomerOrder"/> with <see cref="T:InSite.Model.PromotionResult"/> removed</returns>
        </member>
        <member name="M:InSite.Model.PromotionResultDiscountProductsOfVendor.ClearPromotionResult(InSite.Model.CustomerOrder)">
            <summary>
            Method to clear this <see cref="T:InSite.Model.PromotionResult"/> from the provided <see cref="T:InSite.Model.CustomerOrder"/>
            </summary>
            <param name="customerOrder"><see cref="T:InSite.Model.CustomerOrder"/> to clear this <see cref="T:InSite.Model.PromotionResult"/> from</param>
            <returns>adjusted <see cref="T:InSite.Model.CustomerOrder"/> with <see cref="T:InSite.Model.PromotionResult"/> removed</returns>
        </member>
        <member name="M:InSite.Model.PromotionResultDiscountProductsOfVendor.ProductDiscount(InSite.Model.CustomerOrder)">
            <summary>
            Method to return the product discount amount for the provided <see cref="T:InSite.Model.CustomerOrder"/>
            </summary>
            <param name="customerOrder"><see cref="T:InSite.Model.CustomerOrder"/> to determine the product discount for this <see cref="T:InSite.Model.PromotionResult"/></param>
            <returns><see cref="T:System.Decimal"/></returns>
            <remarks>Returns the accumalative discounted price of all <see cref="T:InSite.Model.OrderLine"/>s which contain this <see cref="T:InSite.Model.PromotionResult"/></remarks>
        </member>
        <member name="M:InSite.Model.PromotionResultDiscountProductsOfVendor.ProductDiscountPerEach(InSite.Model.OrderLine)">
            <summary>
            Method to return the product discount amount per each for the provided <see cref="T:InSite.Model.OrderLine"/>
            </summary>
            <param name="orderLine"><see cref="T:InSite.Model.OrderLine"/> to determine the product discount for this <see cref="T:InSite.Model.PromotionResult"/> gave</param>
            <returns>the result of <see cref="M:InSite.Model.PromotionResult.GetOrderLineDiscountFromActualPrice(InSite.Model.OrderLine)"/> if the <see cref="T:InSite.Model.OrderLine"/>
            contains this <see cref="T:InSite.Model.PromotionResult"/> else it returns 0.
            </returns>
        </member>
        <member name="P:InSite.Model.PromotionResultDiscountProductsOfVendor.Vendor">
            <summary>
            Get or set <see cref="T:InSite.Model.Vendor"/>
            </summary>
            
        </member>
        <member name="P:InSite.Model.PromotionResultDiscountProductsOfVendor.Amount">
            <summary>
            Get or set Amount
            </summary>
            <remarks>Amount to discount for each <see cref="T:InSite.Model.Product"/> for this <see cref="P:InSite.Model.PromotionResultDiscountProductsOfVendor.Vendor"/></remarks>
        </member>
        <member name="P:InSite.Model.PromotionResultDiscountProductsOfVendor.IsPercent">
            <summary>
            Get or set IsPercent
            </summary>
            <remarks>
            Dictates whether the discount given is actual amount or a percent amount
            </remarks>
        </member>
        <member name="T:InSite.Model.PromotionResultDollarOffShipping">
            <summary>
            <see cref="T:InSite.Model.PromotionResult"/> to adjust the <see cref="P:InSite.Model.CustomerOrder.Shipping"/> amount by <see cref="P:InSite.Model.PromotionResultDollarOffShipping.Amount"/>
            </summary>
        </member>
        <member name="M:InSite.Model.PromotionResultDollarOffShipping.DollarOffShipping(InSite.Model.CustomerOrder)">
            <summary>
            Method to return the discounted <see cref="P:InSite.Model.CustomerOrder.Shipping"/> amount
            </summary>
            <param name="customerOrder"><see cref="T:InSite.Model.CustomerOrder"/> to return discounted amount</param>
            <returns><see cref="T:System.Decimal"/> amount of shipping discount</returns>
        </member>
        <member name="P:InSite.Model.PromotionResultDollarOffShipping.Amount">
            <summary>
            Get or set Amount
            </summary>
            <remarks>Amount to decrement <see cref="P:InSite.Model.CustomerOrder.Shipping"/> by</remarks>
        </member>
        <member name="P:InSite.Model.PromotionResultDollarOffShipping.ShipVia">
            <summary>
            Get or set <see cref="T:InSite.Model.ShipVia"/>
            </summary>
            <remarks>Qualifier for if <see cref="P:InSite.Model.CustomerOrder.ShipVia"/> equals this <see cref="P:InSite.Model.PromotionResultDollarOffShipping.ShipVia"/></remarks>
        </member>
        <member name="T:InSite.Model.PromotionResultDollarOffProduct">
            <summary>
            <see cref="T:InSite.Model.PromotionResult"/> to discount the <see cref="T:InSite.Model.CustomerOrder"/> <see cref="P:InSite.Model.OrderLine.ActualPrice"/> by a dollar amount for all
            <see cref="P:InSite.Model.OrderLine.Product"/> that match this <see cref="T:InSite.Model.PromotionResult"/>'s <see cref="P:InSite.Model.PromotionResultDollarOffProduct.ProductInfo"/>
            </summary>
        </member>
        <member name="M:InSite.Model.PromotionResultDollarOffProduct.ApplyPromotionResult(InSite.Model.CustomerOrder)">
            <summary>
            Method apply this <see cref="T:InSite.Model.PromotionRule"/> to the provided <see cref="T:InSite.Model.CustomerOrder"/>
            </summary>
            <param name="customerOrder"><see cref="T:InSite.Model.CustomerOrder"/> to determine and apply the product discount for this <see cref="T:InSite.Model.PromotionResult"/></param>
            <returns>adjusted <see cref="T:InSite.Model.CustomerOrder"/> with <see cref="T:InSite.Model.PromotionResult"/> applied</returns>
            <remarks>Overridden Method - Will discount all <see cref="T:InSite.Model.OrderLine"/>s for all <see cref="T:InSite.Model.Product"/>s 
            where the <see cref="P:InSite.Model.OrderLine.Product"/>'s  matches <see cref="P:InSite.Model.PromotionResultDollarOffProduct.ProductInfo"/></remarks>
        </member>
        <member name="M:InSite.Model.PromotionResultDollarOffProduct.UnApplyPromotionResult(InSite.Model.CustomerOrder)">
            <summary>
            UnApplyPromotionResult - Called from within OrderLine.CalculatePrice, only difference between this and ClearPromotionResult is 
            that it doesn't set the PromotionResult to null, so we don't get a null reference exception on the next
            line where it re-applies the promotion result
            </summary>
            <param name="customerOrder"></param>
            <returns></returns>
        </member>
        <member name="M:InSite.Model.PromotionResultDollarOffProduct.ClearPromotionResult(InSite.Model.CustomerOrder)">
            <summary>
            Method to clear this <see cref="T:InSite.Model.PromotionResult"/> from the provided <see cref="T:InSite.Model.CustomerOrder"/>
            </summary>
            <param name="customerOrder"><see cref="T:InSite.Model.CustomerOrder"/> to clear this <see cref="T:InSite.Model.PromotionResult"/> from</param>
            <returns>adjusted <see cref="T:InSite.Model.CustomerOrder"/> with <see cref="T:InSite.Model.PromotionResult"/> removed</returns>
        </member>
        <member name="M:InSite.Model.PromotionResultDollarOffProduct.ProductDiscount(InSite.Model.CustomerOrder)">
            <summary>
            Method to return the product discount amount for the provided <see cref="T:InSite.Model.CustomerOrder"/>
            </summary>
            <param name="customerOrder"><see cref="T:InSite.Model.CustomerOrder"/> to determine the product discount for this <see cref="T:InSite.Model.PromotionResult"/></param>
            <returns>Amount * <see cref="P:InSite.Model.OrderLine.QtyOrdered"/>.</returns>
            <remarks>Returns the accumalative discounted price of all <see cref="T:InSite.Model.OrderLine"/>s which contain this <see cref="T:InSite.Model.PromotionResult"/></remarks>
        </member>
        <member name="M:InSite.Model.PromotionResultDollarOffProduct.ProductDiscountPerEach(InSite.Model.OrderLine)">
            <summary>
            Method to return the product discount amount per each for the provided <see cref="T:InSite.Model.OrderLine"/>.
            </summary>
            <param name="orderLine"><see cref="T:InSite.Model.OrderLine"/> to determine the product discount for this <see cref="T:InSite.Model.PromotionResult"/> gave</param>
            <returns><see cref="P:InSite.Model.PromotionResultDollarOffProduct.Amount"/> if the <see cref="P:InSite.Model.OrderLine.PromotionResult"/> is this else it returns 0.</returns>
        </member>
        <member name="P:InSite.Model.PromotionResultDollarOffProduct.ProductInfo">
            <summary>
            Get or set ProductInfo
            </summary>
            <remarks>&gt;
            <see cref="T:InSite.Model.Product"/> that <see cref="P:InSite.Model.OrderLine.Product"/> need to match to recieve this <see cref="T:InSite.Model.PromotionResult"/>
            </remarks>
        </member>
        <member name="P:InSite.Model.PromotionResultDollarOffProduct.Amount">
            <summary>
            Get or set Amount
            </summary>
            <remarks>Amount to remove from <see cref="P:InSite.Model.OrderLine.ActualPrice"/></remarks>
        </member>
        <member name="T:InSite.Model.PromotionResultAddFreeProduct">
            <summary>
            <see cref="T:InSite.Model.PromotionResult"/> to add free <see cref="T:InSite.Model.Product"/> to a <see cref="T:InSite.Model.CustomerOrder"/>
            </summary>
        </member>
        <member name="M:InSite.Model.PromotionResultAddFreeProduct.ApplyPromotionResult(InSite.Model.CustomerOrder)">
            <summary>
            Method to apply the <see cref="T:InSite.Model.PromotionResult"/> to the provided <see cref="T:InSite.Model.CustomerOrder"/>
            </summary>
            <param name="customerOrder"><see cref="T:InSite.Model.CustomerOrder"/> to apply <see cref="T:InSite.Model.PromotionResult"/> to</param>
            <returns></returns>
        </member>
        <member name="M:InSite.Model.PromotionResultAddFreeProduct.UnApplyPromotionResult(InSite.Model.CustomerOrder)">
            <summary>
            Method remove <see cref="T:InSite.Model.PromotionResult"/> from <see cref="T:InSite.Model.CustomerOrder"/>
            </summary>
            <param name="customerOrder"><see cref="T:InSite.Model.CustomerOrder"/> to remove <see cref="T:InSite.Model.PromotionResult"/> from</param>
            <returns></returns>
        </member>
        <member name="M:InSite.Model.PromotionResultAddFreeProduct.ClearPromotionResult(InSite.Model.CustomerOrder)">
            <summary>
            Method remove <see cref="T:InSite.Model.PromotionResult"/> from <see cref="T:InSite.Model.CustomerOrder"/>
            </summary>
            <param name="customerOrder"><see cref="T:InSite.Model.CustomerOrder"/> to remove <see cref="T:InSite.Model.PromotionResult"/> from</param>
            <returns></returns>
        </member>
        <member name="M:InSite.Model.PromotionResultAddFreeProduct.ProductDiscount(InSite.Model.CustomerOrder)">
            <summary>
            Method to return the Discounted <see cref="T:InSite.Model.Product"/> amount for the <see cref="T:InSite.Model.OrderLine"/>
            </summary>
            <param name="customerOrder"><see cref="T:InSite.Model.CustomerOrder"/> to return <see cref="T:InSite.Model.Product"/> discounts</param>
            <returns></returns>
        </member>
        <member name="M:InSite.Model.PromotionResultAddFreeProduct.ProductDiscountPerEach(InSite.Model.OrderLine)">
            <summary>
            Method to return the product discount amount per each for the provided <see cref="T:InSite.Model.OrderLine"/>.
            </summary>
            <param name="orderLine"><see cref="T:InSite.Model.OrderLine"/> to determine the product discount for this <see cref="T:InSite.Model.PromotionResult"/> gave</param>
            <returns>the <see cref="P:InSite.Model.Services.PricingService.PricingServiceResult.RegularPrice"/> for this <see cref="T:InSite.Model.OrderLine"/>.</returns>
        </member>
        <member name="P:InSite.Model.PromotionResultAddFreeProduct.ProductInfo">
            <summary>
            Get or set ProductInfo
            </summary>
            <remarks><see cref="T:InSite.Model.Product"/> to add to the <see cref="T:InSite.Model.CustomerOrder"/></remarks>
        </member>
        <member name="P:InSite.Model.PromotionResultAddFreeProduct.Amount">
            <summary>
            Get or set Amount
            </summary>
            <remarks>
            The quantity of free <see cref="T:InSite.Model.Product"/>s to add the <see cref="T:InSite.Model.CustomerOrder"/>
            </remarks>
        </member>
        <member name="T:InSite.Model.PromotionResultDollarOffOrder">
            <summary>
            <see cref="T:InSite.Model.PromotionResult"/> to discount <see cref="T:InSite.Model.CustomerOrder"/> by a dollar amount
            </summary>
        </member>
        <member name="M:InSite.Model.PromotionResultDollarOffOrder.DollarOffOrder(InSite.Model.CustomerOrder)">
            <summary>
            Method to return Dollar amount discount for the provided <see cref="T:InSite.Model.CustomerOrder"/>
            </summary>
            <param name="customerOrder"><see cref="T:InSite.Model.CustomerOrder"/> to apply discount to</param>
            <returns>adjusted <see cref="T:InSite.Model.CustomerOrder"/> with this <see cref="T:InSite.Model.PromotionResult"/> applied</returns>
        </member>
        <member name="P:InSite.Model.PromotionResultDollarOffOrder.Amount">
            <summary>
            Get or set Amount
            </summary>
            <remarks>dollar amount to dicount order by</remarks>
        </member>
        <member name="T:InSite.Model.PromotionResultPercentOffShipping">
            <summary>
            <see cref="T:InSite.Model.PromotionResult"/> to adjust the <see cref="P:InSite.Model.CustomerOrder.Shipping"/>'s amount by a percentage <see cref="P:InSite.Model.PromotionResultPercentOffShipping.Amount"/>
            </summary>
        </member>
        <member name="M:InSite.Model.PromotionResultPercentOffShipping.PercentOffShipping(InSite.Model.CustomerOrder)">
            <summary>
            Method to return the Percent off of shipping for provided <see cref="T:InSite.Model.CustomerOrder"/>
            </summary>
            <param name="customerOrder"><see cref="T:InSite.Model.CustomerOrder"/> to get percent off shipping amount</param>
            <returns></returns>
        </member>
        <member name="P:InSite.Model.PromotionResultPercentOffShipping.Amount">
            <summary>
            Get or set
            </summary>
            <remarks>
            Percentage amount to decriment <see cref="P:InSite.Model.CustomerOrder.Shipping"/> by
            </remarks>
        </member>
        <member name="P:InSite.Model.PromotionResultPercentOffShipping.ShipVia">
            <summary>
            Get or set <see cref="T:InSite.Model.ShipVia"/>
            </summary>
            <remarks>if <see cref="T:InSite.Model.PromotionResult"/> requires a Qualifying <see cref="P:InSite.Model.PromotionResultPercentOffShipping.ShipVia"/></remarks>
        </member>
        <member name="T:InSite.Model.PromotionResultPercentOffOrder">
            <summary>
            <see cref="T:InSite.Model.PromotionResult"/> to adjust the <see cref="P:InSite.Model.CustomerOrder.OrderGrandTotal"/> amount by <see cref="P:InSite.Model.PromotionResultPercentOffOrder.Amount"/>%
            </summary>
        </member>
        <member name="M:InSite.Model.PromotionResultPercentOffOrder.PercentOffOrder(InSite.Model.CustomerOrder)">
            <summary>
            Method to return the Percent off <see cref="T:InSite.Model.CustomerOrder"/> amount
            </summary>
            <param name="customerOrder"><see cref="T:InSite.Model.CustomerOrder"/> to calculate percent off <see cref="T:InSite.Model.CustomerOrder"/> amount</param>
            <returns><see cref="T:System.Decimal"/></returns>
        </member>
        <member name="P:InSite.Model.PromotionResultPercentOffOrder.Amount">
            <summary>
            Get or set Amount
            </summary>
            <remarks>Percentage amount to adjust the <see cref="T:InSite.Model.CustomerOrder"/> by</remarks>
        </member>
        <member name="T:InSite.Model.PromotionResultPercentOffProduct">
            <summary>
            <see cref="T:InSite.Model.PromotionResult"/> to adjust the <see cref="P:InSite.Model.CustomerOrder.OrderLines"/>s qualifying <see cref="T:InSite.Model.Product"/>s amount by <see cref="P:InSite.Model.PromotionResultPercentOffProduct.Amount"/> %
            </summary>
        </member>
        <member name="M:InSite.Model.PromotionResultPercentOffProduct.ApplyPromotionResult(InSite.Model.CustomerOrder)">
            <summary>
            Method apply this <see cref="T:InSite.Model.PromotionRule"/> to the provided <see cref="T:InSite.Model.CustomerOrder"/>
            </summary>
            <param name="customerOrder"><see cref="T:InSite.Model.CustomerOrder"/> to determine and apply the product percent discount for this <see cref="T:InSite.Model.PromotionResult"/></param>
            <returns>adjusted <see cref="T:InSite.Model.CustomerOrder"/> with <see cref="T:InSite.Model.PromotionResult"/> applied</returns>
            <remarks>Overridden Method - Will discount all <see cref="T:InSite.Model.OrderLine"/>s for all <see cref="T:InSite.Model.Product"/>s 
            where the <see cref="P:InSite.Model.OrderLine.Product"/>s matches <see cref="P:InSite.Model.PromotionResultPercentOffProduct.ProductInfo"/></remarks>
        </member>
        <member name="M:InSite.Model.PromotionResultPercentOffProduct.UnApplyPromotionResult(InSite.Model.CustomerOrder)">
            <summary>
            UnApplyPromotionResult - Called from within OrderLine.CalculatePrice, only difference between this and ClearPromotionResult is 
            that it doesn't set the PromotionResult to null, so we don't get a null reference exception on the next
            line where it re-applies the promotion result
            </summary>
            <param name="customerOrder"></param>
            <returns></returns>
        </member>
        <member name="M:InSite.Model.PromotionResultPercentOffProduct.ClearPromotionResult(InSite.Model.CustomerOrder)">
            <summary>
            Method to clear this <see cref="T:InSite.Model.PromotionResult"/> from the provided <see cref="T:InSite.Model.CustomerOrder"/>
            </summary>
            <param name="customerOrder"><see cref="T:InSite.Model.CustomerOrder"/> to clear this <see cref="T:InSite.Model.PromotionResult"/> from</param>
            <returns>adjusted <see cref="T:InSite.Model.CustomerOrder"/> with <see cref="T:InSite.Model.PromotionResult"/> removed</returns>
        </member>
        <member name="M:InSite.Model.PromotionResultPercentOffProduct.ProductDiscount(InSite.Model.CustomerOrder)">
            <summary>
            Method to return the product discount amount for the provided <see cref="T:InSite.Model.CustomerOrder"/>
            </summary>
            <param name="customerOrder"><see cref="T:InSite.Model.CustomerOrder"/> to determine the product discount for this <see cref="T:InSite.Model.PromotionResult"/></param>
            <returns><see cref="T:System.Decimal"/></returns>
            <remarks>Returns the accumalative discounted price of all <see cref="T:InSite.Model.OrderLine"/>s which contain this <see cref="T:InSite.Model.PromotionResult"/></remarks>
        </member>
        <member name="M:InSite.Model.PromotionResultPercentOffProduct.ProductDiscountPerEach(InSite.Model.OrderLine)">
            <summary>
            Method to return the product discount amount per each for the provided <see cref="T:InSite.Model.CustomerOrder"/>
            </summary>
            <param name="orderLine"><see cref="T:InSite.Model.OrderLine"/> to determine the product discount for this <see cref="T:InSite.Model.PromotionResult"/> gave</param>
            <returns><see cref="M:InSite.Model.PromotionResultPercentOffProduct.ProductDiscount(InSite.Model.CustomerOrder)"/>the actual price for the quantity ordered.</returns>
        </member>
        <member name="P:InSite.Model.PromotionResultPercentOffProduct.ProductInfo">
            <summary>
            Get or set <see cref="P:InSite.Model.PromotionResultPercentOffProduct.ProductInfo"/>
            </summary>
            <remarks>qualifying <see cref="T:InSite.Model.Product"/></remarks>
        </member>
        <member name="P:InSite.Model.PromotionResultPercentOffProduct.Amount">
            <summary>
            Get or set Amount
            </summary>
            <remarks>Amount to adjust by percent the qualifying <see cref="T:InSite.Model.OrderLine"/> <see cref="P:InSite.Model.OrderLine.ActualPrice"/></remarks>
        </member>
        <member name="T:InSite.Model.PromotionResultSetOrderedProductToAmount">
            <summary>
            <see cref="T:InSite.Model.PromotionResult"/> to adjust all qualifying <see cref="T:InSite.Model.CustomerOrder"/> <see cref="P:InSite.Model.OrderLine.ActualPrice"/> to <see cref="P:InSite.Model.PromotionResultSetOrderedProductToAmount.Amount"/>
            </summary>
        </member>
        <member name="M:InSite.Model.PromotionResultSetOrderedProductToAmount.ApplyPromotionResult(InSite.Model.CustomerOrder)">
            <summary>
            Method to apply <see cref="P:InSite.Model.PromotionResultSetOrderedProductToAmount.Amount"/> to qualifying <see cref="P:InSite.Model.OrderLine.ActualPrice"/>
            </summary>
            <param name="customerOrder"><see cref="T:InSite.Model.CustomerOrder"/> to apply <see cref="T:InSite.Model.PromotionResult"/> to</param>
            <returns>adjusted <see cref="T:InSite.Model.CustomerOrder"/></returns>
        </member>
        <member name="M:InSite.Model.PromotionResultSetOrderedProductToAmount.UnApplyPromotionResult(InSite.Model.CustomerOrder)">
            <summary>
            UnApplyPromotionResult - Called from within OrderLine.CalculatePrice, only difference between this and ClearPromotionResult is 
            that it doesn't set the PromotionResult to null, so we don't get a null reference exception on the next
            line where it re-applies the promotion result
            </summary>
            <param name="customerOrder"></param>
            <returns></returns>
        </member>
        <member name="M:InSite.Model.PromotionResultSetOrderedProductToAmount.ClearPromotionResult(InSite.Model.CustomerOrder)">
            <summary>
            Method to clear this <see cref="T:InSite.Model.PromotionResult"/> from the provided <see cref="T:InSite.Model.CustomerOrder"/>
            </summary>
            <param name="customerOrder"><see cref="T:InSite.Model.CustomerOrder"/> to clear this <see cref="T:InSite.Model.PromotionResult"/> from</param>
            <returns>adjusted <see cref="T:InSite.Model.CustomerOrder"/> with <see cref="T:InSite.Model.PromotionResult"/> removed</returns>
        </member>
        <member name="M:InSite.Model.PromotionResultSetOrderedProductToAmount.ProductDiscount(InSite.Model.CustomerOrder)">
            <summary>
            Method to return the product discount amount for the provided <see cref="T:InSite.Model.CustomerOrder"/>
            </summary>
            <param name="customerOrder"><see cref="T:InSite.Model.CustomerOrder"/> to determine the product discount for this <see cref="T:InSite.Model.PromotionResult"/></param>
            <returns><see cref="T:System.Decimal"/></returns>
            <remarks>Returns the accumalative discounted price of all <see cref="T:InSite.Model.OrderLine"/>s which contain this <see cref="T:InSite.Model.PromotionResult"/></remarks>
        </member>
        <member name="M:InSite.Model.PromotionResultSetOrderedProductToAmount.ProductDiscountPerEach(InSite.Model.OrderLine)">
            <summary>
            Method to return the product discount amount per each for the provided <see cref="T:InSite.Model.OrderLine"/>.
            </summary>
            <param name="orderLine"><see cref="T:InSite.Model.OrderLine"/> to determine the product discount for this <see cref="T:InSite.Model.PromotionResult"/> gave</param>
            <returns><see cref="M:InSite.Model.PromotionResultSetOrderedProductToAmount.ProductDiscount(InSite.Model.CustomerOrder)"/></returns>
        </member>
        <member name="P:InSite.Model.PromotionResultSetOrderedProductToAmount.ProductInfo">
            <summary>
            Get or set <see cref="T:InSite.Model.ProductInfo"/>
            </summary>
            <remarks>Qualifying <see cref="T:InSite.Model.Product"/> for <see cref="T:InSite.Model.OrderLine"/></remarks>
        </member>
        <member name="P:InSite.Model.PromotionResultSetOrderedProductToAmount.Amount">
            <summary>
            Get or set Amount
            </summary>
            <remarks>Amount to set qualifying <see cref="P:InSite.Model.OrderLine.ActualPrice"/> to</remarks>
        </member>
        <member name="T:InSite.Model.PromotionResultSetOrderedProductToFree">
            <summary>
            <see cref="T:InSite.Model.PromotionResult"/> to set all qualifying <see cref="T:InSite.Model.CustomerOrder"/> <see cref="P:InSite.Model.OrderLine.ActualPrice"/> to $0
            </summary>
        </member>
        <member name="M:InSite.Model.PromotionResultSetOrderedProductToFree.ApplyPromotionResult(InSite.Model.CustomerOrder)">
            <summary>
            Method to apply $0 to qualifying <see cref="T:InSite.Model.OrderLine"/>'s <see cref="P:InSite.Model.OrderLine.ActualPrice"/>
            </summary>
            <param name="customerOrder"><see cref="T:InSite.Model.CustomerOrder"/> to apply <see cref="T:InSite.Model.PromotionResult"/> to</param>
            <returns>adjusted <see cref="T:InSite.Model.CustomerOrder"/></returns>
        </member>
        <member name="M:InSite.Model.PromotionResultSetOrderedProductToFree.UnApplyPromotionResult(InSite.Model.CustomerOrder)">
            <summary>
            UnApplyPromotionResult - Called from within OrderLine.CalculatePrice, only difference between this and ClearPromotionResult is 
            that it doesn't set the PromotionResult to null, so we don't get a null reference exception on the next
            line where it re-applies the promotion result
            </summary>
            <param name="customerOrder"></param>
            <returns></returns>
        </member>
        <member name="M:InSite.Model.PromotionResultSetOrderedProductToFree.ClearPromotionResult(InSite.Model.CustomerOrder)">
            <summary>
            Method to clear this <see cref="T:InSite.Model.PromotionResult"/> from the provided <see cref="T:InSite.Model.CustomerOrder"/>
            </summary>
            <param name="customerOrder"><see cref="T:InSite.Model.CustomerOrder"/> to clear this <see cref="T:InSite.Model.PromotionResult"/> from</param>
            <returns>adjusted <see cref="T:InSite.Model.CustomerOrder"/> with <see cref="T:InSite.Model.PromotionResult"/> removed</returns>
        </member>
        <member name="M:InSite.Model.PromotionResultSetOrderedProductToFree.ProductDiscount(InSite.Model.CustomerOrder)">
            <summary>
            Method to return the product discount amount for the provided <see cref="T:InSite.Model.CustomerOrder"/>
            </summary>
            <param name="customerOrder"><see cref="T:InSite.Model.CustomerOrder"/> to determine the product discount for this <see cref="T:InSite.Model.PromotionResult"/></param>
            <returns><see cref="T:System.Decimal"/></returns>
            <remarks>Returns the accumalative discounted price of all <see cref="T:InSite.Model.OrderLine"/>s which contain this <see cref="T:InSite.Model.PromotionResult"/></remarks>
        </member>
        <member name="M:InSite.Model.PromotionResultSetOrderedProductToFree.ProductDiscountPerEach(InSite.Model.OrderLine)">
            <summary> 
            Method to return the product discount amount per each for the provided <see cref="T:InSite.Model.OrderLine"/>.
            </summary>
            <param name="orderLine"><see cref="T:InSite.Model.OrderLine"/> to determine the product discount for this <see cref="T:InSite.Model.PromotionResult"/> gave</param>
            <returns><see cref="M:InSite.Model.PromotionResultSetOrderedProductToFree.ProductDiscount(InSite.Model.CustomerOrder)"/></returns>
        </member>
        <member name="P:InSite.Model.PromotionResultSetOrderedProductToFree.ProductInfo">
            <summary>
            Get or set <see cref="T:InSite.Model.ProductInfo"/>
            </summary>
            <remarks><see cref="T:InSite.Model.Product"/> for qualifying <see cref="T:InSite.Model.OrderLine"/>s</remarks>
        </member>
        <member name="M:InSite.Model.PromotionRuleExcludesUserRole.IsValid(InSite.Model.CustomerOrder,InSite.Model.Customer)">
            <summary>
            Method to validate whether the rule passes/validates for the provided parameters.
            The order will be valid for the promotion if the role is specified for the promotion rule, 
            the CustomerOrder.UserProfile is not null, and the CustomerOrder.UserProfile.UserName
            is not in the role specified for the promotion.
            </summary>
            <param name="customerOrder"><see cref="T:InSite.Model.CustomerOrder"/> to validate rule against</param>
            <param name="customer"><see cref="T:InSite.Model.Customer"/> to validate rule against</param>
            <returns><see cref="T:System.Boolean"/></returns>
        </member>
        <member name="M:InSite.Model.PromotionRuleIncludesUserRole.IsValid(InSite.Model.CustomerOrder,InSite.Model.Customer)">
            <summary>
            Method to validate whether the rule passes/validates for the provided parameters.
            The order will be valid for the promotion if the role is specified for the promotion rule, 
            the CustomerOrder.UserProfile is not null, and the CustomerOrder.UserProfile.UserName
            is in the role specified for the promotion.
            </summary>
            <param name="customerOrder"><see cref="T:InSite.Model.CustomerOrder"/> to validate rule against</param>
            <param name="customer"><see cref="T:InSite.Model.Customer"/> to validate rule against</param>
            <returns><see cref="T:System.Boolean"/></returns>
        </member>
        <member name="T:InSite.Model.PromotionRuleOrderContainsPromotion">
            <summary>
            This class implements <see cref="T:InSite.Model.PromotionRule"/>.  It's purpose is to validate whether the provided <see cref="T:InSite.Model.CustomerOrder"/>
            contains the configured <see cref="T:InSite.Model.Promotion"/> 
            </summary>
        </member>
        <member name="M:InSite.Model.PromotionRuleOrderContainsPromotion.IsValid(InSite.Model.CustomerOrder,InSite.Model.Customer)">
            <summary>
            Method to evaluate if the provided <see cref="T:InSite.Model.CustomerOrder"/> contains the Configured <see cref="T:InSite.Model.Promotion"/> for this <see cref="T:InSite.Model.PromotionRule"/>'s <see cref="T:InSite.Model.Promotion"/>
            </summary>
        </member>
        <member name="P:InSite.Model.PromotionRuleOrderContainsPromotion.ContainedPromotion">
            <summary>
            Get or set the <see cref="T:InSite.Model.Promotion"/> to evaluate whether the provided <see cref="T:InSite.Model.CustomerOrder"/> contains this <see cref="T:InSite.Model.Promotion"/>
            </summary>
        </member>
        <member name="P:InSite.Model.PromotionRuleOrderContainsPromotion.ContainedPromotionName">
            <summary>
            Get or set Contained <see cref="T:InSite.Model.Promotion"/> by <see cref="P:InSite.Model.Promotion.Name"/>
            </summary>
        </member>
        <member name="T:InSite.Model.Role">
            <summary>
            <see cref="T:InSite.Model.UserProfile"/> Roles for user
            </summary>
        </member>
        <member name="F:InSite.Model.Role.Administrator">
            <summary>
            My Account access to all navigation in My Account.
            Can order over budget, can see all Invoices and all Orders for all Users of Customers that User is assigned as Administrator for. 
            Default approver if no approver is assigned to User.
            </summary>
        </member>
        <member name="F:InSite.Model.Role.Buyer1">
            <summary>
            All orders require approval.
            Can see Orders.
            Cannot see Invoices, Order Approval, Budget Management,  User Admin, and Requisition Approval.  
            Cannot be assigned as an Approver.
            </summary>
        </member>
        <member name="F:InSite.Model.Role.Buyer2">
            <summary>
            Over budget orders require approval. 
            Can see orders.
            Cannot see Invoices, Budget Management, User Admin and Requisition Approval.
            </summary>
        </member>
        <member name="F:InSite.Model.Role.Buyer3">
            <summary>
            Order over budget w/no approval.
            Can see Orders and Invoices.
            Cannot see User Admin, Budget Admin, and Requisition Approval. 
            </summary>
        </member>
        <member name="F:InSite.Model.Role.Requisitioner">
            <summary>
            Can only place requisitions, "request to order an item".
            Cannot place orders, cannot see Orders, Invoices, Order Approval, 
            Requisition Approval, User Admin, Budget Admin.
            </summary>
        </member>
        <member name="T:InSite.Model.Services.IConfigDataSetSchemaProvider">
            <summary>Implement the IConfigDataSetSchemaProvider interface by inheriting from ConfigDataSetSchemaProvider_Generic to customize the DataSet schema
            used for the Configurator</summary>
            <remarks>You should always inherit from ConfigDataSetSchemaProvider_Generic and only add fields to the schema, the fields that are already there are
            relied upon in the Management Console and in other areas in the code in the system.  You can add additional fields to the ConfigDataSet schema
            implementing this plugin for your own uses with the Configurator.</remarks>
        </member>
        <member name="M:InSite.Model.Services.IConfigDataSetSchemaProvider.GetConfigDataSetSchema">
            <summary>This method is called from the Product.ConfigDataSet property to generate the schema of the ConfigDataSet</summary>
            <remarks>If you make changes to your implementation, those changes will be merged in to existing ConfigDataSets</remarks>
            <returns>The DataSet used to hold Product Configuration information</returns>
        </member>
        <member name="T:InSite.Model.Services.ImportExport.StyleProductInfoImportExportService">
            <summary>
            The standard StyleProductInfo Import/Export Service
            </summary>
        </member>
        <member name="M:InSite.Model.Services.ImportExport.StyleProductInfoImportExportService.NormalImport(System.Data.DataSet)">
            <summary>
            NormalImport for the Styled Product Children and traits allows for more than one instance of the parent in a spreadsheet during import.
            </summary>
            <param name="dataSet">DataSet of data read from Import File</param>
            <returns>A list of changes found in the passed in dataset</returns>
        </member>
        <member name="M:InSite.Model.Services.ImportExport.StyleProductInfoImportExportService.ColumnCheck(System.Data.DataColumnCollection)">
            <summary>
            ColumnCheck will ensure that the imported spreadsheet has the columns it needs to run a successful import
            </summary>
            <param name="dataColumnCollection"></param>
            <returns>This routine returns true if the spreadsheet had enough columns.</returns>
        </member>
        <member name="T:InSite.Model.Services.PriceCalculator_QtyBreaks">
            <summary>
            PriceCalculator_QtyBreaks - Price Calculator that returns QtyBreaksi
            </summary>
        </member>
        <member name="M:InSite.Model.Services.PriceCalculator_QtyBreaks.CalculatePrice(InSite.Model.Customer,InSite.Model.Product,System.Decimal,System.Data.DataSet,System.Boolean,System.Boolean@)">
            <summary>
            Calculates Price for given Customer, Product and optionally Configuration
            </summary>
            <param name="customer">Can be null</param>
            <param name="product">Required</param>
            <param name="qtyOrdered">Required</param>
            <param name="configDataSet">Can be null</param>
            <param name="regularPrice">If true, calculates Regular Price, if false, calculates Actual Price</param>
            <param name="isSalePrice">Output parameter that returns true if Sale Price is returned, false if not</param>
            <returns>Price</returns>
        </member>
        <member name="M:InSite.Model.Services.PriceCalculator_QtyBreaks.CalculatePrice(InSite.Model.OrderLine,System.Boolean,System.Boolean@)">
            <summary>
            Calculates Price for OrderLine
            </summary>
            <param name="orderLine"></param>
            <param name="regularPrice">If true, calculates Regular Price, if false, calculates Actual Price</param>
            <param name="isSalePrice">Output parameter that returns true if Sale Price is returned, false if not</param>
            <returns>Price</returns>
        </member>
        <member name="M:InSite.Model.Services.PriceCalculator_QtyBreaks.ConfigurePrice(System.Decimal,System.Data.DataSet)">
            <summary>
            Calculates price for configured options
            </summary>
            <param name="price"></param>
            <param name="configDataSet"></param>
            <returns></returns>
        </member>
        <member name="P:InSite.Model.Interfaces.IPriceCalculation.AdjustsForUom">
            <summary>
            True if this calculation adjusts for unit of measure.  If false, the pricing service will need to adjust for unit of measure.
            </summary>
        </member>
        <member name="M:InSite.Model.Services.PricingService.PriceRounding.Round(System.Decimal,System.String)">
            <summary>
            Round a number based on calculation flags that are typically set in price matrix records.
            </summary>
            <param name="number">The number to be rounded</param>
            <param name="calculationFlags">Pipe delimited string that holds rounding parameters.</param>
            <returns></returns>
        </member>
        <member name="M:InSite.Model.Services.PricingService.PricingServiceBase.CreatePriceCalculations">
            <summary>
            Create a list of price calculations to be used by the pricing service.
            </summary>
        </member>
        <member name="M:InSite.Model.Services.PricingService.PricingServiceBase.GetBasePrice(InSite.Model.Services.PricingService.PricingServiceParameter)">
            <summary>
            Get the base price for a product.
            </summary>
            <param name="pricingServiceParameter">A <see cref="T:InSite.Model.Services.PricingService.PricingServiceParameter"/>.  Along with the product, the pricing parameter will provide warehouse, uom, etc.</param>
            <returns>Base price of a product.</returns>
        </member>
        <member name="M:InSite.Model.Services.PricingService.PricingServiceBase.GetProductUnitCost(InSite.Model.Product,System.String)">
            <summary>
            Get the cost value of a product.
            </summary>
            <param name="product">A <see cref="T:InSite.Model.Product"/></param>
            <param name="warehouse">Warehouse name for which to get the cost.</param>
            <returns></returns>
        </member>
        <member name="M:InSite.Model.Services.PricingService.PricingServiceBase.AddDisplayPrices(InSite.Model.Services.PricingService.PricingServiceResult,InSite.Model.Currency)">
            <summary>
            Updates the currency specific *Display strings in the <see cref="T:InSite.Model.Services.PricingService.PricingServiceResult"/>
            </summary>
            <param name="result"><see cref="T:InSite.Model.Services.PricingService.PricingServiceResult"/> to modify</param>
            <param name="currency">Currency used to format the pricing result</param>
        </member>
        <member name="M:InSite.Model.Services.PricingService.PricingServiceBase.AddExtendedPrices(InSite.Model.Services.PricingService.PricingServiceParameter,InSite.Model.Services.PricingService.PricingServiceResult,InSite.Model.Currency)">
            <summary>
            Set the extended price values for a pricing result.
            </summary>
            <param name="pricingServiceParameter">A <see cref="T:InSite.Model.Services.PricingService.PricingServiceParameter"/></param>
            <param name="result">A <see cref="T:InSite.Model.Services.PricingService.PricingServiceResult"/></param>
            <param name="currency">A <see cref="T:InSite.Model.Currency"/></param>
        </member>
        <member name="M:InSite.Model.Services.PricingService.PricingServiceBase.PerformCurrencyConversion(System.String,InSite.Model.Services.PricingService.PriceAndPriceBreaks)">
            <summary>
            Convert a price and price breaks to an alternative currency based on the most recent exchange rate.
            </summary>
            <param name="currencyTo">ISO currency code</param>
            <param name="priceAndPriceBreaks"><see cref="T:InSite.Model.Services.PricingService.PriceAndPriceBreaks"/></param>
        </member>
        <member name="M:InSite.Model.Services.PricingService.PricingServiceBase.PerformCurrencyConversion(System.String,System.Decimal)">
            <summary>
            Convert a price to an alternative currency based on the most recent exchange rate.
            </summary>
            <param name="currencyTo">ISO currency code</param>
            <param name="price">Price in base currency of the website.</param>
            <returns></returns>
        </member>
        <member name="M:InSite.Model.Services.PricingService.PricingServiceBase.GetCurrency(System.String)">
            <summary>
            Retrieve the currency for the given currency code.
            </summary>
            <param name="currencyCode">Currency Code</param>
            <returns>A <see cref="T:InSite.Model.Currency"/></returns>
        </member>
        <member name="M:InSite.Model.Services.PricingService.PricingServiceBase.GetCurrencyRate(System.String)">
            <summary>
            Get the most recent currency reate for the currency code.
            </summary>
            <param name="currencyCode">ISO Currency code</param>
            <returns><see cref="T:InSite.Model.CurrencyRate"/></returns>
        </member>
        <member name="F:InSite.Model.Services.PricingService.PricingServiceBase._baseCurrency">
            <summary>
            Default currency used in the website.
            </summary>
        </member>
        <member name="M:InSite.Model.Services.PricingService.PricingServiceBase.ConfigurePrice(System.Decimal,System.Data.DataSet,System.Boolean,System.String)">
            <summary>
            Makes an adjustment to a product price for configuration values.
            </summary>
            <param name="price">The base price.</param>
            <param name="configDataSet">Configuration dataset for the product with Selected fields set to true on the desired options</param>
            <param name="isFixedConfiguration">true if prices for all items in the configuration are included (kit/bundle)</param>
            <param name="currencyCode">ISO currency code of the currency to convert the price to.</param>
            <returns>The adjusted price.</returns>
        </member>
        <member name="M:InSite.Model.Services.PricingService.PricingServiceGeneric.#ctor(InSite.Model.Interfaces.IUnitOfWork)">
            <summary>
            Generic implementation of product pricing.
            </summary>
            <param name="unitOfWork"></param>
        </member>
        <member name="M:InSite.Model.Services.PricingService.PricingServiceGeneric.CalculatePrice(InSite.Model.Services.PricingService.PricingServiceParameter)">
            <summary>
            Calculate the price of a product.
            </summary>
            <param name="pricingServiceParameter">The <see cref="T:InSite.Model.Services.PricingService.PricingServiceParameter"/> holding information for how to calculate the price</param>
            <returns><see cref="T:InSite.Model.Services.PricingService.PricingServiceResult"/> with the calculated prices.</returns>
        </member>
        <member name="M:InSite.Model.Services.PricingService.PricingServiceGeneric.MergePriceBreaks(System.Collections.Generic.List{InSite.Model.ProductPrice},System.Collections.Generic.List{InSite.Model.ProductPrice})">
            <summary>
            Interleave regular price breaks with sale price breaks.
            </summary>
            <param name="regularPricing">Regular pricing results</param>
            <param name="actualPricing">Sale/Customer pricing results</param>
        </member>
        <member name="M:InSite.Model.Services.PricingService.PricingServiceGeneric.SetBasicPricing(InSite.Model.Services.PricingService.PriceAndPriceBreaks,InSite.Model.Services.PricingService.PricingServiceParameter,System.Boolean)">
            <summary>
            Set the price based on basic pricing rules.
            </summary>
            <param name="priceAndBreaks"></param>
            <param name="pricingServiceParameter"></param>
            <param name="regularPrice"></param>
        </member>
        <member name="M:InSite.Model.Services.PricingService.PricingServiceGeneric.GetPriceAndPriceBreaks(System.Collections.Generic.IList{InSite.Model.PriceMatrix},InSite.Model.Services.PricingService.PricingServiceParameter,System.Boolean)">
            <summary>
            Calculate the price of a product.
            </summary>
            <param name="priceMatrixList">List of PriceMatrix records.</param>
            <param name="pricingServiceParameter"><see cref="T:InSite.Model.Services.PricingService.PricingServiceParameter"/> values.</param>
            <param name="regularPrice">If false, calculate special pricing.</param>
            <returns></returns>
        </member>
        <member name="M:InSite.Model.Services.PricingService.PricingServiceGeneric.ApplyProductMultiplier(InSite.Model.Services.PricingService.PricingServiceParameter,System.Decimal)">
            <summary>
            Apply a multiplier, if necessary, to a calculated price. This is an extension point for ERP systems that use a multiplier.
            </summary>
            <param name="pricingServiceParameter">A <see cref="T:InSite.Model.Services.PricingService.PricingServiceParameter"/></param>
            <param name="price">Price that has been calculated for a product.</param>
            <returns></returns>
        </member>
        <member name="M:InSite.Model.Services.PricingService.PricingServiceGeneric.SalePriceCheck(InSite.Model.Services.PricingService.PricingServiceParameter,InSite.Model.Services.PricingService.PriceAndPriceBreaks,System.Collections.Generic.IList{InSite.Model.PriceMatrix})">
            <summary>
            Check to see if there is any sale pricing setup for the product.
            </summary>
            <param name="pricingServiceParameter"></param>
            <param name="priceAndBreaks"></param>
            <param name="priceMatrixList">List of PriceMatrix records for this product.</param>
        </member>
        <member name="M:InSite.Model.Services.PricingService.PricingServiceGeneric.ZeroPriceCheck(InSite.Model.Services.PricingService.PriceAndPriceBreaks,InSite.Model.Services.PricingService.PricingServiceParameter,System.Collections.Generic.IList{InSite.Model.PriceMatrix})">
            <summary>
            Handle prices that have been calculated to zero.
            </summary>
            <param name="priceAndBreaks"></param>
            <param name="pricingServiceParameter"></param>
            <param name="priceMatrixList"></param>
        </member>
        <member name="M:InSite.Model.Services.PricingService.PricingServiceGeneric.GetPriceMatrix(System.Collections.Generic.IList{InSite.Model.PriceMatrix},InSite.Model.Services.PricingService.PricingServiceParameter,System.Boolean)">
            <summary>
            Get a price matrix record based on the priority order of RecordType values.
            </summary>
            <param name="priceMatrixList"></param>
            <param name="pricingServiceParameter"></param>
            <param name="regularPrice"></param>
            <returns></returns>
        </member>
        <member name="M:InSite.Model.Services.PricingService.PricingServiceGeneric.SetupCommonMatrixQueries(InSite.Model.Services.PricingService.PricingServiceParameter,System.Boolean)">
            <summary>
            Filters that will execute on pricematrix records for every product.
            </summary>
            <param name="pricingServiceParameter"></param>
            <param name="regularPrice"></param>
        </member>
        <member name="M:InSite.Model.Services.PricingService.PricingServiceGeneric.SetRecordTypePriority">
            <summary>
            Create a list of PriceMatrix RecordType values in order of priority.
            </summary>
        </member>
        <member name="M:InSite.Model.Services.PricingService.PricingServiceGeneric.SetupRecordTypeMatrixQueries(InSite.Model.Services.PricingService.PricingServiceParameter,System.Boolean)">
            <summary>
            Filters that will execute on pricematrix records based on the RecordType being searched for.
            </summary>
            <param name="pricingServiceParameter"></param>
            <param name="regularPrice"></param>
        </member>
        <member name="M:InSite.Model.Services.PricingService.PricingServiceGeneric.CombPriceMatrix(System.String,System.Collections.Generic.IList{InSite.Model.PriceMatrix},InSite.Model.Services.PricingService.PricingServiceParameter,System.Boolean)">
            <summary>
            Find a matching pricematrix record based on a RecordType.
            </summary>
            <param name="recordType"></param>
            <param name="priceMatrixList"></param>
            <param name="pricingServiceParameter"></param>
            <param name="regularPrice"></param>
            <returns></returns>
        </member>
        <member name="M:InSite.Model.Services.PricingService.PricingServiceGeneric.GetPriceBracketByQty(InSite.Model.PriceMatrix,System.Decimal)">
            <summary>
            Determine the price breaks based on the quantity of products.
            </summary>
            <param name="priceMatrix">List of PriceMatrix records.</param>
            <param name="qty">Search the price breaks based on this quantity</param>
            <returns></returns>
        </member>
        <member name="M:InSite.Model.Services.PricingService.PricingServiceGeneric.GetMatrixBrackets(InSite.Model.PriceMatrix)">
            <summary>
            Break out the flat table structure for columns that are numbered 1 to 11.
            </summary>
            <param name="priceMatrix"></param>
            <returns></returns>
        </member>
        <member name="M:InSite.Model.Services.PricingService.PricingServiceGeneric.GetTempBasisValue(System.String,System.Collections.Generic.IList{InSite.Model.PriceMatrix},InSite.Model.Services.PricingService.PricingServiceParameter,System.Boolean)">
            <summary>
            Calculate the initial price for a product based on PriceBasis.
            </summary>
            <param name="priceBasis"></param>
            <param name="priceMatrixList"></param>
            <param name="pricingServiceParameter"><see cref="T:InSite.Model.Services.PricingService.PricingServiceParameter"/> values.</param>
            <param name="regularPrice">Used when getting PriceMatrix records.</param>
            <returns></returns>
        </member>
        <member name="M:InSite.Model.Services.PricingService.PricingServiceGeneric.AdjustForUnitOfMeasure(InSite.Model.Services.PricingService.PricingServiceParameter,System.Decimal)">
            <summary>
            Calculate the price at the requested unit of measure when the product's unit of measure doesn't match.
            </summary>
            <param name="pricingServiceParameter"><see cref="T:InSite.Model.Services.PricingService.PricingServiceParameter"/> that defines requested uom and product uom.</param>
            <param name="price">Currently calculated price.</param>
            <returns></returns>
        </member>
        <member name="M:InSite.Model.Services.PricingService.PricingServiceGeneric.GetQtyPerBaseUnitOfMeasure(InSite.Model.Services.PricingService.PricingServiceParameter)">
            <summary>
            Return the quantity multiplier for the unit of measure requested for pricing.
            </summary>
            <param name="pricingServiceParameter">A <see cref="T:InSite.Model.Services.PricingService.PricingServiceParameter"/></param>
            <returns>Quantity multiplier based on the quantity requested for pricing.</returns>
        </member>
        <member name="M:InSite.Model.Services.PricingService.PricingServiceGeneric.CheckUnitOfMeasurePricing(System.Collections.Generic.IList{InSite.Model.PriceMatrix},InSite.Model.Services.PricingService.PricingServiceParameter,InSite.Model.Services.PricingService.PriceAndPriceBreaks,System.Boolean)">
            <summary>
            Check to see if this product has specific pricing based on different unit of measures.
            </summary>
            <param name="priceMatrices">List of <see cref="T:InSite.Model.PriceMatrix"/> records.</param>
            <param name="pricingServiceParameter"><see cref="T:InSite.Model.Services.PricingService.PricingServiceParameter"/></param>
            <param name="priceAndPriceBreaks">Prices for a product based on quantity.</param>
            <param name="regularPrice">If true, do not price using customer and/or sale pricing.</param>
            <returns></returns>
        </member>
        <member name="M:InSite.Model.Services.PricingService.PricingServiceGeneric.GetMatrixProducts(InSite.Model.Services.PricingService.PricingServiceParameter)">
            <summary>
            Determine which product values to use when filtering pricematrix records.  This can sometimes include price codes.
            </summary>
            <param name="pricingServiceParameter"></param>
            <returns></returns>
        </member>
        <member name="M:InSite.Model.Services.PricingService.PricingServiceGeneric.GetMatrixCustomers(InSite.Model.Services.PricingService.PricingServiceParameter,System.Collections.Generic.List{System.String},System.Boolean)">
            <summary>
            Determine which customer values to use when filtering pricematrix records.  This can sometimes include price codes.
            </summary>
            <param name="pricingServiceParameter"></param>
            <param name="productIds"></param>
            <param name="shipTo"></param>
            <returns></returns>
        </member>
        <member name="M:InSite.Model.Services.PricingService.PricingServiceGeneric.GetPriceMatrixList(InSite.Model.Services.PricingService.PricingServiceParameter)">
            <summary>
            Get a list of PriceMatrix records for a product.
            </summary>
            <param name="pricingServiceParameter"><see cref="T:InSite.Model.Services.PricingService.PricingServiceParameter"/> values.</param>
            <returns>List of PriceMatrix objects.</returns>
        </member>
        <member name="T:InSite.Model.Services.PricingService.PricingServiceFactory">
            <summary>
            The standard <see cref="T:InSite.Model.Interfaces.IPricingServiceFactory"/> used to get <see cref="T:InSite.Model.Interfaces.IPricingService"/> objects
            </summary>
        </member>
        <member name="M:InSite.Model.Services.PricingService.PricingServiceFactory.#ctor(Microsoft.Practices.ServiceLocation.IServiceLocator)">
            <summary>
            Dependency Injection constructor.
            </summary>
            <param name="serviceLocator">The ServiceLocator to use to resolve <see cref="T:InSite.Model.Interfaces.IPricingService"/> from Ioc.</param>
        </member>
        <member name="M:InSite.Model.Services.PricingService.PricingServiceFactory.GetPricingService(InSite.Model.Interfaces.IContextProvider,InSite.Model.CustomerOrder)">
            <summary>
            This method will get a <see cref="T:InSite.Model.WebSiteConfiguration"/> from the <see cref="T:InSite.Model.Interfaces.IContextProvider"/>.CurrentWebSite named PricingService and use the
            <see cref="T:InSite.Model.WebSiteConfiguration"/>.Value to resolve the <see cref="T:InSite.Model.Interfaces.IPricingService"/> from the Ioc container by name.
            </summary>
            <param name="contextProvider">The current <see cref="T:InSite.Model.Interfaces.IContextProvider"/> used while the order is in the cart.</param>
            <param name="customerOrder">Optional <see cref="T:InSite.Model.CustomerOrder"/> for use after the order has been submitted, during integration.</param>
            <returns>The <see cref="T:InSite.Model.Interfaces.IPricingService"/> for the supplied <see cref="T:InSite.Model.Interfaces.IContextProvider"/>.</returns>
        </member>
        <member name="T:InSite.Model.Services.PricingService.PricingServiceParameter">
            <summary>
            Class that encapsulates all of the information required for the <see cref="T:InSite.Model.Interfaces.IPricingService"/> to calculate the price for a <see cref="P:InSite.Model.Services.PricingService.PricingServiceParameter.Product"/> and <see cref="P:InSite.Model.Services.PricingService.PricingServiceParameter.OrderLine"/>
            </summary>
        </member>
        <member name="M:InSite.Model.Services.PricingService.PricingServiceParameter.#ctor">
            <summary>Constructor that initializes the PricingServiceParameter using the <see cref="T:InSite.Model.Interfaces.IContextProvider"/> and the AdditionalParameters to a new Dictionary</summary>
        </member>
        <member name="M:InSite.Model.Services.PricingService.PricingServiceParameter.#ctor(InSite.Model.Interfaces.IContextProvider,InSite.Model.Interfaces.IUnitOfWork)">
            <summary>Constructor that initializes the PricingServiceParameter using the <see cref="T:InSite.Model.Interfaces.IContextProvider"/> and the AdditionalParameters to a new Dictionary</summary>
        </member>
        <member name="M:InSite.Model.Services.PricingService.PricingServiceParameter.#ctor(InSite.Model.OrderLine)">
            <summary>Constructor that initializes the PricingServiceParameter using the <see cref="T:InSite.Model.Interfaces.IContextProvider"/> and the AdditionalParameters to a new Dictionary</summary>
        </member>
        <member name="M:InSite.Model.Services.PricingService.PricingServiceParameter.#ctor(InSite.Model.Interfaces.IContextProvider,InSite.Model.Interfaces.IUnitOfWork,InSite.Model.OrderLine)">
            <summary>Constructor that initializes the PricingServiceParameter using an <see cref="P:InSite.Model.Services.PricingService.PricingServiceParameter.OrderLine"/> and the AdditionalParameters to a new Dictionary</summary>
        </member>
        <member name="P:InSite.Model.Services.PricingService.PricingServiceParameter.BillTo">
            <summary>The BillTo <see cref="T:InSite.Model.Customer"/> to calculate the price for</summary>
        </member>
        <member name="P:InSite.Model.Services.PricingService.PricingServiceParameter.ShipTo">
            <summary>The ShipTo <see cref="T:InSite.Model.Customer"/> to calculate the price for</summary>
        </member>
        <member name="P:InSite.Model.Services.PricingService.PricingServiceParameter.Product">
            <summary>The <see cref="P:InSite.Model.Services.PricingService.PricingServiceParameter.Product"/> to calculate the price for</summary>
        </member>
        <member name="P:InSite.Model.Services.PricingService.PricingServiceParameter.QtyOrdered">
            <summary>The Quantity Ordered to calculate the price for</summary>
        </member>
        <member name="P:InSite.Model.Services.PricingService.PricingServiceParameter.CurrencyCode">
            <summary>The Currency Code to calculate the price for</summary>
        </member>
        <member name="P:InSite.Model.Services.PricingService.PricingServiceParameter.CurrencyRate">
            <summary>The currency rate to calculate the price for.  Provide this if you need to use a historical currency rate.</summary>
        </member>
        <member name="P:InSite.Model.Services.PricingService.PricingServiceParameter.Warehouse">
            <summary>The Warehouse to calculate the price for</summary>
        </member>
        <member name="P:InSite.Model.Services.PricingService.PricingServiceParameter.UnitOfMeasure">
            <summary>The Unit Of Measure to calculate the price for</summary>
        </member>
        <member name="P:InSite.Model.Services.PricingService.PricingServiceParameter.PricingDate">
            <summary>The DateTime to calculate the price for</summary>
        </member>
        <member name="P:InSite.Model.Services.PricingService.PricingServiceParameter.PricingStoredProcedure">
            <summary>The Stored Procedure to call to calculate the price</summary>
        </member>
        <member name="P:InSite.Model.Services.PricingService.PricingServiceParameter.ConfigDataSet">
            <summary>The configuration dataset (old configuration style).</summary>
        </member>
        <member name="P:InSite.Model.Services.PricingService.PricingServiceParameter.OrderLine">
            <summary>Apply pricing to a specific order.</summary>
        </member>
        <member name="P:InSite.Model.Services.PricingService.PricingServiceParameter.AdditionalParameters">
            <summary>User definable additional parameters to send in to price calculation</summary>
        </member>
        <member name="T:InSite.Model.Services.PricingService.PricingServiceResult">
            <summary>
            Class that encapsulates the data returned from the <see cref="T:InSite.Model.Interfaces.IPricingService"/>
            </summary>
        </member>
        <member name="M:InSite.Model.Services.PricingService.PricingServiceResult.#ctor">
            <summary>Constructor that initializes the AdditionalResults to a new Dictionary</summary>
        </member>
        <member name="P:InSite.Model.Services.PricingService.PricingServiceResult.RegularPrice">
            <summary>The calculated RegularPrice or full List Price</summary>
        </member>
        <member name="P:InSite.Model.Services.PricingService.PricingServiceResult.RegularPriceDisplay">
            <summary>Formatted RegularPrice</summary>
        </member>
        <member name="P:InSite.Model.Services.PricingService.PricingServiceResult.ExtendedRegularPrice">
            <summary>Quantity RegularPrice</summary>
        </member>
        <member name="P:InSite.Model.Services.PricingService.PricingServiceResult.ExtendedRegularPriceDisplay">
            <summary>Formatted Quantity RegularPrice</summary>
        </member>
        <member name="P:InSite.Model.Services.PricingService.PricingServiceResult.ActualPrice">
            <summary>The calculated ActualPrice</summary>
        </member>
        <member name="P:InSite.Model.Services.PricingService.PricingServiceResult.ActualPriceDisplay">
            <summary>Formatted ActualPrice</summary>
        </member>
        <member name="P:InSite.Model.Services.PricingService.PricingServiceResult.ExtendedActualPrice">
            <summary>Quantity ActualPrice</summary>
        </member>
        <member name="P:InSite.Model.Services.PricingService.PricingServiceResult.ExtendedActualPriceDisplay">
            <summary>Formatted Quantity ActualPrice</summary>
        </member>
        <member name="P:InSite.Model.Services.PricingService.PricingServiceResult.UnitCost">
            <summary>Gets or sets the unit cost.</summary>
        </member>
        <member name="P:InSite.Model.Services.PricingService.PricingServiceResult.UnitCostDisplay">
            <summary>Gets or sets the unit cost display.</summary>
        </member>
        <member name="P:InSite.Model.Services.PricingService.PricingServiceResult.IsOnSale">
            <summary>True if the <see cref="T:InSite.Model.Product"/> is calculated to be on sale</summary>
        </member>
        <member name="P:InSite.Model.Services.PricingService.PricingServiceResult.RegularBreakPrices">
            <summary>The calculated break quantity regular prices</summary>
        </member>
        <member name="P:InSite.Model.Services.PricingService.PricingServiceResult.ActualBreakPrices">
            <summary>The calculated break quantity actual prices</summary>
        </member>
        <member name="P:InSite.Model.Services.PricingService.PricingServiceResult.AdditionalResults">
            <summary>User definable additional results returned from price calculation</summary>
        </member>
        <member name="P:InSite.Model.Services.PricingService.PricingServiceResult.CurrencyRate">
            <summary>Exchange rate used if a currency conversion was required during pricing.</summary>
        </member>
        <member name="T:InSite.Model.Services.PricingService.PricingServiceDefault">
            <summary>
            The default implementation of the <see cref="T:InSite.Model.Interfaces.IPricingService"/>.
            </summary>
        </member>
        <member name="M:InSite.Model.Services.PricingService.PricingServiceDefault.#ctor(InSite.Model.Interfaces.IUnitOfWork)">
            <summary>
            Dependency injection constructor.
            </summary>
            <param name="unitOfWork"></param>
        </member>
        <member name="M:InSite.Model.Services.PricingService.PricingServiceDefault.CalculatePrice(InSite.Model.Services.PricingService.PricingServiceParameter)">
            <summary>
            Calculates the Price for the specified <see cref="T:InSite.Model.Services.PricingService.PricingServiceParameter"/>
            </summary>
            <param name="pricingServiceParameter">The <see cref="T:InSite.Model.Services.PricingService.PricingServiceParameter"/> holding information for how to calculate the price</param>
            <returns><see cref="T:InSite.Model.Services.PricingService.PricingServiceResult"/> with the calculated prices</returns>
        </member>
        <member name="M:InSite.Model.Services.PricingService.PricingServiceDefault.ConfigurePrice(System.Decimal,System.Data.DataSet,System.Boolean)">
            <summary>
            Makes an adjustment to a product price for configuration values.
            </summary>
            <param name="price">The base price.</param>
            <param name="configDataSet">Configuration dataset for the product with Selected fields set to true on the desired options</param>
            <param name="isFixedConfiguration">true if prices for all items in the configuration are included (kit/bundle)</param>
            <returns>The adjusted price.</returns>
        </member>
        <member name="P:InSite.Model.Services.PricingService.PricingServiceDefault.UseBasicPricing">
            <summary>Calculated Property that returns true if the ApplicationSetting UseBasicPricing is set to true</summary>
        </member>
        <member name="M:InSite.Model.Services.PricingService.PricingServiceRfq.CalculatePrice(InSite.Model.Services.PricingService.PricingServiceParameter)">
            <summary>
            Calculate the price of a product using quoted pricing that has been provided for a specific orderline.
            As a fallback, the default pricing service that is currently configured will be used if the product passed in
            is not quotable or does not currently have quoted pricing.
            </summary>
            <param name="pricingServiceParameter"></param>
            <returns></returns>
        </member>
        <member name="M:InSite.Model.Services.PricingService.PricingServiceRfq.FallbackToNonRfqPricingService(InSite.Model.Services.PricingService.PricingServiceParameter)">
            <summary>
            If true, use the currently configured pricing service to price the product and do not price based on quoted pricing.
            An order may have a mix of quoted products and non-quoted products. Non-quoted products will be priced using the
            configured pricing service instead of this RFQ specific service.
            </summary>
            <param name="pricingServiceParameter"></param>
            <returns></returns>
        </member>
        <member name="M:InSite.Model.Services.PricingService.PricingServiceRfq.GetPriceBracketByQtyOrdered(InSite.Model.OrderLineRfq,System.Decimal)">
            <summary>
            Determine the price breaks based on the quantity of products.
            </summary>
            <param name="orderLineRfq"><see cref="T:InSite.Model.OrderLineRfq"/> record that holds quoted pricing.</param>
            <param name="qty">Search the price breaks based on this quantity</param>
            <returns></returns>
        </member>
        <member name="M:InSite.Model.Services.PricingService.PricingServiceRfq.GetPriceBrackets(InSite.Model.OrderLineRfq)">
            <summary>
            Break out the flat table structure for columns.
            </summary>
            <param name="orderLineRfq"></param>
            <returns></returns>
        </member>
        <member name="M:InSite.Model.Services.PricingService.PricingServiceSx.#ctor(InSite.Model.Interfaces.IUnitOfWork)">
            <summary>
            Sx implementation of product pricing.
            </summary>
            <param name="unitOfWork"></param>
        </member>
        <member name="M:InSite.Model.Services.PricingService.PricingServiceSx.CreatePriceCalculations">
            <summary>
            Create any <see cref="T:InSite.Model.Interfaces.IPriceCalculation"/> calculations that will get used for pricing.
            </summary>
        </member>
        <member name="M:InSite.Model.Services.PricingService.PricingServiceSx.SetRecordTypePriority">
            <summary>
            Create a list of PriceMatrix RecordType values in order of priority.
            </summary>
        </member>
        <member name="M:InSite.Model.Services.PricingService.PricingServiceSx.ApplyProductMultiplier(InSite.Model.Services.PricingService.PricingServiceParameter,System.Decimal)">
            <summary>
            If the product being priced has a multiplier then use it. Ie if the product was purchased in a different
            unit of measure than it is being sold at.
            </summary>
            <param name="pricingServiceParameter"></param>
            <param name="price"></param>
            <returns></returns>
        </member>
        <member name="M:InSite.Model.Services.PricingService.PricingServiceSx.GetMatrixProducts(InSite.Model.Services.PricingService.PricingServiceParameter)">
            <summary>
            Determine which product values to use when filtering pricematrix records.  This can sometimes include price codes.
            </summary>
            <param name="pricingServiceParameter"></param>
            <returns></returns>
        </member>
        <member name="M:InSite.Model.Services.PricingService.PricingServiceSx.SetupRecordTypeMatrixQueries(InSite.Model.Services.PricingService.PricingServiceParameter,System.Boolean)">
            <summary>
            Filters that will execute on pricematrix records based on the RecordType being searched for.
            </summary>
            <param name="pricingServiceParameter"></param>
            <param name="regularPrice"></param>
        </member>
        <member name="P:InSite.Model.Services.PricingService.PricingServiceSx.BasePricePropertyName">
            <summary>
            The name of the product property that stores the base price to be used in pricing calculations.
            </summary>
        </member>
        <member name="P:InSite.Model.Services.PricingService.PricingServiceSx.ProductCategoryPropertyName">
            <summary>
            The name of the product property that stores the product category.
            </summary>
        </member>
        <member name="P:InSite.Model.Services.PricingService.PricingServiceSx.ProductLinePropertyName">
            <summary>
            The name of the product property that stores the name of the product line.
            </summary>
        </member>
        <member name="P:InSite.Model.Services.PricingService.PricingServiceSx.WarehousePricePropertyName">
            <summary>
            The name of the custom property of a warehouse that stores the base price.
            </summary>
        </member>
        <member name="M:InSite.Model.Services.ProductBatchLoaderDefault.BatchLoad(System.Collections.Generic.List{System.Guid})">
            <summary>
            Default does nothing, this is purely an extensibility point.
            </summary>
            <remarks>
            This can be utilized in a situation where product prices,inventory or other properties 
            have to be loaded from a slow system which provides a batching interface.
            </remarks>
            <param name="productIds">list of product which will need to be displayed</param>
        </member>
        <member name="T:InSite.Model.Services.Repositories.ApplicationMessageRepository">
            <summary>
            The Repository to manage <see cref="T:InSite.Model.ApplicationMessage"/>s.
            </summary>
        </member>
        <member name="M:InSite.Model.Services.Repositories.ApplicationMessageRepository.#ctor(InSite.Model.Interfaces.IDataProvider)">
            <summary>
            Dependency Injection Constructor
            </summary>
            <param name="dataProvider">The IDataProvider that provides persistence</param>
        </member>
        <member name="M:InSite.Model.Services.Repositories.ApplicationMessageRepository.GetOrCreateByName(System.String,System.String,InSite.Model.WebSite)">
            <summary>
            Get Or Create an <see cref="T:InSite.Model.ApplicationMessage"/> by Name with Default Value.
            </summary>
            <param name="name">Name of the <see cref="T:InSite.Model.ApplicationMessage"/>.</param>
            <param name="defaultMessage">Default value to be created with if it doesn't exist.</param>
            <param name="webSite">Web Site for Web Site specific messages</param>
            <returns>An existing or newly created <see cref="T:InSite.Model.ApplicationMessage"/>.</returns>
        </member>
        <member name="T:InSite.Model.Services.Repositories.ApplicationSettingRepository">
            <summary>
            The Repository to manage <see cref="T:InSite.Model.ApplicationSetting"/>s.
            </summary>
        </member>
        <member name="M:InSite.Model.Services.Repositories.ApplicationSettingRepository.#ctor(InSite.Model.Interfaces.IDataProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:InSite.Model.Services.Repositories.ApplicationSettingRepository"/> class.
            </summary>
            <param name="dataProvider">The data provider.</param>
        </member>
        <member name="M:InSite.Model.Services.Repositories.ApplicationSettingRepository.GetOrCreateByName(System.String,System.String,System.String)">
            <summary>
            Get Or Creates an <see cref="T:InSite.Model.ApplicationSetting"/> by name using the provided defaults ignoring any standard defaults if it did not exist
            </summary>
            <param name="name">Name of the <see cref="T:InSite.Model.ApplicationSetting"/></param>
            <param name="defaultValueOverride">Default value to be used if creation is required, this will override any standard defaults</param>
            <param name="defaultDescriptionOverride">Default description to be used ic creation is required, this will override any standard defaults</param> 
            <returns>An existing or newly created <see cref="T:InSite.Model.ApplicationSetting"/> with the provided defaults values.</returns>
        </member>
        <member name="M:InSite.Model.Services.Repositories.ApplicationSettingRepository.GetOrCreateByName``1(System.String)">
            <summary>
            Gets or Creates an <see cref="T:InSite.Model.ApplicationSetting"/> by name and returns the property Value as the requested type
            </summary>
            <param name="name">Name of the <see cref="T:InSite.Model.ApplicationSetting"/></param>
            <returns>The parsed value of the matched or created <see cref="T:InSite.Model.ApplicationSetting"/>.Value as the requested type</returns>
            <remarks>
            This will return the defined default value if the stored database value can not be converted to the requested type
            </remarks>
        </member>
        <member name="M:InSite.Model.Services.Repositories.ApplicationSettingRepository.GetOrCreateByName(System.String)">
            <summary>
            Gets or Creates an <see cref="T:InSite.Model.ApplicationSetting"/> by name and returns the property Value
            </summary>
            <param name="name">Name of the <see cref="T:InSite.Model.ApplicationSetting"/></param>
            <returns>The parsed value of the matched or created <see cref="T:InSite.Model.ApplicationSetting"/>.Value</returns>
            <remarks>
            This will return the defined default value if the stored database value can not be converted to the requested type
            </remarks>
        </member>
        <member name="M:InSite.Model.Services.Repositories.ApplicationSettingRepository.GetEncryptedValueByName(System.String,System.String)">
            <summary>
            Retrieves an Encrypted Application Setting, will also convert a current Application Setting to be encrypted if called on it.
            Encrypted Application Settings are stored with an _enc suffix
            </summary>
            <param name= "name">Name of Application Setting (with or without the _enc suffix)</param>
            <param name= "defaultValue">Default value to be created with if it does not exist</param>
            <returns>Decrypted Value</returns>
        </member>
        <member name="T:InSite.Model.Services.Repositories.CustomerOrderRepository">
            <summary>The customer order repository.</summary>
        </member>
        <member name="M:InSite.Model.Services.Repositories.CustomerOrderRepository.#ctor(InSite.Model.Interfaces.IDataProvider)">
            <summary>Initializes a new instance of the <see cref="T:InSite.Model.Services.Repositories.CustomerOrderRepository"/> class.</summary>
            <param name="dataProvider">The data provider.</param>
        </member>
        <member name="M:InSite.Model.Services.Repositories.CustomerOrderRepository.GetListForERPRefresh(System.Boolean)">
            <summary>The get list for erp refresh.</summary>
            <param name="includeCompleted">The include completed.</param>
            <returns>The <see cref="!:IList"/>.</returns>
        </member>
        <member name="M:InSite.Model.Services.Repositories.CustomerOrderRepository.GetReSubmitCustomerOrderList(System.Int32)">
            <summary>The get re submit customer order list.</summary>
            <param name="batchNumber">The batch number.</param>
            <returns>The <see cref="!:IList"/>.</returns>
        </member>
        <member name="M:InSite.Model.Services.Repositories.CustomerOrderRepository.GetByErpNumber(System.String)">
            <summary>The get by erp number.</summary>
            <param name="erpOrderNumber">The erp order number.</param>
            <returns>The <see cref="T:InSite.Model.CustomerOrder"/>.</returns>
        </member>
        <member name="T:InSite.Model.Services.Repositories.CustomerRepository">
            <summary>The customer repository.</summary>
        </member>
        <member name="M:InSite.Model.Services.Repositories.CustomerRepository.#ctor(InSite.Model.Interfaces.IDataProvider)">
            <summary>Initializes a new instance of the <see cref="T:InSite.Model.Services.Repositories.CustomerRepository"/> class.</summary>
            <param name="dataProvider">The data provider.</param>
        </member>
        <member name="M:InSite.Model.Services.Repositories.CustomerRepository.GetByNaturalKey(System.Object[])">
            <summary>The get by natural key.</summary>
            <param name="keyValues">The key values.</param>
            <returns>The <see cref="T:InSite.Model.Customer"/>.</returns>
        </member>
        <member name="M:InSite.Model.Services.Repositories.CustomerRepository.GetByNumber(System.String)">
            <summary>The get by number.</summary>
            <param name="customerNumber">The customer number.</param>
            <returns>The <see cref="T:InSite.Model.Customer"/>.</returns>
        </member>
        <member name="M:InSite.Model.Services.Repositories.CustomerRepository.GetByNumberSequence(System.String,System.String)">
            <summary>The get by number sequence.</summary>
            <param name="customerNumber">The customer number.</param>
            <param name="customerSequence">The customer sequence.</param>
            <returns>The <see cref="T:InSite.Model.Customer"/>.</returns>
        </member>
        <member name="T:InSite.Model.Services.Repositories.OrderHistoryLineRepository">
            <summary>The order history repository.</summary>
        </member>
        <member name="F:InSite.Model.Services.Repositories.OrderHistoryLineRepository.UnitOfWork">
            <summary>The unit of work.</summary>
        </member>
        <member name="M:InSite.Model.Services.Repositories.OrderHistoryLineRepository.#ctor(InSite.Model.Interfaces.IDataProvider,InSite.Model.Interfaces.IUnitOfWork)">
            <summary>Initializes a new instance of the <see cref="T:InSite.Model.Services.Repositories.OrderHistoryLineRepository"/> class.</summary>
            <param name="dataProvider">The data provider.</param>
            <param name="unitOfWork">The unit of work.</param>
        </member>
        <member name="M:InSite.Model.Services.Repositories.OrderHistoryLineRepository.Delete(InSite.Model.OrderHistoryLine)">
            <summary>The delete.</summary>
            <param name="deleted">The deleted.</param>
        </member>
        <member name="T:InSite.Model.Services.Repositories.ProductWarehouseRepository">
            <summary>The order history repository.</summary>
        </member>
        <member name="F:InSite.Model.Services.Repositories.ProductWarehouseRepository.UnitOfWork">
            <summary>The unit of work.</summary>
        </member>
        <member name="M:InSite.Model.Services.Repositories.ProductWarehouseRepository.#ctor(InSite.Model.Interfaces.IDataProvider,InSite.Model.Interfaces.IUnitOfWork)">
            <summary>Initializes a new instance of the <see cref="T:InSite.Model.Services.Repositories.ProductWarehouseRepository"/> class.</summary>
            <param name="dataProvider">The data provider.</param>
            <param name="unitOfWork">The unit of work.</param>
        </member>
        <member name="M:InSite.Model.Services.Repositories.ProductWarehouseRepository.Delete(InSite.Model.ProductWarehouse)">
            <summary>The delete.</summary>
            <param name="deleted">The deleted.</param>
        </member>
        <member name="T:InSite.Model.Services.Repositories.OrderHistoryRepository">
            <summary>The order history repository.</summary>
        </member>
        <member name="F:InSite.Model.Services.Repositories.OrderHistoryRepository.UnitOfWork">
            <summary>The unit of work.</summary>
        </member>
        <member name="M:InSite.Model.Services.Repositories.OrderHistoryRepository.#ctor(InSite.Model.Interfaces.IDataProvider,InSite.Model.Interfaces.IUnitOfWork)">
            <summary>Initializes a new instance of the <see cref="T:InSite.Model.Services.Repositories.OrderHistoryRepository"/> class.</summary>
            <param name="dataProvider">The data provider.</param>
            <param name="unitOfWork">The unit of work.</param>
        </member>
        <member name="M:InSite.Model.Services.Repositories.OrderHistoryRepository.GetReSubmitOrderHistoryList">
            <summary>
            Gets IList of OrderHistories whose status is Submitted, these OrderHistories have been Submitted on the
            web, but have not successfully been Submitted to the ERP System
            </summary>
            <returns>IList of <see cref="T:InSite.Model.OrderHistory"/>.</returns>
        </member>
        <member name="M:InSite.Model.Services.Repositories.OrderHistoryRepository.GetListForErpRefresh(System.Boolean)">
            <summary>Gets list of OrderHistory where the status is Review, Processing or if includeCompleted parameter is true
            Complete</summary>
            <param name="includeCompleted">The include completed.</param>
            <returns>IList of <see cref="T:InSite.Model.OrderHistory"/>.</returns>
        </member>
        <member name="M:InSite.Model.Services.Repositories.OrderHistoryRepository.Delete(InSite.Model.OrderHistory)">
            <summary>The delete.</summary>
            <param name="deleted">The deleted.</param>
        </member>
        <member name="M:InSite.Model.Services.Repositories.OrderHistoryRepository.GetByWebOrderNumber(System.String)">
            <summary>The get by web order number.</summary>
            <param name="webOrderNumber">The web order number.</param>
            <returns>The <see cref="T:InSite.Model.OrderHistory"/>.</returns>
        </member>
        <member name="T:InSite.Model.Services.Repositories.RoleRepository">
            <summary>
            The Repository to manage Roles.
            </summary>
        </member>
        <member name="F:InSite.Model.Services.Repositories.RoleRepository.AuthenticationService">
            <summary>
            The authentication service
            </summary>
        </member>
        <member name="F:InSite.Model.Services.Repositories.RoleRepository.ContextProvider">
            <summary>
            The context provider
            </summary>
        </member>
        <member name="M:InSite.Model.Services.Repositories.RoleRepository.#ctor(InSite.Model.Interfaces.IAuthenticationService,InSite.Model.Interfaces.IContextProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:InSite.Model.Services.Repositories.RoleRepository"/> class.
            </summary>
            <param name="authenticationService">The authentication service.</param>
            <param name="contextProvider">The context provider.</param>
        </member>
        <member name="M:InSite.Model.Services.Repositories.RoleRepository.CreateStandardRoles(System.String)">
            <summary>
            Creates the standard roles using the RoleProvider and the given ApplicationName
            </summary>
        </member>
        <member name="M:InSite.Model.Services.Repositories.RoleRepository.GetTable">
            <summary>
            Get an IQueryable to use Linq to query the Database with using Linq to NHibernate.
            </summary>
            <returns>
            Returns Linq IQueryable
            </returns>
            <example> var unitOfWork = ServiceLocator.Current.GetInstance&lt;IUnitOfWork&gt;();<br /> var repository = unitOfWork.GetRepository&lt;Category&gt;();<br /> var categoryList = repository.GetTable().Where(x=&gt;x.Active &lt; DateTimeProvider.Current.Now).ToList(); </example>
        </member>
        <member name="M:InSite.Model.Services.Repositories.RoleRepository.GetList(System.String,System.Int32@,System.Collections.ObjectModel.Collection{System.Data.IDbDataParameter})">
            <summary>
            Return List of objects of type T based off of input parameters.
            </summary>
            <param name="query">Sql Statement</param>
            <param name="recordCount">Output Total Count of items regardless of pageSize</param>
            <param name="parameters">Sql Db Parameter list to build parameterized Sql query</param>
            <returns>
            Return List of objects of type T based off of input parameters
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:InSite.Model.Services.Repositories.RoleRepository.GetList(System.String,System.Int32,System.Int32,System.Int32@,System.Collections.ObjectModel.Collection{System.Data.IDbDataParameter})">
            <summary>
            Return List of objects of type T based off of input parameters.
            </summary>
            <param name="query">Sql Statement</param>
            <param name="startRow">Starting index of return results</param>
            <param name="pageSize">Number of items to return</param>
            <param name="recordCount">Output Total Count of items regardless of pageSize</param>
            <param name="parameters">Sql Db Parameter list to build parameterized Sql query</param>
            <returns>
            Return List of objects of type T based off of input parameters
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:InSite.Model.Services.Repositories.RoleRepository.Get(System.Guid)">
            <summary>
            Return an object of Type T by using its identity field.
            </summary>
            <param name="id">Identity field/key for object of Type T to be returned</param>
            <returns>
            Object for the specified id, null if not found
            </returns>
            <example> var unitOfWork = ServiceLocator.Current.GetInstance&lt;IUnitOfWork&gt;();<br /> var repository = unitOfWork.GetRepository&lt;Category&gt;();<br /> var category = repository.Get(Guid.NewGuid()); </example>
        </member>
        <member name="M:InSite.Model.Services.Repositories.RoleRepository.Get(System.String)">
            <summary>
            Return an object of Type T by using its identity field.
            </summary>
            <param name="id">Identity field/key for object of Type T to be returned</param>
            <returns>
            Object for the specified id, null if not found
            </returns>
            <example> var unitOfWork = ServiceLocator.Current.GetInstance&lt;IUnitOfWork&gt;();<br /> var repository = unitOfWork.GetRepository&lt;Category&gt;();<br /> var category = repository.Get(Guid.NewGuid().ToString()); </example>
        </member>
        <member name="M:InSite.Model.Services.Repositories.RoleRepository.Create">
            <summary>
            Creates a new Business Object and injects any dependencies in to it, does not put the new Business Object in to the session because errors may occur for required dependent objects You must still call Insert to put the object in to the UnitOfWork session to be saved
            </summary>
            <returns>
            A new Business Object with any dependencies Injected in to it
            </returns>
        </member>
        <member name="M:InSite.Model.Services.Repositories.RoleRepository.CreateAsBusinessObject">
            <summary>Creates a new Business Object</summary>
        </member>
        <member name="M:InSite.Model.Services.Repositories.RoleRepository.Insert(InSite.Model.Role)">
            <summary>
            Insert object of Type T in to the <see cref="T:InSite.Model.Interfaces.IUnitOfWork"/> session.
            </summary>
            <param name="inserted">Type T to be inserted into <see cref="T:InSite.Model.Interfaces.IUnitOfWork"/> session</param>
            <example> var unitOfWork = ServiceLocator.Current.GetInstance&lt;IUnitOfWork&gt;();<br/> var repository = unitOfWork.GetRepository&lt;Product&gt;();<br/> var product = ServiceLocator.GetInstance&lt;Product&gt;();<br/> product.Name = “test”;<br/> repository.Insert(product);<br/> unitOfWork.Save();<br/></example>
        </member>
        <member name="M:InSite.Model.Services.Repositories.RoleRepository.InsertAsBusinessObject(InSite.Model.IBusinessObject)">
            <summary>Insert object in to the <see cref="T:InSite.Model.Interfaces.IUnitOfWork"/> session.</summary>
        </member>
        <member name="M:InSite.Model.Services.Repositories.RoleRepository.Delete(InSite.Model.Role)">
            <summary>
            Delete a persisted object of Type T in the <see cref="T:InSite.Model.Interfaces.IUnitOfWork"/> session.
            </summary>
            <param name="deleted">Type T to be deleted in the <see cref="T:InSite.Model.Interfaces.IUnitOfWork"/> session</param>
            <example> var unitOfWork = ServiceLocator.Current.GetInstance&lt;IUnitOfWork&gt;();<br/> var catToDelete = unitOfWork.GetRepository&lt;Category&gt;().Get(Guid.NewGuid());<br/> repository.Delete(catToDelete);<br/> unitOfWork.Save();<br/></example>
        </member>
        <member name="M:InSite.Model.Services.Repositories.RoleRepository.DeleteAsBusinessObject(InSite.Model.IBusinessObject)">
            <summary>Delete a persisted object in the <see cref="T:InSite.Model.Interfaces.IUnitOfWork"/> session.</summary>
        </member>
        <member name="M:InSite.Model.Services.Repositories.RoleRepository.GetByNaturalKey(System.Object[])">
            <summary>
            Retrieves a model object based on the natural key field(s). The natural keys are marked with [LookupKeyField] on the model properties.
            </summary>
            <param name="keyValues">All natural key values, in order</param>
            <returns>
            Model object if found, null if not found
            </returns>
        </member>
        <member name="M:InSite.Model.Services.Repositories.RoleRepository.GetByNaturalKeyAsBusinessObject(System.Object[])">
            <summary>
            Retrieves a model object based on the natural key field(s). The natural keys are marked with [LookupKeyField] on the model properties.
            </summary>
        </member>
        <member name="P:InSite.Model.Services.Repositories.RoleRepository.DataProvider">
            <summary>
            The DataProvider that manages the Persistence of the Repository
            </summary>
        </member>
        <member name="T:InSite.Model.Services.Repositories.WebSiteConfigurationRepository">
            <summary>
            The Repository to manage <see cref="T:InSite.Model.WebSiteConfiguration"/>s.
            </summary>
        </member>
        <member name="M:InSite.Model.Services.Repositories.WebSiteConfigurationRepository.#ctor(InSite.Model.Interfaces.IDataProvider,InSite.Model.Interfaces.IContextProvider)">
            <summary>
            Dependency Injection Constructor
            </summary>
            <param name= "dataProvider">The IDataProvider that provides persistence</param>
            <param name= "contextProvider">The IContextProvider that will be used</param>
        </member>
        <member name="M:InSite.Model.Services.Repositories.WebSiteConfigurationRepository.GetOrCreateByName(System.String)">
            <summary>Gets or Creates an <see cref="T:InSite.Model.WebSiteConfiguration"/> by name and returns the property Value</summary>
            <param name="name">Name of the <see cref="T:InSite.Model.WebSiteConfiguration"/></param>
            <returns>The parsed value of the matched or created <see cref="T:InSite.Model.WebSiteConfiguration"/>.Value</returns>
            <remarks>This will return the defined default value if the stored database value can not be converted to the requested type</remarks>
        </member>
        <member name="M:InSite.Model.Services.Repositories.WebSiteConfigurationRepository.GetOrCreateByName``1(System.String)">
            <summary>
            Gets or Creates a <see cref="T:InSite.Model.WebSiteConfiguration"/> by name and returns the property Value as the requested type
            </summary>
            <param name="name">Name of the <see cref="T:InSite.Model.WebSiteConfiguration"/></param>
            <returns>The parsed value of the matched or created <see cref="T:InSite.Model.WebSiteConfiguration"/>.Value as the requested type</returns>
            <remarks>
            This will return the defined default value if the stored database value can not be converted to the requested type
            </remarks>
        </member>
        <member name="M:InSite.Model.Services.Repositories.WebSiteConfigurationRepository.GetOrCreateByName(System.String,InSite.Model.WebSite)">
            <summary>Gets or Creates an <see cref="T:InSite.Model.WebSiteConfiguration"/> by name and returns the property Value</summary>
            <param name="name">Name of the <see cref="T:InSite.Model.WebSiteConfiguration"/></param>
            <param name="website">The <see cref="T:InSite.Model.WebSite"/> to add the configuration to</param>
            <returns>The parsed value of the matched or created <see cref="T:InSite.Model.WebSiteConfiguration"/>.Value</returns>
            <remarks>This will return the defined default value if the stored database value can not be converted to the requested type</remarks>
        </member>
        <member name="M:InSite.Model.Services.Repositories.WebSiteConfigurationRepository.GetOrCreateByName``1(System.String,InSite.Model.WebSite)">
            <summary>Gets or Creates an <see cref="T:InSite.Model.WebSiteConfiguration"/> by name and returns the property Value as the requested type</summary>
            <param name="name">Name of the <see cref="T:InSite.Model.WebSiteConfiguration"/></param>
            <param name="website">The <see cref="T:InSite.Model.WebSite"/> to add the configuration to</param>
            <returns>The parsed value of the matched or created <see cref="T:InSite.Model.WebSiteConfiguration"/>.Value as the requested type</returns>
            <remarks>This will return the defined default value if the stored database value can not be converted to the requested type</remarks>
        </member>
        <member name="T:InSite.Model.Services.Repositories.ProductRepository">
            <summary>
            The Repository to manage Products 
            </summary>
        </member>
        <member name="M:InSite.Model.Services.Repositories.ProductRepository.#ctor(InSite.Model.Interfaces.IDataProvider,InSite.Model.Interfaces.ICacheManager)">
            <summary>
            Dependency Injection Constructor
            </summary>
            <param name="dataProvider">The IDataProvider that provides persistence</param>
            <param name="cacheManager">The <see cref="T:InSite.Model.Interfaces.ICacheManager"/> to cache Name to ProductId maps.</param>
        </member>
        <member name="M:InSite.Model.Services.Repositories.ProductRepository.GetByName(System.String)">
            <summary>Get a <see cref="T:InSite.Model.Product"/> by Name.</summary>
            <param name="name">The Product Name to search for.</param>
            <returns><see cref="T:InSite.Model.Product"/> or null if not found.</returns>
        </member>
        <member name="M:InSite.Model.Services.Repositories.ProductRepository.GetByERPNumber(System.String)">
            <summary>Get a <see cref="T:InSite.Model.Product"/> by ERPNumber.</summary>
            <param name="erpNumber">Product ERPNumber to search for.</param>
            <returns><see cref="T:InSite.Model.Product"/> or null if not found.</returns>
        </member>
        <member name="T:InSite.Model.Services.Repositories.UserProfileRepository">
            <summary>
            The Repository to manage UserProfiles.
            </summary>
        </member>
        <member name="M:InSite.Model.Services.Repositories.UserProfileRepository.#ctor(InSite.Model.Interfaces.IContextProvider,InSite.Model.Interfaces.IAuthenticationService,InSite.Model.Interfaces.IDataProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:InSite.Model.Services.Repositories.UserProfileRepository"/> class.
            </summary>
            <param name="contextProvider">The context provider.</param>
            <param name="authenticationService">The authentication service.</param>
            <param name="dataProvider">The data provider.</param>
        </member>
        <member name="M:InSite.Model.Services.Repositories.UserProfileRepository.GetByUserName(System.String)">
            <summary>
            Returns an <see cref="T:InSite.Model.UserProfile"/> which matches the provided name parameter
            </summary>
            <param name="name">The user name to search for</param>
            <returns><see cref="T:InSite.Model.UserProfile"/></returns>
            <remarks>returns an <see cref="T:InSite.Model.UserProfile"/> if it finds a match, otherwise it returns null</remarks>
        </member>
        <member name="M:InSite.Model.Services.Repositories.UserProfileRepository.GetByEmail(System.String)">
            <summary>
            Returns an <see cref="T:InSite.Model.UserProfile"/> which matches the provided email parameter
            </summary>
            <param name="email">The email to search for</param>
            <returns><see cref="T:InSite.Model.UserProfile"/></returns>
            <remarks>returns an <see cref="T:InSite.Model.UserProfile"/> if it finds a match, otherwise it returns null.  Membership services must be set up to require unique email addresses.</remarks>
        </member>
        <member name="M:InSite.Model.Services.Repositories.UserProfileRepository.GetUsersByEmail(System.String)">
            <summary>
            Returns an list of <see cref="T:InSite.Model.UserProfile"/> which matches the provided email parameter
            </summary>
            <param name="email">The email to search for</param>
            <returns><see cref="T:InSite.Model.UserProfile"/></returns>
            <remarks>returns an list of <see cref="T:InSite.Model.UserProfile"/> if it finds a match, otherwise it returns empty list.</remarks>
        </member>
        <member name="M:InSite.Model.Services.Repositories.UserProfileRepository.Insert(InSite.Model.UserProfile)">
            <summary>
            Inserts a <see cref="T:InSite.Model.UserProfile"/> in the persistance provider
            </summary>
            <param name="inserted">The <see cref="T:InSite.Model.UserProfile"/> to persist</param>
            <remarks>
            if the provided <see cref="T:InSite.Model.UserProfile"/>'s ApplicationName is blank get the application name from <see cref="T:System.Web.Security.Membership"/>.ApplicationName
            and assigned it to the provided <see cref="T:InSite.Model.UserProfile"/>, create the underlying <see cref="T:System.Web.Security.Membership"/> data for the provided
            <see cref="T:InSite.Model.UserProfile"/> and inserts it in the persistance provider
            </remarks>
        </member>
        <member name="M:InSite.Model.Services.Repositories.UserProfileRepository.Delete(InSite.Model.UserProfile)">
            <summary>
            Deletes the provided <see cref="T:InSite.Model.UserProfile"/> and its associated artifacts
            </summary>
            <param name="deleted"><see cref="T:InSite.Model.UserProfile"/> to be deleted</param>
        </member>
        <member name="T:InSite.Model.Services.Repositories.WebSiteRepository">
            <summary>
            The Repository to manage WebSites 
            </summary>
        </member>
        <member name="M:InSite.Model.Services.Repositories.WebSiteRepository.#ctor(InSite.Model.Interfaces.IDataProvider,InSite.Model.Interfaces.ICacheManager)">
            <summary>
            Dependency Injection Constructor
            </summary>
            <param name="dataProvider">The IDataProvider that provides persistence</param>
            <param name="cacheManager">The <see cref="T:InSite.Model.Interfaces.ICacheManager"/> to cache Name and Domain to WebSiteId maps.</param>
        </member>
        <member name="M:InSite.Model.Services.Repositories.WebSiteRepository.GetByName(System.String)">
            <summary>Gets a WebSite by Name</summary>
            <param name="name">The WebSite Name</param>
            <remarks>Returns null if the WebSite is not found</remarks>
            <returns>WebSite or null if not found</returns>
        </member>
        <member name="M:InSite.Model.Services.Repositories.WebSiteRepository.GetByDomain(System.String)">
            <summary>
            Gets a WebSite by Domain, if not found throws WebSiteForDomainNotFoundException
            </summary>
            <param name="domainName">Domain Name</param>
            <returns>WebSite or throws WebSiteForDomainNotFoundException</returns>
        </member>
        <member name="M:InSite.Model.Services.Repositories.WebSiteRepository.GetByMicroSite(System.String)">
            <summary>
            Gets a WebSite by Domain and MicroSite Identifier
            </summary>
            <param name="microSite">microsite url (domain and microsite identifier)</param>
            <returns>WebSite or null if site could not be found</returns>
        </member>
        <member name="P:InSite.Model.Services.Repositories.WebSiteRepository.MicroSiteToWebSiteIdMap">
            <summary>
            Get Set the current MicroSite mapping
            </summary>
        </member>
        <member name="T:InSite.Model.Services.TranslationService_Google">
            <summary>
            Translation service using the Google Translate Apis.  All google language codes are iso - 2 chars except zh-CN and zh-TW, 
            any language code with a length greater than 2 other than these are truncated to 2.
            </summary>
        </member>
        <member name="M:InSite.Model.Services.TranslationService_Google.#ctor(InSite.Model.Interfaces.IApplicationSettingProvider,InSite.Model.Interfaces.IUnitOfWork)">
            <summary>
            Constructor initializes properties from <see cref="T:InSite.Model.ApplicationSetting"/>s.
            </summary>
        </member>
        <member name="M:InSite.Model.Services.TranslationService_Google.TranslateText(System.String,System.Collections.Generic.IList{System.String})">
            <summary>
            Translate a string from the system default language to the to language. All google language codes are iso - 2 chars except zh-CN and zh-TW, 
            any language code with a length greater than 2 other than these are truncated to 2.
            </summary>
            <param name="toLanguageCode">Language Code to translate to.</param>
            <param name="stringsToTranslate">List of strings to translate.</param>
            <returns>Translated text.</returns>
        </member>
        <member name="M:InSite.Model.Services.TranslationService_Google.TranslateText(System.String,System.String,System.Collections.Generic.IList{System.String})">
            <summary>
            Translate a string from the from language to the to language.  All google language codes are iso - 2 chars except zh-CN and zh-TW, 
            any language code with a length greater than 2 other than these are truncated to 2.
            </summary>
            <param name="fromLanguageCode">Language Code to translate from.</param>
            <param name="toLanguageCode">Language Code to translate to.</param>
            <param name="stringsToTranslate">List of strings to translate.</param>
            <returns>Translated text.</returns>
        </member>
        <member name="P:InSite.Model.Services.TranslationService_Google.GoogleTranslateUrl">
            <summary>
            The Google Translate Api Url.
            </summary>
        </member>
        <member name="P:InSite.Model.Services.TranslationService_Google.GoogleApiKey">
            <summary>
            The Google Api Key.
            </summary>
        </member>
        <member name="T:InSite.Model.Services.TranslationService_Microsoft">
            <summary>
            Translation service using the Microsoft Translate Apis.  All language codes are iso - 2 chars except zh-CN and zh-TW, 
            any language code with a length greater than 2 other than these are truncated to 2.
            </summary>
        </member>
        <member name="M:InSite.Model.Services.TranslationService_Microsoft.#ctor(InSite.Model.Interfaces.IApplicationSettingProvider)">
            <summary>
            Constructor gets the Access Token.
            </summary>
        </member>
        <member name="M:InSite.Model.Services.TranslationService_Microsoft.TranslateText(System.String,System.Collections.Generic.IList{System.String})">
            <summary>
            Translate a string from the system default language to the to language. All language codes are iso - 2 chars except zh-CN and zh-TW, 
            any language code with a length greater than 2 other than these are truncated to 2.
            </summary>
            <param name="toLanguageCode">Language Code to translate to.</param>
            <param name="stringsToTranslate">List of strings to translate.</param>
            <returns>Translated text.</returns>
        </member>
        <member name="M:InSite.Model.Services.TranslationService_Microsoft.TranslateText(System.String,System.String,System.Collections.Generic.IList{System.String})">
            <summary>
            Translate a string from the from language to the to language.  All language codes are iso - 2 chars except zh-CN and zh-TW, 
            any language code with a length greater than 2 other than these are truncated to 2.
            </summary>
            <param name="fromLanguageCode">Language Code to translate from.</param>
            <param name="toLanguageCode">Language Code to translate to.</param>
            <param name="stringsToTranslate">List of strings to translate.</param>
            <returns>Translated text.</returns>
        </member>
        <member name="P:InSite.Model.Services.TranslationService_Microsoft.MicrosoftTranslateUrl">
            <summary>
            The Microsoft Translate Api Url.
            </summary>
        </member>
        <member name="P:InSite.Model.Services.TranslationService_Microsoft.MicrosoftClientId">
            <summary>
            The Microsoft Client Id.
            </summary>
        </member>
        <member name="P:InSite.Model.Services.TranslationService_Microsoft.MicrosoftClientSecret">
            <summary>
            The Microsoft Client Secret.
            </summary>
        </member>
        <member name="T:InSite.Model.Services.UnitOfWork">
            <summary>This class is the implementation of the IUnitOfWork</summary>
        </member>
        <member name="M:InSite.Model.Services.UnitOfWork.#ctor(Microsoft.Practices.ServiceLocation.IServiceLocator,InSite.Model.Interfaces.IDataProvider)">
            <summary>
            Dependency Injection Constructor
            </summary>
            <param name="serviceLocator">Service Locator for Dependency Resolution</param>
            <param name="dataProvider">The IDataProvider that provides persistence</param>
        </member>
        <member name="M:InSite.Model.Services.UnitOfWork.GetTypedRepository``1">
            <summary>Returns an specific type of IRepository that will be tracked within this UnitOfWork's session</summary>
        </member>
        <member name="M:InSite.Model.Services.UnitOfWork.GetRepository``1">
            <summary>Returns an IRepository for a Business Object that will be tracked within this UnitOfWork's session</summary>
        </member>
        <member name="M:InSite.Model.Services.UnitOfWork.GetRepository(System.Type)">
            <summary>Returns a Repository for the type of Business Object passed in, for use with dynamic</summary>
            <param name="type">Type of Business Object to get Repository for</param>
            <returns>Repository for this Business Object</returns>
        </member>
        <member name="M:InSite.Model.Services.UnitOfWork.BeginTransaction">
            <summary>Starts a Database Transaction</summary>
        </member>
        <member name="M:InSite.Model.Services.UnitOfWork.CommitTransaction">
            <summary>Commits a previously started Database Transaction</summary>
        </member>
        <member name="M:InSite.Model.Services.UnitOfWork.RollbackTransaction">
            <summary>Rolls back a previously started Database Transaction</summary>
        </member>
        <member name="M:InSite.Model.Services.UnitOfWork.Save">
            <summary>Saves all of the changes to the Business Objects in the current UnitOfWork session to the Database</summary>
        </member>
        <member name="M:InSite.Model.Services.UnitOfWork.Clear">
            <summary>Clears the Business Objects out of the UnitOfWork session, the Business Objects will still be valid objects, but they will no longer be persisted to
            the Database.  This method is useful when working with large sets of data for example during a refresh.</summary>
        </member>
        <member name="M:InSite.Model.Services.UnitOfWork.Evict(System.Object)">
            <summary>Removes a single Business Object from the UnitOfWork session.  The Business Object is still a valid object, but will no longer persist to the Database.</summary>
        </member>
        <member name="M:InSite.Model.Services.UnitOfWork.Reattach(System.Object)">
            <summary>Reattaches a previously Evicted object to the session</summary>
        </member>
        <member name="M:InSite.Model.Services.UnitOfWork.Refresh(System.Object)">
            <summary>Refresh an object from the database.</summary>
        </member>
        <member name="M:InSite.Model.Services.UnitOfWork.EagerLoad(System.Object)">
            <summary>Forces a load of a proxy, does not cascade.</summary>
        </member>
        <member name="M:InSite.Model.Services.UnitOfWork.UnProxy(System.Object)">
            <summary>Convert a proxied object into the real thing.</summary>
        </member>
        <member name="M:InSite.Model.Services.UnitOfWork.Close">
            <summary>Close the Session.</summary>
        </member>
        <member name="P:InSite.Model.Services.UnitOfWork.DataProvider">
            <summary>The Persistent Data Provider</summary>
        </member>
        <member name="T:InSite.Model.ShipCharge">
            <summary>
            Represents an additional ShipCharge for a <see cref="P:InSite.Model.ShipCharge.Carrier"/> or <see cref="P:InSite.Model.ShipCharge.ShipVia"/>
            </summary>
        </member>
        <member name="P:InSite.Model.ShipCharge.Enable">
            <summary>
            Get or sets Enable
            </summary>
        </member>
        <member name="P:InSite.Model.ShipCharge.Name">
            <summary>
            Gets or sets Name
            </summary>
        </member>
        <member name="P:InSite.Model.ShipCharge.Description">
            <summary>
            Gets or sets Description
            </summary>
        </member>
        <member name="P:InSite.Model.ShipCharge.Charge">
            <summary>
            Gets or sets Charge
            </summary>
        </member>
        <member name="P:InSite.Model.ShipCharge.Carrier">
            <summary>
            Gets or sets <see cref="P:InSite.Model.ShipCharge.Carrier"/>
            </summary>
        </member>
        <member name="P:InSite.Model.ShipCharge.ShipVia">
            <summary>
            Gets or sets <see cref="P:InSite.Model.ShipCharge.ShipVia"/>
            </summary>
        </member>
        <member name="T:InSite.Model.Services.UnitOfWorkFactory">
            <summary>
            This class gets the <see cref="T:InSite.Model.Interfaces.IUnitOfWork"/> for the current thread or Http Request for working with Business Objects.
            There can be only one <see cref="T:InSite.Model.Interfaces.IUnitOfWork"/> per thread or HttpRequest.
            </summary>
        </member>
        <member name="M:InSite.Model.Services.UnitOfWorkFactory.#ctor(Microsoft.Practices.ServiceLocation.IServiceLocator)">
            <summary>Initializes a new instance of the class with dependencies passed in.</summary>
            <param name="serviceLocator">The Service Locator used to resolve using the Ioc Container</param>
        </member>
        <member name="M:InSite.Model.Services.UnitOfWorkFactory.GetUnitOfWork">
            <summary>This method will get or create a new <see cref="T:InSite.Model.Interfaces.IUnitOfWork"/> for the current thread or Http Request.</summary>
            <returns>The current <see cref="T:InSite.Model.Interfaces.IUnitOfWork"/>.</returns>
        </member>
        <member name="T:InSite.Model.ShipRules.OrderAtLeastOneProductFromVendor">
            <summary>
            Custom Ship Rule that returns true if <see cref="T:InSite.Model.CustomerOrder"/> has any <see cref="T:InSite.Model.OrderLine"/>s with a <see cref="T:InSite.Model.Product"/> where the <see cref="P:InSite.Model.Vendor.VendorNumber"/> equals <see cref="P:InSite.Model.ShipRuleCustom.Code"/>.
            </summary>
        </member>
        <member name="M:InSite.Model.ShipRules.OrderAtLeastOneProductFromVendor.IsValid(InSite.Model.ShipRuleCustom,InSite.Model.CustomerOrder,InSite.Model.Customer)">
            <summary>
            Returns true if any <see cref="T:InSite.Model.Product"/>s <see cref="P:InSite.Model.Vendor.VendorNumber"/> equals the <see cref="P:InSite.Model.ShipRuleCustom.Code"/>.
            </summary>
            <param name="shipRuleCustom"><see cref="T:InSite.Model.ShipRuleCustom"/></param>
            <param name="customerOrder"><see cref="T:InSite.Model.CustomerOrder"/></param>
            <param name="customer"><see cref="T:InSite.Model.Customer"/></param>
            <returns>True if any <see cref="T:InSite.Model.Product"/>.<see cref="T:InSite.Model.Vendor"/> equals the <see cref="P:InSite.Model.ShipRuleCustom.Code"/>, false otherwise.</returns>
        </member>
        <member name="T:InSite.Model.ShipRule">
            <summary>
            Abstract class which represent the base for <see cref="T:InSite.Model.ShipRule"/> rules to inherit from
            </summary>
        </member>
        <member name="M:InSite.Model.ShipRule.IsValid(InSite.Model.CustomerOrder,InSite.Model.Customer)">
            <summary>
            Method to validate whether the rule passes/validates for the provided paramenters
            </summary>
            <param name="customerOrder"><see cref="T:InSite.Model.CustomerOrder"/> to validate rule against</param>
            <param name="customer"><see cref="T:InSite.Model.Customer"/> to validate rule against</param>
            <returns><see cref="T:System.Boolean"/></returns>
            <remarks>This method always returns true and is meant to be overridden</remarks>
        </member>
        <member name="P:InSite.Model.ShipRule.ShipVia">
            <summary>
            Get or set the Parent <see cref="P:InSite.Model.ShipRule.ShipVia"/>
            </summary>
        </member>
        <member name="P:InSite.Model.ShipRule.Carrier">
            <summary>
            Get or set the Parent <see cref="P:InSite.Model.ShipRule.Carrier"/>
            </summary>
        </member>
        <member name="P:InSite.Model.ShipRule.ExecutionGroup">
            <summary>
            Get or set ExecutionGroup
            </summary>
            <remarks>The group which the rule will be executed in</remarks>
        </member>
        <member name="P:InSite.Model.ShipRule.ExecutionOrder">
            <summary>
            Get or set ExecutionOrder
            </summary>
            <remarks>
            The order this rule will be executed in within its <see cref="P:InSite.Model.ShipRule.ExecutionGroup"/>
            </remarks>
        </member>
        <member name="P:InSite.Model.ShipRule.Condition">
            <summary>
            Get or set Condition
            </summary>
            <returns>"And" or "Or"</returns>
        </member>
        <member name="P:InSite.Model.ShipRule.RuleName">
            <summary>
            Get RuleName
            </summary>
            <remarks>
            NHibernate will use the rulename to instanciate the proper implemented rule
            </remarks>
        </member>
        <member name="T:InSite.Model.ShipRuleCustom">
            <summary>
            Delegates all logic to an <see cref="T:InSite.Model.Interfaces.ICustomShipRule"/> to allow extensible Ship Rules.
            </summary>
        </member>
        <member name="M:InSite.Model.ShipRuleCustom.IsValid(InSite.Model.CustomerOrder,InSite.Model.Customer)">
            <summary>
            Delegates call to the <see cref="T:InSite.Model.Interfaces.ICustomShipRule"/>.
            </summary>
            <param name="customerOrder"><see cref="T:InSite.Model.CustomerOrder"/></param>
            <param name="customer"><see cref="T:InSite.Model.Customer"/></param>
        </member>
        <member name="P:InSite.Model.ShipRuleCustom.CustomRuleName">
            <summary>
            The Name to resolve the <see cref="T:InSite.Model.Interfaces.ICustomPromotionRule"/>.
            </summary>
        </member>
        <member name="P:InSite.Model.ShipRuleCustom.Code">
            <summary>
            Get or set Code
            </summary>
        </member>
        <member name="P:InSite.Model.ShipRuleCustom.CustomerType">
            <summary>
            Get or set CustomerType
            </summary>
        </member>
        <member name="P:InSite.Model.ShipRuleCustom.DayOfWeek">
            <summary>
            Get or set DayOfWeek
            </summary>
        </member>
        <member name="P:InSite.Model.ShipRuleCustom.DayOfWeekString">
            <summary>
            Get or set DayOfWeekString
            </summary>
        </member>
        <member name="P:InSite.Model.ShipRuleCustom.MinimumAmount">
            <summary>
            Get set MinimumAmount
            </summary>
        </member>
        <member name="P:InSite.Model.ShipRuleCustom.MaximumAmount">
            <summary>
            Get set MaximumAmount
            </summary>
        </member>
        <member name="P:InSite.Model.ShipRuleCustom.PostalCode">
            <summary>
            Get or set postal code
            </summary>
        </member>
        <member name="P:InSite.Model.ShipRuleCustom.State">
            <summary>
            Get or set State
            </summary>
        </member>
        <member name="P:InSite.Model.ShipRuleCustom.Country">
            <summary>
            Get or set Country
            </summary>
        </member>
        <member name="P:InSite.Model.ShipRuleCustom.CategoryInfo">
            <summary>
            Get or set CategoryInfo
            </summary>
        </member>
        <member name="T:InSite.Model.ShipRuleCustomerIsCustomerType">
            <summary>
            ShipRule to validate whether the provided <see cref="P:InSite.Model.Customer.CustomerType"/> matches the provided <see cref="P:InSite.Model.ShipRuleCustomerIsCustomerType.CustomerType"/>
            </summary>
        </member>
        <member name="M:InSite.Model.ShipRuleCustomerIsCustomerType.IsValid(InSite.Model.CustomerOrder,InSite.Model.Customer)">
            <summary>
            ShipRule to validate whether the provided <see cref="P:InSite.Model.Customer.CustomerType"/> matches the provided <see cref="P:InSite.Model.ShipRuleCustomerIsCustomerType.CustomerType"/>
            </summary>
            <param name="customerOrder"><see cref="T:InSite.Model.CustomerOrder"/> Is not used in this class, but is need to match the interface</param>
            <param name="customer"><see cref="T:InSite.Model.Customer"/> to validate Rule against</param>
            <returns><see cref="T:System.Boolean"/></returns>
        </member>
        <member name="P:InSite.Model.ShipRuleCustomerIsCustomerType.CustomerType">
            <summary>
            Get or set CustomerType
            </summary>
        </member>
        <member name="T:InSite.Model.ShipRuleCustomerIsNotCustomerType">
            <summary>
            <see cref="T:InSite.Model.ShipRule"/> to validate whether the provided <see cref="P:InSite.Model.Customer.CustomerType"/> does not match the provided <see cref="P:InSite.Model.ShipRuleCustomerIsNotCustomerType.CustomerType"/>
            </summary>
        </member>
        <member name="M:InSite.Model.ShipRuleCustomerIsNotCustomerType.IsValid(InSite.Model.CustomerOrder,InSite.Model.Customer)">
            <summary>
            ShipRule to validate whether the provided <see cref="P:InSite.Model.Customer.CustomerType"/> does not match the provided <see cref="P:InSite.Model.ShipRuleCustomerIsNotCustomerType.CustomerType"/>
            </summary>
            <param name="customerOrder"><see cref="T:InSite.Model.CustomerOrder"/> Is not used in this class, but is need to match the interface</param>
            <param name="customer"><see cref="T:InSite.Model.Customer"/> to validate Rule against</param>
            <returns><see cref="T:System.Boolean"/></returns>
        </member>
        <member name="P:InSite.Model.ShipRuleCustomerIsNotCustomerType.CustomerType">
            <summary>
            Get or set CustomerType
            </summary>
        </member>
        <member name="T:InSite.Model.ShipRuleNumberOfOrderLinesInRange">
            <summary>
            <see cref="T:InSite.Model.ShipRule"/> to validate whether the provided <see cref="T:InSite.Model.CustomerOrder"/> meet the minimum and maximum <see cref="T:InSite.Model.OrderLine"/> count
            </summary>
        </member>
        <member name="M:InSite.Model.ShipRuleNumberOfOrderLinesInRange.IsValid(InSite.Model.CustomerOrder,InSite.Model.Customer)">
            <summary>
            Method to validate if the provided <see cref="T:InSite.Model.CustomerOrder"/>'s <see cref="T:InSite.Model.OrderLine"/>'s count falls within the <see cref="P:InSite.Model.ShipRuleNumberOfOrderLinesInRange.MinimumAmount"/> and <see cref="P:InSite.Model.ShipRuleNumberOfOrderLinesInRange.MaximumAmount"/>
            </summary>
            <param name="customerOrder"><see cref="T:InSite.Model.CustomerOrder"/> to validate Rule against</param>
            <param name="customer"> Is not used in this class, but is need to match the interface</param>
            <returns></returns>
        </member>
        <member name="P:InSite.Model.ShipRuleNumberOfOrderLinesInRange.MinimumAmount">
            <summary>
            Get set MinimumAmount
            </summary>
            <remarks>The Minimum number of <see cref="T:InSite.Model.OrderLine"/>s for <see cref="T:InSite.Model.CustomerOrder"/></remarks>
        </member>
        <member name="P:InSite.Model.ShipRuleNumberOfOrderLinesInRange.MaximumAmount">
            <summary>
            Get set MaximumAmount
            </summary>
            <remarks>The Maximum number of <see cref="T:InSite.Model.OrderLine"/>s for <see cref="T:InSite.Model.CustomerOrder"/></remarks>
        </member>
        <member name="T:InSite.Model.ShipRuleOrderAtLeastOneProductInCategory">
            <summary>
            <see cref="T:InSite.Model.ShipRule"/> to validate whether the provided <see cref="T:InSite.Model.CustomerOrder"/> has any <see cref="T:InSite.Model.OrderLine"/> with a <see cref="T:InSite.Model.Product"/> in the <see cref="P:InSite.Model.ShipRuleOrderAtLeastOneProductInCategory.CategoryInfo"/>
            </summary>
        </member>
        <member name="M:InSite.Model.ShipRuleOrderAtLeastOneProductInCategory.IsValid(InSite.Model.CustomerOrder,InSite.Model.Customer)">
            <summary>
            Method to see if any <see cref="T:InSite.Model.Product"/> on the provided <see cref="T:InSite.Model.CustomerOrder"/> belongs to the <see cref="P:InSite.Model.ShipRuleOrderAtLeastOneProductInCategory.CategoryInfo"/>
            </summary>
            <param name="customerOrder"><see cref="T:InSite.Model.CustomerOrder"/> to validate Rule against</param>
            <param name="customer"> Is not used in this class, but is need to match the interface</param>
            <returns></returns>
        </member>
        <member name="P:InSite.Model.ShipRuleOrderAtLeastOneProductInCategory.CategoryInfo">
            <summary>
            Get or set CategoryInfo
            </summary>
        </member>
        <member name="T:InSite.Model.ShipRuleOrderAtLeastOneProductWithProductCode">
            <summary>
            <see cref="T:InSite.Model.ShipRule"/> to validate whether any <see cref="T:InSite.Model.Product"/> ordered on the provided<see cref="T:InSite.Model.CustomerOrder"/> has the <see cref="P:InSite.Model.ShipRuleOrderAtLeastOneProductWithProductCode.ProductCode"/>
            </summary>
        </member>
        <member name="M:InSite.Model.ShipRuleOrderAtLeastOneProductWithProductCode.IsValid(InSite.Model.CustomerOrder,InSite.Model.Customer)">
            <summary>
            Method to validate whether the provided <see cref="T:InSite.Model.CustomerOrder"/> has any <see cref="T:InSite.Model.Product"/> that matches the <see cref="P:InSite.Model.ShipRuleOrderAtLeastOneProductWithProductCode.ProductCode"/>
            </summary>
            <param name="customerOrder"><see cref="T:InSite.Model.CustomerOrder"/> to validate Rule against</param>
            <param name="customer"> Is not used in this class, but is need to match the interface</param>
            <returns><see cref="T:System.Boolean"/></returns>
        </member>
        <member name="P:InSite.Model.ShipRuleOrderAtLeastOneProductWithProductCode.ProductCode">
            <summary>
            Get or set ProductCode
            </summary>
        </member>
        <member name="T:InSite.Model.ShipRuleOrderDoesNotHaveTermsCode">
            <summary>
            <see cref="T:InSite.Model.ShipRule"/> to validate if the provided  <see cref="P:InSite.Model.CustomerOrder.TermsCode"/> does not match <see cref="P:InSite.Model.ShipRuleOrderDoesNotHaveTermsCode.TermsCode"/>
            </summary>
        </member>
        <member name="M:InSite.Model.ShipRuleOrderDoesNotHaveTermsCode.IsValid(InSite.Model.CustomerOrder,InSite.Model.Customer)">
            <summary>
            Method to validate the provided <see cref="P:InSite.Model.CustomerOrder.TermsCode"/> does not match <see cref="P:InSite.Model.ShipRuleOrderDoesNotHaveTermsCode.TermsCode"/>
            </summary>
            <param name="customerOrder"><see cref="T:InSite.Model.CustomerOrder"/> to validate Rule against</param>
            <param name="customer"> Is not used in this class, but is need to match the interface</param>
            <returns><see cref="T:System.Boolean"/></returns>
        </member>
        <member name="P:InSite.Model.ShipRuleOrderDoesNotHaveTermsCode.TermsCode">
            <summary>
            Get or set TermsCode
            </summary>
        </member>
        <member name="T:InSite.Model.ShipRuleOrderHasTermsCode">
            <summary>
            <see cref="T:InSite.Model.ShipRule"/> to validate if the provided  <see cref="P:InSite.Model.CustomerOrder.TermsCode"/> matches <see cref="P:InSite.Model.ShipRuleOrderHasTermsCode.TermsCode"/>
            </summary>
        </member>
        <member name="M:InSite.Model.ShipRuleOrderHasTermsCode.IsValid(InSite.Model.CustomerOrder,InSite.Model.Customer)">
            <summary>
            Method to validate the provided <see cref="P:InSite.Model.CustomerOrder.TermsCode"/> matches <see cref="P:InSite.Model.ShipRuleOrderHasTermsCode.TermsCode"/>
            </summary>
            <param name="customerOrder"><see cref="T:InSite.Model.CustomerOrder"/> to validate Rule against</param>
            <param name="customer"> Is not used in this class, but is need to match the interface</param>
            <returns><see cref="T:System.Boolean"/></returns>
        </member>
        <member name="P:InSite.Model.ShipRuleOrderHasTermsCode.TermsCode">
            <summary>
            Get or set TermsCode
            </summary>
        </member>
        <member name="T:InSite.Model.ShipRuleOrderNoProductsWithProductCode">
            <summary>
            <see cref="T:InSite.Model.ShipRule"/> to validate if the provided  <see cref="T:InSite.Model.CustomerOrder"/> does not contain any <see cref="T:InSite.Model.Product"/>s where 
            <see cref="P:InSite.Model.Product.ProductCode"/> matches <see cref="P:InSite.Model.ShipRuleOrderNoProductsWithProductCode.ProductCode"/>
            </summary>
        </member>
        <member name="M:InSite.Model.ShipRuleOrderNoProductsWithProductCode.IsValid(InSite.Model.CustomerOrder,InSite.Model.Customer)">
            <summary>
            Method to validate if the provided  <see cref="T:InSite.Model.CustomerOrder"/> does not contain any <see cref="T:InSite.Model.Product"/>s where 
            <see cref="P:InSite.Model.Product.ProductCode"/> matches <see cref="P:InSite.Model.ShipRuleOrderNoProductsWithProductCode.ProductCode"/>
            </summary>
            <param name="customerOrder"><see cref="T:InSite.Model.CustomerOrder"/> to validate Rule against</param>
            <param name="customer"> Is not used in this class, but is need to match the interface</param>
            <returns><see cref="T:System.Boolean"/></returns>
        </member>
        <member name="P:InSite.Model.ShipRuleOrderNoProductsWithProductCode.ProductCode">
            <summary>
            Get or set ProductCode
            </summary>
        </member>
        <member name="T:InSite.Model.ShipRuleOrderNotShippingToCountry">
            <summary>
            <see cref="T:InSite.Model.ShipRule"/> to validate if the provided <see cref="T:InSite.Model.CustomerOrder"/> is not shipping to the Rule's <see cref="P:InSite.Model.ShipRuleOrderNotShippingToCountry.Country"/>
            </summary>
        </member>
        <member name="M:InSite.Model.ShipRuleOrderNotShippingToCountry.IsValid(InSite.Model.CustomerOrder,InSite.Model.Customer)">
            <summary>
            Method to validate if the provided  <see cref="P:InSite.Model.CustomerOrder.ShipTo"/>'s <see cref="T:InSite.Model.Country"/> does not match the rule's <see cref="P:InSite.Model.ShipRuleOrderNotShippingToCountry.Country"/>
            </summary>
            <param name="customerOrder"><see cref="T:InSite.Model.CustomerOrder"/> to validate Rule against</param>
            <param name="customer"> Is not used in this class, but is need to match the interface</param>
            <returns><see cref="T:System.Boolean"/></returns>
        </member>
        <member name="P:InSite.Model.ShipRuleOrderNotShippingToCountry.Country">
            <summary>
            Get or set Country
            </summary>
        </member>
        <member name="T:InSite.Model.ShipRuleOrderNotShippingToPostalCode">
            <summary>
            <see cref="T:InSite.Model.ShipRule"/> to validate if the provided <see cref="T:InSite.Model.CustomerOrder"/> is not shipping to the rule's <see cref="P:InSite.Model.ShipRuleOrderNotShippingToPostalCode.PostalCode"/>
            </summary>
        </member>
        <member name="M:InSite.Model.ShipRuleOrderNotShippingToPostalCode.IsValid(InSite.Model.CustomerOrder,InSite.Model.Customer)">
            <summary>
            Method to validate if the provided  <see cref="P:InSite.Model.CustomerOrder.ShipTo"/>'s postal code does not match the rule's <see cref="P:InSite.Model.ShipRuleOrderNotShippingToPostalCode.PostalCode"/>
            </summary>
            <param name="customerOrder"><see cref="T:InSite.Model.CustomerOrder"/> to validate Rule against</param>
            <param name="customer"> Is not used in this class, but is need to match the interface</param>
            <returns><see cref="T:System.Boolean"/></returns>
        </member>
        <member name="P:InSite.Model.ShipRuleOrderNotShippingToPostalCode.PostalCode">
            <summary>
            Get or set postal code
            </summary>
        </member>
        <member name="T:InSite.Model.ShipRuleOrderNotShippingToState">
            <summary>
            <see cref="T:InSite.Model.ShipRule"/> to validate whether the provided <see cref="T:InSite.Model.CustomerOrder"/> is not shipping to the rule's <see cref="P:InSite.Model.ShipRuleOrderNotShippingToState.State"/>
            </summary>
        </member>
        <member name="M:InSite.Model.ShipRuleOrderNotShippingToState.IsValid(InSite.Model.CustomerOrder,InSite.Model.Customer)">
            <summary>
            Method to validate if the provided  <see cref="P:InSite.Model.CustomerOrder.ShipTo"/>'s <see cref="T:InSite.Model.State"/> does not match the rule's <see cref="P:InSite.Model.ShipRuleOrderNotShippingToState.State"/>
            </summary>
            <param name="customerOrder"><see cref="T:InSite.Model.CustomerOrder"/> to validate Rule against</param>
            <param name="customer"> Is not used in this class, but is need to match the interface</param>
            <returns><see cref="T:System.Boolean"/></returns>
        </member>
        <member name="P:InSite.Model.ShipRuleOrderNotShippingToState.State">
            <summary>
            Get or set State
            </summary>
        </member>
        <member name="T:InSite.Model.ShipRuleOrderProductsNotInCategory">
            <summary>
            <see cref="T:InSite.Model.ShipRule"/> to validate whether the provided <see cref="T:InSite.Model.CustomerOrder"/> does not have any <see cref="T:InSite.Model.Product"/>'s
            in the rules <see cref="P:InSite.Model.ShipRuleOrderProductsNotInCategory.CategoryInfo"/>
            </summary>
        </member>
        <member name="M:InSite.Model.ShipRuleOrderProductsNotInCategory.IsValid(InSite.Model.CustomerOrder,InSite.Model.Customer)">
            <summary>
            Method to validate if the provided <see cref="T:InSite.Model.CustomerOrder"/> does not have any <see cref="T:InSite.Model.Product"/>s in the rule's <see cref="P:InSite.Model.ShipRuleOrderProductsNotInCategory.CategoryInfo"/>
            </summary>
            <param name="customerOrder"><see cref="T:InSite.Model.CustomerOrder"/> to validate Rule against</param>
            <param name="customer"> Is not used in this class, but is need to match the interface</param>
            <returns><see cref="T:System.Boolean"/></returns>
        </member>
        <member name="M:InSite.Model.ShipRuleOrderProductsNotInCategory.IsCategoryValid(InSite.Model.Category)">
            <summary>
            Method to validate the provided <see cref="T:InSite.Model.Category"/> is not equal to <see cref="P:InSite.Model.ShipRuleOrderProductsNotInCategory.CategoryInfo"/> or the provided Category's parent <see cref="T:InSite.Model.Category"/>
            </summary>
            <param name="category"><see cref="T:InSite.Model.Category"/> to validate</param>
            <returns><see cref="T:System.Boolean"/></returns>
            <remarks>
            Recursion call - if the provided <see cref="T:InSite.Model.Category"/> has a parent <see cref="T:InSite.Model.Category"/> this method will call itself passing in the parent <see cref="T:InSite.Model.Category"/>
            </remarks>
        </member>
        <member name="P:InSite.Model.ShipRuleOrderProductsNotInCategory.CategoryInfo">
            <summary>
            Get or set CategoryInfo
            </summary>
        </member>
        <member name="T:InSite.Model.ShipRuleOrderProductsOnlyInCategory">
            <summary>
            <see cref="T:InSite.Model.ShipRule"/> to validate whether the provided <see cref="T:InSite.Model.CustomerOrder"/> only contains <see cref="T:InSite.Model.Product"/>s in the rule's <see cref="P:InSite.Model.ShipRuleOrderProductsOnlyInCategory.CategoryInfo"/>
            </summary>
        </member>
        <member name="M:InSite.Model.ShipRuleOrderProductsOnlyInCategory.IsValid(InSite.Model.CustomerOrder,InSite.Model.Customer)">
            <summary>
            Method to validate if the provided <see cref="T:InSite.Model.CustomerOrder"/> only has <see cref="T:InSite.Model.Product"/>s in the rule's <see cref="P:InSite.Model.ShipRuleOrderProductsOnlyInCategory.CategoryInfo"/>
            </summary>
            <param name="customerOrder"><see cref="T:InSite.Model.CustomerOrder"/> to validate Rule against</param>
            <param name="customer"> Is not used in this class, but is need to match the interface</param>
            <returns><see cref="T:System.Boolean"/></returns>
        </member>
        <member name="P:InSite.Model.ShipRuleOrderProductsOnlyInCategory.CategoryInfo">
            <summary>
            Get or set CategoryInfo
            </summary>
        </member>
        <member name="T:InSite.Model.ShipRuleOrderShipDateIsDayOfWeek">
            <summary>
            <see cref="T:InSite.Model.ShipRule"/> to validate if the provided <see cref="P:InSite.Model.CustomerOrder.RequestedShipDate"/> <see cref="P:System.DateTime.DayOfWeek"/> is the same as the rule's <see cref="P:InSite.Model.ShipRuleOrderShipDateIsDayOfWeek.DayOfWeek"/>
            </summary>
        </member>
        <member name="M:InSite.Model.ShipRuleOrderShipDateIsDayOfWeek.IsValid(InSite.Model.CustomerOrder,InSite.Model.Customer)">
            <summary>
            Method to validate if the provided <see cref="P:InSite.Model.CustomerOrder.RequestedShipDate"/> <see cref="P:System.DateTime.DayOfWeek"/> matches the rule's <see cref="P:InSite.Model.ShipRuleOrderShipDateIsDayOfWeek.DayOfWeek"/>
            </summary>
            <param name="customerOrder"><see cref="T:InSite.Model.CustomerOrder"/> to validate Rule against</param>
            <param name="customer"> Is not used in this class, but is need to match the interface</param>
            <returns><see cref="T:System.Boolean"/></returns>
        </member>
        <member name="P:InSite.Model.ShipRuleOrderShipDateIsDayOfWeek.DayOfWeek">
            <summary>
            Get or set DayOfWeek
            </summary>
        </member>
        <member name="P:InSite.Model.ShipRuleOrderShipDateIsDayOfWeek.DayOfWeekString">
            <summary>
            Get or set DayOfWeekString
            </summary>
        </member>
        <member name="T:InSite.Model.ShipRuleOrderShipDateIsDayOfWeekOrNull">
            <summary>
            <see cref="T:InSite.Model.ShipRule"/> to validate if the provided <see cref="P:InSite.Model.CustomerOrder.RequestedShipDate"/> <see cref="P:System.DateTime.DayOfWeek"/> is the same as the rule's <see cref="P:InSite.Model.ShipRuleOrderShipDateIsDayOfWeekOrNull.DayOfWeek"/> or is null
            </summary>
        </member>
        <member name="M:InSite.Model.ShipRuleOrderShipDateIsDayOfWeekOrNull.IsValid(InSite.Model.CustomerOrder,InSite.Model.Customer)">
            <summary>
            Method to validate if the provided <see cref="P:InSite.Model.CustomerOrder.RequestedShipDate"/> <see cref="P:System.DateTime.DayOfWeek"/> matches the rule's <see cref="P:InSite.Model.ShipRuleOrderShipDateIsDayOfWeekOrNull.DayOfWeek"/> or is null
            </summary>
            <param name="customerOrder"><see cref="T:InSite.Model.CustomerOrder"/> to validate Rule against</param>
            <param name="customer"> Is not used in this class, but is need to match the interface</param>
            <returns><see cref="T:System.Boolean"/></returns>
        </member>
        <member name="P:InSite.Model.ShipRuleOrderShipDateIsDayOfWeekOrNull.DayOfWeek">
            <summary>
            Get or set DayOfWeek
            </summary>
        </member>
        <member name="P:InSite.Model.ShipRuleOrderShipDateIsDayOfWeekOrNull.DayOfWeekString">
            <summary>
            Get or set DayOfWeekString
            </summary>
        </member>
        <member name="T:InSite.Model.ShipRuleOrderShipDateIsNotDayOfWeek">
            <summary>
            <see cref="T:InSite.Model.ShipRule"/> to validate if the provided <see cref="P:InSite.Model.CustomerOrder.RequestedShipDate"/> <see cref="P:System.DateTime.DayOfWeek"/> is not the same as the rule's <see cref="P:InSite.Model.ShipRuleOrderShipDateIsNotDayOfWeek.DayOfWeek"/>
            </summary>
        </member>
        <member name="M:InSite.Model.ShipRuleOrderShipDateIsNotDayOfWeek.IsValid(InSite.Model.CustomerOrder,InSite.Model.Customer)">
            <summary>
            Method to validate if the provided <see cref="P:InSite.Model.CustomerOrder.RequestedShipDate"/> <see cref="P:System.DateTime.DayOfWeek"/> does not match the rule's <see cref="P:InSite.Model.ShipRuleOrderShipDateIsNotDayOfWeek.DayOfWeek"/>
            </summary>
            <param name="customerOrder"><see cref="T:InSite.Model.CustomerOrder"/> to validate Rule against</param>
            <param name="customer"> Is not used in this class, but is need to match the interface</param>
            <returns><see cref="T:System.Boolean"/></returns>
        </member>
        <member name="P:InSite.Model.ShipRuleOrderShipDateIsNotDayOfWeek.DayOfWeek">
            <summary>
            Get or set DayOfWeek
            </summary>
        </member>
        <member name="P:InSite.Model.ShipRuleOrderShipDateIsNotDayOfWeek.DayOfWeekString">
            <summary>
            Get or set DayOfWeekString
            </summary>
        </member>
        <member name="T:InSite.Model.ShipRuleOrderShippingToCountry">
            <summary>
            <see cref="T:InSite.Model.ShipRule"/> to validate if the provided <see cref="P:InSite.Model.CustomerOrder.ShipTo"/>'s <see cref="T:InSite.Model.Country"/> is shipping to the rule's <see cref="P:InSite.Model.ShipRuleOrderShippingToCountry.Country"/>
            </summary>
        </member>
        <member name="M:InSite.Model.ShipRuleOrderShippingToCountry.IsValid(InSite.Model.CustomerOrder,InSite.Model.Customer)">
            <summary>
            Method to validate if the provided <see cref="P:InSite.Model.CustomerOrder.ShipTo"/>'s <see cref="T:InSite.Model.Country"/> does matches the rule's <see cref="P:InSite.Model.ShipRuleOrderShippingToCountry.Country"/>
            </summary>
            <param name="customerOrder"><see cref="T:InSite.Model.CustomerOrder"/> to validate Rule against</param>
            <param name="customer"> Is not used in this class, but is need to match the interface</param>
            <returns><see cref="T:System.Boolean"/></returns>
        </member>
        <member name="P:InSite.Model.ShipRuleOrderShippingToCountry.Country">
            <summary>
            Get or set Country
            </summary>
        </member>
        <member name="T:InSite.Model.ShipRuleOrderShippingToPostalCode">
            <summary>
            <see cref="T:InSite.Model.ShipRule"/> to validate whether the provided <see cref="P:InSite.Model.CustomerOrder.ShipTo"/>'s  postal code matches the rule's <see cref="P:InSite.Model.ShipRuleOrderShippingToPostalCode.PostalCode"/>
            </summary>
        </member>
        <member name="M:InSite.Model.ShipRuleOrderShippingToPostalCode.IsValid(InSite.Model.CustomerOrder,InSite.Model.Customer)">
            <summary>
            Method to validate if the provided <see cref="P:InSite.Model.CustomerOrder.ShipTo"/>'s postal code matches the rule's <see cref="P:InSite.Model.ShipRuleOrderShippingToPostalCode.PostalCode"/>
            </summary>
            <param name="customerOrder"><see cref="T:InSite.Model.CustomerOrder"/> to validate Rule against</param>
            <param name="customer"> Is not used in this class, but is need to match the interface</param>
            <returns><see cref="T:System.Boolean"/></returns>
        </member>
        <member name="P:InSite.Model.ShipRuleOrderShippingToPostalCode.PostalCode">
            <summary>
            Get or set postal code
            </summary>
        </member>
        <member name="T:InSite.Model.ShipRuleOrderShippingToState">
            <summary>
            <see cref="T:InSite.Model.ShipRule"/> to validate provided <see cref="P:InSite.Model.CustomerOrder.ShipTo"/>'s <see cref="T:InSite.Model.State"/> matches the rule's <see cref="P:InSite.Model.ShipRuleOrderShippingToState.State"/>
            </summary>
        </member>
        <member name="M:InSite.Model.ShipRuleOrderShippingToState.IsValid(InSite.Model.CustomerOrder,InSite.Model.Customer)">
            <summary>
            Method to validate if the provided <see cref="P:InSite.Model.CustomerOrder.ShipTo"/>'s <see cref="T:InSite.Model.State"/> matches the rule's <see cref="P:InSite.Model.ShipRuleOrderShippingToState.State"/>
            </summary>
            <param name="customerOrder"><see cref="T:InSite.Model.CustomerOrder"/> to validate Rule against</param>
            <param name="customer"> Is not used in this class, but is need to match the interface</param>
            <returns><see cref="T:System.Boolean"/></returns>
        </member>
        <member name="P:InSite.Model.ShipRuleOrderShippingToState.State">
            <summary>
            Get or set State
            </summary>
        </member>
        <member name="T:InSite.Model.ShipRuleOrderSubTotalDoesExceedMinimum">
            <summary>
            <see cref="T:InSite.Model.ShipRule"/> to validate if the provided <see cref="P:InSite.Model.CustomerOrder.OrderSubTotal"/> is greater than or equal to the rule's <see cref="P:InSite.Model.ShipRuleOrderSubTotalDoesExceedMinimum.MinimumAmount"/>
            </summary>
        </member>
        <member name="M:InSite.Model.ShipRuleOrderSubTotalDoesExceedMinimum.IsValid(InSite.Model.CustomerOrder,InSite.Model.Customer)">
            <summary>
            Method to validate if the provided <see cref="P:InSite.Model.CustomerOrder.OrderSubTotal"/> is greater than or equal to the rule's <see cref="P:InSite.Model.ShipRuleOrderSubTotalDoesExceedMinimum.MinimumAmount"/>
            </summary>
            <param name="customerOrder"><see cref="T:InSite.Model.CustomerOrder"/> to validate Rule against</param>
            <param name="customer"> Is not used in this class, but is need to match the interface</param>
            <returns><see cref="T:System.Boolean"/></returns>
        </member>
        <member name="P:InSite.Model.ShipRuleOrderSubTotalDoesExceedMinimum.MinimumAmount">
            <summary>
            Get or set MinimumAmount
            </summary>
        </member>
        <member name="T:InSite.Model.ShipRuleOrderSubTotalDoesNotExceedMaximum">
            <summary>
            <see cref="T:InSite.Model.ShipRule"/> to validate if the provided <see cref="P:InSite.Model.CustomerOrder.OrderSubTotal"/> is not greater than or equal to the rule's <see cref="P:InSite.Model.ShipRuleOrderSubTotalDoesNotExceedMaximum.MaximumAmount"/>
            </summary>
        </member>
        <member name="M:InSite.Model.ShipRuleOrderSubTotalDoesNotExceedMaximum.IsValid(InSite.Model.CustomerOrder,InSite.Model.Customer)">
            <summary>
            Method to validate if the provided <see cref="P:InSite.Model.CustomerOrder.OrderSubTotal"/> is not greater than or equal to the rule's <see cref="P:InSite.Model.ShipRuleOrderSubTotalDoesNotExceedMaximum.MaximumAmount"/>
            </summary>
            <param name="customerOrder"><see cref="T:InSite.Model.CustomerOrder"/> to validate Rule against</param>
            <param name="customer"> Is not used in this class, but is need to match the interface</param>
            <returns><see cref="T:System.Boolean"/></returns>
        </member>
        <member name="P:InSite.Model.ShipRuleOrderSubTotalDoesNotExceedMaximum.MaximumAmount">
            <summary>
            Get or set MaximumAmount
            </summary>
        </member>
        <member name="T:InSite.Model.ShipRuleOrderSubTotalInRange">
            <summary>
            <see cref="T:InSite.Model.ShipRule"/> to validate if the provided <see cref="P:InSite.Model.CustomerOrder.OrderSubTotal"/> is greater than or equal to the rule's <see cref="P:InSite.Model.ShipRuleOrderSubTotalInRange.MinimumAmount"/> and less
            than or equal to <see cref="P:InSite.Model.ShipRuleOrderSubTotalInRange.MaximumAmount"/>
            </summary>
        </member>
        <member name="M:InSite.Model.ShipRuleOrderSubTotalInRange.IsValid(InSite.Model.CustomerOrder,InSite.Model.Customer)">
            <summary>
            Method to validate if the provided <see cref="P:InSite.Model.CustomerOrder.OrderSubTotal"/> is greater than or equal to the rule's <see cref="P:InSite.Model.ShipRuleOrderSubTotalInRange.MinimumAmount"/> and 
            less than or equal to the rule's <see cref="P:InSite.Model.ShipRuleOrderSubTotalInRange.MaximumAmount"/>
            </summary>
            <param name="customerOrder"><see cref="T:InSite.Model.CustomerOrder"/> to validate Rule against</param>
            <param name="customer"> Is not used in this class, but is need to match the interface</param>
            <returns><see cref="T:System.Boolean"/></returns>
        </member>
        <member name="P:InSite.Model.ShipRuleOrderSubTotalInRange.MinimumAmount">
            <summary>
            Get or set MinimumAmount
            </summary>
        </member>
        <member name="P:InSite.Model.ShipRuleOrderSubTotalInRange.MaximumAmount">
            <summary>
            Get or set MaximumAmount
            </summary>
        </member>
        <member name="T:InSite.Model.ShipRuleOrderWeightInRange">
            <summary>
            <see cref="T:InSite.Model.ShipRule"/> to validate if the provided <see cref="P:InSite.Model.CustomerOrder.TotalWeight"/> is greater than or equal to the rule's <see cref="P:InSite.Model.ShipRuleOrderWeightInRange.MinimumAmount"/> and less
            than or equal to <see cref="P:InSite.Model.ShipRuleOrderWeightInRange.MaximumAmount"/>
            </summary>
        </member>
        <member name="M:InSite.Model.ShipRuleOrderWeightInRange.IsValid(InSite.Model.CustomerOrder,InSite.Model.Customer)">
            <summary>
            Method to validate if the provided <see cref="P:InSite.Model.CustomerOrder.TotalWeight"/> is greater than or equal to the rule's <see cref="P:InSite.Model.ShipRuleOrderWeightInRange.MinimumAmount"/> and 
            less than or equal to the rule's <see cref="P:InSite.Model.ShipRuleOrderWeightInRange.MaximumAmount"/>
            </summary>
            <param name="customerOrder"><see cref="T:InSite.Model.CustomerOrder"/> to validate Rule against</param>
            <param name="customer"> Is not used in this class, but is need to match the interface</param>
            <returns><see cref="T:System.Boolean"/></returns>
        </member>
        <member name="P:InSite.Model.ShipRuleOrderWeightInRange.MinimumAmount">
            <summary>
            Get or set MinimumAmount
            </summary>
        </member>
        <member name="P:InSite.Model.ShipRuleOrderWeightInRange.MaximumAmount">
            <summary>
            Get or set MaximumAmount
            </summary>
        </member>
        <member name="P:InSite.Model.Specification.NameDisplay">
            <summary>
            Display text for Name (supports translation)
            </summary>
        </member>
        <member name="P:InSite.Model.Specification.HtmlContent">
            <summary>Gets ContentManager.CurrentContent.HtmlContent, standard field for Content Management used throughout the system</summary>
        </member>
        <member name="P:InSite.Model.Specification.ContentManager">
            <summary>The ContentManager manages the Content</summary>
        </member>
        <member name="M:InSite.Model.Promotion.IsValid">
            <summary>
            Deprecate
            </summary>
            <returns></returns>
        </member>
        <member name="M:InSite.Model.Promotion.IsValid(System.String)">
            <summary>
            Deprecate
            </summary>
            <param name="promoCode"></param>
            <returns></returns>
        </member>
        <member name="M:InSite.Model.Promotion.GetAppliedAmount(InSite.Model.CustomerOrder)">
            <summary>
            Returns the dollar amount that was applied to an order for an individual promotion.
            </summary>
            <param name="customerOrder">The order the promotion was applied to</param>
            <returns>The dollar amount that was applied to an order for an individual promotion</returns>
        </member>
        <member name="P:InSite.Model.Promotion.DiscountAmount">
            <summary>
            Deprecate
            </summary>
        </member>
        <member name="P:InSite.Model.Promotion.IsPercentage">
            <summary>
            Deprecate
            </summary>
        </member>
        <member name="P:InSite.Model.Promotion.IsFreight">
            <summary>
            Deprecate
            </summary>
        </member>
        <member name="P:InSite.Model.Promotion.IsAutomatic">
            <summary>
            Deprecate
            </summary>
        </member>
        <member name="M:InSite.Model.Salesperson.SetParentSalesperson(System.String)">
            <summary>
            Set this Salesperson's ParentSalesperson to the passed in salesperson number.
            </summary>
            <param name="salespersonNumber"></param>
            <remarks>
            </remarks>
        </member>
        <member name="T:InSite.Model.Shipment">
            <summary>
            Represents a Shipment for a <see cref="T:InSite.Model.CustomerOrder"/>
            </summary>
        </member>
        <member name="M:InSite.Model.Shipment.AddShipmentPackage(InSite.Model.ShipmentPackage)">
            <summary>
            Method to add a <see cref="T:InSite.Model.ShipmentPackage"/> to the <see cref="P:InSite.Model.Shipment.ShipmentPackages"/>
            </summary>
            <param name="value"><see cref="T:InSite.Model.ShipmentPackage"/> to be added the <see cref="P:InSite.Model.Shipment.ShipmentPackages"/> collection</param>
            <remarks>
            if the <see cref="P:InSite.Model.Shipment.ShipmentPackages"/> collection does not contain the provided <see cref="T:InSite.Model.ShipmentPackage"/> add it to the <see cref="P:InSite.Model.Shipment.ShipmentPackages"/> collection else do nothing
            </remarks>
        </member>
        <member name="M:InSite.Model.Shipment.RemoveShipmentPackage(InSite.Model.ShipmentPackage)">
            <summary>
            Method to remove a <see cref="T:InSite.Model.ShipmentPackage"/> from the <see cref="P:InSite.Model.Shipment.ShipmentPackages"/> collection
            </summary>
            <param name="value"><see cref="T:InSite.Model.ShipmentPackage"/> to remove from the <see cref="P:InSite.Model.Shipment.ShipmentPackages"/> collection</param>
            <remarks>
            if the <see cref="P:InSite.Model.Shipment.ShipmentPackages"/> collection contains the provided <see cref="T:InSite.Model.ShipmentPackage"/> remove from the <see cref="P:InSite.Model.Shipment.ShipmentPackages"/> collection else do nothing
            </remarks>
        </member>
        <member name="P:InSite.Model.Shipment.ShipmentNumber">
            <summary>
            Get or set ShipmentNumber
            </summary>
        </member>
        <member name="P:InSite.Model.Shipment.WebOrderNumber">
            <summary>
            Get or set WebOrderNumber
            </summary>
        </member>
        <member name="P:InSite.Model.Shipment.ERPOrderNumber">
            <summary>
            Get or set ErpOrderNumber
            </summary>
        </member>
        <member name="P:InSite.Model.Shipment.ShipmentDate">
            <summary>
            Get or set ShipmentDate
            </summary>
        </member>
        <member name="P:InSite.Model.Shipment.EmailSentDate">
            <summary>
            Gets or sets the email sent date.
            </summary>
        </member>
        <member name="P:InSite.Model.Shipment.AsnSentDate">
            <summary>
            Get or set ASN sent date
            </summary>
        </member>
        <member name="P:InSite.Model.Shipment.ShipmentPackages">
            <summary>
            Get or set ShipmentPackages collection
            </summary>
            <remarks>
            <see cref="P:InSite.Model.Shipment.ShipmentPackages"/> collection represents multiples packages shipped for this shipment
            </remarks>
        </member>
        <member name="T:InSite.Model.ShipmentPackage">
            <summary>
            Represents 1 to many <see cref="T:InSite.Model.ShipmentPackage"/> for a <see cref="P:InSite.Model.ShipmentPackage.Shipment"/>
            </summary>
        </member>
        <member name="M:InSite.Model.ShipmentPackage.AddShipmentPackageLine(InSite.Model.ShipmentPackageLine)">
            <summary>
            Method to add a <see cref="T:InSite.Model.ShipmentPackageLine"/> to the <see cref="P:InSite.Model.ShipmentPackage.ShipmentPackageLines"/> collection
            </summary>
            <param name="value"><see cref="T:InSite.Model.ShipmentPackageLine"/> to add to the <see cref="P:InSite.Model.ShipmentPackage.ShipmentPackageLines"/> collection</param>
            <remarks>
            Adds <see cref="T:InSite.Model.ShipmentPackageLine"/> to the <see cref="P:InSite.Model.ShipmentPackage.ShipmentPackageLines"/> collection if the <see cref="P:InSite.Model.ShipmentPackage.ShipmentPackageLines"/> collection does not contain the provided <see cref="T:InSite.Model.ShipmentPackageLine"/>
            </remarks>
        </member>
        <member name="M:InSite.Model.ShipmentPackage.RemoveShipmentPackageLine(InSite.Model.ShipmentPackageLine)">
            <summary>
            Method to remove a <see cref="T:InSite.Model.ShipmentPackageLine"/> to the <see cref="P:InSite.Model.ShipmentPackage.ShipmentPackageLines"/> collection
            </summary>
            <param name="value"><see cref="T:InSite.Model.ShipmentPackageLine"/> to remove from the <see cref="P:InSite.Model.ShipmentPackage.ShipmentPackageLines"/> collection</param>
            <remarks>
            Removes <see cref="T:InSite.Model.ShipmentPackageLine"/> to the <see cref="P:InSite.Model.ShipmentPackage.ShipmentPackageLines"/> collection if the <see cref="P:InSite.Model.ShipmentPackage.ShipmentPackageLines"/> collection does contains the provided <see cref="T:InSite.Model.ShipmentPackageLine"/>
            </remarks>
        </member>
        <member name="P:InSite.Model.ShipmentPackage.PackageNumber">
            <summary>
            Get or set PackageNumber
            </summary>
        </member>
        <member name="P:InSite.Model.ShipmentPackage.Carrier">
            <summary>
            Get or set the Carrier that this <see cref="T:InSite.Model.ShipmentPackage"/> was shipped from
            </summary>
        </member>
        <member name="P:InSite.Model.ShipmentPackage.ShipVia">
            <summary>
            Gets or set the ShipVia that this <see cref="T:InSite.Model.ShipmentPackage"/> was shipped from
            </summary>
        </member>
        <member name="P:InSite.Model.ShipmentPackage.TrackingNumber">
            <summary>
            Get or set the TrackingNumber for the <see cref="T:InSite.Model.ShipmentPackage"/>
            </summary>
        </member>
        <member name="P:InSite.Model.ShipmentPackage.TrackingURL">
            <summary>
            Gets TrackinUrl
            </summary>
            <remarks>
            if the <see cref="T:InSite.Model.ApplicationSetting"/> TrackingUrl_UseCustomUrls is set to false, it will provided an Html link build for the <see cref="P:InSite.Model.ShipmentPackage.Carrier"/> assigned to this <see cref="T:InSite.Model.ShipmentPackage"/> 
            it will return formatted a hrefs for the Carriers if they match ups, fedex, spd, dhl, oldd otherwise it will return the <see cref="P:InSite.Model.ShipmentPackage.TrackingNumber"/>
            if the <see cref="T:InSite.Model.ApplicationSetting"/> TrackingUrl_UseCustomUrls is set to true we look for the <see cref="T:InSite.Model.ApplicationSetting"/> "TrackingUrl_" + this.Carrier and token substitute "[trackingnumber]" for <see cref="P:InSite.Model.ShipmentPackage.TrackingNumber"/>
            </remarks>
        </member>
        <member name="P:InSite.Model.ShipmentPackage.Freight">
            <summary>
            Gets or sets the Freight Charge for the <see cref="T:InSite.Model.ShipmentPackage"/>
            </summary>
        </member>
        <member name="P:InSite.Model.ShipmentPackage.Shipment">
            <summary>
            Gets or sets the Parent <see cref="P:InSite.Model.ShipmentPackage.Shipment"/> that this <see cref="T:InSite.Model.ShipmentPackage"/> belongs to
            </summary>
        </member>
        <member name="P:InSite.Model.ShipmentPackage.ShipmentPackageLines">
            <summary>
            Gets or sets the collection of <see cref="T:InSite.Model.ShipmentPackageLine"/>
            </summary>
        </member>
        <member name="T:InSite.Model.ShippingClassification">
            <summary>
            Represents a Shipping Classification
            </summary>
        </member>
        <member name="P:InSite.Model.ShippingClassification.Name">
            <summary>
            Gets or sets the Name
            </summary>
        </member>
        <member name="P:InSite.Model.ShippingClassification.Classification">
            <summary>
            Gets or sets the Classification
            </summary>
        </member>
        <member name="P:InSite.Model.ShippingClassification.Description">
            <summary>
            Gets or sets the Description
            </summary>
        </member>
        <member name="T:InSite.Model.ShipRate">
            <summary>
            Represents a <see cref="T:InSite.Model.ShipRate"/> for a Parent <see cref="P:InSite.Model.ShipRate.ShipVia"/>
            </summary>
        </member>
        <member name="P:InSite.Model.ShipRate.ShipVia">
            <summary>
            Get or Set the Parent <see cref="P:InSite.Model.ShipRate.ShipVia"/>
            </summary>
        </member>
        <member name="P:InSite.Model.ShipRate.OrderAmount">
            <summary>
            Get or set OrderAmount
            </summary>
        </member>
        <member name="P:InSite.Model.ShipRate.ChargeAmount">
            <summary>
            Get or set ChargeAmount
            </summary>
        </member>
        <member name="P:InSite.Model.ShipRate.PerEach">
            <summary>
            Get or set PerEach
            </summary>
            <remarks>
            Whether the shiprate qualifies for the ordertotal or whether the shiprate for the <see cref="T:InSite.Model.CustomerOrder"/> with qtyOrdered * <see cref="P:InSite.Model.ShipRate.ChargeAmount"/>
            </remarks>
        </member>
        <member name="T:InSite.Model.ShipVia">
            <summary>
            Represents a Shipping Method for the Parent <see cref="P:InSite.Model.ShipVia.Carrier"/>
            </summary>
        </member>
        <member name="M:InSite.Model.ShipVia.AddShipRate(InSite.Model.ShipRate)">
            <summary>
            Method to add a <see cref="T:InSite.Model.ShipRate"/> to the <see cref="P:InSite.Model.ShipVia.ShipRates"/> collection
            </summary>
            <param name="value"><see cref="T:InSite.Model.ShipRate"/> to be added to the <see cref="P:InSite.Model.ShipVia.ShipRates"/> collection</param>
            <remarks>
            Add <see cref="T:InSite.Model.ShipRate"/> to <see cref="P:InSite.Model.ShipVia.ShipRates"/> collection if the <see cref="P:InSite.Model.ShipVia.ShipRates"/> collection does not contain the provided <see cref="T:InSite.Model.ShipRate"/>
            </remarks>
        </member>
        <member name="M:InSite.Model.ShipVia.RemoveShipRate(InSite.Model.ShipRate)">
            <summary>
            Method to remove <see cref="T:InSite.Model.ShipRate"/> from <see cref="P:InSite.Model.ShipVia.ShipRates"/> collection
            </summary>
            <param name="value"><see cref="T:InSite.Model.ShipRate"/> to remove from <see cref="P:InSite.Model.ShipVia.ShipRates"/> collection</param>
            <remarks>
            Remove the provided <see cref="T:InSite.Model.ShipRate"/> from the <see cref="P:InSite.Model.ShipVia.ShipRates"/> collection if the <see cref="P:InSite.Model.ShipVia.ShipRates"/> collection contains the provided <see cref="T:InSite.Model.ShipRate"/> else do nothing
            </remarks>
        </member>
        <member name="M:InSite.Model.ShipVia.GetShipRate(System.Decimal,System.Decimal)">
            <summary>
            Method to return the appropiate charge for the <see cref="T:InSite.Model.ShipVia"/>
            </summary>
            <param name="quantity">Quantity ordered</param>
            <param name="amount">Order Total of <see cref="T:InSite.Model.CustomerOrder"/></param>
            <returns><see cref="T:System.Decimal"/>Shipping Charge for the <see cref="T:InSite.Model.CustomerOrder"/></returns>
            <remarks>
            if the provided amount or quantity is less than 0 return 0 else
            It will find the appropriate <see cref="T:InSite.Model.ShipRate"/> in the <see cref="P:InSite.Model.ShipVia.ShipRates"/> collection.  If it finds a <see cref="T:InSite.Model.ShipRate"/> it will return the ChargeAmount if the <see cref="P:InSite.Model.ShipRate.PerEach"/> 
            is false, if the <see cref="P:InSite.Model.ShipRate.PerEach"/> is set to true we will return the <see cref="P:InSite.Model.ShipRate.ChargeAmount"/> * the quantity provided.
            If there are no valid ShipRates an Exception will be thrown
            </remarks>
            <exception cref="T:System.Exception">Exception thrown if there are no <see cref="T:InSite.Model.ShipRate"/>'s in the <see cref="P:InSite.Model.ShipVia.ShipRates"/> collection</exception>
        </member>
        <member name="M:InSite.Model.ShipVia.AddShipRule(InSite.Model.ShipRule)">
            <summary>
            Method to add a <see cref="T:InSite.Model.ShipRule"/> to the <see cref="T:InSite.Model.ShipVia"/>'s <see cref="P:InSite.Model.ShipVia.ShipRules"/> collection
            </summary>
            <param name="value"><see cref="T:InSite.Model.ShipRule"/> to add to the <see cref="P:InSite.Model.ShipVia.ShipRules"/> collection</param>
            <remarks>
            Add provided <see cref="T:InSite.Model.ShipRule"/> to the <see cref="P:InSite.Model.ShipVia.ShipRules"/> collection if the <see cref="P:InSite.Model.ShipVia.ShipRules"/> collection does not contain the provided <see cref="T:InSite.Model.ShipRule"/>
            </remarks>
        </member>
        <member name="M:InSite.Model.ShipVia.RemoveShipRule(InSite.Model.ShipRule)">
            <summary>
            Method to remove a <see cref="T:InSite.Model.ShipRule"/> from the <see cref="T:InSite.Model.ShipVia"/>'s <see cref="P:InSite.Model.ShipVia.ShipRules"/> collection
            </summary>
            <param name="value"><see cref="T:InSite.Model.ShipRule"/> to remove from the <see cref="P:InSite.Model.ShipVia.ShipRules"/> collection</param>
            <remarks>
            Remove provided <see cref="T:InSite.Model.ShipRule"/> from the <see cref="P:InSite.Model.ShipVia.ShipRules"/> collection if the <see cref="P:InSite.Model.ShipVia.ShipRules"/> collection contains the provided <see cref="T:InSite.Model.ShipRule"/> else do nothing
            </remarks>
        </member>
        <member name="M:InSite.Model.ShipVia.IsValid(InSite.Model.CustomerOrder)">
            <summary>
            Method to validate if this <see cref="T:InSite.Model.ShipVia"/> can be used for the provided <see cref="T:InSite.Model.CustomerOrder"/>
            </summary>
            <param name="customerOrder">to validate <see cref="T:InSite.Model.ShipVia"/> with</param>
            <returns><see cref="T:System.Boolean"/></returns>
            <remarks>
            This will check if the <see cref="P:InSite.Model.ShipVia.Enable"/> is true and will validate that all <see cref="P:InSite.Model.ShipVia.ShipRules"/> validate to true
            </remarks>
        </member>
        <member name="M:InSite.Model.ShipVia.GetAmount(System.Decimal)">
            <summary>
            Method to return the Amount to Charge
            </summary>
            <param name="amount">Amount to get shipping for</param>
            <returns><see cref="T:System.Decimal"/></returns>
        </member>
        <member name="M:InSite.Model.ShipVia.AddShipCharge(InSite.Model.ShipCharge)">
            <summary>
            Method to add <see cref="T:InSite.Model.ShipCharge"/> to <see cref="T:InSite.Model.ShipVia"/>'s <see cref="P:InSite.Model.ShipVia.ShipCharges"/> collection
            </summary>
            <param name="value"><see cref="T:InSite.Model.ShipCharge"/> to add to the <see cref="P:InSite.Model.ShipVia.ShipCharges"/> collection
            </param>
            <remarks>
            Add provided <see cref="T:InSite.Model.ShipCharge"/> to the <see cref="P:InSite.Model.ShipVia.ShipCharges"/> collection if the <see cref="P:InSite.Model.ShipVia.ShipCharges"/> collection does not contain the provided <see cref="T:InSite.Model.ShipCharge"/>
            </remarks>
        </member>
        <member name="M:InSite.Model.ShipVia.RemoveShipCharge(InSite.Model.ShipCharge)">
            <summary>
            Method to remove <see cref="T:InSite.Model.ShipCharge"/> from the <see cref="T:InSite.Model.ShipVia"/>'s <see cref="P:InSite.Model.ShipVia.ShipCharges"/> collection
            </summary>
            <param name="value"><see cref="T:InSite.Model.ShipCharge"/> to remove from the <see cref="P:InSite.Model.ShipVia.ShipCharges"/> collection</param>
            <remarks>
            Remove provided <see cref="T:InSite.Model.ShipCharge"/> from the <see cref="P:InSite.Model.ShipVia.ShipCharges"/> collection if the <see cref="P:InSite.Model.ShipVia.ShipCharges"/> collection contains the provided <see cref="T:InSite.Model.ShipCharge"/>
            </remarks>
        </member>
        <member name="P:InSite.Model.ShipVia.ShipCode">
            <summary>
            Get or set ShipCode
            </summary>
        </member>
        <member name="P:InSite.Model.ShipVia.Description">
            <summary>
            Get ot set Description
            </summary>
        </member>
        <member name="P:InSite.Model.ShipVia.ActivateOn">
            <summary>
            Get or set ActivateOn
            </summary>
        </member>
        <member name="P:InSite.Model.ShipVia.DeactivateOn">
            <summary>
            Get or set DeactivateOn
            </summary>
        </member>
        <member name="P:InSite.Model.ShipVia.Enable">
            <summary>
            Get or set Enable
            </summary>
        </member>
        <member name="P:InSite.Model.ShipVia.ErpShipCode">
            <summary>
            Get or set ErpShipCode
            </summary>
            <remarks>Represents ShipCode for Erp/Client Integration</remarks>
        </member>
        <member name="P:InSite.Model.ShipVia.Carrier">
            <summary>
            Get or set Parent <see cref="P:InSite.Model.ShipVia.Carrier"/>
            </summary>
        </member>
        <member name="P:InSite.Model.ShipVia.CarrierName">
            <summary>
            Get CarrierName
            </summary>
            <remarks>
            returns <see cref="P:InSite.Model.Carrier.Name"/> if <see cref="P:InSite.Model.ShipVia.Carrier"/> is not null else returns <see cref="F:System.String.Empty"/>
            </remarks>
        </member>
        <member name="P:InSite.Model.ShipVia.CarrierNameShipCodeDescription">
            <summary>
            Get CarrierNameShipCodeDescription
            </summary>
            <remarks>returns <see cref="P:InSite.Model.ShipVia.CarrierName"/>:<see cref="P:InSite.Model.ShipVia.ShipCode"/>:<see cref="P:InSite.Model.ShipVia.Description"/></remarks>
        </member>
        <member name="P:InSite.Model.ShipVia.ChargeAmount">
            <summary>
            Get ChargeAmount
            </summary>
        </member>
        <member name="P:InSite.Model.ShipVia.FlatFee">
            <summary>
            Get FlatFee
            </summary>
        </member>
        <member name="P:InSite.Model.ShipVia.MinimumFee">
            <summary>
            Get MinimumFee
            </summary>
            <remarks>The minimum charge this <see cref="T:InSite.Model.ShipVia"/> will allow</remarks>
        </member>
        <member name="P:InSite.Model.ShipVia.IsDefault">
            <summary>
            Get or set IsDefault
            </summary>
            <remarks>Default ShipVia for the Parent <see cref="P:InSite.Model.ShipVia.Carrier"/></remarks>
        </member>
        <member name="P:InSite.Model.ShipVia.ShipChargeAmount">
            <summary>
            Get ShipChargeAmount
            </summary>
            <remarks>
            The ShipChargeAmount will be the <see cref="P:InSite.Model.Carrier.ShipChargeAmount"/> + summing all the <see cref="P:InSite.Model.ShipVia.ShipCharges"/> for this <see cref="T:InSite.Model.ShipVia"/>
            </remarks>
        </member>
        <member name="P:InSite.Model.ShipVia.AllowScheduledShipDate">
            <summary>
            Get or set AllowScheduledShipDate
            </summary>
        </member>
        <member name="P:InSite.Model.ShipVia.ShipRates">
            <summary>
            Get or set the <see cref="P:InSite.Model.ShipVia.ShipRates"/> collection
            </summary>
        </member>
        <member name="P:InSite.Model.ShipVia.ShipRules">
            <summary>
            Gets/Sets a collection of Shipping Rules that the Shipping Engine will use
            to Validate whether the shipvia can be used for the order
            </summary>
        </member>
        <member name="P:InSite.Model.ShipVia.ShipCharges">
            <summary>
            Get or set the <see cref="P:InSite.Model.ShipVia.ShipCharges"/> collection
            </summary>
        </member>
        <member name="T:InSite.Model.StyleProductInfo">
            <summary>
            A simplified view of the Product Object
            </summary>
        </member>
        <member name="P:InSite.Model.StyleProductInfo.UrlSegment">
            <summary>Product identifier used in url of product detail page</summary>
        </member>
        <member name="P:InSite.Model.StyleTrait.NameDisplay">
            <summary>
            Display text for this StyleTrait (supports translation)
            </summary>
        </member>
        <member name="P:InSite.Model.StyleTraitValue.ValueDisplay">
            <summary>
            Display text for this StyleTraitValue (supports translation)
            </summary>
        </member>
        <member name="P:InSite.Model.TaxExemption.Amount">
            <summary>
            Maximum Product Price for Product to Qualify for Exemption
            If null, there is no Maximum
            </summary>
        </member>
        <member name="T:InSite.Model.UserProfile">
            <summary>
            Represents a User inside the application
            </summary>
        </member>
        <member name="M:InSite.Model.UserProfile.ImportRow(System.Data.DataRow)">
            <summary>
            Override standard ImportRow functionality so we can look up by email
            </summary>
            <param name="row"><see cref="T:System.Data.DataRow"/> to be imported as a <see cref="T:InSite.Model.UserProfile"/></param>
            <returns><see cref="T:InSite.Model.UserProfile"/> created or edited from the <see cref="T:System.Data.DataRow"/> provided</returns>
        </member>
        <member name="M:InSite.Model.UserProfile.ImportChildrenXLS(System.Data.DataRow)">
            <summary>
            Imports <see cref="T:InSite.Model.UserProfile"/> children associations as provided by the <see cref="T:System.Data.DataRow"/> input parameter
            </summary>
            <remarks>
            if the column name startswith "customernumber" assign this <see cref="T:InSite.Model.UserProfile"/> to the <see cref="T:InSite.Model.Customer"/>'s provided.
            if the column name startswith "roles" assign this <see cref="T:InSite.Model.UserProfile"/> to the <see cref="T:InSite.Model.Role"/>'s provided.
            if the column name startswith "customproperty", for each column that's key is "customproperty" + int we create a new customerproperty if it does
            not exist. If it exists we update the found record
            </remarks>
            <param name="row"><see cref="T:System.Data.DataRow"/></param>
        </member>
        <member name="M:InSite.Model.UserProfile.AddRole(InSite.Model.Role)">
            <summary>
            Adds <see cref="T:InSite.Model.Role"/> to this <see cref="T:InSite.Model.UserProfile"/> if this <see cref="T:InSite.Model.UserProfile"/> does not contain this <see cref="T:InSite.Model.Role"/>
            </summary>
            <param name="role"><see cref="T:InSite.Model.Role"/> to be added to this <see cref="T:InSite.Model.UserProfile"/></param>
            <remarks>
            Adds <see cref="T:InSite.Model.Role"/> to this <see cref="T:InSite.Model.UserProfile"/> if this <see cref="T:InSite.Model.UserProfile"/> does not contain this <see cref="T:InSite.Model.Role"/>
            </remarks>
        </member>
        <member name="M:InSite.Model.UserProfile.AddRole(System.String)">
            <summary>
            Add <see cref="T:InSite.Model.Role"/> to this <see cref="T:InSite.Model.UserProfile"/>
            </summary>
            <param name="roleName">to be added to this <see cref="T:InSite.Model.UserProfile"/></param>
            <exception cref="T:System.Exception">thrown if the underlying aspnet membership role provider does not contain this role</exception>
            <remarks>
            Add <see cref="T:InSite.Model.Role"/> to this <see cref="T:InSite.Model.UserProfile"/> if the <see cref="T:InSite.Model.Role"/> exists in the underlying aspnet membership role provider
            </remarks>
        </member>
        <member name="M:InSite.Model.UserProfile.RemoveRole(InSite.Model.Role)">
            <summary>
            Removes <see cref="T:InSite.Model.Role"/> from this <see cref="T:InSite.Model.UserProfile"/>
            </summary>
            <param name="role"><see cref="T:InSite.Model.Role"/> to be removed from this <see cref="T:InSite.Model.UserProfile"/></param>
        </member>
        <member name="M:InSite.Model.UserProfile.AddCustomer(InSite.Model.Customer)">
            <summary>
            Add <see cref="T:InSite.Model.Customer"/> to this <see cref="T:InSite.Model.UserProfile"/>
            </summary>
            <param name="value"><see cref="T:InSite.Model.Customer"/> to add to this <see cref="T:InSite.Model.UserProfile"/></param>
            <remarks>
            Add <see cref="T:InSite.Model.Customer"/> to this <see cref="T:InSite.Model.UserProfile"/>.  If the User allready has this <see cref="T:InSite.Model.Customer"/> exit gracefully.  
            </remarks>
        </member>
        <member name="M:InSite.Model.UserProfile.RemoveCustomer(InSite.Model.Customer)">
            <summary>
            Removes the <see cref="T:InSite.Model.Customer"/> from this <see cref="T:InSite.Model.UserProfile"/>
            </summary>
            <param name="value"><see cref="T:InSite.Model.Customer"/> to remove from this <see cref="T:InSite.Model.UserProfile"/></param>
            <remarks>Removes the <see cref="T:InSite.Model.Customer"/> from this <see cref="T:InSite.Model.UserProfile"/> if this <see cref="T:InSite.Model.UserProfile"/> has the provided 
            <see cref="T:InSite.Model.Customer"/> else exit gracefully
            </remarks>
        </member>
        <member name="M:InSite.Model.UserProfile.AddCustomerInfo(InSite.Model.CustomerInfo)">
            <summary>
            Add <see cref="T:InSite.Model.CustomerInfo"/> to this <see cref="T:InSite.Model.UserProfile"/>
            </summary>
            <param name="value"><see cref="T:InSite.Model.CustomerInfo"/> to add to this <see cref="T:InSite.Model.UserProfile"/></param>
            <remarks>
            Add <see cref="T:InSite.Model.CustomerInfo"/> to this <see cref="T:InSite.Model.UserProfile"/>.  If the User already has this <see cref="T:InSite.Model.CustomerInfo"/> exit gracefully.  
            </remarks>
        </member>
        <member name="M:InSite.Model.UserProfile.AddCustomerInfoWithoutCheck(InSite.Model.CustomerInfo)">
            <summary>
            Add <see cref="T:InSite.Model.CustomerInfo"/> to this <see cref="T:InSite.Model.UserProfile"/>
            </summary>
            <param name="value"><see cref="T:InSite.Model.CustomerInfo"/> to add to this <see cref="T:InSite.Model.UserProfile"/></param>
            <remarks>
            Add <see cref="T:InSite.Model.CustomerInfo"/> to this <see cref="T:InSite.Model.UserProfile"/>.  If the User already has this <see cref="T:InSite.Model.CustomerInfo"/> exit gracefully.  
            </remarks>
        </member>
        <member name="M:InSite.Model.UserProfile.RemoveCustomerInfo(InSite.Model.CustomerInfo)">
            <summary>
            Removes the <see cref="T:InSite.Model.CustomerInfo"/> from this <see cref="T:InSite.Model.UserProfile"/>
            </summary>
            <param name="value"><see cref="T:InSite.Model.CustomerInfo"/> to remove from this <see cref="T:InSite.Model.UserProfile"/></param>
            <remarks>Removes the <see cref="T:InSite.Model.CustomerInfo"/> from this <see cref="T:InSite.Model.UserProfile"/> if this <see cref="T:InSite.Model.UserProfile"/> has the provided 
            <see cref="T:InSite.Model.CustomerInfo"/> else exit gracefully
            </remarks>
        </member>
        <member name="M:InSite.Model.UserProfile.RemoveCustomerInfoWithoutCheck(InSite.Model.CustomerInfo)">
            <summary>
            Removes the <see cref="T:InSite.Model.CustomerInfo"/> from this <see cref="T:InSite.Model.UserProfile"/>
            </summary>
            <param name="value"><see cref="T:InSite.Model.CustomerInfo"/> to remove from this <see cref="T:InSite.Model.UserProfile"/></param>
            <remarks>Removes the <see cref="T:InSite.Model.CustomerInfo"/> from this <see cref="T:InSite.Model.UserProfile"/> if this <see cref="T:InSite.Model.UserProfile"/> has the provided 
            <see cref="T:InSite.Model.CustomerInfo"/> else exit gracefully
            </remarks>
        </member>
        <member name="M:InSite.Model.UserProfile.AddUserPaymentProfile(InSite.Model.UserPaymentProfile)">
            <summary>
            Adds the user payment profile.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:InSite.Model.UserProfile.RemoveUserPaymentProfile(InSite.Model.UserPaymentProfile)">
            <summary>
            Removes the user payment profile.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:InSite.Model.UserProfile.AddUserProfileProperty(InSite.Model.UserProfileProperty)">
            <summary>
            Add <see cref="T:InSite.Model.UserProfileProperty"/> to this <see cref="T:InSite.Model.UserProfile"/>
            </summary>
            <param name="value"><see cref="T:InSite.Model.UserProfileProperty"/> to add to this <see cref="T:InSite.Model.UserProfile"/></param>
            <remarks>
            Add <see cref="T:InSite.Model.UserProfileProperty"/> to this <see cref="T:InSite.Model.UserProfile"/>.  If the User already has this <see cref="T:InSite.Model.UserProfileProperty"/> exit gracefully.  If the <see cref="T:InSite.Model.UserProfileProperty"/> 
            has an empty <see cref="T:System.Guid"/> Insert <see cref="T:InSite.Model.UserProfileProperty"/> first then assign to this <see cref="T:InSite.Model.UserProfile"/> 
            </remarks>
        </member>
        <member name="M:InSite.Model.UserProfile.RemoveUserProfileProperty(InSite.Model.UserProfileProperty)">
            <summary>
            Removes the <see cref="T:InSite.Model.UserProfileProperty"/> from this <see cref="T:InSite.Model.UserProfile"/>
            </summary>
            <param name="value"><see cref="T:InSite.Model.UserProfileProperty"/> to remove from this <see cref="T:InSite.Model.UserProfile"/></param>
            <remarks>Removes the <see cref="T:InSite.Model.UserProfileProperty"/> from this <see cref="T:InSite.Model.UserProfile"/> if this <see cref="T:InSite.Model.UserProfile"/> has the provided 
            <see cref="T:InSite.Model.UserProfileProperty"/> else exit gracefully
            </remarks>
        </member>
        <member name="M:InSite.Model.UserProfile.AddWishList(InSite.Model.WishList)">
            <summary>
            Add <see cref="T:InSite.Model.WishList"/> to this <see cref="T:InSite.Model.UserProfile"/>
            </summary>
            <param name="value"><see cref="T:InSite.Model.WishList"/> to add to this <see cref="T:InSite.Model.UserProfile"/></param>
            <remarks>
            Add <see cref="T:InSite.Model.WishList"/> to this <see cref="T:InSite.Model.UserProfile"/>.  If the User allready has this <see cref="T:InSite.Model.WishList"/> exit gracefully.  If the <see cref="T:InSite.Model.WishList"/> 
            has an empty <see cref="T:System.Guid"/> Insert <see cref="T:InSite.Model.WishList"/> first then assign to this <see cref="T:InSite.Model.UserProfile"/>
            </remarks>
        </member>
        <member name="M:InSite.Model.UserProfile.RemoveWishList(InSite.Model.WishList)">
            <summary>
            Remove <see cref="T:InSite.Model.WishList"/> from UserProfile
            </summary>
            <param name="value"><see cref="T:InSite.Model.WishList"/> to remove from UserProfile</param>
            <remarks>
            Remove <see cref="T:InSite.Model.WishList"/> from UserProfile if it exists for this User else return gracefully
            </remarks>
        </member>
        <member name="M:InSite.Model.UserProfile.GetUserProfileProperty(System.String,System.String)">
            <summary> Returns <see cref="T:InSite.Model.UserProfileProperty"/> of the given name, creating it with the given value if it was not found </summary>
            <param name="name">The name</param>
            <param name="defaultValue">The default value</param>
        </member>
        <member name="M:InSite.Model.UserProfile.HasRole(System.String)">
            <summary>
            Check to see if user has the provided role
            </summary>
            <param name="roleName">Name of role to check if the user has this role</param>
            <returns><see cref="T:System.Boolean"/></returns>
        </member>
        <member name="M:InSite.Model.UserProfile.GetSalesperson">
            <summary>
            If this UserProfile is a Salesperson, it will return the Salesperson
            </summary>
            <returns><see cref="T:InSite.Model.Salesperson"/> or Null</returns>
            <remarks>If this UserProfile is a Salesperson, it will return the Salesperson else it will return null </remarks>
        </member>
        <member name="M:InSite.Model.UserProfile.SetSalesperson(System.Guid)">
            <summary>
            Set this UserProfile's Salesperson to the passed in salespersonId
            </summary>
            <param name="salespersonId"></param>
            <remarks>
            Set this UserProfile's Salesperson to the passed in salespersonId and make sure no other UserProfile is set to this Salesperson
            </remarks>
        </member>
        <member name="M:InSite.Model.UserProfile.SetSalesperson(System.String)">
            <summary>
            Set this UserProfile's Salesperson to the passed in salespersonNumber
            </summary>
            <param name="salespersonNumber"></param>
            <remarks>
            Set this UserProfile's Salesperson to the passed in salespersonNumber and make sure no other UserProfile is set to this Salesperson
            </remarks>
        </member>
        <member name="M:InSite.Model.UserProfile.AddUserProfilePassword(InSite.Model.UserProfilePassword)">
            <summary>
            Add a Password to the Password History
            </summary>
            <param name="value">The Password to Add</param>
        </member>
        <member name="M:InSite.Model.UserProfile.RemoveUserProfilePassword(InSite.Model.UserProfilePassword)">
            <summary>
            Remove a Password from the Password History
            </summary>
            <param name="value">The Password to Remove</param>
        </member>
        <member name="M:InSite.Model.UserProfile.AddDashboardPanelPosition(InSite.Model.DashboardPanelPosition)">
            <summary>
            Add a <see cref="T:InSite.Model.DashboardPanelPosition"/> to the DashboardPanelPositions collection. If the collection already contains the value it is silently ignored.
            </summary>
            <param name="value">The <see cref="T:InSite.Model.DashboardPanelPosition"/> to be added.</param>
        </member>
        <member name="M:InSite.Model.UserProfile.RemoveDashboardPanelPosition(InSite.Model.DashboardPanelPosition)">
            <summary>
            Remove a <see cref="T:InSite.Model.DashboardPanelPosition"/> from the DashboardPanelPositions collection. If the collection does not contain the value it is silently ignored.
            </summary>
            <param name="value">The <see cref="T:InSite.Model.DashboardPanelPosition"/> to be removed.</param>
        </member>
        <member name="M:InSite.Model.UserProfile.AddMessageStatus(InSite.Model.MessageStatus)">
            <summary>
            Add a <see cref="T:InSite.Model.MessageStatus"/> to the MessageStatuses collection. If the collection already contains the value it is silently ignored.
            </summary>
            <param name="value">The <see cref="T:InSite.Model.MessageStatus"/> to be added.</param>
        </member>
        <member name="M:InSite.Model.UserProfile.RemoveMessageStatus(InSite.Model.MessageStatus)">
            <summary>
            Remove a <see cref="T:InSite.Model.MessageStatus"/> from the MessageStatuses collection. If the collection does not contain the value it is silently ignored.
            </summary>
            <param name="value">The <see cref="T:InSite.Model.MessageStatus"/> to be removed.</param>
        </member>
        <member name="M:InSite.Model.UserProfile.GetProperty(System.String,System.String)">
            <summary>Retrieves the value for the property identified by <paramref name="name"/></summary>
            <param name="name">The name of the property to retrieve</param>
            <param name="defaultValue">The value to use if the property does not exist</param>
        </member>
        <member name="M:InSite.Model.UserProfile.SetProperty(System.String,System.String)">
            <summary>Sets the value for the property identified by <paramref name="name"/></summary>
            <param name="name">The name of the property to retrieve</param>
            <param name="value">The value to set</param>
        </member>
        <member name="P:InSite.Model.UserProfile.Password">
            <summary>
            Get Set Password
            </summary>
            <remarks>Only used to transmit the password up for Excel Imports from the Management Console</remarks>
        </member>
        <member name="P:InSite.Model.UserProfile.Email">
            <summary>
            Get Set Email
            </summary>
        </member>
        <member name="P:InSite.Model.UserProfile.IsLockedOut">
            <summary>
            Get / Set IsLockedOut
            </summary>
        </member>
        <member name="P:InSite.Model.UserProfile.PasswordChangedOn">
            <summary>
            Get LastPasswordChangedDate
            </summary>
        </member>
        <member name="P:InSite.Model.UserProfile.UserName">
            <summary>
            Get /Set User name
            </summary>
        </member>
        <member name="P:InSite.Model.UserProfile.FirstName">
            <summary>
            Get / Set First Name of user
            </summary>
        </member>
        <member name="P:InSite.Model.UserProfile.LastName">
            <summary>
            Get / Set Last name of user
            </summary>
        </member>
        <member name="P:InSite.Model.UserProfile.Phone">
            <summary>
            Get / Set Phone number of user
            </summary>
        </member>
        <member name="P:InSite.Model.UserProfile.Extension">
            <summary>
            Get / Set Phone number extension for user
            </summary>
        </member>
        <member name="P:InSite.Model.UserProfile.Fax">
            <summary>
            Get / Set Fax number for user
            </summary>
        </member>
        <member name="P:InSite.Model.UserProfile.Position">
            <summary>
            Get / Set Users position/job title in company
            </summary>
        </member>
        <member name="P:InSite.Model.UserProfile.Company">
            <summary>
            Get / Set Users company name
            </summary>
        </member>
        <member name="P:InSite.Model.UserProfile.ApplicationName">
            <summary>
            Get / Set ApplicationName
            </summary>
        </member>
        <member name="P:InSite.Model.UserProfile.Language">
            <summary>
            Gets or sets the language.
            </summary>
        </member>
        <member name="P:InSite.Model.UserProfile.LanguageCode">
            <summary>
            Gets or sets the language code (used for the Management Console).
            </summary>
        </member>
        <member name="P:InSite.Model.UserProfile.SubscriptionUser">
            <summary>Get / Set SubscriptionUser</summary>
            <remark>
            If true this user has signed up for an email subscription only and this email should be able to create an account later
            </remark>
        </member>
        <member name="P:InSite.Model.UserProfile.IsGuest">
            <summary>
            Get / Set IsGuest
            </summary>
            <remarks>
            Property to facilitate Guest or Registered User for checkout process
            </remarks>
        </member>
        <member name="P:InSite.Model.UserProfile.IsContentEditor">
            <summary>
            Get IsContentEditor
            </summary>
            <remarks>Returns true if the User has the ISC_ContentEditor Role</remarks>
        </member>
        <member name="P:InSite.Model.UserProfile.IsContentApprover">
            <summary>
            Get IsContentApprover
            </summary>
            <remarks>Returns true if the User has the ISC_ContentApprover Role</remarks>
        </member>
        <member name="P:InSite.Model.UserProfile.DefaultCustomer">
            <summary>
            Optional, indicates the default ship-to that the user belongs to so that, on login, they are immediately placed in that context.
            </summary>
        </member>
        <member name="P:InSite.Model.UserProfile.DashboardIsHomepage">
            <summary>
            Flag indicating if the Dashboard will be used as the homepage after a user logs in.
            </summary>
        </member>
        <member name="P:InSite.Model.UserProfile.IsPasswordChangeRequired">
            <summary>
            Flag indicating if the user needs to change their password at the next login.
            </summary>
        </member>
        <member name="P:InSite.Model.UserProfile.ApproverUserProfile">
            <summary>
            Optional, indicates the user that must approve orders if the order requires approval.
            </summary>
        </member>
        <member name="P:InSite.Model.UserProfile.DefaultCustomerNumber">
            <summary>
            Gives us the name of the default ship to customer.
            </summary>
        </member>
        <member name="P:InSite.Model.UserProfile.ApproverUserProfileName">
            <summary>
            Gives us the username of the approver of this user's orders if the order requires approval.
            </summary>
        </member>
        <member name="P:InSite.Model.UserProfile.LimitExceededNotification">
            <summary>
            Indicates that an email must be sent out if user's purchase limit was exceeded.
            </summary>
        </member>
        <member name="P:InSite.Model.UserProfile.Currency">
            <summary>
            The user’s preferred <see cref="P:InSite.Model.UserProfile.Currency"/>.
            </summary>
        </member>
        <member name="P:InSite.Model.UserProfile.CurrencyCode">
            <summary>
            The user’s preferred <see cref="P:InSite.Model.UserProfile.Currency"/>.CurrencyCode.
            </summary>
        </member>
        <member name="P:InSite.Model.UserProfile.HasRfqUpdates">
            <summary>
            Indicates if the user has messages or updates for RFQ orders.
            </summary>
        </member>
        <member name="P:InSite.Model.UserProfile.Roles">
            <summary>
            Get / Set List of <see cref="T:InSite.Model.Role"/>
            </summary>
            <remarks>
            Get returns <see cref="T:InSite.Model.ChildList`1"></see>/&gt; of <see cref="T:InSite.Model.Role"/>s to prevent direct manipulation of list and list items and enforces using the Model objects methods for List manipulation
            Set - sets List and update dates the underlying role provider
            </remarks>
        </member>
        <member name="P:InSite.Model.UserProfile.UserPaymentProfiles">
            <summary>
            Gets or sets the user payment profiles.
            </summary>
        </member>
        <member name="P:InSite.Model.UserProfile.Customers">
            <summary>
            Get / Set a List of <see cref="T:InSite.Model.Customer"/>
            </summary>
            <remarks>
            Get returns <see cref="T:InSite.Model.ChildList`1"/> of <see cref="T:InSite.Model.Customer"/>s to prevent direct manipulation of list and list items and enforces using the Model objects methods for List manipulation.
            Does not reflect WebSite Customer restrictions.
            </remarks>
        </member>
        <member name="P:InSite.Model.UserProfile.CustomerInfos">
            <summary>
            CustomerInfos - Complete list of Customers this User is attached to
            </summary>
            <remarks>
            Get returns <see cref="T:InSite.Model.ChildList`1"/> of <see cref="T:InSite.Model.CustomerInfo"/>s to prevent direct manipulation of list and list items and enforces using the Model objects methods for List manipulation
            </remarks>
        </member>
        <member name="P:InSite.Model.UserProfile.UserProfileProperties">
            <summary>
            Get / Set a List of <see cref="T:InSite.Model.UserProfileProperty"/>
            </summary>
            <remarks>
            Get returns <see cref="T:InSite.Model.ChildList`1"/> of <see cref="T:InSite.Model.UserProfileProperty"/>s to prevent direct manipulation of list and list items and enforces using the Model objects methods for List manipulation
            </remarks>
        </member>
        <member name="P:InSite.Model.UserProfile.WishLists">
            <summary>
            Get / Set a List of <see cref="T:InSite.Model.WishList"/>
            </summary>
            <remarks>
            Get returns <see cref="T:InSite.Model.ChildList`1"/> of <see cref="T:InSite.Model.WishList"/>s to prevent direct manipulation of list and list items and enforces using the Model objects methods for List manipulation
            </remarks>
        </member>
        <member name="P:InSite.Model.UserProfile.UserProfilePasswords">
            <summary>
            The Password History for this User
            </summary>
        </member>
        <member name="P:InSite.Model.UserProfile.DashboardPanelPositions">
            <summary>
            The ChildList{DashboardPanelPosition} for this <see cref="T:InSite.Model.UserProfile"/>
            </summary>
        </member>
        <member name="P:InSite.Model.UserProfile.MessageStatuses">
            <summary>
            The ChildList{MessageStatus} for this <see cref="T:InSite.Model.UserProfile"/>
            </summary>
        </member>
        <member name="P:InSite.Model.UserProfile.SalespersonNumberName">
            <summary>
            Get Set SalespersonNumberName
            </summary>
            <remarks>
            Get returns the <see cref="P:InSite.Model.Salesperson.SalespersonNumberName"/> if this <see cref="T:InSite.Model.UserProfile"/> is assigned a <see cref="T:InSite.Model.Salesperson"/> else return an empty <see cref="F:System.String.Empty"/>
            Set will set the <see cref="T:InSite.Model.Salesperson"/> for this <see cref="T:InSite.Model.UserProfile"/> by splitting the provided string on ":" and will use the 0 index
            </remarks>
        </member>
        <member name="T:InSite.Model.UserProfileProperty">
            <summary>
            Domain Object which represents addition properties for the <see cref="P:InSite.Model.UserProfileProperty.UserProfile"/> that fall outside the scope of the base <see cref="P:InSite.Model.UserProfileProperty.UserProfile"/>
            </summary>
        </member>
        <member name="M:InSite.Model.UserProfileProperty.ToString">
            <summary>
            override ToString()
            </summary>
            <returns><see cref="T:System.String"/></returns>
            <remarks>Override for the ToString() method, returns the Name property</remarks>
        </member>
        <member name="P:InSite.Model.UserProfileProperty.Name">
            <summary>
            Get Set Name
            </summary>
            <remarks>Name property acts as the key in the key value pairing. An <see cref="P:InSite.Model.UserProfileProperty.UserProfile"/> can have as many <see cref="T:InSite.Model.UserProfileProperty"/>'s as you like
            but the Name will be unique to the collection</remarks>
        </member>
        <member name="P:InSite.Model.UserProfileProperty.Value">
            <summary>
            Get Set Value
            </summary>
            <remarks>The value of this <see cref="T:InSite.Model.UserProfileProperty"/></remarks>
        </member>
        <member name="P:InSite.Model.UserProfileProperty.UserProfile">
            <summary>
            Get Set <see cref="P:InSite.Model.UserProfileProperty.UserProfile"/>
            </summary>
            <remarks>Get Set the parent <see cref="P:InSite.Model.UserProfileProperty.UserProfile"/> which contains this <see cref="T:InSite.Model.UserProfileProperty"/> in it's collection of UserProfileProperties</remarks>
        </member>
        <member name="M:InSite.Model.Vendor.GetCustomProperty(System.String)">
            <summary>
            Retrieve an existing CustomProperty
            </summary>
            <param name="name">Name key of property to retrieve.</param>
            <returns>property or null</returns>
        </member>
        <member name="M:InSite.Model.Vendor.AddCustomProperty(InSite.Model.CustomProperty)">
            <summary>Add a CustomProperty to the CustomProperties collection</summary>
            <param name="value">The CustomProperty to add</param>
            <remarks>If the collection already contains the value it is silently ignored</remarks>
        </member>
        <member name="M:InSite.Model.Vendor.RemoveCustomProperty(InSite.Model.CustomProperty)">
            <summary>Remove a CustomeProperty from the  CustomProperties collection</summary>
            <param name="value">The CustomProperty to remove</param>
        </member>
        <member name="M:InSite.Model.Vendor.GetProperty(System.String,System.String)">
            <summary>Retrieves the value for the property identified by <paramref name="name"/></summary>
            <param name="name">The name of the property to retrieve</param>
            <param name="defaultValue">The value to use if the property does not exist</param>
        </member>
        <member name="M:InSite.Model.Vendor.SetProperty(System.String,System.String)">
            <summary>Sets the value for the property identified by <paramref name="name"/></summary>
            <param name="name">The name of the property to retrieve</param>
            <param name="value">The value to set</param>
        </member>
        <member name="M:InSite.Model.Warehouse.GetCustomProperty(System.String)">
            <summary>
            Retrieve an existing CustomProperty
            </summary>
            <param name="name">Name key of property to retrieve.</param>
            <returns>property or null</returns>
        </member>
        <member name="M:InSite.Model.Warehouse.AddCustomProperty(InSite.Model.CustomProperty)">
            <summary>Add a CustomProperty to the CustomProperties collection</summary>
            <param name="value">The CustomProperty to add</param>
            <remarks>If the collection already contains the value it is silently ignored</remarks>
        </member>
        <member name="M:InSite.Model.Warehouse.RemoveCustomProperty(InSite.Model.CustomProperty)">
            <summary>Remove a CustomeProperty from the  CustomProperties collection</summary>
            <param name="value">The CustomProperty to remove</param>
        </member>
        <member name="M:InSite.Model.Warehouse.AddAlternateWarehouse(InSite.Model.Warehouse)">
            <summary>Add a CustomProperty to the CustomProperties collection</summary>
            <param name="value">The CustomProperty to add</param>
            <remarks>If the collection already contains the value it is silently ignored</remarks>
        </member>
        <member name="M:InSite.Model.Warehouse.RemoveAlternateWarehouse(InSite.Model.Warehouse)">
            <summary>Remove a Warehouse from the AlternateWarehouses collection</summary>
            <param name="value">The Warehouse to be removed</param>
            <remarks>If the collection does not contain the value it is silently ignored</remarks>
        </member>
        <member name="M:InSite.Model.Warehouse.GetProperty(System.String,System.String)">
            <summary>Retrieves the value for the property identified by <paramref name="name"/></summary>
            <param name="name">The name of the property to retrieve</param>
            <param name="defaultValue">The value to use if the property does not exist</param>
        </member>
        <member name="M:InSite.Model.Warehouse.SetProperty(System.String,System.String)">
            <summary>Sets the value for the property identified by <paramref name="name"/></summary>
            <param name="name">The name of the property to retrieve</param>
            <param name="value">The value to set</param>
        </member>
        <member name="P:InSite.Model.Warehouse.Name">
            <summary>
            The commonly used unique identifier to the table.
            </summary>
            <remarks>
            Used a key in the CustomerOrder table.
            </remarks>
        </member>
        <member name="P:InSite.Model.Warehouse.ShipSite">
            <summary>
            Free-format reference to parent.
            </summary>
        </member>
        <member name="P:InSite.Model.Warehouse.DeactivateOn">
            <summary>
            Date that the warehouse becomes inactive.
            </summary>
        </member>
        <member name="P:InSite.Model.Warehouse.IsDefaultWarehouse">
            <summary>
            Indicated whether this warehouse will become the default value on new orders to establish an inventory availability
            </summary>
        </member>
        <member name="P:InSite.Model.Warehouse.AlternateWarehouses">
            <summary>
            Alternate warehouses to this warehouse.
            </summary>
        </member>
        <member name="P:InSite.Model.Warehouse.CustomProperties">
            <summary>
            Generic custom properties storage area
            </summary>
        </member>
        <member name="P:InSite.Model.Warehouse.ProductWarehouses">
            <summary>
            Product associations for this warehouse
            </summary>
        </member>
        <member name="M:InSite.Model.WebPage.Copy(InSite.Model.WebSite)">
            <summary>
            Makes a copy of this web page including all child content.
            </summary>
            <param name="website">Website to set on the copy.</param>
            <returns>WebPage copy.</returns>
        </member>
        <member name="P:InSite.Model.WebPage.Inherit">
            <summary>
            Inherit all properties of this webpage from the parent website.
            </summary>
        </member>
        <member name="P:InSite.Model.WebPage.HtmlContent">
            <summary>Gets ContentManager.CurrentContent.HtmlContent, standard field for Content Management used throughout the system</summary>
            <remarks>If the content is empty and there is parent website with a page with the same name, the content from parent website will be returned.</remarks>
        </member>
        <member name="P:InSite.Model.WebPage.ContentManager">
            <summary>The ContentManager manages the Content</summary>
        </member>
        <member name="T:InSite.Model.WebSite">
            <summary>
            The WebSite is where individual WebSites of the system are stored and configured.
            </summary>
        </member>
        <member name="M:InSite.Model.WebSite.GetByName(System.String)">
            <summary>
            Returns a WebSite by Name, if not found throws WebSiteNotFoundException
            </summary>
            <param name="name">WebSite Name</param>
            <returns>WebSite or throws WebSiteNotFoundException</returns>
        </member>
        <member name="M:InSite.Model.WebSite.GetByDomain(System.String)">
            <summary>
            Gets a WebSite by Domain, if not found throws WebSiteForDomainNotFoundException
            </summary>
            <param name="domainName">Domain Name</param>
            <returns>WebSite or throws WebSiteForDomainNotFoundException</returns>
        </member>
        <member name="M:InSite.Model.WebSite.AddWebPage(InSite.Model.WebPage)">
            <summary>
            Add a <see cref="T:InSite.Model.WebPage"/> to the WebSite's <see cref="P:InSite.Model.WebSite.WebPages"/> list and insert the <see cref="T:InSite.Model.WebPage"/> into the database
            if it doesn't exist.
            </summary>
            <param name="value">The <see cref="T:InSite.Model.WebPage"/> to add</param>
            <remarks>The method will return if the <see cref="T:InSite.Model.WebPage"/> being added is already a part of of the <see cref="P:InSite.Model.WebSite.WebPages"/> list.
            The WebSite property of the <see cref="T:InSite.Model.WebPage"/> is set to this WebSite, the <see cref="T:InSite.Model.WebPage"/> is added to the <see cref="P:InSite.Model.WebSite.WebPages"/>
            list.  If the <see cref="T:InSite.Model.WebPage"/> being added has a GUID Id set, it will be inserted into the WebPage table if it does not exist.</remarks>
        </member>
        <member name="M:InSite.Model.WebSite.RemoveWebPage(InSite.Model.WebPage)">
            <summary>
            Remove a <see cref="T:InSite.Model.WebPage"/> from the WebSite's <see cref="P:InSite.Model.WebSite.WebPages"/> list
            </summary>
            <param name="value">The <see cref="T:InSite.Model.WebPage"/> to remove from the WebSite's <see cref="P:InSite.Model.WebSite.WebPages"/> list</param>
        </member>
        <member name="M:InSite.Model.WebSite.GetWebPage(System.String,System.Boolean)">
            <summary>
            Get a <see cref="T:InSite.Model.WebPage"/> from the WebSite's <see cref="P:InSite.Model.WebSite.WebPages"/> list 
            </summary>
            <param name="pageName">Name of the <see cref="T:InSite.Model.WebPage"/> to get</param>
            <param name="errorOnNotFound">Specify whether to throw an Exception if page is not found</param>
            <remarks>Queries the WebSite's <see cref="P:InSite.Model.WebSite.WebPages"/> list for a <see cref="T:InSite.Model.WebPage"/> with the name specified in the pageName parameter.  If the
            <see cref="T:InSite.Model.WebPage"/> doesn't exist in the list and errorOnNotFound is set to true an Exception will be thrown.  If the <see cref="T:InSite.Model.WebPage"/> doesn't exist
            and errorOnNotFound is set to false a null <see cref="T:InSite.Model.WebPage"/> will be returned.</remarks>
            <returns>The <see cref="T:InSite.Model.WebPage"/> with the name specified in the pageName parameter</returns>
        </member>
        <member name="M:InSite.Model.WebSite.GetWebPage(System.String)">
            <summary>
            Get a <see cref="T:InSite.Model.WebPage"/> from the WebSite's <see cref="P:InSite.Model.WebSite.WebPages"/> list 
            </summary>
            <param name="pageName">Name of the <see cref="T:InSite.Model.WebPage"/> to get</param>
            <remarks>Queries the WebSite's <see cref="P:InSite.Model.WebSite.WebPages"/> list for a <see cref="T:InSite.Model.WebPage"/> with the name specified in the pageName parameter.  If the
            <see cref="T:InSite.Model.WebPage"/> doesn't exist in the list an Exception will be thrown</remarks>
            <returns>The <see cref="T:InSite.Model.WebPage"/> with the name specified in the pageName parameter</returns>
        </member>
        <member name="M:InSite.Model.WebSite.GetOrCreateWebPage(System.String,System.String)">
            <summary>
            Get a <see cref="T:InSite.Model.WebPage"/> from the WebSite's <see cref="P:InSite.Model.WebSite.WebPages"/> list, if the <see cref="T:InSite.Model.WebPage"/> doesn't exist create it and add
            it to the WebSite's <see cref="P:InSite.Model.WebSite.WebPages"/> list
            </summary>
            <param name="pageName">Name of the <see cref="T:InSite.Model.WebPage"/> to get or create</param>
            <param name="title"> </param>
            <remarks>Queries the WebSite's <see cref="P:InSite.Model.WebSite.WebPages"/> list for a <see cref="T:InSite.Model.WebPage"/> with the name specified in the pageName parameter.  If the
            <see cref="T:InSite.Model.WebPage"/> doesn't exist in the list it will be created and added to the list</remarks>
            <returns>The <see cref="T:InSite.Model.WebPage"/> with the name specified in the pageName parameter</returns>
        </member>
        <member name="M:InSite.Model.WebSite.AddCategory(InSite.Model.Category)">
            <summary>
            Add a <see cref="T:InSite.Model.Category"/> to the WebSite's <see cref="P:InSite.Model.WebSite.Categories"/> list and insert the <see cref="T:InSite.Model.Category"/> into the database
            if it doesn't exist.
            </summary>
            <param name="value">The <see cref="T:InSite.Model.Category"/> to add</param>
            <remarks>The method will return if the <see cref="T:InSite.Model.Category"/> being added is already a part of of the <see cref="P:InSite.Model.WebSite.Categories"/> list.
            The WebSite property of the <see cref="T:InSite.Model.Category"/> is set to this WebSite, the <see cref="T:InSite.Model.Category"/> is added to the <see cref="P:InSite.Model.WebSite.Categories"/>
            list.  If the <see cref="T:InSite.Model.Category"/> being added has a GUID Id set, it will be inserted into the Category table if it does not exist.</remarks>
        </member>
        <member name="M:InSite.Model.WebSite.RemoveCategory(InSite.Model.Category)">
            <summary>
            Remove a <see cref="T:InSite.Model.Category"/> from the WebSite's <see cref="P:InSite.Model.WebSite.Categories"/> list
            </summary>
            <param name="value">The <see cref="T:InSite.Model.Category"/> to remove from the WebSite's <see cref="P:InSite.Model.WebSite.Categories"/> list</param>
        </member>
        <member name="M:InSite.Model.WebSite.GetCategory(System.Guid)">
            <summary>
            Get a <see cref="T:InSite.Model.Category"/> from the WebSite's <see cref="P:InSite.Model.WebSite.Categories"/> list 
            </summary>
            <param name="categoryId">The Id of the <see cref="T:InSite.Model.Category"/> to Get</param>
            <returns>The <see cref="T:InSite.Model.Category"/> with the Id specified in the categoryId parameter</returns>
        </member>
        <member name="M:InSite.Model.WebSite.GetCategory(System.String)">
            <summary>
            Get a <see cref="T:InSite.Model.Category"/> from the WebSite's <see cref="P:InSite.Model.WebSite.Categories"/> list 
            </summary>
            <param name="categoryId">The Id of the <see cref="T:InSite.Model.Category"/> to Get</param>
            <returns>The <see cref="T:InSite.Model.Category"/> with the Id specified in the categoryId parameter</returns>
        </member>
        <member name="M:InSite.Model.WebSite.AddCrossSell(InSite.Model.ProductInfo)">
            <summary>
            Add a <see cref="T:InSite.Model.ProductInfo"/> to the WebSite's <see cref="P:InSite.Model.WebSite.CrossSells"/> list
            </summary>
            <param name="value">The <see cref="T:InSite.Model.ProductInfo"/> to add</param>
        </member>
        <member name="M:InSite.Model.WebSite.RemoveCrossSell(InSite.Model.ProductInfo)">
            <summary>
            Remove a <see cref="T:InSite.Model.ProductInfo"/> from the WebSite's <see cref="P:InSite.Model.WebSite.CrossSells"/> list
            </summary>
            <param name="value">The <see cref="T:InSite.Model.ProductInfo"/> to remove from the WebSite's <see cref="P:InSite.Model.WebSite.CrossSells"/> list</param>
        </member>
        <member name="M:InSite.Model.WebSite.AddCarrier(InSite.Model.Carrier)">
            <summary>
            Add a <see cref="T:InSite.Model.Carrier"/> to the WebSite's <see cref="P:InSite.Model.WebSite.Carriers"/> list. Add the WebSite to the <see cref="P:InSite.Model.Carrier.WebSites"/> list.
            </summary>
            <param name="value">The <see cref="T:InSite.Model.Carrier"/> to add</param>
        </member>
        <member name="M:InSite.Model.WebSite.RemoveCarrier(InSite.Model.Carrier)">
            <summary>
            Remove a <see cref="T:InSite.Model.Carrier"/> from the WebSite's <see cref="P:InSite.Model.WebSite.Carriers"/> list
            </summary>
            <param name="value">The <see cref="T:InSite.Model.Carrier"/> to remove from the WebSite's <see cref="P:InSite.Model.WebSite.Carriers"/> list</param>
        </member>
        <member name="M:InSite.Model.WebSite.AddPromotion(InSite.Model.Promotion)">
            <summary>
            Add a <see cref="T:InSite.Model.Promotion"/> to the WebSite's <see cref="P:InSite.Model.WebSite.Promotions"/> list. Add the WebSite to the <see cref="P:InSite.Model.Promotion.WebSites"/> list.
            </summary>
            <param name="value">The <see cref="T:InSite.Model.Promotion"/> to add</param>
        </member>
        <member name="M:InSite.Model.WebSite.RemovePromotion(InSite.Model.Promotion)">
            <summary>
            Remove a <see cref="T:InSite.Model.Promotion"/> from the WebSite's <see cref="P:InSite.Model.WebSite.Promotions"/> list
            </summary>
            <param name="value">The <see cref="T:InSite.Model.Promotion"/> to remove from the WebSite's <see cref="P:InSite.Model.WebSite.Promotions"/> list</param>
        </member>
        <member name="M:InSite.Model.WebSite.AddState(InSite.Model.State)">
            <summary>
            Add a <see cref="T:InSite.Model.State"/> to the WebSite's <see cref="P:InSite.Model.WebSite.States"/> list. Add the WebSite to the <see cref="P:InSite.Model.State.WebSites"/> list.
            </summary>
            <param name="value">The <see cref="T:InSite.Model.State"/> to add</param>
        </member>
        <member name="M:InSite.Model.WebSite.RemoveState(InSite.Model.State)">
            <summary>
            Remove a <see cref="T:InSite.Model.State"/> from the WebSite's <see cref="P:InSite.Model.WebSite.States"/> list
            </summary>
            <param name="value">The <see cref="T:InSite.Model.State"/> to remove from the WebSite's <see cref="P:InSite.Model.WebSite.States"/> list</param>
        </member>
        <member name="M:InSite.Model.WebSite.AddCountry(InSite.Model.Country)">
            <summary>
            Add a <see cref="T:InSite.Model.Country"/> to the WebSite's <see cref="P:InSite.Model.WebSite.Countries"/> list.  Add the WebSite to the <see cref="P:InSite.Model.Country.WebSites"/> list.
            </summary>
            <param name="value">The <see cref="T:InSite.Model.Country"/> to add</param>
        </member>
        <member name="M:InSite.Model.WebSite.RemoveCountry(InSite.Model.Country)">
            <summary>
            Remove a <see cref="T:InSite.Model.Country"/> from the WebSite's <see cref="P:InSite.Model.WebSite.Countries"/> list
            </summary>
            <param name="value">The <see cref="T:InSite.Model.Country"/> to remove from the WebSite's <see cref="P:InSite.Model.WebSite.Countries"/> list</param>
        </member>
        <member name="M:InSite.Model.WebSite.AddDealer(InSite.Model.Dealer)">
            <summary>
            Add a <see cref="T:InSite.Model.Dealer"/> to the WebSite's <see cref="P:InSite.Model.WebSite.Dealers"/> list.  Add the WebSite to the <see cref="P:InSite.Model.Dealer.WebSites"/> list.
            </summary>
            <param name="value">The <see cref="T:InSite.Model.Dealer"/> to add</param>
        </member>
        <member name="M:InSite.Model.WebSite.RemoveDealer(InSite.Model.Dealer)">
            <summary>
            Remove a <see cref="T:InSite.Model.Dealer"/> from the WebSite's <see cref="P:InSite.Model.WebSite.Dealers"/> list
            </summary>
            <param name="value">The <see cref="T:InSite.Model.Dealer"/> to remove from the WebSite's <see cref="P:InSite.Model.WebSite.Dealers"/> list</param>
        </member>
        <member name="M:InSite.Model.WebSite.AddWebSiteConfiguration(InSite.Model.WebSiteConfiguration)">
            <summary>
            Add a <see cref="T:InSite.Model.WebSiteConfiguration"/> to the WebSite's <see cref="P:InSite.Model.WebSite.WebSiteConfigurations"/> list and insert the
            <see cref="T:InSite.Model.WebSiteConfiguration"/> into the database if it doesn't exist.
            </summary>
            <param name="value">The <see cref="T:InSite.Model.WebSiteConfiguration"/> to add</param>
            <remarks>The method will return if the <see cref="T:InSite.Model.WebSiteConfiguration"/> being added is already a part of of the <see cref="P:InSite.Model.WebSite.WebSiteConfigurations"/> list.
            The WebSite property of the <see cref="T:InSite.Model.WebSiteConfiguration"/> is set to this WebSite, the <see cref="T:InSite.Model.WebSiteConfiguration"/> is added to the <see cref="P:InSite.Model.WebSite.WebSiteConfigurations"/>
            list.  If the <see cref="T:InSite.Model.WebSiteConfiguration"/> being added has a GUID Id set, it will be inserted into the WebSiteConfiguration table if it does not exist.</remarks>
        </member>
        <member name="M:InSite.Model.WebSite.RemoveWebSiteConfiguration(InSite.Model.WebSiteConfiguration)">
            <summary>
            Remove a <see cref="T:InSite.Model.WebSiteConfiguration"/> from the WebSite's <see cref="P:InSite.Model.WebSite.WebSiteConfigurations"/> list
            </summary>
            <param name="value">The <see cref="T:InSite.Model.WebSiteConfiguration"/> to remove from the WebSite's <see cref="P:InSite.Model.WebSite.WebSiteConfigurations"/> list</param>
        </member>
        <member name="M:InSite.Model.WebSite.AddWebSiteLanguage(InSite.Model.WebSiteLanguage)">
            <summary>
            Add a language to this website.
            </summary>
            <param name="value">WebSiteLanguage record</param>
        </member>
        <member name="M:InSite.Model.WebSite.RemoveWebSiteLanguage(InSite.Model.WebSiteLanguage)">
            <summary>
            Remove a language to this website.
            </summary>
            <param name="value">WebSiteLanguage record</param>
        </member>
        <member name="M:InSite.Model.WebSite.AddWebSiteCurrency(InSite.Model.WebSiteCurrency)">
            <summary>
            Add a <see cref="T:InSite.Model.WebSiteCurrency"/> to this <see cref="T:InSite.Model.WebSite"/>.
            </summary>
            <param name="value"><see cref="T:InSite.Model.WebSiteCurrency"/> to add to this <see cref="T:InSite.Model.WebSite"/>.</param>
        </member>
        <member name="M:InSite.Model.WebSite.RemoveWebSiteCurrency(InSite.Model.WebSiteCurrency)">
            <summary>
            Remove a <see cref="T:InSite.Model.WebSiteCurrency"/> from this <see cref="T:InSite.Model.WebSite"/>.
            </summary>
            <param name="value"><see cref="T:InSite.Model.WebSiteCurrency"/> to remove from this <see cref="T:InSite.Model.WebSite"/>.</param>
        </member>
        <member name="M:InSite.Model.WebSite.CopyCategoryAndChildren(InSite.Model.Category,InSite.Model.Category)">
            <summary>
            Makes a copy of a specified category and all child categories and product infos.
            </summary>
            <param name="category">Category to copy.</param>
            <param name="parentCategory">Parent category to set on the copy.</param>
            <returns>Category copy with sub categories and product infos.</returns>
        </member>
        <member name="M:InSite.Model.WebSite.Copy(InSite.Model.WebSite,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            copy children from a another website into this website
            </summary>
            <param name="fromWebSite">An existing website to copy data from.</param>
            <param name="copyCategories">true to copy all categories and references to products in them.</param>
            <param name="copyWebsiteConfigurations">true to copy all website configurations.</param>
            <param name="copyWebpages">true to copy all web pages</param>
            <param name="copyPromotions">true to reference the same promotions.</param>
            <param name="copyCrossSells">true to reference the same cross sell products.</param>
            <param name="copyCarriers">true to reference the same carriers.</param>
            <param name="copyCountries">true to reference the same countries.</param>
            <param name="copyStates">true to reference the same states.</param>        
        </member>
        <member name="P:InSite.Model.WebSite.Current">
            <summary>
            Returns the Current WebSite based on the Domain of the Url, if not found throws WebSiteForDomainNotFoundException
            </summary>
        </member>
        <member name="P:InSite.Model.WebSite.Name">
            <summary>
            Name of the WebSite (Unique)
            </summary>
        </member>
        <member name="P:InSite.Model.WebSite.Description">
            <summary>
            Description of the WebSite
            </summary>
        </member>
        <member name="P:InSite.Model.WebSite.TaxCalculation">
            <summary>
            Tax Calculation type the WebSite will use.  Possible values are: None, Dollar, Percent, Calculate
            </summary>
        </member>
        <member name="P:InSite.Model.WebSite.TaxAmount">
            <summary>
            Tax amount that will be charged for purchases made on the WebSite.  The value is a dollar
            amount if TaxCalculation is set to Dollar, the value is a percentage if TaxCalculation is
            set to Percent
            </summary>
        </member>
        <member name="P:InSite.Model.WebSite.HandlingCalculation">
            <summary>
            Handling Calculation type the WebSite will use. Possible values are: None, Dollar, Percent
            </summary>
        </member>
        <member name="P:InSite.Model.WebSite.HandlingAmount">
            <summary>
            Handling amount that will be charged for purchases made on the WebSite. The value is a dollar
            amount if HandlingCalculation is set to Dollar, the value is a percentage if HandlingCalculation 
            is set to Percent.  The handling amount will only be applied if there is not a handling amount
            on products in the CustomerOrder and if there is not a handling amount specified on the State the
            CustomerOrder is shipping to.
            </summary>
        </member>
        <member name="P:InSite.Model.WebSite.TaxFreeTaxCode">
            <summary>
            Tax code that is used to represent that tax does not need to be charged for a <see cref="T:InSite.Model.CustomerOrder"/>.
            </summary>
        </member>
        <member name="P:InSite.Model.WebSite.DefaultShipSite">
            <summary>
            Default Ship Site to use on a new <see cref="T:InSite.Model.CustomerOrder"/>
            </summary>
        </member>
        <member name="P:InSite.Model.WebSite.DomainName">
            <summary>
            A comma delimited list of the domain names for the WebSite
            </summary>
        </member>
        <member name="P:InSite.Model.WebSite.MapProductsToCategories">
            <summary>
            Used by ProductRefresh_Generic, if true <see cref="T:InSite.Model.Product"/> will be mapped to <see cref="T:InSite.Model.Category"/> during a ProductRefresh
            </summary>
        </member>
        <member name="P:InSite.Model.WebSite.OrderNumberPrefix">
            <summary>
            Prefix applied to the <see cref="T:InSite.Model.CustomerOrder"/>.OrderNumber when a new <see cref="T:InSite.Model.CustomerOrder"/> is created
            </summary>
        </member>
        <member name="P:InSite.Model.WebSite.OrderNumberFormat">
            <summary>
            Formatting string applied to the <see cref="T:InSite.Model.CustomerOrder"/>.OrderNumber when a new <see cref="T:InSite.Model.CustomerOrder"/> is created
            </summary>
        </member>
        <member name="P:InSite.Model.WebSite.CustomerNumberPrefix">
            <summary>
            Prefix applied to the <see cref="T:InSite.Model.Customer"/>.CustomerNumber when a new <see cref="T:InSite.Model.Customer"/> is created
            </summary>
        </member>
        <member name="P:InSite.Model.WebSite.CustomerNumberFormat">
            <summary>
            Formatting string applied to the <see cref="T:InSite.Model.Customer"/>.CustomerNumber when a new <see cref="T:InSite.Model.Customer"/> is created
            </summary>
        </member>
        <member name="P:InSite.Model.WebSite.AllowMultiplePromotions">
            <summary>
            Controls whether multiple <see cref="T:InSite.Model.Promotion"/>s can be applied to a <see cref="T:InSite.Model.CustomerOrder"/>
            </summary>
        </member>
        <member name="P:InSite.Model.WebSite.IsActive">
            <summary>
            IsActive flag for the WebSite 
            </summary>
        </member>
        <member name="P:InSite.Model.WebSite.Company">
            <summary>
            The <see cref="P:InSite.Model.WebSite.Company"/> for the WebSite
            </summary>
        </member>
        <member name="P:InSite.Model.WebSite.WebPages">
            <summary>
            List of <see cref="T:InSite.Model.WebPage"/> for the WebSite 
            </summary>
        </member>
        <member name="P:InSite.Model.WebSite.Categories">
            <summary>
            List of <see cref="T:InSite.Model.Category"/> for the WebSite
            </summary>
        </member>
        <member name="P:InSite.Model.WebSite.BaseCategories">
            <summary>
            List of <see cref="T:InSite.Model.Category"/> that have no ParentCategories assigned for the WebSite
            </summary>
        </member>
        <member name="P:InSite.Model.WebSite.ActiveBaseCategories">
            <summary>
            List of Active <see cref="T:InSite.Model.Category"/> that have no ParentCategories assigned for the WebSite
            </summary>
        </member>
        <member name="P:InSite.Model.WebSite.CrossSells">
            <summary>
            List of <see cref="T:InSite.Model.ProductInfo"/> that can be used to market Cross Sells for the WebSite
            </summary>
        </member>
        <member name="P:InSite.Model.WebSite.ActiveCrossSells">
            <summary>
            List of Active <see cref="T:InSite.Model.ProductInfo"/> that can be used to market Cross Sells for the WebSite
            </summary>
        </member>
        <member name="P:InSite.Model.WebSite.Carriers">
            <summary>
            List of <see cref="T:InSite.Model.Carrier"/> for the WebSite
            </summary>
        </member>
        <member name="P:InSite.Model.WebSite.Promotions">
            <summary>
            List of <see cref="T:InSite.Model.Promotion"/> for the WebSite
            </summary>
        </member>
        <member name="P:InSite.Model.WebSite.States">
            <summary>
            List of <see cref="T:InSite.Model.State"/> for the WebSite
            </summary>
        </member>
        <member name="P:InSite.Model.WebSite.Countries">
            <summary>
            List of <see cref="T:InSite.Model.Country"/> for the WebSite
            </summary>
        </member>
        <member name="P:InSite.Model.WebSite.Dealers">
            <summary>
            List of <see cref="T:InSite.Model.Dealer"/> for the WebSite
            </summary>
        </member>
        <member name="P:InSite.Model.WebSite.WebSiteConfigurations">
            <summary>
            List of <see cref="T:InSite.Model.WebSiteConfiguration"/> for the WebSite
            </summary>
        </member>
        <member name="P:InSite.Model.WebSite.MicroSiteIdentifiers">
            <summary>
            A comma delimited list of the micro site identifiers for the WebSite
            </summary>
        </member>
        <member name="P:InSite.Model.WebSite.ApplicationName">
            <summary>
            The name of the application that this <see cref="T:InSite.Model.WebSite"/> belongs to.
            </summary>
        </member>
        <member name="P:InSite.Model.WebSite.IsRestricted">
            <summary>
            Flag to indicated whether this website has customer restrictions  
            </summary>
        </member>
        <member name="P:InSite.Model.WebSite.AllowedCustomers">
            <summary>
            List of customers allowed access to this website (if IsRestricted is true.)
            </summary>
        </member>
        <member name="P:InSite.Model.WebSite.WebSiteLanguages">
            <summary>
            List of languages supported by this website.
            </summary>
        </member>
        <member name="P:InSite.Model.WebSite.WebSiteCurrencies">
            <summary>
            List of <see cref="T:InSite.Model.WebSiteCurrency"/> supported by this <see cref="T:InSite.Model.WebSite"/>.
            </summary>
        </member>
        <member name="T:InSite.Model.WebSiteInfo">
            <summary>
            A simplified view of the WebSite Object
            </summary>
        </member>
        <member name="P:InSite.Model.WebSiteInfo.MicroSiteIdentifiers">
            <summary>
            A comma delimited list of the micro site identifiers for the WebSite
            </summary>
        </member>
        <member name="P:InSite.Model.WebSiteInfo.ApplicationName">
            <summary>
            The name of the application that this <see cref="T:InSite.Model.WebSite"/> belongs to.
            </summary>
        </member>
        <member name="P:InSite.Model.WebSiteInfo.IsRestricted">
            <summary>
            Flag to indicated whether this website has customer restrictions  
            </summary>
        </member>
        <member name="P:InSite.Model.WishListProduct.UnitOfMeasureDisplay">
            <summary>
            Display version of UnitOfMeasure (supports translation)
            </summary>
        </member>
        <member name="P:InSite.Model.WishListProduct.SortOrder">
            <summary>Order to Sort when wish list products are in a Collection</summary>        
        </member>
    </members>
</doc>
