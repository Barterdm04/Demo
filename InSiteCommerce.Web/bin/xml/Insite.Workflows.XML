<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Insite.Workflows</name>
    </assembly>
    <members>
        <member name="T:Insite.Workflows.AsyncCore.AsyncBaseApiController">
            <summary></summary>
        </member>
        <member name="F:Insite.Workflows.AsyncCore.AsyncBaseApiController.Metrics">
            <summary></summary>
        </member>
        <member name="M:Insite.Workflows.AsyncCore.AsyncBaseApiController.ExecuteAsync``5(``0,System.Func{``2,System.Threading.Tasks.Task{``3}},``1)">
            <summary>Method run by all controller methods to execute the mapper and run the service method.</summary>
            <typeparam name="TMapper">The type of the mapper.</typeparam>
            <typeparam name="TApiParameter">The type of the API parameter.</typeparam>
            <typeparam name="TServiceParameter">The type of the service parameter.</typeparam>
            <typeparam name="TServiceResult">The type of the service result.</typeparam>
            <typeparam name="TApiResult">The type of the API result.</typeparam>
            <param name="mapper">The mapper.</param>
            <param name="serviceMethod">The service method.</param>
            <param name="apiParameter">The API parameter.</param>
            <returns></returns>
        </member>
        <member name="T:Insite.Workflows.AsyncCore.AsyncHandlerBase`2">
            <summary>Base class to inherit from when creating service handlers.</summary>
            <typeparam name="TIn">The type of the in.</typeparam>
            <typeparam name="TOut">The type of the out.</typeparam>
        </member>
        <member name="T:Insite.Workflows.AsyncCore.Interfaces.IAsyncHandler`2">
            <summary>
            Interface for service handlers, when creating a service handler you should inherit from<see cref="T:Insite.Workflows.AsyncCore.AsyncHandlerBase`2"/>.
            </summary>
            <typeparam name="TIn">The type of the in.</typeparam>
            <typeparam name="TOut">The type of the out.</typeparam>
        </member>
        <member name="M:Insite.Workflows.AsyncCore.Interfaces.IAsyncHandler`2.ExecuteAsync(InSite.Model.Interfaces.IUnitOfWork,`0,`1)">
            <summary>
            Executes the handler asynchronously.
            </summary>
            <param name="unitOfWork">The unit of work.</param>
            <param name="parameter">The parameter.</param>
            <param name="result">The result.</param>
            <returns></returns>
        </member>
        <member name="M:Insite.Workflows.AsyncCore.Interfaces.IAsyncHandler`2.RegisterNextAsync(Insite.Core.Services.Handlers.IHandler)">
            <summary>
            Registers the next asynchronous handler.
            </summary>
            <param name="handler">The handler.</param>
            <returns></returns>
        </member>
        <member name="F:Insite.Workflows.AsyncCore.AsyncHandlerBase`2.NextHandler">
            <summary>
            The next handler
            </summary>
        </member>
        <member name="M:Insite.Workflows.AsyncCore.AsyncHandlerBase`2.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Insite.Workflows.AsyncCore.AsyncHandlerBase`2"/> class.
            </summary>
        </member>
        <member name="M:Insite.Workflows.AsyncCore.AsyncHandlerBase`2.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:Insite.Workflows.AsyncCore.AsyncHandlerBase`2"/> class.</summary>
            <param name="handlerName">Name of the handler.</param>
        </member>
        <member name="M:Insite.Workflows.AsyncCore.AsyncHandlerBase`2.ExecuteAsync(InSite.Model.Interfaces.IUnitOfWork,`0,`1)">
            <summary>Executes the handler asynchronously.</summary>
            <param name="unitOfWork">The unit of work.</param>
            <param name="parameter">The parameter.</param>
            <param name="result">The result.</param>
            <returns></returns>
        </member>
        <member name="M:Insite.Workflows.AsyncCore.AsyncHandlerBase`2.RegisterNextAsync(Insite.Core.Services.Handlers.IHandler)">
            <summary>Registers the next asynchronous.</summary>
            <param name="asyncHandler">The asynchronous handler.</param>
            <returns></returns>
        </member>
        <member name="M:Insite.Workflows.AsyncCore.AsyncHandlerBase`2.CreateServiceResult``1(``0,Insite.Core.Services.ResultCode,Insite.Core.Services.SubCode,System.String)">
            <summary>Creates the service result.</summary>
            <typeparam name="T"></typeparam>
            <param name="result">The result.</param>
            <param name="resultCode">The result code.</param>
            <param name="subCode">The sub code.</param>
            <param name="message">The message.</param>
            <returns></returns>
        </member>
        <member name="M:Insite.Workflows.AsyncCore.AsyncHandlerBase`2.CreateErrorServiceResult``1(``0,Insite.Core.Services.SubCode,System.String)">
            <summary>Creates the error service result.</summary>
            <typeparam name="T"></typeparam>
            <param name="result">The result.</param>
            <param name="subCode">The sub code.</param>
            <param name="message">The message.</param>
            <returns></returns>
        </member>
        <member name="M:Insite.Workflows.AsyncCore.AsyncHandlerBase`2.ApplyPaging``1(InSite.Model.Interfaces.IUnitOfWork,Insite.Core.Services.PagingParameterBase,Insite.Core.Services.PagingResultBase,System.Linq.IQueryable{``0})">
            <summary>Applies the paging.</summary>
            <typeparam name="T"></typeparam>
            <param name="unitOfWork">The unit of work.</param>
            <param name="parameter">The parameter.</param>
            <param name="result">The result.</param>
            <param name="query">The query.</param>
            <returns></returns>
        </member>
        <member name="M:Insite.Workflows.AsyncCore.AsyncHandlerBase`2.RegisterNext(Insite.Core.Services.Handlers.IHandler)">
            <summary>
            The register next.
            </summary>
            <param name="handler">The handler.</param>
        </member>
        <member name="P:Insite.Workflows.AsyncCore.AsyncHandlerBase`2.HandlerName">
            <summary>
            Gets or sets the name of the handler.
            </summary>
            <value>
            The name of the handler.
            </value>
        </member>
        <member name="P:Insite.Workflows.AsyncCore.AsyncHandlerBase`2.Order">
            <summary>
            Gets the order.
            </summary>
        </member>
        <member name="P:Insite.Workflows.AsyncCore.AsyncHandlerBase`2.CurrentContext">
            <summary>
            Gets or sets the current context.
            </summary>
        </member>
        <member name="T:Insite.Workflows.AsyncCore.AsyncHandlerFactory">
            <summary>
            Factory to get service handlers.
            </summary>
        </member>
        <member name="T:Insite.Workflows.AsyncCore.Interfaces.IAsyncHandlerFactory">
            <summary>
            Factory to get service handlers.
            </summary>
        </member>
        <member name="M:Insite.Workflows.AsyncCore.Interfaces.IAsyncHandlerFactory.GetHandler``1">
            <summary>
            Gets the handler asynchronously.
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="F:Insite.Workflows.AsyncCore.AsyncHandlerFactory.serviceLocator">
            <summary></summary>
        </member>
        <member name="M:Insite.Workflows.AsyncCore.AsyncHandlerFactory.#ctor(Microsoft.Practices.ServiceLocation.IServiceLocator)">
            <summary>Initializes a new instance of the <see cref="T:Insite.Workflows.AsyncCore.AsyncHandlerFactory"/> class.</summary>
            <param name="serviceLocator">The service locator.</param>
        </member>
        <member name="M:Insite.Workflows.AsyncCore.AsyncHandlerFactory.GetHandler``1">
            <summary>Gets the handler.</summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
            <exception cref="T:Microsoft.Practices.ServiceLocation.ActivationException">if there is are errors resolving
                        the service instance.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref>
              <name>element</name>
            </paramref>
            is null. </exception>
            <exception cref="T:System.NotSupportedException"><paramref>
              <name>element</name>
            </paramref>
            is not a constructor, method, property, event, type, or field. </exception>
            <exception cref="T:System.Reflection.AmbiguousMatchException">More than one of the requested attributes was found. </exception>
            <exception cref="T:System.TypeLoadException">A custom attribute type cannot be loaded. </exception>
        </member>
        <member name="T:Insite.Workflows.AsyncCore.AsyncMapper`4">
            <summary></summary>
            <typeparam name="TApiParameter"></typeparam>
            <typeparam name="TServiceParameter"></typeparam>
            <typeparam name="TServiceResult"></typeparam>
            <typeparam name="TApiResult"></typeparam>
        </member>
        <member name="M:Insite.Workflows.AsyncCore.AsyncMapper`4.MapParameterAsync(`0,System.Net.Http.HttpRequestMessage)">
            <summary>
            Maps the parameter asynchronous.
            </summary>
            <param name="apiParameter">The API parameter.</param>
            <param name="request">The request.</param>
            <returns></returns>
        </member>
        <member name="M:Insite.Workflows.AsyncCore.AsyncMapper`4.MapResultAsync(`2,System.Net.Http.HttpRequestMessage)">
            <summary>
            Maps the result asynchronous.
            </summary>
            <param name="serviceResult">The service result.</param>
            <param name="request">The request.</param>
            <returns></returns>
        </member>
        <member name="T:Insite.Workflows.AsyncCore.AsyncParameterBase">
            <summary>The async parameter base.</summary>
        </member>
        <member name="M:Insite.Workflows.AsyncCore.AsyncParameterBase.#ctor">
            <summary>Initializes a new instance of the <see cref="T:Insite.Workflows.AsyncCore.AsyncParameterBase"/> class. Initializes a new instance of the <see cref="T:Insite.Core.Services.ParameterBase"/> class.</summary>
        </member>
        <member name="P:Insite.Workflows.AsyncCore.AsyncParameterBase.CurrentContext">
            <summary>Gets or sets the current context.</summary>
        </member>
        <member name="P:Insite.Workflows.AsyncCore.AsyncParameterBase.Properties">
            <summary>
            Gets or sets a dictionary allowing you to send in arbitrary values to the method call.
            </summary>
            <value>
            The properties.
            </value>
        </member>
        <member name="T:Insite.Workflows.AsyncCore.Interfaces.IAsyncWebApiMapper`4">
            <summary>The AsyncWebApiMapper interface.</summary>
            <typeparam name="TApiParameter">The type of the API parameter.</typeparam>
            <typeparam name="TServiceParameter">The type of the service parameter.</typeparam>
            <typeparam name="TServiceResult">The type of the service result.</typeparam>
            <typeparam name="TApiResult">The type of the API result.</typeparam>
        </member>
        <member name="M:Insite.Workflows.AsyncCore.Interfaces.IAsyncWebApiMapper`4.MapParameter(`0,System.Net.Http.HttpRequestMessage)">
            <summary>Maps the parameter.</summary>
            <param name="apiParameter">The API parameter.</param>
            <param name="request">The request.</param>
        </member>
        <member name="M:Insite.Workflows.AsyncCore.Interfaces.IAsyncWebApiMapper`4.MapResult(`2,System.Net.Http.HttpRequestMessage)">
            <summary>Maps the result.</summary>
            <param name="serviceResult">The service result.</param>
            <param name="request">The request.</param>
        </member>
        <member name="T:Insite.Workflows.AsyncCore.NullAsyncHandler`2">
            <summary>The null object value for the IHandlers.</summary>
            <typeparam name="TIn">The type of the in.</typeparam>
            <typeparam name="TOut">The type of the out.</typeparam>
        </member>
        <member name="M:Insite.Workflows.AsyncCore.NullAsyncHandler`2.ExecuteAsync(InSite.Model.Interfaces.IUnitOfWork,`0,`1)">
            <summary>Just returns the result.</summary>
            <param name="unitOfWork"><see cref="T:InSite.Model.Interfaces.IUnitOfWork"/></param>
            <param name="parameter">The parameter.</param>
            <param name="result">The result.</param>
            <returns></returns>
        </member>
        <member name="M:Insite.Workflows.AsyncCore.NullAsyncHandler`2.RegisterNextAsync(Insite.Core.Services.Handlers.IHandler)">
            <summary></summary>
            <param name="handler"></param>
            <returns></returns>
        </member>
        <member name="M:Insite.Workflows.AsyncCore.NullAsyncHandler`2.RegisterNext(Insite.Core.Services.Handlers.IHandler)">
            <summary></summary>
            <param name="handler"></param>
        </member>
        <member name="P:Insite.Workflows.AsyncCore.NullAsyncHandler`2.Order">
            <summary>
            Gets the order.
            </summary>
        </member>
        <member name="P:Insite.Workflows.AsyncCore.NullAsyncHandler`2.CurrentContext">
            <summary>
            Gets or sets the current context.
            </summary>
        </member>
        <member name="T:Insite.Workflows.Content.App_Start.WorkflowsConfig">
            <summary>
            Registers filter rules for the Workflows module.
            </summary>
        </member>
        <member name="M:Insite.Workflows.Content.App_Start.WorkflowsConfig.Register(Insite.WebFramework.Content.Interfaces.IContentContextProvider,Insite.WebFramework.Content.Services.Interfaces.IActionableService)">
            <summary>
            Registers the specified content context provider.
            </summary>
            <param name="contentContextProvider">The content context provider.</param>
            <param name="actionableService">The actionable service.</param>
        </member>
        <member name="T:Insite.Workflows.Content.WorkflowContentPage">
            <summary>
            </summary>
        </member>
        <member name="T:Insite.Workflows.Content.WorkflowDetailPage">
            <summary></summary>
        </member>
        <member name="T:Insite.Workflows.Content.WorkflowDetailView">
            <summary></summary>
        </member>
        <member name="T:Insite.Workflows.Content.WorkflowIsAuthorizedPage">
            <summary></summary>
        </member>
        <member name="M:Insite.Workflows.Content.WorkflowIsAuthorizedPage.#ctor(Insite.WebFramework.Mvc.IActionResultFactory)">
            <summary></summary>
        </member>
        <member name="P:Insite.Workflows.Content.WorkflowIsAuthorizedPage.RolesAllowed">
            <summary></summary>
        </member>
        <member name="P:Insite.Workflows.Content.WorkflowIsAuthorizedPage.RolesDisallowed">
            <summary></summary>
        </member>
        <member name="T:Insite.Workflows.Content.WorkflowListPage">
            <summary></summary>
        </member>
        <member name="T:Insite.Workflows.Content.WorkflowListView">
            <summary></summary>
        </member>
        <member name="T:Insite.Workflows.Services.Dtos.HandlerDto">
            <summary>
            </summary>
        </member>
        <member name="P:Insite.Workflows.Services.Dtos.HandlerDto.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:Insite.Workflows.Services.Dtos.HandlerDto.DependencyOrder">
            <summary>
            Gets or sets the dependency order.
            </summary>
            <value>
            The dependency order.
            </value>
        </member>
        <member name="P:Insite.Workflows.Services.Dtos.HandlerDto.ParameterName">
            <summary>
            Gets or sets the name of the parameter.
            </summary>
            <value>
            The name of the parameter.
            </value>
        </member>
        <member name="P:Insite.Workflows.Services.Dtos.HandlerDto.ResultsName">
            <summary>
            Gets or sets the name of the results.
            </summary>
            <value>
            The name of the results.
            </value>
        </member>
        <member name="P:Insite.Workflows.Services.Dtos.HandlerDto.FullName">
            <summary>
            Gets or sets the full name.
            </summary>
            <value>
            The full name.
            </value>
        </member>
        <member name="P:Insite.Workflows.Services.Dtos.HandlerDto.Hash">
            <summary>
            Gets or sets the hash.
            </summary>
            <value>
            The hash.
            </value>
        </member>
        <member name="P:Insite.Workflows.Services.Dtos.HandlerDto.RegistrationName">
            <summary>
            Gets or sets the name of the registration.
            </summary>
            <value>
            The name of the registration.
            </value>
        </member>
        <member name="T:Insite.Workflows.Services.Factories.KeyFactory">
            <summary></summary>
        </member>
        <member name="M:Insite.Workflows.Services.Factories.KeyFactory.CreateKey(System.String)">
            <summary>
            Creates the key.
            </summary>
            <param name="key">The key.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentException">key does not contain a value</exception>
        </member>
        <member name="M:Insite.Workflows.Services.Factories.KeyFactory.MakeHash(System.String,System.String)">
            <summary>
            Makes the hash.
            </summary>
            <param name="parameter">The parameter.</param>
            <param name="result">The result.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">The value of 'parameter' cannot be null. </exception>
        </member>
        <member name="T:Insite.Workflows.Services.Handlers.GetWorkflowCollectionHandler">
            <summary>
            </summary>
        </member>
        <member name="F:Insite.Workflows.Services.Handlers.GetWorkflowCollectionHandler.HandlerDiscoveryService">
            <summary></summary>
        </member>
        <member name="F:Insite.Workflows.Services.Handlers.GetWorkflowCollectionHandler.TypeDiscoveryService">
            <summary></summary>
        </member>
        <member name="M:Insite.Workflows.Services.Handlers.GetWorkflowCollectionHandler.#ctor(Insite.Workflows.Services.Handlers.Services.IHandlerDiscoveryService,Insite.Workflows.Services.Handlers.Services.ITypeDiscoveryService)">
            <summary>
            Initializes a new instance of the <see cref="T:Insite.Workflows.Services.Handlers.GetWorkflowCollectionHandler"/> class.
            </summary>
            <param name="handlerDiscoveryService">The handler discovery service.</param>
            <param name="typeDiscoveryService">The type discovery service.</param>
        </member>
        <member name="M:Insite.Workflows.Services.Handlers.GetWorkflowCollectionHandler.ExecuteAsync(InSite.Model.Interfaces.IUnitOfWork,Insite.Workflows.Services.Parameters.GetWorkflowCollectionParameter,Insite.Workflows.Services.Results.GetWorkflowCollectionResult)">
            <summary>
            Executes the handler.
            </summary>
            <param name="unitOfWork">The unit of work.</param>
            <param name="parameter">The parameter.</param>
            <param name="result">The result.</param>
            <returns></returns>
        </member>
        <member name="P:Insite.Workflows.Services.Handlers.GetWorkflowCollectionHandler.Order">
            <summary>
            Gets the order.
            </summary>
        </member>
        <member name="T:Insite.Workflows.Services.Handlers.GetWorkflowDetailsHandler">
            <summary></summary>
        </member>
        <member name="F:Insite.Workflows.Services.Handlers.GetWorkflowDetailsHandler.HandlerDiscoveryService">
            <summary></summary>
        </member>
        <member name="F:Insite.Workflows.Services.Handlers.GetWorkflowDetailsHandler.TypeDiscoveryService">
            <summary></summary>
        </member>
        <member name="M:Insite.Workflows.Services.Handlers.GetWorkflowDetailsHandler.#ctor(Insite.Workflows.Services.Handlers.Services.IHandlerDiscoveryService,Insite.Workflows.Services.Handlers.Services.ITypeDiscoveryService)">
            <summary>
            Initializes a new instance of the <see cref="T:Insite.Workflows.Services.Handlers.GetWorkflowDetailsHandler"/> class.
            </summary>
            <param name="handlerDiscoveryService">The handler discovery service.</param>
            <param name="typeDiscoveryService">The type discovery service.</param>
        </member>
        <member name="M:Insite.Workflows.Services.Handlers.GetWorkflowDetailsHandler.ExecuteAsync(InSite.Model.Interfaces.IUnitOfWork,Insite.Workflows.Services.Parameters.GetWorkflowDetailsParameter,Insite.Workflows.Services.Results.GetWorkflowDetailsResult)">
            <summary>
            Executes the handler asynchronously.
            </summary>
            <param name="unitOfWork">The unit of work.</param>
            <param name="parameter">The parameter.</param>
            <param name="result">The result.</param>
            <returns></returns>
        </member>
        <member name="P:Insite.Workflows.Services.Handlers.GetWorkflowDetailsHandler.Order">
            <summary>
            Gets the order.
            </summary>
        </member>
        <member name="T:Insite.Workflows.Services.Handlers.Services.HandlerDiscoveryService">
            <summary></summary>
        </member>
        <member name="T:Insite.Workflows.Services.Handlers.Services.IHandlerDiscoveryService">
            <summary>
            </summary>
        </member>
        <member name="M:Insite.Workflows.Services.Handlers.Services.IHandlerDiscoveryService.FindHandlersAsync">
            <summary>
            Finds the handlers asynchronous.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Insite.Workflows.Services.Handlers.Services.HandlerDiscoveryService.#ctor(InSite.Model.Interfaces.ICacheManagerAsync,Microsoft.Practices.ServiceLocation.IServiceLocator)">
            <summary>
            Initializes a new instance of the <see cref="T:Insite.Workflows.Services.Handlers.Services.HandlerDiscoveryService"/> class.
            </summary>
            <param name="cacheManager">The cache manager.</param>
            <param name="serviceLocator">The service locator.</param>
        </member>
        <member name="M:Insite.Workflows.Services.Handlers.Services.HandlerDiscoveryService.FindHandlersAsync">
            <summary>
            Finds the handlers asynchronous.
            </summary>
            <returns></returns>
            <exception cref="T:Microsoft.Practices.ServiceLocation.ActivationException">if there is are errors resolving
            the service instance.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref>
              <name>element</name>
            </paramref>
            is null.</exception>
        </member>
        <member name="T:Insite.Workflows.Services.Handlers.Services.ITypeDiscoveryService">
            <summary>
            
            </summary>
        </member>
        <member name="M:Insite.Workflows.Services.Handlers.Services.ITypeDiscoveryService.FindTypesAsync">
            <summary>
            Finds the types asynchronous.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Insite.Workflows.Services.Handlers.Services.TypeDiscoveryService">
            <summary></summary>
        </member>
        <member name="M:Insite.Workflows.Services.Handlers.Services.TypeDiscoveryService.#ctor(InSite.Model.Interfaces.ICacheManagerAsync)">
            <summary>
            Initializes a new instance of the <see cref="T:Insite.Workflows.Services.Handlers.Services.TypeDiscoveryService"/> class.
            </summary>
            <param name="cacheManager">The cache manager.</param>
        </member>
        <member name="M:Insite.Workflows.Services.Handlers.Services.TypeDiscoveryService.FindTypesAsync">
            <summary>
            Finds the types asynchronous.
            </summary>
            <returns></returns>
            <exception cref="T:System.OverflowException"><paramref>
              <name>value</name>
            </paramref>
            is less than <see cref="F:System.TimeSpan.MinValue"/>
             or greater than <see cref="F:System.TimeSpan.MaxValue"/>. -or-<paramref>
              <name>value</name>
            </paramref>
            is <see cref="F:System.Double.PositiveInfinity"/>.
            -or-<paramref>
              <name>value</name>
            </paramref>
            is <see cref="F:System.Double.NegativeInfinity"/>.</exception>
        </member>
        <member name="T:Insite.Workflows.Services.Handlers.TypeExtensions">
            <summary></summary>
        </member>
        <member name="M:Insite.Workflows.Services.Handlers.TypeExtensions.IsSubClassOfGeneric(System.Type,System.Type)">
            <summary>Determines whether [is sub class of generic] [the specified child].</summary>
            <param name="child">The child.</param>
            <param name="parent">The parent.</param>
            <returns></returns>
            <exception cref="T:System.OverflowException">The array is multidimensional and contains more than <see cref="F:System.Int32.MaxValue"/> elements.</exception>
            <exception cref="T:System.Reflection.TargetInvocationException">A static initializer is invoked and throws an exception. </exception>
        </member>
        <member name="M:Insite.Workflows.Services.Handlers.TypeExtensions.GetFullTypeDefinition(System.Type)">
            <summary>
            Gets the full type definition.
            </summary>
            <param name="type">The type.</param>
            <returns></returns>
            <exception cref="T:System.InvalidOperationException">The current type is not a generic type.  
            That is, <see cref="P:System.Type.IsGenericType"/> returns false. </exception>
        </member>
        <member name="M:Insite.Workflows.Services.Handlers.TypeExtensions.VerifyGenericArguments(System.Type,System.Type)">
            <summary>
            Verifies the generic arguments.
            </summary>
            <param name="parent">The parent.</param>
            <param name="child">The child.</param>
            <returns></returns>
        </member>
        <member name="T:Insite.Workflows.Services.IWorkflowService">
            <summary></summary>
        </member>
        <member name="M:Insite.Workflows.Services.IWorkflowService.GetAsync(Insite.Workflows.Services.Parameters.GetWorkflowCollectionParameter)">
            <summary>
            Gets the asynchronous.
            </summary>
            <param name="parameter">The parameter.</param>
            <returns></returns>
        </member>
        <member name="M:Insite.Workflows.Services.IWorkflowService.GetDetailsAsync(Insite.Workflows.Services.Parameters.GetWorkflowDetailsParameter)">
            <summary>
            Gets the details asynchronous.
            </summary>
            <param name="parameter">The parameter.</param>
            <returns></returns>
        </member>
        <member name="M:Insite.Workflows.Services.IWorkflowService.CreateAsync(Insite.Workflows.Services.Parameters.AddWorkflowParameter)">
            <summary>
            Creates the asynchronous.
            </summary>
            <param name="parameter">The parameter.</param>
            <returns></returns>
        </member>
        <member name="M:Insite.Workflows.Services.IWorkflowService.IsNavigationSecure">
            <summary>
            Determines whether [is navigation secure].
            </summary>
            <returns></returns>
        </member>
        <member name="T:Insite.Workflows.Services.Parameters.GetWorkflowCollectionParameter">
            <summary>
            </summary>
        </member>
        <member name="T:Insite.Workflows.Services.Parameters.GetWorkflowDetailsParameter">
            <summary>
            </summary>
        </member>
        <member name="P:Insite.Workflows.Services.Parameters.GetWorkflowDetailsParameter.ServiceName">
            <summary>
            Gets or sets the name of the service.
            </summary>
            <value>
            The name of the service.
            </value>
        </member>
        <member name="T:Insite.Workflows.Services.Parameters.AddWorkflowParameter">
            <summary>
            </summary>
        </member>
        <member name="P:Insite.Workflows.Services.Parameters.AddWorkflowParameter.HandlerModel">
            <summary>
            Gets or sets the handler model.
            </summary>
            <value>
            The handler model.
            </value>
        </member>
        <member name="P:Insite.Workflows.Services.Parameters.AddWorkflowParameter.ExecuteMethod">
            <summary>
            Gets or sets the execute method.
            </summary>
            <value>
            The execute method.
            </value>
        </member>
        <member name="P:Insite.Workflows.Services.Parameters.AddWorkflowParameter.Parameter">
            <summary>
            Gets or sets the parameter.
            </summary>
            <value>
            The parameter.
            </value>
        </member>
        <member name="P:Insite.Workflows.Services.Parameters.AddWorkflowParameter.Result">
            <summary>
            Gets or sets the result.
            </summary>
            <value>
            The result.
            </value>
        </member>
        <member name="T:Insite.Workflows.Services.Results.GetWorkflowCollectionResult">
            <summary>
            </summary>
        </member>
        <member name="M:Insite.Workflows.Services.Results.GetWorkflowCollectionResult.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Insite.Workflows.Services.Results.GetWorkflowCollectionResult"/> class.
            </summary>
        </member>
        <member name="P:Insite.Workflows.Services.Results.GetWorkflowCollectionResult.HandlerDtos">
            <summary>
            Gets or sets the handler dtos.
            </summary>
            <value>
            The handler dtos.
            </value>
        </member>
        <member name="P:Insite.Workflows.Services.Results.GetWorkflowCollectionResult.ModuleServiceCollection">
            <summary>
            Gets or sets the module service collection.
            </summary>
            <value>
            The module service collection.
            </value>
        </member>
        <member name="T:Insite.Workflows.Services.Results.GetWorkflowDetailsResult">
            <summary>
            </summary>
        </member>
        <member name="P:Insite.Workflows.Services.Results.GetWorkflowDetailsResult.ServiceType">
            <summary>
            Gets or sets the service.
            </summary>
            <value>
            The service.
            </value>
        </member>
        <member name="P:Insite.Workflows.Services.Results.GetWorkflowDetailsResult.HandlerDtoCollection">
            <summary>
            Gets or sets the handler dtos.
            </summary>
            <value>
            The handler dtos.
            </value>
        </member>
        <member name="T:Insite.Workflows.Services.Results.AddWorkflowResult">
            <summary>
            </summary>
        </member>
        <member name="T:Insite.Workflows.Services.WorkflowService">
            <summary>
            </summary>
        </member>
        <member name="F:Insite.Workflows.Services.WorkflowService.AsyncHandlerFactory">
            <summary></summary>
        </member>
        <member name="F:Insite.Workflows.Services.WorkflowService.CacheManager">
            <summary></summary>
        </member>
        <member name="M:Insite.Workflows.Services.WorkflowService.#ctor(InSite.Model.Interfaces.ICacheManager,InSite.Model.Interfaces.IUnitOfWorkFactory,InSite.Model.Interfaces.IContextProvider,InSite.Model.Interfaces.ITranslationLocalizer,Insite.Workflows.AsyncCore.Interfaces.IAsyncHandlerFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Insite.Workflows.Services.WorkflowService"/> class.
            </summary>
            <param name="cacheManager">The cache manager.</param>
            <param name="unitOfWorkFactory"><see cref="T:InSite.Model.Interfaces.IUnitOfWorkFactory"/></param>
            <param name="contextProvider"><see cref="T:InSite.Model.Interfaces.IContextProvider"/></param>
            <param name="translationLocalizer"><see cref="T:InSite.Model.Interfaces.ITranslationLocalizer"/></param>
            <param name="asyncHandlerFactory">The handler factory.</param>
        </member>
        <member name="M:Insite.Workflows.Services.WorkflowService.GetAsync(Insite.Workflows.Services.Parameters.GetWorkflowCollectionParameter)">
            <summary>
            Gets the asynchronous.
            </summary>
            <param name="parameter">The parameter.</param>
            <returns></returns>
        </member>
        <member name="M:Insite.Workflows.Services.WorkflowService.GetDetailsAsync(Insite.Workflows.Services.Parameters.GetWorkflowDetailsParameter)">
            <summary>
            Gets the details asynchronous.
            </summary>
            <param name="parameter">The parameter.</param>
            <returns></returns>
        </member>
        <member name="M:Insite.Workflows.Services.WorkflowService.CreateAsync(Insite.Workflows.Services.Parameters.AddWorkflowParameter)">
            <summary>
            Creates the asynchronous.
            </summary>
            <param name="parameter">The parameter.</param>
            <returns></returns>
        </member>
        <member name="M:Insite.Workflows.Services.WorkflowService.IsNavigationSecure">
            <summary>
            Determines whether [is navigation secure].
            </summary>
            <returns></returns>
        </member>
        <member name="T:Insite.Workflows.WebApi.V1.ApiModels.AssemblyModel">
            <summary></summary>
        </member>
        <member name="T:Insite.Workflows.WebApi.V1.ApiModels.HandlerModel">
            <summary></summary>
        </member>
        <member name="M:Insite.Workflows.WebApi.V1.ApiModels.HandlerModel.CompareTo(Insite.Workflows.WebApi.V1.ApiModels.HandlerModel)">
            <summary>
            Compares the current object with another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>
            A value that indicates the relative order of the objects being compared.
            The return value has the following meanings: Value Meaning Less than zero
            This object is less than the <paramref name="other"/> parameter.Zero
            This object is equal to <paramref name="other"/>. Greater than zero
            This object is greater than <paramref name="other"/>.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Insite.Workflows.WebApi.V1.ApiModels.HandlerModel.op_Implicit(Insite.Workflows.Services.Dtos.HandlerDto)~Insite.Workflows.WebApi.V1.ApiModels.HandlerModel">
            <summary>
            Performs an implicit conversion from <see cref="T:Insite.Workflows.Services.Dtos.HandlerDto"/> to <see cref="T:Insite.Workflows.WebApi.V1.ApiModels.HandlerModel"/>.
            </summary>
            <param name="handlerDto">The handler dto.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:Insite.Workflows.WebApi.V1.ApiModels.HandlerModel.BuildString(System.String)">
            <summary>
            Builds the string.
            </summary>
            <param name="propertyName">Name of the property.</param>
            <returns></returns>
        </member>
        <member name="P:Insite.Workflows.WebApi.V1.ApiModels.HandlerModel.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:Insite.Workflows.WebApi.V1.ApiModels.HandlerModel.DependencyOrder">
            <summary>
            Gets or sets the dependency order.
            </summary>
            <value>
            The dependency order.
            </value>
        </member>
        <member name="P:Insite.Workflows.WebApi.V1.ApiModels.HandlerModel.ParameterName">
            <summary>
            Gets or sets the name of the parameter.
            </summary>
            <value>
            The name of the parameter.
            </value>
        </member>
        <member name="P:Insite.Workflows.WebApi.V1.ApiModels.HandlerModel.ResultsName">
            <summary>
            Gets or sets the name of the results.
            </summary>
            <value>
            The name of the results.
            </value>
        </member>
        <member name="P:Insite.Workflows.WebApi.V1.ApiModels.HandlerModel.Hash">
            <summary>
            Gets or sets the hash.
            </summary>
            <value>
            The hash.
            </value>
        </member>
        <member name="P:Insite.Workflows.WebApi.V1.ApiModels.HandlerModel.ParameterResults">
            <summary>
            Gets or sets the parameter results.
            </summary>
            <value>
            The parameter results.
            </value>
        </member>
        <member name="P:Insite.Workflows.WebApi.V1.ApiModels.HandlerModel.FullName">
            <summary>
            Gets or sets the full name which includes the namespace.
            </summary>
            <value>
            The full name.
            </value>
        </member>
        <member name="T:Insite.Workflows.WebApi.V1.ApiModels.ModuleCollection">
            <summary></summary>
        </member>
        <member name="M:Insite.Workflows.WebApi.V1.ApiModels.ModuleCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Insite.Workflows.WebApi.V1.ApiModels.ModuleCollection"/> class.
            </summary>
        </member>
        <member name="P:Insite.Workflows.WebApi.V1.ApiModels.ModuleCollection.Modules">
            <summary>
            Gets or sets the modules.
            </summary>
            <value>
            The modules.
            </value>
        </member>
        <member name="T:Insite.Workflows.WebApi.V1.ApiModels.ModuleModel">
            <summary></summary>
        </member>
        <member name="M:Insite.Workflows.WebApi.V1.ApiModels.ModuleModel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Insite.Workflows.WebApi.V1.ApiModels.ModuleModel"/> class.
            </summary>
        </member>
        <member name="M:Insite.Workflows.WebApi.V1.ApiModels.ModuleModel.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/>, is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object"/> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Insite.Workflows.WebApi.V1.ApiModels.ModuleModel.Equals(Insite.Workflows.WebApi.V1.ApiModels.ModuleModel)">
            <summary>Determines if this object is equal to the specified other object.</summary>
            <param name="other">The other.</param>
            <returns></returns>
        </member>
        <member name="M:Insite.Workflows.WebApi.V1.ApiModels.ModuleModel.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.
            </returns>
        </member>
        <member name="P:Insite.Workflows.WebApi.V1.ApiModels.ModuleModel.ModuleName">
            <summary>
            Gets or sets the name of the module.
            </summary>
            <value>
            The name of the module.
            </value>
        </member>
        <member name="P:Insite.Workflows.WebApi.V1.ApiModels.ModuleModel.Services">
            <summary>
            Gets or sets the services.
            </summary>
            <value>
            The services.
            </value>
        </member>
        <member name="T:Insite.Workflows.WebApi.V1.ApiModels.ServiceModel">
            <summary></summary>
        </member>
        <member name="M:Insite.Workflows.WebApi.V1.ApiModels.ServiceModel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Insite.Workflows.WebApi.V1.ApiModels.ServiceModel"/> class.
            </summary>
        </member>
        <member name="M:Insite.Workflows.WebApi.V1.ApiModels.ServiceModel.CompareTo(Insite.Workflows.WebApi.V1.ApiModels.ServiceModel)">
            <summary>Compares the current object with another object of the same type.</summary>
            <param name="other">An object to compare with this object.</param>
            <returns>A value that indicates the relative order of the objects being compared.
            The return value has the following meanings: Value Meaning Less than zero
            This object is less than the <paramref name="other"/> parameter.Zero This object
            is equal to <paramref name="other"/>. Greater than zero This object is greater than <paramref name="other"/>.</returns>
        </member>
        <member name="P:Insite.Workflows.WebApi.V1.ApiModels.ServiceModel.ServiceName">
            <summary>
            Gets or sets the name of the service.
            </summary>
            <value>
            The name of the service.
            </value>
        </member>
        <member name="P:Insite.Workflows.WebApi.V1.ApiModels.ServiceModel.AssemblyName">
            <summary>
            Gets or sets the name of the assembly.
            </summary>
            <value>
            The name of the assembly.
            </value>
        </member>
        <member name="P:Insite.Workflows.WebApi.V1.ApiModels.ServiceModel.Assembly">
            <summary>
            Gets or sets the assembly.
            </summary>
            <value>
            The assembly.
            </value>
        </member>
        <member name="P:Insite.Workflows.WebApi.V1.ApiModels.ServiceModel.Handlers">
            <summary>
            Gets or sets the handlers.
            </summary>
            <value>
            The handlers.
            </value>
        </member>
        <member name="P:Insite.Workflows.WebApi.V1.ApiModels.ServiceModel.HashList">
            <summary>
            Gets or sets the hash list.
            </summary>
            <value>
            The hash list.
            </value>
        </member>
        <member name="P:Insite.Workflows.WebApi.V1.ApiModels.ServiceModel.Signature">
            <summary>
            Gets or sets the signature.
            </summary>
            <value>
            The signature.
            </value>
        </member>
        <member name="T:Insite.Workflows.WebApi.V1.ApiModels.HandlerModelCollection">
            <summary></summary>
        </member>
        <member name="M:Insite.Workflows.WebApi.V1.ApiModels.HandlerModelCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Insite.Workflows.WebApi.V1.ApiModels.HandlerModelCollection"/> class.
            </summary>
        </member>
        <member name="P:Insite.Workflows.WebApi.V1.ApiModels.HandlerModelCollection.HandlerModels">
            <summary>
            Gets or sets the parameter results.
            </summary>
            <value>
            The parameter results.
            </value>
        </member>
        <member name="P:Insite.Workflows.WebApi.V1.ApiModels.HandlerModelCollection.TotalHandlerTypes">
            <summary>
            Gets or sets the total handler types.
            </summary>
            <value>
            The total handler types.
            </value>
        </member>
        <member name="T:Insite.Workflows.WebApi.V1.ApiModels.ParameterResultsModel">
            <summary>
            </summary>
        </member>
        <member name="P:Insite.Workflows.WebApi.V1.ApiModels.ParameterResultsModel.ParameterName">
            <summary>
            Gets or sets the name of the parameter.
            </summary>
            <value>
            The name of the parameter.
            </value>
        </member>
        <member name="P:Insite.Workflows.WebApi.V1.ApiModels.ParameterResultsModel.ResultsName">
            <summary>
            Gets or sets the name of the results.
            </summary>
            <value>
            The name of the results.
            </value>
        </member>
        <member name="P:Insite.Workflows.WebApi.V1.ApiModels.ParameterResultsModel.Hash">
            <summary>
            Gets or sets the hash.
            </summary>
            <value>
            The hash.
            </value>
        </member>
        <member name="T:Insite.Workflows.WebApi.V1.Mappers.Factories.HandlerModelCollectionFactory">
            <summary></summary>
        </member>
        <member name="T:Insite.Workflows.WebApi.V1.Mappers.Factories.Interfaces.IHandlerModelCollectionFactory">
            <summary>
            
            </summary>
        </member>
        <member name="M:Insite.Workflows.WebApi.V1.Mappers.Factories.Interfaces.IHandlerModelCollectionFactory.CreateAsync(System.Collections.Generic.ICollection{Insite.Workflows.Services.Dtos.HandlerDto})">
            <summary>Creates the handler model collection asynchronously.</summary>
            <param name="collection">The collection.</param>
            <returns></returns>
        </member>
        <member name="M:Insite.Workflows.WebApi.V1.Mappers.Factories.HandlerModelCollectionFactory.CreateAsync(System.Collections.Generic.ICollection{Insite.Workflows.Services.Dtos.HandlerDto})">
            <summary>
            Creates the handler model collection asynchronously.
            </summary>
            <param name="collection">The collection.</param>
            <returns></returns>
        </member>
        <member name="T:Insite.Workflows.WebApi.V1.Mappers.Factories.Interfaces.IModuleModelFactory">
            <summary></summary>
        </member>
        <member name="M:Insite.Workflows.WebApi.V1.Mappers.Factories.Interfaces.IModuleModelFactory.CreateAsync(System.String,Insite.Workflows.WebApi.V1.ApiModels.HandlerModelCollection,System.Type,Insite.Workflows.WebApi.V1.ApiModels.ModuleModel)">
            <summary>
            Creates the asynchronous.
            </summary>
            <param name="moduleName">Name of the module.</param>
            <param name="handlerCollection">The handler collection.</param>
            <param name="serviceType">Type of the service.</param>
            <param name="moduleModel">The module model.</param>
            <returns></returns>
        </member>
        <member name="T:Insite.Workflows.WebApi.V1.Mappers.Factories.ModuleModelFactory">
            <summary></summary>
        </member>
        <member name="M:Insite.Workflows.WebApi.V1.Mappers.Factories.ModuleModelFactory.CreateAsync(System.String,Insite.Workflows.WebApi.V1.ApiModels.HandlerModelCollection,System.Type,Insite.Workflows.WebApi.V1.ApiModels.ModuleModel)">
            <summary>
            Builds the module.
            </summary>
            <param name="moduleName">Name of the module.</param>
            <param name="handlerCollection">The handler collection.</param>
            <param name="serviceType">The type.</param>
            <param name="moduleModel">The module model.</param>
            <returns></returns>
            <exception cref="T:System.Reflection.AmbiguousMatchException">More than one of the requested attributes was found. </exception>
            <exception cref="T:System.TypeLoadException">A custom attribute type cannot be loaded. </exception>
        </member>
        <member name="M:Insite.Workflows.WebApi.V1.Mappers.Factories.ModuleModelFactory.GetHandlersForHashesAsync(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.HashSet{Insite.Workflows.WebApi.V1.ApiModels.HandlerModel})">
            <summary>
            Gets the handlers for hashes.
            </summary>
            <param name="hashList">The hash list.</param>
            <param name="handlerModelCollection">The handler model collection.</param>
            <returns></returns>
            <remarks>
            this method uses parallel extensions.
            </remarks>
        </member>
        <member name="T:Insite.Workflows.WebApi.V1.Mappers.GetWorkflowCollectionMapper">
            <summary></summary>
        </member>
        <member name="T:Insite.Workflows.WebApi.V1.Mappers.Interfaces.IGetWorkflowCollectionMapper">
            <summary></summary>
        </member>
        <member name="F:Insite.Workflows.WebApi.V1.Mappers.GetWorkflowCollectionMapper.CacheManager">
            <summary></summary>
        </member>
        <member name="F:Insite.Workflows.WebApi.V1.Mappers.GetWorkflowCollectionMapper.HandlerModelCollectionFactory">
            <summary></summary>
        </member>
        <member name="F:Insite.Workflows.WebApi.V1.Mappers.GetWorkflowCollectionMapper.ModuleModelFactory">
            <summary></summary>
        </member>
        <member name="M:Insite.Workflows.WebApi.V1.Mappers.GetWorkflowCollectionMapper.#ctor(InSite.Model.Interfaces.ICacheManagerAsync,Insite.Workflows.WebApi.V1.Mappers.Factories.Interfaces.IModuleModelFactory,Insite.Workflows.WebApi.V1.Mappers.Factories.Interfaces.IHandlerModelCollectionFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Insite.Workflows.WebApi.V1.Mappers.GetWorkflowCollectionMapper"/> class.
            </summary>
            <param name="cacheManager">The cache manager.</param>
            <param name="moduleModelFactory">The module model factory.</param>
            <param name="handlerModelCollectionFactory">The handler model collection factory.</param>
        </member>
        <member name="M:Insite.Workflows.WebApi.V1.Mappers.GetWorkflowCollectionMapper.MapParameter(System.Object,System.Net.Http.HttpRequestMessage)">
            <summary>
            Maps the parameter.
            </summary>
            <param name="apiParameter">The API parameter.</param>
            <param name="request">The request.</param>
            <returns></returns>
        </member>
        <member name="M:Insite.Workflows.WebApi.V1.Mappers.GetWorkflowCollectionMapper.MapResult(Insite.Workflows.Services.Results.GetWorkflowCollectionResult,System.Net.Http.HttpRequestMessage)">
            <summary>
            Maps the result.
            </summary>
            <param name="serviceResult">The service result.</param>
            <param name="request">The request.</param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Insite.Workflows.WebApi.V1.Mappers.GetWorkflowCollectionMapper.MapParameterAsync(System.Object,System.Net.Http.HttpRequestMessage)">
            <summary>
            Maps the parameter asynchronous.
            </summary>
            <param name="apiParameter">The API parameter.</param>
            <param name="request">The request.</param>
            <returns></returns>
        </member>
        <member name="M:Insite.Workflows.WebApi.V1.Mappers.GetWorkflowCollectionMapper.MapResultAsync(Insite.Workflows.Services.Results.GetWorkflowCollectionResult,System.Net.Http.HttpRequestMessage)">
            <summary>
            Maps the result asynchronous.
            </summary>
            <param name="serviceResult">The service result.</param>
            <param name="request">The request.</param>
        </member>
        <member name="M:Insite.Workflows.WebApi.V1.Mappers.GetWorkflowCollectionMapper.CreateModuleCollectionAsync(Insite.Workflows.Services.Results.GetWorkflowCollectionResult,Insite.Workflows.WebApi.V1.ApiModels.HandlerModelCollection)">
            <summary>
            Creates the module collection asynchronous.
            </summary>
            <param name="serviceResult">The service result.</param>
            <param name="handlerCollection">The handler collection.</param>
            <returns></returns>
        </member>
        <member name="T:Insite.Workflows.WebApi.V1.Mappers.GetWorkflowDetailsMapper">
            <summary></summary>
        </member>
        <member name="T:Insite.Workflows.WebApi.V1.Mappers.Interfaces.IGetWorkflowDetailsMapper">
            <summary></summary>
        </member>
        <member name="F:Insite.Workflows.WebApi.V1.Mappers.GetWorkflowDetailsMapper.HandlerModelCollectionFactory">
            <summary>The handler model collection factory.</summary>
        </member>
        <member name="F:Insite.Workflows.WebApi.V1.Mappers.GetWorkflowDetailsMapper.ModuleModelFactory">
            <summary>The module model factory.</summary>
        </member>
        <member name="M:Insite.Workflows.WebApi.V1.Mappers.GetWorkflowDetailsMapper.#ctor(Insite.Workflows.WebApi.V1.Mappers.Factories.Interfaces.IModuleModelFactory,Insite.Workflows.WebApi.V1.Mappers.Factories.Interfaces.IHandlerModelCollectionFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Insite.Workflows.WebApi.V1.Mappers.GetWorkflowDetailsMapper"/> class.
            </summary>
            <param name="moduleModelFactory">The module model factory.</param>
            <param name="handlerModelCollectionFactory">The handler model collection factory.</param>
        </member>
        <member name="M:Insite.Workflows.WebApi.V1.Mappers.GetWorkflowDetailsMapper.MapParameter(System.String,System.Net.Http.HttpRequestMessage)">
            <summary>Maps the parameter.</summary>
            <param name="apiParameter">The API parameter.</param>
            <param name="request">The request.</param>
            <returns>The <see cref="T:Insite.Workflows.Services.Parameters.GetWorkflowDetailsParameter"/>.</returns>
        </member>
        <member name="M:Insite.Workflows.WebApi.V1.Mappers.GetWorkflowDetailsMapper.MapResult(Insite.Workflows.Services.Results.GetWorkflowDetailsResult,System.Net.Http.HttpRequestMessage)">
            <summary>
            Maps the result.
            </summary>
            <param name="serviceResult">The service result.</param>
            <param name="request">The request.</param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Insite.Workflows.WebApi.V1.Mappers.GetWorkflowDetailsMapper.MapParameterAsync(System.String,System.Net.Http.HttpRequestMessage)">
            <summary>
            Maps the parameter asynchronous.
            </summary>
            <param name="apiParameter">The API parameter.</param>
            <param name="request">The request.</param>
            <returns></returns>
        </member>
        <member name="M:Insite.Workflows.WebApi.V1.Mappers.GetWorkflowDetailsMapper.MapResultAsync(Insite.Workflows.Services.Results.GetWorkflowDetailsResult,System.Net.Http.HttpRequestMessage)">
            <summary>
            Maps the result asynchronous.
            </summary>
            <param name="serviceResult">The service result.</param>
            <param name="request">The request.</param>
            <returns></returns>
        </member>
        <member name="T:Insite.Workflows.WebApi.V1.Mappers.JsonHelper">
            <summary></summary>
        </member>
        <member name="M:Insite.Workflows.WebApi.V1.Mappers.JsonHelper.FormatJson(System.String)">
            <summary>
            Formats the json.
            </summary>
            <param name="str">The string.</param>
            <returns></returns>
        </member>
        <member name="M:Insite.Workflows.WebApi.V1.Mappers.JsonHelper.FormatJsonString(System.String)">
            <summary>
            Formats the json string.
            </summary>
            <param name="json">The json.</param>
            <returns></returns>
        </member>
        <member name="T:Insite.Workflows.WebApi.V1.Mappers.Extensions">
            <summary></summary>
        </member>
        <member name="M:Insite.Workflows.WebApi.V1.Mappers.Extensions.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})">
            <summary>
            Iterates over each item of the IEnumerable&lt;T&gt; and executes the
            given Action&lt;T&gt;
            </summary>
            <typeparam name="T"></typeparam>
            <param name="enumerable">The enumerable collection.</param>
            <param name="action">The action.</param>
        </member>
        <member name="T:Insite.Workflows.WebApi.V1.Mappers.TypeHelper">
            <summary></summary>
        </member>
        <member name="M:Insite.Workflows.WebApi.V1.Mappers.TypeHelper.ParameterInfoIsParameterBase(System.Reflection.ParameterInfo)">
            <summary>
            Determines whether [is parameter base] [the specified parameter].
            </summary>
            <param name="parameter">The parameter.</param>
            <returns></returns>
        </member>
        <member name="M:Insite.Workflows.WebApi.V1.Mappers.TypeHelper.IsParameterBase(System.Type)">
            <summary>
            Determines whether [is parameter base] [the specified parameter type].
            </summary>
            <param name="parameterType">Type of the parameter.</param>
            <returns></returns>
        </member>
        <member name="M:Insite.Workflows.WebApi.V1.Mappers.TypeHelper.IsCorrectServiceBase(System.Type)">
            <summary>
            Determines whether [is correct service base] [the specified return type].
            </summary>
            <param name="returnType">Type of the return.</param>
            <returns></returns>
        </member>
        <member name="T:Insite.Workflows.WebApi.V1.WorkflowV1Controller">
             <summary></summary>
            [Authorize(Roles = Role.Administrator)]
        </member>
        <member name="M:Insite.Workflows.WebApi.V1.WorkflowV1Controller.#ctor(Insite.Workflows.WebApi.V1.Mappers.Interfaces.IGetWorkflowCollectionMapper,Insite.Workflows.WebApi.V1.Mappers.Interfaces.IGetWorkflowDetailsMapper,Insite.Workflows.Services.IWorkflowService)">
            <summary>
            Initializes a new instance of the <see cref="T:Insite.Workflows.WebApi.V1.WorkflowV1Controller"/> class.
            </summary>
            <param name="getWorkflowCollectionMapper">The get workflow collection mapper.</param>
            <param name="getWorkflowDetailsMapper">The get workflow details mapper.</param>
            <param name="workflowService">The workflow service.</param>
        </member>
        <member name="M:Insite.Workflows.WebApi.V1.WorkflowV1Controller.Get">
            <summary>
            Gets this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Insite.Workflows.WebApi.V1.WorkflowV1Controller.GetDetails(System.String)">
            <summary>
            Gets the details.
            </summary>
            <param name="serviceName">Name of the service.</param>
            <returns></returns>
        </member>
    </members>
</doc>
