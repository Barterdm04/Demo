<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Insite.Account</name>
    </assembly>
    <members>
        <member name="T:Insite.Account.Content.AccountSettingsPage">
            <summary>The account settings page.</summary>
        </member>
        <member name="T:Insite.Account.Content.AccountSettingsPageCreator">
            <summary>The account settings page creator.</summary>
        </member>
        <member name="M:Insite.Account.Content.AccountSettingsPageCreator.Create">
            <summary>The create.</summary>
            <returns>The <see cref="T:Insite.Account.Content.AccountSettingsPage"/>.</returns>
        </member>
        <member name="T:Insite.Account.Content.AccountSettingsView">
            <summary>The account settings view.</summary>
        </member>
        <member name="P:Insite.Account.Content.AccountSettingsView.PasswordChangedMessage">
            <summary></summary>
        </member>
        <member name="P:Insite.Account.Content.AccountSettingsView.SubscriptionChangedMessage">
            <summary></summary>
        </member>
        <member name="T:Insite.Account.Content.CreateAccountView">
            <summary></summary>
        </member>
        <member name="T:Insite.Account.Content.CreateAccountPageCreator">
            <summary></summary>
        </member>
        <member name="M:Insite.Account.Content.CreateAccountPageCreator.Create">
            <summary></summary>
        </member>
        <member name="T:Insite.Account.Content.SignInPageIsAuthenticatedFilter">
            <summary>
            
            </summary>
        </member>
        <member name="F:Insite.Account.Content.SignInPageIsAuthenticatedFilter.ActionResultFactory">
            <summary>The action result factory.</summary>
        </member>
        <member name="F:Insite.Account.Content.SignInPageIsAuthenticatedFilter.AuthenticationService">
            <summary>The authentication service.</summary>
        </member>
        <member name="M:Insite.Account.Content.SignInPageIsAuthenticatedFilter.#ctor(System.Lazy{Insite.WebFramework.Mvc.IActionResultFactory},System.Lazy{InSite.Model.Interfaces.IAuthenticationService})">
            <summary>Initializes a new instance of the <see cref="T:Insite.Account.Content.SignInPageIsAuthenticatedFilter"/> class.</summary>
            <param name="actionResultFactory">The action result factory.</param>
            <param name="authenticationService">The authentication service.</param>
        </member>
        <member name="M:Insite.Account.Content.SignInPageIsAuthenticatedFilter.Execute(Insite.Account.Content.SignInPage,InSite.Model.Interfaces.IContextProvider)">
            <summary>The execute.</summary>
            <param name="page">The page.</param>
            <param name="contextProvider">The context provider.</param>
            <returns>The <see cref="T:Insite.WebFramework.Content.FilterResult"/>.</returns>
        </member>
        <member name="T:Insite.Account.IdentityServerUrlValidator">
            <summary>The identity server url validator.</summary>
        </member>
        <member name="T:Insite.Account.IIdentityServerUrlValidator">
            <summary>The IdentityServerUrlValidator interface.</summary>
        </member>
        <member name="M:Insite.Account.IIdentityServerUrlValidator.ValidateSettings">
            <summary>The validate settings.</summary>
        </member>
        <member name="F:Insite.Account.IdentityServerUrlValidator.CacheManager">
            <summary>The cache manager.</summary>
        </member>
        <member name="F:Insite.Account.IdentityServerUrlValidator.UnitOfWork">
            <summary>The unit of work.</summary>
        </member>
        <member name="M:Insite.Account.IdentityServerUrlValidator.#ctor(InSite.Model.Interfaces.ICacheManager,InSite.Model.Interfaces.IUnitOfWorkFactory)">
            <summary>Initializes a new instance of the <see cref="T:Insite.Account.IdentityServerUrlValidator"/> class.</summary>
            <param name="cacheManager">The cache Manager.</param>
            <param name="unitOfWorkFactory">The unit of work factory.</param>
        </member>
        <member name="M:Insite.Account.IdentityServerUrlValidator.ValidateSettings">
            <summary>The validate settings.</summary>
            <exception cref="T:System.InvalidOperationException"></exception>
        </member>
        <member name="T:Insite.Account.Content.MyAccountAddressPageCreator">
            <summary>
            The my account address page creator
            </summary>
        </member>
        <member name="M:Insite.Account.Content.MyAccountAddressPageCreator.Create">
            <summary>
            Creates this instance.
            </summary>
            <returns>The newly created MyAccountAddressPage</returns>
        </member>
        <member name="T:Insite.Account.Content.MyAccountAddressPage">
            <summary>
            The my account address page
            </summary>
        </member>
        <member name="T:Insite.Account.Content.MyAccountAddressView">
            <summary>
            The my account address view
            </summary>
        </member>
        <member name="T:Insite.Account.Content.ChangeCustomerPage">
            <summary></summary>
        </member>
        <member name="T:Insite.Account.Content.CreateAccountPage">
            <summary></summary>
        </member>
        <member name="T:Insite.Account.Content.SignInPage">
            <summary></summary>
        </member>
        <member name="T:Insite.Account.Content.ChangeCustomerPageCreator">
            <summary></summary>
        </member>
        <member name="M:Insite.Account.Content.ChangeCustomerPageCreator.Create">
            <summary></summary>
        </member>
        <member name="T:Insite.Account.Content.SignInPageCreator">
            <summary></summary>
        </member>
        <member name="M:Insite.Account.Content.SignInPageCreator.Create">
            <summary></summary>
        </member>
        <member name="T:Insite.Account.Content.ChangeCustomerView">
            <summary></summary>
        </member>
        <member name="T:Insite.Account.Content.SignInPagePreparer">
            <summary>The sign in page preparer.</summary>
        </member>
        <member name="F:Insite.Account.Content.SignInPagePreparer.IdentityServerUrlValidator">
            <summary>The identity server url validator.</summary>
        </member>
        <member name="M:Insite.Account.Content.SignInPagePreparer.#ctor(Insite.Account.IIdentityServerUrlValidator)">
            <summary>Initializes a new instance of the <see cref="T:Insite.Account.Content.SignInPagePreparer"/> class.</summary>
            <param name="identityServerUrlValidator">The identity server url validator.</param>
        </member>
        <member name="M:Insite.Account.Content.SignInPagePreparer.Prepare(Insite.Account.Content.SignInPage)">
            <summary>The prepare.</summary>
            <param name="contentItem">The content item.</param>
        </member>
        <member name="T:Insite.Account.Content.SignInView">
            <summary></summary>
        </member>
        <member name="P:Insite.Account.Content.SignInView.CreateAccountContent">
            <summary></summary>
        </member>
        <member name="P:Insite.Account.Content.SignInView.ChangePasswordInstructions">
            <summary></summary>
        </member>
        <member name="T:Insite.Account.Content.UserAdministration.UserAdministrationContentPage">
            <summary>The user administration content page.</summary>
        </member>
        <member name="T:Insite.Account.Content.UserAdministration.UserAdministrationIsAuthorizedFilter">
            <summary>The user administration is authorized filter.</summary>
        </member>
        <member name="M:Insite.Account.Content.UserAdministration.UserAdministrationIsAuthorizedFilter.#ctor(Insite.WebFramework.Mvc.IActionResultFactory)">
            <summary>Initializes a new instance of the <see cref="T:Insite.Account.Content.UserAdministration.UserAdministrationIsAuthorizedFilter"/> class.</summary>
            <param name="actionResultFactory">The action result factory.</param>
        </member>
        <member name="P:Insite.Account.Content.UserAdministration.UserAdministrationIsAuthorizedFilter.RolesAllowed">
            <summary>Gets the roles allowed.</summary>
        </member>
        <member name="P:Insite.Account.Content.UserAdministration.UserAdministrationIsAuthorizedFilter.RolesDisallowed">
            <summary>Gets the roles disallowed.</summary>
        </member>
        <member name="T:Insite.Account.Content.UserAdministration.UserAdministrationIsEnabledFilter">
            <summary>The user administration is enabled filter.</summary>
        </member>
        <member name="M:Insite.Account.Content.UserAdministration.UserAdministrationIsEnabledFilter.#ctor(Insite.WebFramework.Mvc.IActionResultFactory,InSite.Model.Interfaces.IUnitOfWorkFactory)">
            <summary>Initializes a new instance of the <see cref="T:Insite.Account.Content.UserAdministration.UserAdministrationIsEnabledFilter"/> class.</summary>
            <param name="actionResultFactory">The action result factory.</param>
            <param name="unitOfWorkFactory">The unit of work factory.</param>
        </member>
        <member name="P:Insite.Account.Content.UserAdministration.UserAdministrationIsEnabledFilter.WebSiteConfigurationName">
            <summary>Gets the web site configuration name.</summary>
        </member>
        <member name="T:Insite.Account.Content.UserAdministration.UserListPage">
            <summary>The user list page.</summary>
        </member>
        <member name="T:Insite.Account.Content.UserAdministration.UserListPageCreator">
            <summary>The user list page creator.</summary>
        </member>
        <member name="M:Insite.Account.Content.UserAdministration.UserListPageCreator.Create">
            <summary>The create.</summary>
            <returns>The <see cref="T:Insite.Account.Content.UserAdministration.UserListPage"/>.</returns>
        </member>
        <member name="T:Insite.Account.Content.UserAdministration.UserListView">
            <summary>The user list view.</summary>
        </member>
        <member name="P:Insite.Account.Content.UserAdministration.UserListView.NoUsersFoundMessage">
            <summary>Gets or sets the no users found message.</summary>
        </member>
        <member name="T:Insite.Account.Content.UserAdministration.UserSetupPage">
            <summary>The user setup page.</summary>
        </member>
        <member name="T:Insite.Account.Content.UserAdministration.UserSetupPageCreator">
            <summary>The user setup page creator.</summary>
        </member>
        <member name="M:Insite.Account.Content.UserAdministration.UserSetupPageCreator.Create">
            <summary>The create.</summary>
            <returns>The <see cref="T:Insite.Account.Content.UserAdministration.UserSetupPage"/>.</returns>
        </member>
        <member name="T:Insite.Account.Content.UserAdministration.UserSetupShipToPage">
            <summary>The user setup ship to page.</summary>
        </member>
        <member name="T:Insite.Account.Content.UserAdministration.UserSetupShipToPageCreator">
            <summary>The user setup ship to page creator.</summary>
        </member>
        <member name="M:Insite.Account.Content.UserAdministration.UserSetupShipToPageCreator.Create">
            <summary>The create.</summary>
            <returns>The <see cref="T:Insite.Account.Content.UserAdministration.UserSetupShipToPage"/>.</returns>
        </member>
        <member name="T:Insite.Account.Content.UserAdministration.UserSetupShipToView">
            <summary>The user setup ship to view.</summary>
        </member>
        <member name="T:Insite.Account.Content.UserAdministration.UserSetupView">
            <summary>The user setup view.</summary>
        </member>
        <member name="F:Insite.Account.Content.UserAdministration.UserSetupView.DefaultRoleInformation">
            <summary>The default role information.</summary>
        </member>
        <member name="P:Insite.Account.Content.UserAdministration.UserSetupView.AssignApproverHelpMessage">
            <summary>Gets or sets the assign approver help message.</summary>
        </member>
        <member name="P:Insite.Account.Content.UserAdministration.UserSetupView.RoleInformation">
            <summary>Gets or sets the role information.</summary>
        </member>
        <member name="T:Insite.ContentLibrary.WebsiteRestrictedFilter">
            <summary>The website restricted filter.</summary>
        </member>
        <member name="M:Insite.ContentLibrary.WebsiteRestrictedFilter.#ctor(Insite.WebFramework.Mvc.IActionResultFactory)">
            <summary>Initializes a new instance of the <see cref="T:Insite.ContentLibrary.WebsiteRestrictedFilter"/> class.</summary>
            <param name="actionResultFactory">The action result factory.</param>
        </member>
        <member name="M:Insite.ContentLibrary.WebsiteRestrictedFilter.Execute(Insite.ContentLibrary.Pages.ContentPage,InSite.Model.Interfaces.IContextProvider)">
            <summary>The execute.</summary>
            <param name="page">The page.</param>
            <param name="contextProvider">The context provider.</param>
            <returns>The <see cref="T:Insite.WebFramework.Content.FilterResult"/>.</returns>
        </member>
        <member name="T:Insite.Account.Services.AccountService">
            <summary>
            The default implementation of <see cref="T:Insite.Account.Services.IAccountService"/> that offers functions for managing an Account which
            includes <see cref="T:InSite.Model.UserProfile"/>'s, BillTo <see cref="T:InSite.Model.Customer"/>s, ShipTo <see cref="T:InSite.Model.Customer"/>s and Account
            Security functions.
            </summary>
        </member>
        <member name="T:Insite.Account.Services.IAccountService">
            <summary>
                Public interface that provides the contract for implementing an AccountService. The implementation's primary
                responsibility is to offer functions for managing an Account which includes <see cref="T:InSite.Model.UserProfile"/>'s, BillTo
                <see cref="T:InSite.Model.Customer"/>s,
                ShipTo <see cref="T:InSite.Model.Customer"/>s and Account Security functions.
            </summary>
        </member>
        <member name="M:Insite.Account.Services.IAccountService.GetAccountSettings(Insite.Account.Services.Parameters.GetAccountSettingsParameter)">
            <summary>
                Gets the account settings.
            </summary>
            <param name="parameter">The parameter.</param>
            <returns></returns>
        </member>
        <member name="M:Insite.Account.Services.IAccountService.GetAccountCollection(Insite.Account.Services.Parameters.GetAccountCollectionParameter)">
            <summary>
                Gets the account collection.
            </summary>
            <param name="parameter">The parameter.</param>
            <returns></returns>
        </member>
        <member name="M:Insite.Account.Services.IAccountService.GetAccount(Insite.Account.Services.Parameters.GetAccountParameter)">
            <summary>
                Gets the account.
            </summary>
            <param name="parameter">The parameter.</param>
            <returns></returns>
        </member>
        <member name="M:Insite.Account.Services.IAccountService.AddAccount(Insite.Account.Services.Parameters.AddAccountParameter)">
            <summary>
                Adds the account.
            </summary>
            <param name="parameter">The parameter.</param>
            <returns></returns>
        </member>
        <member name="M:Insite.Account.Services.IAccountService.UpdateAccount(Insite.Account.Services.Parameters.UpdateAccountParameter)">
            <summary>
                Updates the account.
            </summary>
            <param name="parameter">The parameter.</param>
            <returns></returns>
        </member>
        <member name="F:Insite.Account.Services.AccountService.SubscriptionEmailListName">
            <summary>The subscription email list name.</summary>
        </member>
        <member name="F:Insite.Account.Services.AccountService.handlerFactory">
            <summary>The handler factory.</summary>
        </member>
        <member name="M:Insite.Account.Services.AccountService.#ctor(InSite.Model.Interfaces.IUnitOfWorkFactory,InSite.Model.Interfaces.IContextProvider,InSite.Model.Interfaces.ITranslationLocalizer,Insite.Core.Services.Handlers.IHandlerFactory)">
            <summary>Initializes a new instance of the <see cref="T:Insite.Account.Services.AccountService"/> class.</summary>
            <param name="unitOfWorkFactory">The unit of work factory.</param>
            <param name="contextProvider">The context provider.</param>
            <param name="translationLocalizer">The translation localizer.</param>
            <param name="handlerFactory">The handler Factory.</param>
        </member>
        <member name="M:Insite.Account.Services.AccountService.GetAccountSettings(Insite.Account.Services.Parameters.GetAccountSettingsParameter)">
            <summary>Gets the account settings.</summary>
            <param name="parameter">The parameter.</param>
            <returns>The <see cref="T:Insite.Account.Services.Results.GetAccountSettingsResult"/>.</returns>
        </member>
        <member name="M:Insite.Account.Services.AccountService.GetAccountCollection(Insite.Account.Services.Parameters.GetAccountCollectionParameter)">
            <summary>Gets the account collection.</summary>
            <param name="parameter">The parameter.</param>
            <returns>The <see cref="T:Insite.Account.Services.Results.GetAccountCollectionResult"/>.</returns>
        </member>
        <member name="M:Insite.Account.Services.AccountService.GetAccount(Insite.Account.Services.Parameters.GetAccountParameter)">
            <summary>Gets the account.</summary>
            <param name="parameter">The parameter.</param>
            <returns>The <see cref="T:Insite.Account.Services.Results.GetAccountResult"/>.</returns>
        </member>
        <member name="M:Insite.Account.Services.AccountService.AddAccount(Insite.Account.Services.Parameters.AddAccountParameter)">
            <summary>Adds the account.</summary>
            <param name="parameter">The parameter.</param>
            <returns>The <see cref="T:Insite.Account.Services.Results.AddAccountResult"/>.</returns>
        </member>
        <member name="M:Insite.Account.Services.AccountService.UpdateAccount(Insite.Account.Services.Parameters.UpdateAccountParameter)">
            <summary>Updates the account.</summary>
            <param name="parameter">The parameter.</param>
            <returns>The <see cref="T:Insite.Account.Services.Results.UpdateAccountResult"/>.</returns>
        </member>
        <member name="T:Insite.Account.Services.AccountShipToService">
            <summary>
            The user service.
            </summary>
        </member>
        <member name="T:Insite.Account.Services.IAccountShipToService">
            <summary>
            The UserService interface.
            </summary>
        </member>
        <member name="M:Insite.Account.Services.IAccountShipToService.GetUserShipToCollection(Insite.Account.Services.Parameters.GetAccountShipToCollectionParameter)">
            <summary>The get user ship to collection.</summary>
            <param name="parameter">The parameter.</param>
            <returns>The <see cref="T:Insite.Account.Services.Results.GetAccountShipToCollectionResult"/>.</returns>
        </member>
        <member name="M:Insite.Account.Services.IAccountShipToService.UpdateUserShipToCollection(Insite.Account.Services.Parameters.UpdateAccountShipToCollectionParameter)">
            <summary>The update user ship to collection.</summary>
            <param name="parameter">The parameter.</param>
            <returns>The <see cref="T:Insite.Account.Services.Results.UpdateAccountShipToCollectionResult"/>.</returns>
        </member>
        <member name="F:Insite.Account.Services.AccountShipToService.HandlerFactory">
            <summary>
            The _handler factory.
            </summary>
        </member>
        <member name="M:Insite.Account.Services.AccountShipToService.#ctor(InSite.Model.Interfaces.IUnitOfWorkFactory,InSite.Model.Interfaces.IContextProvider,InSite.Model.Interfaces.ITranslationLocalizer,Insite.Core.Services.Handlers.IHandlerFactory)">
            <summary>Initializes a new instance of the <see cref="T:Insite.Account.Services.AccountShipToService"/> class.</summary>
            <param name="unitOfWorkFactory">The unit of work factory.</param>
            <param name="contextProvider">The context provider.</param>
            <param name="translationLocalizer">The translation localizer.</param>
            <param name="handlerFactory">The handler factory.</param>
        </member>
        <member name="M:Insite.Account.Services.AccountShipToService.GetUserShipToCollection(Insite.Account.Services.Parameters.GetAccountShipToCollectionParameter)">
            <summary>The get user ship to collection.</summary>
            <param name="parameter">The parameter.</param>
            <returns>The <see cref="T:Insite.Account.Services.Results.GetAccountShipToCollectionResult"/>.</returns>
        </member>
        <member name="M:Insite.Account.Services.AccountShipToService.UpdateUserShipToCollection(Insite.Account.Services.Parameters.UpdateAccountShipToCollectionParameter)">
            <summary>The update user ship to collection.</summary>
            <param name="parameter">The parameter.</param>
            <returns>The <see cref="T:Insite.Account.Services.Results.UpdateAccountShipToCollectionResult"/>.</returns>
        </member>
        <member name="T:Insite.Account.Services.Dtos.AccountShipToDto">
            <summary>
            The user ship to model.
            </summary>
        </member>
        <member name="P:Insite.Account.Services.Dtos.AccountShipToDto.ShipToNumber">
            <summary>Gets or sets the ship to number.</summary>
        </member>
        <member name="P:Insite.Account.Services.Dtos.AccountShipToDto.City">
            <summary>Gets or sets the city.</summary>
        </member>
        <member name="P:Insite.Account.Services.Dtos.AccountShipToDto.State">
            <summary>Gets or sets the state.</summary>
        </member>
        <member name="P:Insite.Account.Services.Dtos.AccountShipToDto.Address">
            <summary>Gets or sets the address.</summary>
        </member>
        <member name="P:Insite.Account.Services.Dtos.AccountShipToDto.Assign">
            <summary>Gets or sets a value indicating whether assign.</summary>
        </member>
        <member name="P:Insite.Account.Services.Dtos.AccountShipToDto.IsDefaultShipTo">
            <summary>Gets or sets a value indicating whether is default ship to.</summary>
        </member>
        <member name="P:Insite.Account.Services.Dtos.AccountShipToDto.CostCode">
            <summary>Gets or sets the cost code.</summary>
        </member>
        <member name="T:Insite.Account.Services.Dtos.CustomerCostCodeDto">
            <summary>The customer cost code dto.</summary>
        </member>
        <member name="P:Insite.Account.Services.Dtos.CustomerCostCodeDto.CustomerCostCodeId">
            <summary>Gets or sets the customer cost code id.</summary>
        </member>
        <member name="P:Insite.Account.Services.Dtos.CustomerCostCodeDto.CostCode">
            <summary>Gets or sets the cost code.</summary>
        </member>
        <member name="P:Insite.Account.Services.Dtos.CustomerCostCodeDto.Description">
            <summary>Gets or sets the description.</summary>
        </member>
        <member name="P:Insite.Account.Services.Dtos.CustomerCostCodeDto.IsActive">
            <summary>Gets or sets a value indicating whether is active.</summary>
        </member>
        <member name="T:Insite.Account.Services.Handlers.AddAccountHandler">
            <summary>The add account handler.</summary>
        </member>
        <member name="F:Insite.Account.Services.Handlers.AddAccountHandler.AccountHelper">
            <summary>The account helper</summary>
        </member>
        <member name="F:Insite.Account.Services.Handlers.AddAccountHandler.AuthenticationService">
            <summary>The authentication service</summary>
        </member>
        <member name="F:Insite.Account.Services.Handlers.AddAccountHandler.CartOrderProviderFactory">
            <summary>The cart order provider.</summary>
        </member>
        <member name="F:Insite.Account.Services.Handlers.AddAccountHandler.CustomerService">
            <summary>The customer service.</summary>
        </member>
        <member name="F:Insite.Account.Services.Handlers.AddAccountHandler.EmailService">
            <summary>The email service</summary>
        </member>
        <member name="F:Insite.Account.Services.Handlers.AddAccountHandler.SessionService">
            <summary>The session service.</summary>
        </member>
        <member name="M:Insite.Account.Services.Handlers.AddAccountHandler.#ctor(System.Lazy{InSite.Model.Interfaces.IAuthenticationService},System.Lazy{InSite.Model.Interfaces.IEmailService},Insite.Customers.Services.ICustomerService,Insite.Account.Services.ISessionService,InSite.Model.Interfaces.ICartOrderProviderFactory,Insite.Account.Services.Handlers.Helpers.IAccountHelper)">
            <summary>Initializes a new instance of the <see cref="T:Insite.Account.Services.Handlers.AddAccountHandler"/> class. </summary>
            <param name="authenticationService">The authentication service.</param>
            <param name="emailService">The email service.</param>
            <param name="customerService">The customer service.</param>
            <param name="sessionService">The session service.</param>
            <param name="cartOrderProviderFactory">The cart Order Provider Factory.</param>
            <param name="accountHelper">The account helper.</param>
        </member>
        <member name="M:Insite.Account.Services.Handlers.AddAccountHandler.Execute(InSite.Model.Interfaces.IUnitOfWork,Insite.Account.Services.Parameters.AddAccountParameter,Insite.Account.Services.Results.AddAccountResult)">
            <summary>The execute.</summary>
            <param name="unitOfWork">The unit of work.</param>
            <param name="parameter">The parameter.</param>
            <param name="result">The result.</param>
            <returns>The <see cref="T:Insite.Account.Services.Results.AddAccountResult"/>.</returns>
        </member>
        <member name="M:Insite.Account.Services.Handlers.AddAccountHandler.SetIsApprovedApproverRole(InSite.Model.Interfaces.IUnitOfWork,InSite.Model.UserProfile,Insite.Account.Services.Parameters.AccountParameterBase,Insite.Core.Services.ResultBase)">
            <summary>The set is approved approver role.</summary>
            <param name="unitOfWork">The unit of work.</param>
            <param name="userProfile">The user Profile.</param>
            <param name="parameter">The parameter.</param>
            <param name="result">The result.</param>
            <returns>The <see cref="T:Insite.Account.Services.Results.UpdateAccountResult"/>.</returns>
        </member>
        <member name="M:Insite.Account.Services.Handlers.AddAccountHandler.ValidateParameters(InSite.Model.Interfaces.IUnitOfWork,Insite.Account.Services.Parameters.AddAccountParameter,Insite.Account.Services.Results.AddAccountResult)">
            <summary>The validate parameters.</summary>
            <param name="unitOfWork">The unit of work.</param>
            <param name="parameter">The parameter.</param>
            <param name="result">The result.</param>
            <returns>The <see cref="T:Insite.Account.Services.Results.AddAccountResult"/>.</returns>
        </member>
        <member name="M:Insite.Account.Services.Handlers.AddAccountHandler.ValidateEmail(InSite.Model.Interfaces.IUnitOfWork,System.String,Insite.Core.Services.ResultBase)">
            <summary>Validates the email.</summary>
            <param name="unitOfWork">The unit of work.</param>
            <param name="email">The email.</param>
            <param name="result">The result.</param>
            <returns>The <see cref="T:Insite.Core.Services.ResultBase"/>.</returns>
        </member>
        <member name="M:Insite.Account.Services.Handlers.AddAccountHandler.ValidateApprover(InSite.Model.Interfaces.IUnitOfWork,Insite.Account.Services.Parameters.AddAccountParameter,Insite.Account.Services.Results.AddAccountResult)">
            <summary>The validate parameters.</summary>
            <param name="unitOfWork">The unit of work.</param>
            <param name="parameter">The parameter.</param>
            <param name="result">The result.</param>
            <returns>The <see cref="T:Insite.Account.Services.Results.AddAccountResult"/>.</returns>
        </member>
        <member name="P:Insite.Account.Services.Handlers.AddAccountHandler.Order">
            <summary>
            Gets the order in which the handler is executed,
            lower values are executed first.
            </summary>
        </member>
        <member name="T:Insite.Account.Services.Handlers.AddSessionHandler">
            <summary>The add session handler.</summary>
        </member>
        <member name="F:Insite.Account.Services.Handlers.AddSessionHandler.AuthenticationService">
            <summary>The authentication service.</summary>
        </member>
        <member name="F:Insite.Account.Services.Handlers.AddSessionHandler.CartService">
            <summary>The cart service.</summary>
        </member>
        <member name="F:Insite.Account.Services.Handlers.AddSessionHandler.ContextProvider">
            <summary>The context provider.</summary>
        </member>
        <member name="F:Insite.Account.Services.Handlers.AddSessionHandler.CustomerService">
            <summary>The customer service.</summary>
        </member>
        <member name="F:Insite.Account.Services.Handlers.AddSessionHandler.HandlerFactory">
            <summary>The handler factory.</summary>
        </member>
        <member name="M:Insite.Account.Services.Handlers.AddSessionHandler.#ctor(InSite.Model.Interfaces.IAuthenticationService,InSite.Model.Interfaces.IContextProvider,Insite.Customers.Services.ICustomerService,Insite.Cart.Services.ICartService,Insite.Core.Services.Handlers.IHandlerFactory)">
            <summary>Initializes a new instance of the <see cref="T:Insite.Account.Services.Handlers.AddSessionHandler"/> class.</summary>
            <param name="authenticationService">The authentication service.</param>
            <param name="contextProvider">The context provider.</param>
            <param name="customerService">The customer Service.</param>
            <param name="cartService">The cart Service.</param>
            <param name="handlerFactory">The handler Factory.</param>
        </member>
        <member name="M:Insite.Account.Services.Handlers.AddSessionHandler.Execute(InSite.Model.Interfaces.IUnitOfWork,Insite.Account.Services.Parameters.AddSessionParameter,Insite.Account.Services.Results.AddSessionResult)">
            <summary>The execute.</summary>
            <param name="unitOfWork">The unit of work.</param>
            <param name="parameter">The parameter.</param>
            <param name="result">The result.</param>
            <returns>The <see cref="T:Insite.Account.Services.Results.AddSessionResult"/>.</returns>
        </member>
        <member name="P:Insite.Account.Services.Handlers.AddSessionHandler.Order">
            <summary>
            Gets the order in which the handler is executed,
            lower values are executed first.
            </summary>
        </member>
        <member name="T:Insite.Account.Services.Handlers.GetAccountAdministrationCollectionHandler">
            <summary>
            The get account administration collection handler
            </summary>
        </member>
        <member name="F:Insite.Account.Services.Handlers.GetAccountAdministrationCollectionHandler.AccountHelper">
            <summary>The account helper.</summary>
        </member>
        <member name="M:Insite.Account.Services.Handlers.GetAccountAdministrationCollectionHandler.#ctor(Insite.Account.Services.Handlers.Helpers.IAccountHelper)">
            <summary>Initializes a new instance of the <see cref="T:Insite.Account.Services.Handlers.GetAccountAdministrationCollectionHandler"/> class.</summary>
            <param name="accountHelper">The account helper.</param>
        </member>
        <member name="M:Insite.Account.Services.Handlers.GetAccountAdministrationCollectionHandler.Execute(InSite.Model.Interfaces.IUnitOfWork,Insite.Account.Services.Parameters.GetAccountCollectionParameter,Insite.Account.Services.Results.GetAccountCollectionResult)">
            <summary>The execute.</summary>
            <param name="unitOfWork">The unit of work.</param>
            <param name="parameter">The parameter.</param>
            <param name="result">The result.</param>
            <returns>The <see cref="T:Insite.Account.Services.Results.GetAccountCollectionResult"/>.</returns>
        </member>
        <member name="P:Insite.Account.Services.Handlers.GetAccountAdministrationCollectionHandler.Order">
            <summary> Gets the order in which the handler is executed, lower values are executed first. </summary>
        </member>
        <member name="T:Insite.Account.Services.Handlers.GetAccountCollectionHandler">
            <summary>The get account collection handler.</summary>
        </member>
        <member name="F:Insite.Account.Services.Handlers.GetAccountCollectionHandler.AccountHelper">
            <summary>The account helper.</summary>
        </member>
        <member name="F:Insite.Account.Services.Handlers.GetAccountCollectionHandler.CustomerService">
            <summary>The customer service.</summary>
        </member>
        <member name="M:Insite.Account.Services.Handlers.GetAccountCollectionHandler.#ctor(System.Lazy{InSite.Model.Interfaces.IAuthenticationService},System.Lazy{InSite.Model.Interfaces.IEmailService},Insite.Customers.Services.ICustomerService,Insite.Account.Services.Handlers.Helpers.IAccountHelper)">
            <summary>Initializes a new instance of the <see cref="T:Insite.Account.Services.Handlers.GetAccountCollectionHandler"/> class.</summary>
            <param name="authenticationService">The authentication Service.</param>
            <param name="emailService">The email Service.</param>
            <param name="customerService">The customer service.</param>
            <param name="accountHelper">The account helper.</param>
        </member>
        <member name="M:Insite.Account.Services.Handlers.GetAccountCollectionHandler.Execute(InSite.Model.Interfaces.IUnitOfWork,Insite.Account.Services.Parameters.GetAccountCollectionParameter,Insite.Account.Services.Results.GetAccountCollectionResult)">
            <summary>The execute.</summary>
            <param name="unitOfWork">The unit of work.</param>
            <param name="parameter">The parameter.</param>
            <param name="result">The result.</param>
            <returns>The <see cref="T:Insite.Account.Services.Results.GetAccountCollectionResult"/>.</returns>
        </member>
        <member name="P:Insite.Account.Services.Handlers.GetAccountCollectionHandler.Order">
            <summary> Gets the order in which the handler is executed, lower values are executed first. </summary>
        </member>
        <member name="T:Insite.Account.Services.Handlers.GetAccountHandler">
            <summary>The get account handler.</summary>
        </member>
        <member name="F:Insite.Account.Services.Handlers.GetAccountHandler.AccountHelper">
            <summary>The account helper</summary>
        </member>
        <member name="M:Insite.Account.Services.Handlers.GetAccountHandler.#ctor(Insite.Account.Services.Handlers.Helpers.IAccountHelper)">
            <summary>Initializes a new instance of the <see cref="T:Insite.Account.Services.Handlers.GetAccountHandler"/> class.</summary>
            <param name="accountHelper">The account helper.</param>
        </member>
        <member name="M:Insite.Account.Services.Handlers.GetAccountHandler.Execute(InSite.Model.Interfaces.IUnitOfWork,Insite.Account.Services.Parameters.GetAccountParameter,Insite.Account.Services.Results.GetAccountResult)">
            <summary>The execute.</summary>
            <param name="unitOfWork">The unit of work.</param>
            <param name="parameter">The parameter.</param>
            <param name="result">The result.</param>
            <returns>The <see cref="T:Insite.Account.Services.Results.GetAccountResult"/>.</returns>
        </member>
        <member name="P:Insite.Account.Services.Handlers.GetAccountHandler.Order">
            <summary>
            Gets the order in which the handler is executed,
            lower values are executed first.
            </summary>
        </member>
        <member name="T:Insite.Account.Services.Handlers.GetAccountSettingsHandler">
            <summary>The get account settings handler.</summary>
        </member>
        <member name="F:Insite.Account.Services.Handlers.GetAccountSettingsHandler.AuthenticationService">
            <summary>
            The authentication service.
            </summary>
        </member>
        <member name="M:Insite.Account.Services.Handlers.GetAccountSettingsHandler.#ctor(InSite.Model.Interfaces.IAuthenticationService)">
            <summary>Initializes a new instance of the <see cref="T:Insite.Account.Services.Handlers.GetAccountSettingsHandler"/> class.</summary>
            <param name="authenticationService">The authentication service.</param>
        </member>
        <member name="M:Insite.Account.Services.Handlers.GetAccountSettingsHandler.Execute(InSite.Model.Interfaces.IUnitOfWork,Insite.Account.Services.Parameters.GetAccountSettingsParameter,Insite.Account.Services.Results.GetAccountSettingsResult)">
            <summary>The execute.</summary>
            <param name="unitOfWork">The unit of work.</param>
            <param name="parameter">The parameter.</param>
            <param name="result">The result.</param>
            <returns>The <see cref="T:Insite.Account.Services.Results.GetAccountSettingsResult"/>.</returns>
        </member>
        <member name="P:Insite.Account.Services.Handlers.GetAccountSettingsHandler.Order">
            <summary>Gets the order.</summary>
        </member>
        <member name="T:Insite.Account.Services.Handlers.GetAccountShipToCollectionHandler">
            <summary>
            The get account ship to collection handler.
            </summary>
        </member>
        <member name="F:Insite.Account.Services.Handlers.GetAccountShipToCollectionHandler.AccountHelper">
            <summary>The account helper.</summary>
        </member>
        <member name="F:Insite.Account.Services.Handlers.GetAccountShipToCollectionHandler.DefaultShipToProvider">
            <summary>The default ship to provider.</summary>
        </member>
        <member name="M:Insite.Account.Services.Handlers.GetAccountShipToCollectionHandler.#ctor(InSite.Model.Interfaces.IDefaultShipToProvider,Insite.Account.Services.Handlers.Helpers.IAccountHelper)">
            <summary>Initializes a new instance of the <see cref="T:Insite.Account.Services.Handlers.GetAccountShipToCollectionHandler"/> class.</summary>
            <param name="defaultShipToProvider">The default ship to provider.</param>
            <param name="accountHelper">The account Helper.</param>
        </member>
        <member name="M:Insite.Account.Services.Handlers.GetAccountShipToCollectionHandler.Execute(InSite.Model.Interfaces.IUnitOfWork,Insite.Account.Services.Parameters.GetAccountShipToCollectionParameter,Insite.Account.Services.Results.GetAccountShipToCollectionResult)">
            <summary>Executes the handler.</summary>
            <param name="unitOfWork">The unit of work.</param>
            <param name="parameter">The parameter.</param>
            <param name="result">The result.</param>
            <returns>The <see cref="T:Insite.Account.Services.Results.GetAccountShipToCollectionResult"/>.</returns>
        </member>
        <member name="P:Insite.Account.Services.Handlers.GetAccountShipToCollectionHandler.Order">
            <summary>Gets the order.</summary>
        </member>
        <member name="T:Insite.Account.Services.Handlers.GetSessionHandler">
            <summary>The get session handler.</summary>
        </member>
        <member name="F:Insite.Account.Services.Handlers.GetSessionHandler.AuthenticationService">
            <summary>The authentication service.</summary>
        </member>
        <member name="F:Insite.Account.Services.Handlers.GetSessionHandler.ContextProvider">
            <summary>The context provider.</summary>
        </member>
        <member name="F:Insite.Account.Services.Handlers.GetSessionHandler.DefaultCustomerProvider">
            <summary>The default customer provider. TODO this should be using CustomerService instead</summary>
        </member>
        <member name="F:Insite.Account.Services.Handlers.GetSessionHandler.DefaultShipToProvider">
            <summary>The default ship to provider. TODO this should be using CustomerService instead</summary>
        </member>
        <member name="F:Insite.Account.Services.Handlers.GetSessionHandler.TranslationLocalizer">
            <summary>The translation localizer.</summary>
        </member>
        <member name="M:Insite.Account.Services.Handlers.GetSessionHandler.#ctor(InSite.Model.Interfaces.IAuthenticationService,InSite.Model.Interfaces.IContextProvider,InSite.Model.Interfaces.IDefaultCustomerProvider,InSite.Model.Interfaces.IDefaultShipToProvider,InSite.Model.Interfaces.ITranslationLocalizer)">
            <summary>Initializes a new instance of the <see cref="T:Insite.Account.Services.Handlers.GetSessionHandler"/> class.</summary>
            <param name="authenticationService">The authentication service.</param>
            <param name="contextProvider">The context provider.</param>
            <param name="defaultCustomerProvider">The default customer provider.</param>
            <param name="defaultShipToProvider">The default ship to provider.</param>
            <param name="translationLocalizer">The translation Localizer.</param>
        </member>
        <member name="M:Insite.Account.Services.Handlers.GetSessionHandler.Execute(InSite.Model.Interfaces.IUnitOfWork,Insite.Account.Services.Parameters.GetSessionParameter,Insite.Account.Services.Results.GetSessionResult)">
            <summary>The execute.</summary>
            <param name="unitOfWork">The unit of work.</param>
            <param name="parameter">The parameter.</param>
            <param name="result">The result.</param>
            <returns>The <see cref="T:Insite.Account.Services.Results.GetSessionResult"/>.</returns>
        </member>
        <member name="P:Insite.Account.Services.Handlers.GetSessionHandler.Order">
            <summary>Gets the order.</summary>
        </member>
        <member name="T:Insite.Account.Services.Handlers.Helpers.AccountHelper">
            <summary>The account helper.</summary>
        </member>
        <member name="T:Insite.Account.Services.Handlers.Helpers.IAccountHelper">
            <summary>The AccountHelper interface.</summary>
        </member>
        <member name="M:Insite.Account.Services.Handlers.Helpers.IAccountHelper.UpdateGetAccountResult(Insite.Account.Services.Results.GetAccountResult,InSite.Model.Interfaces.IUnitOfWork,InSite.Model.UserProfile)">
            <summary>The update get account result.</summary>
            <param name="result">The result.</param>
            <param name="unitOfWork">The unit of work.</param>
            <param name="userProfile">The user profile.</param>
            <returns>The <see cref="T:Insite.Account.Services.Results.GetAccountResult"/>.</returns>
        </member>
        <member name="M:Insite.Account.Services.Handlers.Helpers.IAccountHelper.SetRole(System.String,InSite.Model.UserProfile)">
            <summary>The set role.</summary>
            <param name="role">The role.</param>
            <param name="userProfile">The user profile.</param>
        </member>
        <member name="M:Insite.Account.Services.Handlers.Helpers.IAccountHelper.GetRoleName(InSite.Model.UserProfile)">
            <summary>The get current role.</summary>
            <param name="userProfile">The user profile.</param>
            <returns>The <see cref="T:System.String"/>.</returns>
        </member>
        <member name="P:Insite.Account.Services.Handlers.Helpers.IAccountHelper.StandardRoles">
            <summary>Gets or sets the standard roles.</summary>
        </member>
        <member name="P:Insite.Account.Services.Handlers.Helpers.IAccountHelper.RolesThatCanBeApprovers">
            <summary>Gets or sets the roles that can be approvers.</summary>
        </member>
        <member name="P:Insite.Account.Services.Handlers.Helpers.IAccountHelper.RolesThatRequireApprover">
            <summary>Gets or sets the roles that require approver.</summary>
        </member>
        <member name="P:Insite.Account.Services.Handlers.Helpers.IAccountHelper.RolesThatCanViewApprovals">
            <summary>Gets or sets the roles that can view approvals.</summary>
        </member>
        <member name="P:Insite.Account.Services.Handlers.Helpers.IAccountHelper.RolesThatCanViewUsers">
            <summary>Gets or sets the roles that can view users.</summary>
        </member>
        <member name="P:Insite.Account.Services.Handlers.Helpers.IAccountHelper.RolesThatCanAddUsers">
            <summary>Gets or sets the roles that can add users.</summary>
        </member>
        <member name="P:Insite.Account.Services.Handlers.Helpers.IAccountHelper.RolesThatCanUpdateUsers">
            <summary>Gets or sets the roles that can update users.</summary>
        </member>
        <member name="F:Insite.Account.Services.Handlers.Helpers.AccountHelper.AuthenticationService">
            <summary>The authentication service.</summary>
        </member>
        <member name="F:Insite.Account.Services.Handlers.Helpers.AccountHelper.EmailService">
            <summary>The email service.</summary>
        </member>
        <member name="M:Insite.Account.Services.Handlers.Helpers.AccountHelper.#ctor(System.Lazy{InSite.Model.Interfaces.IAuthenticationService},System.Lazy{InSite.Model.Interfaces.IEmailService})">
            <summary>Initializes a new instance of the <see cref="T:Insite.Account.Services.Handlers.Helpers.AccountHelper"/> class.</summary>
            <param name="authenticationService">The authentication Service.</param>
            <param name="emailService">The email Service.</param>
        </member>
        <member name="M:Insite.Account.Services.Handlers.Helpers.AccountHelper.UpdateGetAccountResult(Insite.Account.Services.Results.GetAccountResult,InSite.Model.Interfaces.IUnitOfWork,InSite.Model.UserProfile)">
            <summary>The update get account result.</summary>
            <param name="result">The result.</param>
            <param name="unitOfWork">The unit of work.</param>
            <param name="userProfile">The user profile.</param>
            <returns>The <see cref="T:Insite.Account.Services.Results.GetAccountResult"/>.</returns>
        </member>
        <member name="M:Insite.Account.Services.Handlers.Helpers.AccountHelper.SetRole(System.String,InSite.Model.UserProfile)">
            <summary>The set role.</summary>
            <param name="role">The role.</param>
            <param name="userProfile">The user profile.</param>
        </member>
        <member name="M:Insite.Account.Services.Handlers.Helpers.AccountHelper.GetRoleName(InSite.Model.UserProfile)">
            <summary>The get current role.</summary>
            <param name="userProfile">The user profile.</param>
            <returns>The <see cref="T:System.String"/>.</returns>
        </member>
        <member name="P:Insite.Account.Services.Handlers.Helpers.AccountHelper.StandardRoles">
            <summary>Gets or sets the standard roles.</summary>
        </member>
        <member name="P:Insite.Account.Services.Handlers.Helpers.AccountHelper.RolesThatCanBeApprovers">
            <summary>Gets or sets the roles that can be approvers.</summary>
        </member>
        <member name="P:Insite.Account.Services.Handlers.Helpers.AccountHelper.RolesThatRequireApprover">
            <summary>Gets or sets the roles that require approver.</summary>
        </member>
        <member name="P:Insite.Account.Services.Handlers.Helpers.AccountHelper.RolesThatCanViewApprovals">
            <summary>Gets or sets the roles that can view approvals.</summary>
        </member>
        <member name="P:Insite.Account.Services.Handlers.Helpers.AccountHelper.RolesThatCanViewUsers">
            <summary>Gets or sets the roles that can view users.</summary>
        </member>
        <member name="P:Insite.Account.Services.Handlers.Helpers.AccountHelper.RolesThatCanAddUsers">
            <summary>Gets or sets the roles that can add users.</summary>
        </member>
        <member name="P:Insite.Account.Services.Handlers.Helpers.AccountHelper.RolesThatCanUpdateUsers">
            <summary>Gets or sets the roles that can update users.</summary>
        </member>
        <member name="T:Insite.Account.Services.Handlers.RemoveSessionHandler">
            <summary>The remove session handler.</summary>
        </member>
        <member name="F:Insite.Account.Services.Handlers.RemoveSessionHandler.AuthenticationService">
            <summary>The authentication service.</summary>
        </member>
        <member name="F:Insite.Account.Services.Handlers.RemoveSessionHandler.ContextProvider">
            <summary>The context provider.</summary>
        </member>
        <member name="F:Insite.Account.Services.Handlers.RemoveSessionHandler.HttpContextBase">
            <summary>The http context base.</summary>
        </member>
        <member name="M:Insite.Account.Services.Handlers.RemoveSessionHandler.#ctor(InSite.Model.Interfaces.IAuthenticationService,InSite.Model.Interfaces.IContextProvider,System.Web.HttpContextBase)">
            <summary>Initializes a new instance of the <see cref="T:Insite.Account.Services.Handlers.RemoveSessionHandler"/> class.</summary>
            <param name="authenticationService">The authentication service.</param>
            <param name="contextProvider">The context provider.</param>
            <param name="httpContextBase">The http context base.</param>
        </member>
        <member name="M:Insite.Account.Services.Handlers.RemoveSessionHandler.Execute(InSite.Model.Interfaces.IUnitOfWork,Insite.Account.Services.Parameters.RemoveSessionParameter,Insite.Account.Services.Results.RemoveSessionResult)">
            <summary>The execute.</summary>
            <param name="unitOfWork">The unit of work.</param>
            <param name="parameter">The parameter.</param>
            <param name="result">The result.</param>
            <returns>The <see cref="T:Insite.Account.Services.Results.RemoveSessionResult"/>.</returns>
        </member>
        <member name="P:Insite.Account.Services.Handlers.RemoveSessionHandler.Order">
            <summary>Gets the order.</summary>
        </member>
        <member name="T:Insite.Account.Services.Handlers.UpdateAccountHandler">
            <summary>The update account handler.</summary>
        </member>
        <member name="F:Insite.Account.Services.Handlers.UpdateAccountHandler.AuthenticationService">
            <summary>The authentication service</summary>
        </member>
        <member name="F:Insite.Account.Services.Handlers.UpdateAccountHandler.EmailService">
            <summary>The email service</summary>
        </member>
        <member name="F:Insite.Account.Services.Handlers.UpdateAccountHandler.HandlerFactory">
            <summary>The handler factory.</summary>
        </member>
        <member name="F:Insite.Account.Services.Handlers.UpdateAccountHandler.AccountHelper">
            <summary>The account helper</summary>
        </member>
        <member name="M:Insite.Account.Services.Handlers.UpdateAccountHandler.#ctor(System.Lazy{InSite.Model.Interfaces.IAuthenticationService},System.Lazy{InSite.Model.Interfaces.IEmailService},Insite.Core.Services.Handlers.IHandlerFactory,Insite.Account.Services.Handlers.Helpers.IAccountHelper)">
            <summary>Initializes a new instance of the <see cref="T:Insite.Account.Services.Handlers.UpdateAccountHandler"/> class.</summary>
            <param name="authenticationService">The authentication Service.</param>
            <param name="emailService">The email Service.</param>
            <param name="handlerFactory">The handler Factory.</param>
            <param name="accountHelper">The account helper.</param>
        </member>
        <member name="M:Insite.Account.Services.Handlers.UpdateAccountHandler.Execute(InSite.Model.Interfaces.IUnitOfWork,Insite.Account.Services.Parameters.UpdateAccountParameter,Insite.Account.Services.Results.UpdateAccountResult)">
            <summary>The execute.</summary>
            <param name="unitOfWork">The unit of work.</param>
            <param name="parameter">The parameter.</param>
            <param name="result">The result.</param>
            <returns>The <see cref="T:Insite.Account.Services.Results.UpdateAccountResult"/>.</returns>
        </member>
        <member name="M:Insite.Account.Services.Handlers.UpdateAccountHandler.SetIsApprovedApproverRole(InSite.Model.Interfaces.IUnitOfWork,InSite.Model.UserProfile,Insite.Account.Services.Parameters.AccountParameterBase,Insite.Core.Services.ResultBase)">
            <summary>The set is approved approver role.</summary>
            <param name="unitOfWork">The unit of work.</param>
            <param name="userProfile">The user Profile.</param>
            <param name="parameter">The parameter.</param>
            <param name="result">The result.</param>
            <returns>The <see cref="T:Insite.Account.Services.Results.UpdateAccountResult"/>.</returns>
        </member>
        <member name="M:Insite.Account.Services.Handlers.UpdateAccountHandler.SetEmailAndIsSubscribed(InSite.Model.Interfaces.IUnitOfWork,InSite.Model.UserProfile,Insite.Account.Services.Parameters.AccountParameterBase,Insite.Core.Services.ResultBase)">
            <summary>The set email and is subscribed.</summary>
            <param name="unitOfWork">The unit of work.</param>
            <param name="userProfile">The user profile.</param>
            <param name="parameter">The parameter.</param>
            <param name="result">The result.</param>
            <returns>The <see cref="T:Insite.Core.Services.ResultBase"/>.</returns>
        </member>
        <member name="M:Insite.Account.Services.Handlers.UpdateAccountHandler.ValidateEmail(InSite.Model.Interfaces.IUnitOfWork,System.String,Insite.Core.Services.ResultBase)">
            <summary>The validate email.</summary>
            <param name="unitOfWork">The unit of work.</param>
            <param name="email">The email.</param>
            <param name="result">The result.</param>
            <returns>The <see cref="T:Insite.Core.Services.ResultBase"/>.</returns>
        </member>
        <member name="P:Insite.Account.Services.Handlers.UpdateAccountHandler.Order">
            <summary>
            Gets the order in which the handler is executed,
            lower values are executed first.
            </summary>
        </member>
        <member name="T:Insite.Account.Services.Handlers.UpdateAccountShipToCollectionHandler">
            <summary>
            The update user ship to collection handler.
            </summary>
        </member>
        <member name="F:Insite.Account.Services.Handlers.UpdateAccountShipToCollectionHandler.AccountHelper">
            <summary>The account helper.</summary>
        </member>
        <member name="F:Insite.Account.Services.Handlers.UpdateAccountShipToCollectionHandler.DefaultShipToProvider">
            <summary>The default ship to provider.</summary>
        </member>
        <member name="M:Insite.Account.Services.Handlers.UpdateAccountShipToCollectionHandler.#ctor(InSite.Model.Interfaces.IDefaultShipToProvider,Insite.Account.Services.Handlers.Helpers.IAccountHelper)">
            <summary>Initializes a new instance of the <see cref="T:Insite.Account.Services.Handlers.UpdateAccountShipToCollectionHandler"/> class.</summary>
            <param name="defaultShipToProvider">The default ship to provider.</param>
            <param name="accountHelper">The account Helper.</param>
        </member>
        <member name="M:Insite.Account.Services.Handlers.UpdateAccountShipToCollectionHandler.Execute(InSite.Model.Interfaces.IUnitOfWork,Insite.Account.Services.Parameters.UpdateAccountShipToCollectionParameter,Insite.Account.Services.Results.UpdateAccountShipToCollectionResult)">
            <summary>The execute.</summary>
            <param name="unitOfWork">The unit of work.</param>
            <param name="parameter">The parameter.</param>
            <param name="result">The result.</param>
            <returns>The <see cref="T:Insite.Core.Services.ResultBase"/>.</returns>
        </member>
        <member name="P:Insite.Account.Services.Handlers.UpdateAccountShipToCollectionHandler.Order">
            <summary>Gets the order.</summary>
        </member>
        <member name="T:Insite.Account.Services.Handlers.UpdateSessionHandler">
            <summary>The update session handler.</summary>
        </member>
        <member name="F:Insite.Account.Services.Handlers.UpdateSessionHandler.AuthenticationService">
            <summary>The authentication service.</summary>
        </member>
        <member name="F:Insite.Account.Services.Handlers.UpdateSessionHandler.CartService">
            <summary>The cart service.</summary>
        </member>
        <member name="F:Insite.Account.Services.Handlers.UpdateSessionHandler.ContextProvider">
            <summary>The context provider.</summary>
        </member>
        <member name="F:Insite.Account.Services.Handlers.UpdateSessionHandler.CustomerService">
            <summary>The customer service.</summary>
        </member>
        <member name="F:Insite.Account.Services.Handlers.UpdateSessionHandler.EmailService">
            <summary>The email service.</summary>
        </member>
        <member name="M:Insite.Account.Services.Handlers.UpdateSessionHandler.#ctor(InSite.Model.Interfaces.IAuthenticationService,InSite.Model.Interfaces.IContextProvider,System.Lazy{Insite.Customers.Services.ICustomerService},System.Lazy{Insite.Cart.Services.ICartService},InSite.Model.Interfaces.IEmailService)">
            <summary>Initializes a new instance of the <see cref="T:Insite.Account.Services.Handlers.UpdateSessionHandler"/> class.</summary>
            <param name="authenticationService">The authentication service.</param>
            <param name="contextProvider">The context provider.</param>
            <param name="customerService">The customer Service.</param>
            <param name="cartService">The cart Service.</param>
            <param name="emailService">The email service.</param>
        </member>
        <member name="M:Insite.Account.Services.Handlers.UpdateSessionHandler.Execute(InSite.Model.Interfaces.IUnitOfWork,Insite.Account.Services.Parameters.UpdateSessionParameter,Insite.Account.Services.Results.UpdateSessionResult)">
            <summary>The execute.</summary>
            <param name="unitOfWork">The unit of work.</param>
            <param name="parameter">The parameter.</param>
            <param name="result">The result.</param>
            <returns>The <see cref="T:Insite.Account.Services.Results.UpdateSessionResult"/>.</returns>
        </member>
        <member name="M:Insite.Account.Services.Handlers.UpdateSessionHandler.ResetPassword(InSite.Model.Interfaces.IUnitOfWork,Insite.Account.Services.Parameters.UpdateSessionParameter,Insite.Account.Services.Results.UpdateSessionResult,System.String)">
            <summary>The reset password.</summary>
            <param name="unitOfWork">The unit of work.</param>
            <param name="parameter">The parameter.</param>
            <param name="result">The result.</param>
            <param name="applicationName">The application name.</param>
            <returns>The <see cref="T:Insite.Account.Services.Results.UpdateSessionResult"/>.</returns>
        </member>
        <member name="M:Insite.Account.Services.Handlers.UpdateSessionHandler.ChangePassword(InSite.Model.Interfaces.IUnitOfWork,Insite.Account.Services.Parameters.UpdateSessionParameter,Insite.Account.Services.Results.UpdateSessionResult,System.String)">
            <summary>The change password.</summary>
            <param name="unitOfWork">The unit of work.</param>
            <param name="parameter">The parameter.</param>
            <param name="result">The result.</param>
            <param name="applicationName">The application name.</param>
            <returns>The <see cref="T:Insite.Account.Services.Results.UpdateSessionResult"/>.</returns>
        </member>
        <member name="M:Insite.Account.Services.Handlers.UpdateSessionHandler.SendForgotPasswordEmail(InSite.Model.EmailList,System.String,System.String)">
            <summary>The send forgot password email.</summary>
            <param name="emailList">The email list.</param>
            <param name="email">The email.</param>
            <param name="newPassword">The new password.</param>
        </member>
        <member name="P:Insite.Account.Services.Handlers.UpdateSessionHandler.Order">
            <summary>Gets the order.</summary>
        </member>
        <member name="T:Insite.Account.Services.Parameters.AccountParameterBase">
            <summary>The account parameter base.</summary>
        </member>
        <member name="M:Insite.Account.Services.Parameters.AccountParameterBase.#ctor(InSite.Model.Core.CurrentContext)">
            <summary>Initializes a new instance of the <see cref="T:Insite.Account.Services.Parameters.AccountParameterBase"/> class.</summary>
            <param name="currentContext">The current context.</param>
        </member>
        <member name="P:Insite.Account.Services.Parameters.AccountParameterBase.Email">
            <summary>
            Gets or sets the email.
            </summary>
        </member>
        <member name="P:Insite.Account.Services.Parameters.AccountParameterBase.Password">
            <summary>
            Gets or sets the password.
            </summary>
        </member>
        <member name="P:Insite.Account.Services.Parameters.AccountParameterBase.FirstName">
            <summary>
            Gets or sets the first name.
            </summary>
        </member>
        <member name="P:Insite.Account.Services.Parameters.AccountParameterBase.LastName">
            <summary>
            Gets or sets the last name.
            </summary>
        </member>
        <member name="P:Insite.Account.Services.Parameters.AccountParameterBase.Role">
            <summary>
            Gets or sets the role.
            </summary>
        </member>
        <member name="P:Insite.Account.Services.Parameters.AccountParameterBase.Approver">
            <summary>
            Gets or sets the approver.
            </summary>
        </member>
        <member name="P:Insite.Account.Services.Parameters.AccountParameterBase.IsApproved">
            <summary>
            Gets or sets a value indicating whether is approved.
            </summary>
        </member>
        <member name="P:Insite.Account.Services.Parameters.AccountParameterBase.IsSubscribed">
            <summary>
            Gets or sets a value indicating whether this instance is subscribed.
            TODO 4.0 please let's just kill this
            </summary>
        </member>
        <member name="T:Insite.Account.Services.Parameters.GetAccountShipToCollectionParameter">
            <summary>
            The get user ship to collection parameter.
            </summary>
        </member>
        <member name="M:Insite.Account.Services.Parameters.GetAccountShipToCollectionParameter.#ctor(InSite.Model.Core.CurrentContext,System.Guid)">
            <summary>Initializes a new instance of the <see cref="T:Insite.Account.Services.Parameters.GetAccountShipToCollectionParameter"/> class.</summary>
            <param name="currentContext">The current context.</param>
            <param name="userId">The user id.</param>
        </member>
        <member name="P:Insite.Account.Services.Parameters.GetAccountShipToCollectionParameter.UserId">
            <summary>Gets or sets the user id.</summary>
        </member>
        <member name="T:Insite.Account.Services.Parameters.GetSessionParameter">
            <summary>This class defines the parameters required to call <see cref="M:Insite.Account.Services.ISessionService.GetSession(Insite.Account.Services.Parameters.GetSessionParameter)"/>.</summary>
        </member>
        <member name="M:Insite.Account.Services.Parameters.GetSessionParameter.#ctor(InSite.Model.Core.CurrentContext)">
            <summary>Initializes a new instance of the <see cref="T:Insite.Account.Services.Parameters.GetSessionParameter"/> class.</summary>
            <param name="currentContext">The current context.</param>
        </member>
        <member name="T:Insite.Account.Services.Parameters.UpdateAccountShipToCollectionParameter">
            <summary>
            The apply user ship to collection parameter.
            </summary>
        </member>
        <member name="M:Insite.Account.Services.Parameters.UpdateAccountShipToCollectionParameter.#ctor(InSite.Model.Core.CurrentContext)">
            <summary>Initializes a new instance of the <see cref="T:Insite.Account.Services.Parameters.UpdateAccountShipToCollectionParameter"/> class.</summary>
            <param name="currentContext">The current context.</param>
        </member>
        <member name="P:Insite.Account.Services.Parameters.UpdateAccountShipToCollectionParameter.UserId">
            <summary>Gets or sets the user id.</summary>
        </member>
        <member name="P:Insite.Account.Services.Parameters.UpdateAccountShipToCollectionParameter.ShipToCollection">
            <summary>Gets or sets the ship to collection.</summary>
        </member>
        <member name="T:Insite.Account.Services.Results.GetAccountShipToCollectionResult">
            <summary>The get account ship to collection result.</summary>
        </member>
        <member name="P:Insite.Account.Services.Results.GetAccountShipToCollectionResult.UserShipToCollection">
            <summary>Gets or sets the user ship to collection.</summary>
        </member>
        <member name="P:Insite.Account.Services.Results.GetAccountShipToCollectionResult.CostCodeCollection">
            <summary>Gets or sets the cost code collection.</summary>
        </member>
        <member name="T:Insite.Account.Services.Results.GetSessionResult">
            <summary>This class defines the results returned from calling <see cref="M:Insite.Account.Services.ISessionService.GetSession(Insite.Account.Services.Parameters.GetSessionParameter)"/>.</summary>
        </member>
        <member name="M:Insite.Account.Services.Results.GetSessionResult.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Insite.Account.Services.Results.GetSessionResult"/> class.
            </summary>
        </member>
        <member name="P:Insite.Account.Services.Results.GetSessionResult.IsAuthenticated">
            <summary>
                Gets or sets a value indicating whether this instance is authenticated.
            </summary>
        </member>
        <member name="P:Insite.Account.Services.Results.GetSessionResult.HasRfqUpdates">
            <summary>
                Gets or sets a value indicating whether this instance has RFQ updates.
            </summary>
        </member>
        <member name="P:Insite.Account.Services.Results.GetSessionResult.Email">
            <summary>
                Gets or sets the email.
            </summary>
        </member>
        <member name="P:Insite.Account.Services.Results.GetSessionResult.UserName">
            <summary>
                Gets or sets the name of the user.
            </summary>
        </member>
        <member name="P:Insite.Account.Services.Results.GetSessionResult.UserLabel">
            <summary>
                Gets or sets the user label.
            </summary>
        </member>
        <member name="P:Insite.Account.Services.Results.GetSessionResult.UserRoles">
            <summary>
                Gets or sets the user roles.
            </summary>
        </member>
        <member name="P:Insite.Account.Services.Results.GetSessionResult.DisplayChangeCustomerLink">
            <summary>
            Gets or sets DisplayChangeCustomerLink 
            </summary>
        </member>
        <member name="P:Insite.Account.Services.Results.GetSessionResult.GetBillToResult">
            <summary>
                Gets or sets the get bill to result.
            </summary>
        </member>
        <member name="P:Insite.Account.Services.Results.GetSessionResult.GetShipToResult">
            <summary>
                Gets or sets the get ship to result.
            </summary>
        </member>
        <member name="P:Insite.Account.Services.Results.GetSessionResult.GetLanguageResult">
            <summary>
                Gets or sets the get language result.
            </summary>
        </member>
        <member name="P:Insite.Account.Services.Results.GetSessionResult.GetCurrencyResult">
            <summary>
                Gets or sets the get currency result.
            </summary>
        </member>
        <member name="P:Insite.Account.Services.Results.GetSessionResult.DeviceType">
            <summary>
                Gets or sets the type of the device.
            </summary>
        </member>
        <member name="P:Insite.Account.Services.Results.GetSessionResult.Persona">
            <summary>
                Gets or sets the persona.
            </summary>
        </member>
        <member name="P:Insite.Account.Services.Results.GetSessionResult.DashboardIsHomepage">
            <summary>
            Gets or sets a value indicating whether [dashboard is homepage].
            </summary>
            <value>
              <c>true</c> if [dashboard is homepage]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Insite.Account.Services.Results.GetSessionResult.IsSalesPerson">
            <summary>
            Gets or sets a value indicating whether current user profile has salesperson
            </summary>
        </member>
        <member name="P:Insite.Account.Services.Results.GetSessionResult.CustomLandingPage">
            <summary>
            Gets or sets the custom landing page.
            </summary>
            <value>
            The custom landing page.
            </value>
        </member>
        <member name="P:Insite.Account.Services.Results.GetSessionResult.SignOutText">
            <summary>
            Gets or sets the sign out text.
            </summary>
        </member>
        <member name="T:Insite.Account.Services.Parameters.GetAccountCollectionParameter">
            <summary>This class defines the parameters required to call <see cref="M:Insite.Account.Services.IAccountService.GetAccountCollection(Insite.Account.Services.Parameters.GetAccountCollectionParameter)"/>.</summary>
        </member>
        <member name="M:Insite.Account.Services.Parameters.GetAccountCollectionParameter.#ctor(InSite.Model.Core.CurrentContext)">
            <summary>Initializes a new instance of the <see cref="T:Insite.Account.Services.Parameters.GetAccountCollectionParameter"/> class.</summary>
            <param name="currentContext">The current context.</param>
        </member>
        <member name="P:Insite.Account.Services.Parameters.GetAccountCollectionParameter.BillToId">
            <summary>
            The BillTo <see cref="T:InSite.Model.Customer"/>Id to retrive (leave null for the current BillTo).
            </summary>
        </member>
        <member name="P:Insite.Account.Services.Parameters.GetAccountCollectionParameter.SearchText">
            <summary>
            Gets or sets the search text.
            </summary>
        </member>
        <member name="P:Insite.Account.Services.Parameters.GetAccountCollectionParameter.IsAdministration">
            <summary>
            Gets or sets a value indicating whether should return account administration.
            </summary>
        </member>
        <member name="T:Insite.Account.Services.Results.GetAccountCollectionResult">
            <summary>This class defines the results returned from calling <see cref="M:Insite.Account.Services.IAccountService.GetAccountCollection(Insite.Account.Services.Parameters.GetAccountCollectionParameter)"/>.</summary>
        </member>
        <member name="M:Insite.Account.Services.Results.GetAccountCollectionResult.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Insite.Account.Services.Results.GetAccountCollectionResult"/> class.
            </summary>
        </member>
        <member name="P:Insite.Account.Services.Results.GetAccountCollectionResult.GetAccountResults">
            <summary>
                Gets or sets the get account results.
            </summary>
        </member>
        <member name="T:Insite.Account.Services.Parameters.AddSessionParameter">
            <summary>This class defines the parameters required to call <see cref="M:Insite.Account.Services.ISessionService.AddSession(Insite.Account.Services.Parameters.AddSessionParameter)"/>.</summary>
        </member>
        <member name="M:Insite.Account.Services.Parameters.AddSessionParameter.#ctor(InSite.Model.Core.CurrentContext,System.String,System.String)">
            <summary>Initializes a new instance of the <see cref="T:Insite.Account.Services.Parameters.AddSessionParameter"/> class.</summary>
            <param name="currentContext">The current Context.</param>
            <param name="userName">Name of the user.</param>
            <param name="password">The password.</param>
        </member>
        <member name="P:Insite.Account.Services.Parameters.AddSessionParameter.UserName">
            <summary>
            Gets or sets the name of the user.
            </summary>
        </member>
        <member name="P:Insite.Account.Services.Parameters.AddSessionParameter.Password">
            <summary>
            Gets or sets the password.
            </summary>
        </member>
        <member name="P:Insite.Account.Services.Parameters.AddSessionParameter.IsExternalIdentity">
            <summary>
            Is an external identity.
            </summary>
        </member>
        <member name="T:Insite.Account.Services.Results.AddSessionResult">
            <summary>This class defines the results returned from calling <see cref="M:Insite.Account.Services.ISessionService.AddSession(Insite.Account.Services.Parameters.AddSessionParameter)"/>.</summary>
        </member>
        <member name="P:Insite.Account.Services.Results.AddSessionResult.GetSessionResult">
            <summary>Gets or sets the session.</summary>
        </member>
        <member name="T:Insite.Account.Services.ISessionService">
            <summary>
                Public interface that provides the contract for implementing a SessionService. The implementation's primary
                responsibility is to offer functions for managing the user session.
            </summary>
        </member>
        <member name="M:Insite.Account.Services.ISessionService.GetSession(Insite.Account.Services.Parameters.GetSessionParameter)">
            <summary>Gets the session.</summary>
            <param name="parameter">The parameter.</param>
            <returns></returns>
        </member>
        <member name="M:Insite.Account.Services.ISessionService.AddSession(Insite.Account.Services.Parameters.AddSessionParameter)">
            <summary>Sign the user in.</summary>
            <param name="parameter">The parameter.</param>
            <returns></returns>
        </member>
        <member name="M:Insite.Account.Services.ISessionService.UpdateSession(Insite.Account.Services.Parameters.UpdateSessionParameter)">
            <summary>Updates the current billto, shipto, language and/or currency.</summary>
            <param name="parameter">The parameter.</param>
            <returns></returns>
        </member>
        <member name="M:Insite.Account.Services.ISessionService.RemoveSession(Insite.Account.Services.Parameters.RemoveSessionParameter)">
            <summary>Signs the user out.</summary>
            <param name="parameter">The parameter.</param>
            <returns></returns>
        </member>
        <member name="T:Insite.Account.Services.Parameters.AddAccountParameter">
            <summary>This class defines the parameters required to call <see cref="M:Insite.Account.Services.IAccountService.AddAccount(Insite.Account.Services.Parameters.AddAccountParameter)"/>.</summary>
        </member>
        <member name="M:Insite.Account.Services.Parameters.AddAccountParameter.#ctor(InSite.Model.Core.CurrentContext,System.String,System.String,System.String)">
            <summary>Initializes a new instance of the <see cref="T:Insite.Account.Services.Parameters.AddAccountParameter"/> class.</summary>
            <param name="currentContext">The current Context.</param>
            <param name="email">The email.</param>
            <param name="userName">Name of the user.</param>
            <param name="password">The password.</param>
        </member>
        <member name="P:Insite.Account.Services.Parameters.AddAccountParameter.UserName">
            <summary>
            Gets or sets the name of the user.
            </summary>
        </member>
        <member name="P:Insite.Account.Services.Parameters.AddAccountParameter.IsGuest">
            <summary>
            Gets or sets a value indicating whether this instance is guest.
            </summary>
        </member>
        <member name="T:Insite.Account.Services.Parameters.RemoveSessionParameter">
            <summary>This class defines the parameters required to call <see cref="M:Insite.Account.Services.ISessionService.RemoveSession(Insite.Account.Services.Parameters.RemoveSessionParameter)"/>.</summary>
        </member>
        <member name="M:Insite.Account.Services.Parameters.RemoveSessionParameter.#ctor(InSite.Model.Core.CurrentContext)">
            <summary>Initializes a new instance of the <see cref="T:Insite.Account.Services.Parameters.RemoveSessionParameter"/> class.</summary>
            <param name="currentContext">The current context.</param>
        </member>
        <member name="T:Insite.Account.Services.Results.RemoveSessionResult">
            <summary>This class defines the results returned from calling <see cref="M:Insite.Account.Services.ISessionService.RemoveSession(Insite.Account.Services.Parameters.RemoveSessionParameter)"/>.</summary>
        </member>
        <member name="T:Insite.Account.Services.Results.AddAccountResult">
            <summary>This class defines the results returned from calling <see cref="M:Insite.Account.Services.IAccountService.AddAccount(Insite.Account.Services.Parameters.AddAccountParameter)"/>.</summary>
        </member>
        <member name="P:Insite.Account.Services.Results.AddAccountResult.UserProfile">
            <summary>Gets or sets the user profile.</summary>
        </member>
        <member name="P:Insite.Account.Services.Results.AddAccountResult.BillTo">
            <summary>Gets or sets the bill to.</summary>
        </member>
        <member name="P:Insite.Account.Services.Results.AddAccountResult.ShipTo">
            <summary>Gets or sets the ship to.</summary>
        </member>
        <member name="P:Insite.Account.Services.Results.AddAccountResult.IsSubscribed">
            <summary>Gets or sets a value indicating whether this instance is subscribed.</summary>
        </member>
        <member name="T:Insite.Account.Services.Parameters.GetAccountSettingsParameter">
            <summary>This class defines the parameters required to call <see cref="M:Insite.Account.Services.IAccountService.GetAccountSettings(Insite.Account.Services.Parameters.GetAccountSettingsParameter)"/>.</summary>
        </member>
        <member name="M:Insite.Account.Services.Parameters.GetAccountSettingsParameter.#ctor(InSite.Model.Core.CurrentContext)">
            <summary>Initializes a new instance of the <see cref="T:Insite.Account.Services.Parameters.GetAccountSettingsParameter"/> class.</summary>
            <param name="currentContext">The current context.</param>
        </member>
        <member name="T:Insite.Account.Services.Results.GetAccountSettingsResult">
            <summary>This class defines the results returned from calling <see cref="M:Insite.Account.Services.IAccountService.GetAccountSettings(Insite.Account.Services.Parameters.GetAccountSettingsParameter)"/>.</summary>
        </member>
        <member name="P:Insite.Account.Services.Results.GetAccountSettingsResult.AllowCreateAccount">
            <summary>
                Gets or sets a value indicating whether [allow create account].
            </summary>
        </member>
        <member name="P:Insite.Account.Services.Results.GetAccountSettingsResult.AllowGuestCheckout">
            <summary>
                Gets or sets a value indicating whether [allow guest checkout].
            </summary>
        </member>
        <member name="P:Insite.Account.Services.Results.GetAccountSettingsResult.AllowSubscribeToNewsLetter">
            <summary>
                Gets or sets a value indicating whether [allow subscribe to news letter].
            </summary>
        </member>
        <member name="P:Insite.Account.Services.Results.GetAccountSettingsResult.RequireSelectCustomerOnSignIn">
            <summary>
                Gets or sets a value indicating whether [require select customer on sign in].
            </summary>
        </member>
        <member name="P:Insite.Account.Services.Results.GetAccountSettingsResult.PasswordMinimumLength">
            <summary>
                Gets or sets the minimum length of the password.
            </summary>
            <value>
                The minimum length of the password.
            </value>
        </member>
        <member name="T:Insite.Account.Services.Parameters.GetAccountParameter">
            <summary>This class defines the parameters required to call <see cref="M:Insite.Account.Services.IAccountService.GetAccount(Insite.Account.Services.Parameters.GetAccountParameter)"/>.</summary>
        </member>
        <member name="M:Insite.Account.Services.Parameters.GetAccountParameter.#ctor(InSite.Model.Core.CurrentContext)">
            <summary>Initializes a new instance of the <see cref="T:Insite.Account.Services.Parameters.GetAccountParameter"/> class.</summary>
            <param name="currentContext">The current context.</param>
        </member>
        <member name="P:Insite.Account.Services.Parameters.GetAccountParameter.Id">
            <summary>
            Gets or sets the identifier.
            </summary>
        </member>
        <member name="P:Insite.Account.Services.Parameters.GetAccountParameter.GetAvailableApprovers">
            <summary>
            Gets or sets a value indicating whether get available approvers.
            </summary>
        </member>
        <member name="P:Insite.Account.Services.Parameters.GetAccountParameter.GetAvailableRoles">
            <summary>
            Gets or sets a value indicating whether get available roles.
            </summary>
        </member>
        <member name="T:Insite.Account.Services.Results.GetAccountResult">
            <summary>This class defines the results returned from calling <see cref="M:Insite.Account.Services.IAccountService.GetAccount(Insite.Account.Services.Parameters.GetAccountParameter)"/>.</summary>
        </member>
        <member name="P:Insite.Account.Services.Results.GetAccountResult.UserProfile">
            <summary>
                Gets or sets the user profile.
            </summary>
        </member>
        <member name="P:Insite.Account.Services.Results.GetAccountResult.IsSubscribed">
            <summary>
                Gets or sets a value indicating whether this instance is subscribed.
            </summary>
        </member>
        <member name="P:Insite.Account.Services.Results.GetAccountResult.CanApproveOrders">
            <summary>
                Gets or sets a value indicating whether this instance can approve orders.
            </summary>
        </member>
        <member name="P:Insite.Account.Services.Results.GetAccountResult.CanViewApprovalOrders">
            <summary>
                Gets or sets a value indicating whether this instance can view approval orders.
            </summary>
        </member>
        <member name="P:Insite.Account.Services.Results.GetAccountResult.Role">
            <summary>
            Gets or sets the role.
            </summary>
        </member>
        <member name="P:Insite.Account.Services.Results.GetAccountResult.DefaultLocation">
            <summary>
            Gets or sets the default location.
            </summary>
        </member>
        <member name="P:Insite.Account.Services.Results.GetAccountResult.AvailableApprovers">
            <summary>
            Gets or sets the available approvers.
            </summary>
        </member>
        <member name="P:Insite.Account.Services.Results.GetAccountResult.AvailableRoles">
            <summary>
            Gets or sets the available roles.
            </summary>
        </member>
        <member name="T:Insite.Account.Services.Parameters.UpdateSessionParameter">
            <summary>This class defines the parameters required to call <see cref="M:Insite.Account.Services.ISessionService.UpdateSession(Insite.Account.Services.Parameters.UpdateSessionParameter)"/>.</summary>
        </member>
        <member name="M:Insite.Account.Services.Parameters.UpdateSessionParameter.#ctor(InSite.Model.Core.CurrentContext)">
            <summary>Initializes a new instance of the <see cref="T:Insite.Account.Services.Parameters.UpdateSessionParameter"/> class.</summary>
            <param name="currentContext">The current context.</param>
        </member>
        <member name="P:Insite.Account.Services.Parameters.UpdateSessionParameter.Email">
            <summary>
            Gets or sets the email.
            </summary>
        </member>
        <member name="P:Insite.Account.Services.Parameters.UpdateSessionParameter.UserName">
            <summary>
            Gets or sets the name of the user.
            </summary>
        </member>
        <member name="P:Insite.Account.Services.Parameters.UpdateSessionParameter.Password">
            <summary>
            Gets or sets the password.
            </summary>
        </member>
        <member name="P:Insite.Account.Services.Parameters.UpdateSessionParameter.NewPassword">
            <summary>
            Gets or sets the new password.
            </summary>
        </member>
        <member name="P:Insite.Account.Services.Parameters.UpdateSessionParameter.ResetPassword">
            <summary>
            Gets or sets a value indicating whether to reset the password.
            </summary>
        </member>
        <member name="P:Insite.Account.Services.Parameters.UpdateSessionParameter.BillToId">
            <summary>
            Gets or sets the bill to identifier.
            </summary>
        </member>
        <member name="P:Insite.Account.Services.Parameters.UpdateSessionParameter.ShipToId">
            <summary>
            Gets or sets the ship to identifier.
            </summary>
        </member>
        <member name="P:Insite.Account.Services.Parameters.UpdateSessionParameter.LanguageId">
            <summary>
            Gets or sets the language identifier.
            </summary>
        </member>
        <member name="P:Insite.Account.Services.Parameters.UpdateSessionParameter.CurrencyId">
            <summary>
            Gets or sets the currency identifier.
            </summary>
        </member>
        <member name="P:Insite.Account.Services.Parameters.UpdateSessionParameter.HasRfqUpdates">
            <summary>
            Gets or sets the has RFQ updates.
            </summary>
        </member>
        <member name="P:Insite.Account.Services.Parameters.UpdateSessionParameter.DashboardIsHomepage">
            <summary>
            Gets or sets the dashboard is homepage.
            </summary>
        </member>
        <member name="T:Insite.Account.Services.Results.UpdateAccountShipToCollectionResult">
            <summary>The update user ship to collection result.</summary>
        </member>
        <member name="P:Insite.Account.Services.Results.UpdateAccountShipToCollectionResult.ShipToCollection">
            <summary>
            Gets or sets the ship to collection.
            </summary>
        </member>
        <member name="P:Insite.Account.Services.Results.UpdateAccountShipToCollectionResult.CostCodeCollection">
            <summary>
            Gets or sets the cost code collection.
            </summary>
        </member>
        <member name="T:Insite.Account.Services.Results.UpdateSessionResult">
            <summary>This class defines the results returned from calling <see cref="M:Insite.Account.Services.ISessionService.UpdateSession(Insite.Account.Services.Parameters.UpdateSessionParameter)"/>.</summary>
        </member>
        <member name="P:Insite.Account.Services.Results.UpdateSessionResult.BillToId">
            <summary>
                Gets or sets the bill to identifier.
            </summary>
        </member>
        <member name="P:Insite.Account.Services.Results.UpdateSessionResult.ShipToId">
            <summary>
                Gets or sets the ship to identifier.
            </summary>
        </member>
        <member name="P:Insite.Account.Services.Results.UpdateSessionResult.LanguageCode">
            <summary>
                Gets or sets the language code.
            </summary>
        </member>
        <member name="P:Insite.Account.Services.Results.UpdateSessionResult.CurrencyCode">
            <summary>
                Gets or sets the currency code.
            </summary>
        </member>
        <member name="P:Insite.Account.Services.Results.UpdateSessionResult.HasRfqUpdates">
            <summary>
            Gets or sets a value indicating whether this instance has RFQ updates.
            </summary>
            <value>
            <c>true</c> if this instance has RFQ updates; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Insite.Account.Services.Results.UpdateSessionResult.DashboardIsHomepage">
            <summary>
            Gets or sets a value indicating whether [dashboard is homepage].
            </summary>
            <value>
              <c>true</c> if [dashboard is homepage]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Insite.Account.Services.Results.UpdateSessionResult.CustomLandingPage">
            <summary>
            Gets or sets the custom landing page.
            </summary>
            <value>
            The custom landing page.
            </value>
        </member>
        <member name="T:Insite.Account.Services.SessionService">
            <summary>
            The default implementation of <see cref="T:Insite.Account.Services.ISessionService"/> that offers functions for managing signing in, signing
            out and current user settings.
            </summary>
        </member>
        <member name="M:Insite.Account.Services.SessionService.#ctor(InSite.Model.Interfaces.IUnitOfWorkFactory,InSite.Model.Interfaces.IContextProvider,InSite.Model.Interfaces.ITranslationLocalizer,Insite.Core.Services.Handlers.IHandlerFactory)">
            <summary>Initializes a new instance of the <see cref="T:Insite.Account.Services.SessionService"/> class.</summary>
            <param name="unitOfWorkFactory">The unit of work factory.</param>
            <param name="contextProvider">The context provider.</param>
            <param name="translationLocalizer">The translation localizer.</param>
            <param name="handlerFactory">The handler factory.</param>
        </member>
        <member name="M:Insite.Account.Services.SessionService.GetSession(Insite.Account.Services.Parameters.GetSessionParameter)">
            <summary>Gets the session.</summary>
            <param name="parameter">The parameter.</param>
            <returns>The <see cref="T:Insite.Account.Services.Results.GetSessionResult"/>.</returns>
        </member>
        <member name="M:Insite.Account.Services.SessionService.AddSession(Insite.Account.Services.Parameters.AddSessionParameter)">
            <summary>Sign the user in.</summary>
            <param name="parameter">The parameter.</param>
            <returns>The <see cref="T:Insite.Account.Services.Results.AddSessionResult"/>.</returns>
        </member>
        <member name="M:Insite.Account.Services.SessionService.UpdateSession(Insite.Account.Services.Parameters.UpdateSessionParameter)">
            <summary>Updates the current BillTo <see cref="T:InSite.Model.Customer"/>, ShipTo <see cref="T:InSite.Model.Customer"/>, <see cref="T:InSite.Model.Language"/>
            and/or <see cref="T:InSite.Model.Currency"/>.</summary>
            <param name="parameter">The parameter.</param>
            <returns>The <see cref="T:Insite.Account.Services.Results.UpdateSessionResult"/>.</returns>
        </member>
        <member name="M:Insite.Account.Services.SessionService.RemoveSession(Insite.Account.Services.Parameters.RemoveSessionParameter)">
            <summary>Signs the user out.</summary>
            <param name="parameter">The parameter.</param>
            <returns>The <see cref="T:Insite.Account.Services.Results.RemoveSessionResult"/>.</returns>
        </member>
        <member name="T:Insite.Account.Services.Parameters.UpdateAccountParameter">
            <summary>This class defines the parameters required to call <see cref="M:Insite.Account.Services.IAccountService.UpdateAccount(Insite.Account.Services.Parameters.UpdateAccountParameter)"/>.</summary>
        </member>
        <member name="M:Insite.Account.Services.Parameters.UpdateAccountParameter.#ctor(InSite.Model.Core.CurrentContext)">
            <summary>Initializes a new instance of the <see cref="T:Insite.Account.Services.Parameters.UpdateAccountParameter"/> class.</summary>
            <param name="currentContext">The current context.</param>
        </member>
        <member name="P:Insite.Account.Services.Parameters.UpdateAccountParameter.Id">
            <summary>
            Gets or sets the id.
            </summary>
        </member>
        <member name="T:Insite.Account.Services.Results.UpdateAccountResult">
            <summary>This class defines the results returned from calling <see cref="M:Insite.Account.Services.IAccountService.UpdateAccount(Insite.Account.Services.Parameters.UpdateAccountParameter)"/>.</summary>
        </member>
        <member name="P:Insite.Account.Services.Results.UpdateAccountResult.GetAccountResult">
            <summary>Gets or sets the get account result.</summary>
        </member>
        <member name="T:Insite.Account.WebApi.V1.AccountShipTosV1Controller">
            <summary>
            The user ship to controller.
            </summary>
        </member>
        <member name="F:Insite.Account.WebApi.V1.AccountShipTosV1Controller.getUserShipToCollectionMapper">
            <summary>The get user ship to collection mapper.</summary>
        </member>
        <member name="F:Insite.Account.WebApi.V1.AccountShipTosV1Controller.patchUserShipToCollectionMapper">
            <summary>The patch user ship to collection mapper.</summary>
        </member>
        <member name="F:Insite.Account.WebApi.V1.AccountShipTosV1Controller.userService">
            <summary>The user service.</summary>
        </member>
        <member name="M:Insite.Account.WebApi.V1.AccountShipTosV1Controller.#ctor(Insite.Core.WebApi.Interfaces.IContextUnwrapper,InSite.Model.Managers.ICookieManager,Insite.Account.Services.IAccountShipToService,Insite.Account.WebApi.V1.Mappers.Interfaces.IGetAccountShipToCollectionMapper,Insite.Account.WebApi.V1.Mappers.Interfaces.IPatchAccountShipToCollectionMapper)">
            <summary>Initializes a new instance of the <see cref="T:Insite.Account.WebApi.V1.AccountShipTosV1Controller"/> class.</summary>
            <param name="contextUnwrapper">The context un-wrapper.</param>
            <param name="cookieManager">The cookie Manager.</param>
            <param name="userService">The user administration service.</param>
            <param name="getUserShipToCollectionMapper">The get user ship to collection mapper.</param>
            <param name="patchUserShipToCollectionMapper">The patch User Ship To Collection Mapper.</param>
        </member>
        <member name="M:Insite.Account.WebApi.V1.AccountShipTosV1Controller.Get(Insite.Account.WebApi.V1.ApiModels.AccountShipToCollectionParameter)">
            <summary>The get.</summary>
            <param name="parameter">The parameter.</param>
            <returns>The <see cref="T:System.Web.Http.IHttpActionResult"/>.</returns>
        </member>
        <member name="M:Insite.Account.WebApi.V1.AccountShipTosV1Controller.Patch(System.Guid,Insite.Account.WebApi.V1.ApiModels.AccountShipToCollectionModel)">
            <summary>Sets the user ship to collection for the user.</summary>
            <param name="accountId">The account id.</param>
            <param name="parameter">The parameter.</param>
            <returns>The <see cref="T:System.Web.Http.IHttpActionResult"/>.</returns>
        </member>
        <member name="T:Insite.Account.WebApi.V1.ApiModels.AccountCollectionModel">
            <summary>The account collection model.</summary>
        </member>
        <member name="M:Insite.Account.WebApi.V1.ApiModels.AccountCollectionModel.#ctor">
            <summary>Initializes a new instance of the <see cref="T:Insite.Account.WebApi.V1.ApiModels.AccountCollectionModel"/> class.</summary>
        </member>
        <member name="P:Insite.Account.WebApi.V1.ApiModels.AccountCollectionModel.Accounts">
            <summary>Gets or sets the accounts.</summary>
        </member>
        <member name="P:Insite.Account.WebApi.V1.ApiModels.AccountCollectionModel.Pagination">
            <summary>Gets or sets the pagination.</summary>
        </member>
        <member name="T:Insite.Account.WebApi.V1.ApiModels.AccountCollectionParameter">
            <summary>
            The account collection parameter
            </summary>
        </member>
        <member name="P:Insite.Account.WebApi.V1.ApiModels.AccountCollectionParameter.SearchText">
            <summary>Gets or sets the search text.</summary>
        </member>
        <member name="P:Insite.Account.WebApi.V1.ApiModels.AccountCollectionParameter.StartPage">
            <summary>Gets or sets the start page.</summary>
        </member>
        <member name="P:Insite.Account.WebApi.V1.ApiModels.AccountCollectionParameter.PageSize">
            <summary>Gets or sets the page size.</summary>
        </member>
        <member name="P:Insite.Account.WebApi.V1.ApiModels.AccountCollectionParameter.Sort">
            <summary>Gets or sets the sort.</summary>
        </member>
        <member name="T:Insite.Account.WebApi.V1.ApiModels.AccountModel">
            <summary>
            The Account Model returned from the WebApi call.
            </summary>
        </member>
        <member name="P:Insite.Account.WebApi.V1.ApiModels.AccountModel.Id">
            <summary>
            Gets or sets the identifier.
            </summary>
            <value>
            The identifier.
            </value>
        </member>
        <member name="P:Insite.Account.WebApi.V1.ApiModels.AccountModel.Email">
            <summary>
            Gets or sets the email.
            </summary>
            <value>
            The email.
            </value>
        </member>
        <member name="P:Insite.Account.WebApi.V1.ApiModels.AccountModel.UserName">
            <summary>
            Gets or sets the name of the user.
            </summary>
            <value>
            The name of the user.
            </value>
        </member>
        <member name="P:Insite.Account.WebApi.V1.ApiModels.AccountModel.Password">
            <summary>
            Gets or sets the password.
            </summary>
            <value>
            The password.
            </value>
        </member>
        <member name="P:Insite.Account.WebApi.V1.ApiModels.AccountModel.IsSubscribed">
            <summary>
            Gets or sets a value indicating whether this instance is subscribed.
            </summary>
            <value>
            <c>true</c> if this instance is subscribed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Insite.Account.WebApi.V1.ApiModels.AccountModel.IsGuest">
            <summary>
            Gets or sets a value indicating whether this instance is guest.
            </summary>
            <value>
            <c>true</c> if this instance is guest; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Insite.Account.WebApi.V1.ApiModels.AccountModel.CanApproveOrders">
            <summary>
            Gets or sets a value indicating whether this instance can approve orders.
            </summary>
            <value>
            <c>true</c> if this instance can approve orders; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Insite.Account.WebApi.V1.ApiModels.AccountModel.CanViewApprovalOrders">
            <summary>
            Gets or sets a value indicating whether this instance can view approval orders.
            </summary>
            <value>
            <c>true</c> if this instance can view approval orders; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Insite.Account.WebApi.V1.ApiModels.AccountModel.BillToId">
            <summary>
            Gets or sets the bill to id.  Returned from creating a new account to return the new bill to id.
            </summary>
        </member>
        <member name="P:Insite.Account.WebApi.V1.ApiModels.AccountModel.ShipToId">
            <summary>
            Gets or sets the ship to id.  Returned from creating a new account to return the new ship to id.
            </summary>
        </member>
        <member name="P:Insite.Account.WebApi.V1.ApiModels.AccountModel.FirstName">
            <summary>
            Gets or sets the first name.
            </summary>
        </member>
        <member name="P:Insite.Account.WebApi.V1.ApiModels.AccountModel.LastName">
            <summary>
            Gets or sets the last name.
            </summary>
        </member>
        <member name="P:Insite.Account.WebApi.V1.ApiModels.AccountModel.Role">
            <summary>
            Gets or sets the role.
            </summary>
        </member>
        <member name="P:Insite.Account.WebApi.V1.ApiModels.AccountModel.Approver">
            <summary>
            Gets or sets the approver.
            </summary>
        </member>
        <member name="P:Insite.Account.WebApi.V1.ApiModels.AccountModel.IsApproved">
            <summary>
            Gets or sets a value indicating whether is approved.
            </summary>
        </member>
        <member name="P:Insite.Account.WebApi.V1.ApiModels.AccountModel.DefaultLocation">
            <summary>
            Gets or sets the default location.
            </summary>
        </member>
        <member name="P:Insite.Account.WebApi.V1.ApiModels.AccountModel.AvailableApprovers">
            <summary>
            Gets or sets the available approvers.
            </summary>
        </member>
        <member name="P:Insite.Account.WebApi.V1.ApiModels.AccountModel.AvailableRoles">
            <summary>
            Gets or sets the available roles.
            </summary>
        </member>
        <member name="T:Insite.Account.WebApi.V1.ApiModels.AccountShipToCollectionModel">
            <summary>The account ship to collection model.</summary>
        </member>
        <member name="P:Insite.Account.WebApi.V1.ApiModels.AccountShipToCollectionModel.Pagination">
            <summary>Gets or sets the pagination.</summary>
        </member>
        <member name="P:Insite.Account.WebApi.V1.ApiModels.AccountShipToCollectionModel.UserShipToCollection">
            <summary>Gets or sets the user ship to collection.</summary>
        </member>
        <member name="P:Insite.Account.WebApi.V1.ApiModels.AccountShipToCollectionModel.CostCodeCollection">
            <summary>Gets or sets the cost code collection.</summary>
        </member>
        <member name="T:Insite.Account.WebApi.V1.ApiModels.AccountShipToModel">
            <summary>The account ship to model.</summary>
        </member>
        <member name="P:Insite.Account.WebApi.V1.ApiModels.AccountShipToModel.ShipToNumber">
            <summary>Gets or sets the ship to number.</summary>
        </member>
        <member name="P:Insite.Account.WebApi.V1.ApiModels.AccountShipToModel.City">
            <summary>Gets or sets the city.</summary>
        </member>
        <member name="P:Insite.Account.WebApi.V1.ApiModels.AccountShipToModel.State">
            <summary>Gets or sets the state.</summary>
        </member>
        <member name="P:Insite.Account.WebApi.V1.ApiModels.AccountShipToModel.Address">
            <summary>Gets or sets the address.</summary>
        </member>
        <member name="P:Insite.Account.WebApi.V1.ApiModels.AccountShipToModel.Assign">
            <summary>Gets or sets a value indicating whether assign.</summary>
        </member>
        <member name="P:Insite.Account.WebApi.V1.ApiModels.AccountShipToModel.IsDefaultShipTo">
            <summary>Gets or sets a value indicating whether is default ship to.</summary>
        </member>
        <member name="P:Insite.Account.WebApi.V1.ApiModels.AccountShipToModel.CostCode">
            <summary>Gets or sets the cost code.</summary>
        </member>
        <member name="T:Insite.Account.WebApi.V1.ApiModels.AccountShipToCollectionParameter">
            <summary>
            The account ship to collection parameter
            </summary>
        </member>
        <member name="P:Insite.Account.WebApi.V1.ApiModels.AccountShipToCollectionParameter.AccountId">
            <summary>Gets or sets the account identifier.</summary>
        </member>
        <member name="P:Insite.Account.WebApi.V1.ApiModels.AccountShipToCollectionParameter.StartPage">
            <summary>Gets or sets the start page.</summary>
        </member>
        <member name="P:Insite.Account.WebApi.V1.ApiModels.AccountShipToCollectionParameter.PageSize">
            <summary>Gets or sets the page size.</summary>
        </member>
        <member name="P:Insite.Account.WebApi.V1.ApiModels.AccountShipToCollectionParameter.Sort">
            <summary>Gets or sets the sort.</summary>
        </member>
        <member name="T:Insite.Account.WebApi.V1.Mappers.AccountMapperStartupTask">
            <summary>
            Tasks to run on application startup.
            </summary>
        </member>
        <member name="M:Insite.Account.WebApi.V1.Mappers.AccountMapperStartupTask.Run">
            <summary>
            Method that gets executed by the <see cref="T:InSite.Model.BootStrapper.IBootStrapper"/>.
            </summary>
        </member>
        <member name="T:Insite.Account.WebApi.V1.Mappers.DeleteSessionMapper">
            <summary>
            Maps the parameter for calling the service and the result returned from the service.
            </summary>
        </member>
        <member name="T:Insite.Account.WebApi.V1.Mappers.Interfaces.IDeleteSessionMapper">
            <summary>
            Maps the parameter for calling the service and the result returned from the service.
            </summary>
        </member>
        <member name="M:Insite.Account.WebApi.V1.Mappers.DeleteSessionMapper.MapParameter(System.String,System.Net.Http.HttpRequestMessage,InSite.Model.Core.CurrentContext)">
            <summary>Maps the parameter.</summary>
            <param name="apiParameter">The API parameter.</param>
            <param name="request">The request.</param>
            <param name="currentContext">The current Context.</param>
            <returns>The <see cref="T:Insite.Account.Services.Parameters.RemoveSessionParameter"/>.</returns>
        </member>
        <member name="M:Insite.Account.WebApi.V1.Mappers.DeleteSessionMapper.MapResult(Insite.Account.Services.Results.RemoveSessionResult,System.Net.Http.HttpRequestMessage,InSite.Model.Core.CurrentContext)">
            <summary>Maps the result.</summary>
            <param name="serviceResult">The service result.</param>
            <param name="request">The request.</param>
            <param name="currentContext">The current Context.</param>
            <returns>The <see cref="T:Insite.Account.WebApi.V1.ApiModels.SessionModel"/>.</returns>
        </member>
        <member name="T:Insite.Account.WebApi.V1.Mappers.GetAccountCollectionMapper">
            <summary>
            Maps the parameter for calling the service and the result returned from the service.
            </summary>
        </member>
        <member name="T:Insite.Account.WebApi.V1.Mappers.Interfaces.IGetAccountCollectionMapper">
            <summary>
            Maps the parameter for calling the service and the result returned from the service.
            </summary>
        </member>
        <member name="F:Insite.Account.WebApi.V1.Mappers.GetAccountCollectionMapper.ObjectToObjectMapper">
            <summary>The object to object mapper.</summary>
        </member>
        <member name="F:Insite.Account.WebApi.V1.Mappers.GetAccountCollectionMapper.GetAccountMapper">
            <summary>The get account mapper.</summary>
        </member>
        <member name="F:Insite.Account.WebApi.V1.Mappers.GetAccountCollectionMapper.UrlHelper">
            <summary>The url helper.</summary>
        </member>
        <member name="M:Insite.Account.WebApi.V1.Mappers.GetAccountCollectionMapper.#ctor(Insite.Core.Common.Interfaces.IObjectToObjectMapper,Insite.Account.WebApi.V1.Mappers.Interfaces.IGetAccountMapper,Insite.Core.WebApi.Interfaces.IUrlHelper)">
            <summary>Initializes a new instance of the <see cref="T:Insite.Account.WebApi.V1.Mappers.GetAccountCollectionMapper"/> class.</summary>
            <param name="objectToObjectMapper">The object to object mapper</param>
            <param name="getAccountMapper">The get account mapper.</param>
            <param name="urlHelper">The url Helper.</param>
        </member>
        <member name="M:Insite.Account.WebApi.V1.Mappers.GetAccountCollectionMapper.MapParameter(Insite.Account.WebApi.V1.ApiModels.AccountCollectionParameter,System.Net.Http.HttpRequestMessage,InSite.Model.Core.CurrentContext)">
            <summary>Maps the parameter.</summary>
            <param name="apiParameter">The API parameter.</param>
            <param name="request">The HTTP request message.</param>
            <param name="currentContext">The current Context.</param>
            <returns>The <see cref="T:Insite.Account.Services.Parameters.GetAccountCollectionParameter"/>.</returns>
        </member>
        <member name="M:Insite.Account.WebApi.V1.Mappers.GetAccountCollectionMapper.MapResult(Insite.Account.Services.Results.GetAccountCollectionResult,System.Net.Http.HttpRequestMessage,InSite.Model.Core.CurrentContext)">
            <summary>Maps the result.</summary>
            <param name="serviceResult">The service result.</param>
            <param name="request">The request.</param>
            <param name="currentContext">The current Context.</param>
            <returns>The <see cref="T:Insite.Account.WebApi.V1.ApiModels.AccountCollectionModel"/>.</returns>
        </member>
        <member name="T:Insite.Account.WebApi.V1.Mappers.GetAccountMapper">
            <summary>
            Maps the parameter for calling the service and the result returned from the service.
            </summary>
        </member>
        <member name="T:Insite.Account.WebApi.V1.Mappers.Interfaces.IGetAccountMapper">
            <summary>
            Maps the parameter for calling the service and the result returned from the service.
            </summary>
        </member>
        <member name="F:Insite.Account.WebApi.V1.Mappers.GetAccountMapper.ObjectToObjectMapper">
            <summary>The object to object mapper.</summary>
        </member>
        <member name="F:Insite.Account.WebApi.V1.Mappers.GetAccountMapper.UrlHelper">
            <summary>The url helper.</summary>
        </member>
        <member name="M:Insite.Account.WebApi.V1.Mappers.GetAccountMapper.#ctor(Insite.Core.Common.Interfaces.IObjectToObjectMapper,Insite.Core.WebApi.Interfaces.IUrlHelper)">
            <summary>Initializes a new instance of the <see cref="T:Insite.Account.WebApi.V1.Mappers.GetAccountMapper"/> class.</summary>
            <param name="objectToObjectMapper">The object to object mapper.</param>
            <param name="urlHelper">The URL helper.</param>
        </member>
        <member name="M:Insite.Account.WebApi.V1.Mappers.GetAccountMapper.MapParameter(System.String,System.Net.Http.HttpRequestMessage,InSite.Model.Core.CurrentContext)">
            <summary>Maps the parameter.</summary>
            <param name="apiParameter">The API parameter.</param>
            <param name="request">The request.</param>
            <param name="currentContext">The current Context.</param>
            <returns>The <see cref="T:Insite.Account.Services.Parameters.GetAccountParameter"/>.</returns>
        </member>
        <member name="M:Insite.Account.WebApi.V1.Mappers.GetAccountMapper.MapResult(Insite.Account.Services.Results.GetAccountResult,System.Net.Http.HttpRequestMessage,InSite.Model.Core.CurrentContext)">
            <summary>Maps the result.</summary>
            <param name="serviceResult">The service result.</param>
            <param name="request">The request.</param>
            <param name="currentContext">The current Context.</param>
            <returns>The <see cref="T:Insite.Account.WebApi.V1.ApiModels.AccountModel"/>.</returns>
        </member>
        <member name="T:Insite.Account.WebApi.V1.Mappers.GetSessionMapper">
            <summary>
            Maps the parameter for calling the service and the result returned from the service.
            </summary>
        </member>
        <member name="T:Insite.Account.WebApi.V1.Mappers.Interfaces.IGetSessionMapper">
            <summary>
            Maps the parameter for calling the service and the result returned from the service.
            </summary>
        </member>
        <member name="F:Insite.Account.WebApi.V1.Mappers.GetSessionMapper.GetBillToMapper">
            <summary>
            The get bill to mapper
            </summary>
        </member>
        <member name="F:Insite.Account.WebApi.V1.Mappers.GetSessionMapper.GetCurrencyMapper">
            <summary>
            The get currency mapper
            </summary>
        </member>
        <member name="F:Insite.Account.WebApi.V1.Mappers.GetSessionMapper.GetLanguageMapper">
            <summary>
            The get language mapper
            </summary>
        </member>
        <member name="F:Insite.Account.WebApi.V1.Mappers.GetSessionMapper.GetShipToMapper">
            <summary>
            The get ship to mapper
            </summary>
        </member>
        <member name="F:Insite.Account.WebApi.V1.Mappers.GetSessionMapper.ObjectToObjectMapper">
            <summary>
            The object to object mapper
            </summary>
        </member>
        <member name="F:Insite.Account.WebApi.V1.Mappers.GetSessionMapper.UrlHelper">
            <summary>The url helper.</summary>
        </member>
        <member name="M:Insite.Account.WebApi.V1.Mappers.GetSessionMapper.#ctor(Insite.Customers.WebApi.V1.Mappers.Interfaces.IGetBillToMapper,Insite.Customers.WebApi.V1.Mappers.Interfaces.IGetShipToMapper,Insite.Websites.WebApi.V1.Mappers.Interfaces.IGetLanguageMapper,Insite.Websites.WebApi.V1.Mappers.Interfaces.IGetCurrencyMapper,Insite.Core.Common.Interfaces.IObjectToObjectMapper,Insite.Core.WebApi.Interfaces.IUrlHelper)">
            <summary>Initializes a new instance of the <see cref="T:Insite.Account.WebApi.V1.Mappers.GetSessionMapper"/> class.</summary>
            <param name="getBillToMapper">The get bill to mapper.</param>
            <param name="getShipToMapper">The get ship to mapper.</param>
            <param name="getLanguageMapper">The get language mapper.</param>
            <param name="getCurrencyMapper">The get currency mapper.</param>
            <param name="objectToObjectMapper">The object to object mapper.</param>
            <param name="urlHelper">The url Helper.</param>
        </member>
        <member name="M:Insite.Account.WebApi.V1.Mappers.GetSessionMapper.MapParameter(System.String,System.Net.Http.HttpRequestMessage,InSite.Model.Core.CurrentContext)">
            <summary>Maps the parameter.</summary>
            <param name="apiParameter">The API parameter.</param>
            <param name="request">The request.</param>
            <param name="currentContext">The current Context.</param>
            <returns>The <see cref="T:Insite.Account.Services.Parameters.GetSessionParameter"/>.</returns>
        </member>
        <member name="M:Insite.Account.WebApi.V1.Mappers.GetSessionMapper.MapResult(Insite.Account.Services.Results.GetSessionResult,System.Net.Http.HttpRequestMessage,InSite.Model.Core.CurrentContext)">
            <summary>Maps the result.</summary>
            <param name="serviceResult">The service result.</param>
            <param name="request">The request.</param>
            <param name="currentContext">The current Context.</param>
            <returns>The <see cref="T:Insite.Account.WebApi.V1.ApiModels.SessionModel"/>.</returns>
        </member>
        <member name="T:Insite.Account.WebApi.V1.Mappers.GetAccountShipToCollectionMapper">
            <summary>The get account ship to collection mapper.</summary>
        </member>
        <member name="T:Insite.Account.WebApi.V1.Mappers.Interfaces.IGetAccountShipToCollectionMapper">
            <summary>
            The GetUserShipToCollectionMapper interface.
            </summary>
        </member>
        <member name="F:Insite.Account.WebApi.V1.Mappers.GetAccountShipToCollectionMapper.ObjectToObjectMapper">
            <summary>
            The object to object mapper
            </summary>
        </member>
        <member name="M:Insite.Account.WebApi.V1.Mappers.GetAccountShipToCollectionMapper.#ctor(Insite.Core.Common.Interfaces.IObjectToObjectMapper)">
            <summary>Initializes a new instance of the <see cref="T:Insite.Account.WebApi.V1.Mappers.GetAccountShipToCollectionMapper"/> class.</summary>
            <param name="objectToObjectMapper">The object to object mapper.</param>
        </member>
        <member name="M:Insite.Account.WebApi.V1.Mappers.GetAccountShipToCollectionMapper.MapParameter(Insite.Account.WebApi.V1.ApiModels.AccountShipToCollectionParameter,System.Net.Http.HttpRequestMessage,InSite.Model.Core.CurrentContext)">
            <summary>Maps the parameter.</summary>
            <param name="apiParameter">The API parameter.</param>
            <param name="request">The request.</param>
            <param name="currentContext">The current Context.</param>
            <returns>A GetUserShipToCollectionParameter</returns>
        </member>
        <member name="M:Insite.Account.WebApi.V1.Mappers.GetAccountShipToCollectionMapper.MapResult(Insite.Account.Services.Results.GetAccountShipToCollectionResult,System.Net.Http.HttpRequestMessage,InSite.Model.Core.CurrentContext)">
            <summary>Maps the result.</summary>
            <param name="serviceResult">The service result.</param>
            <param name="request">The request.</param>
            <param name="currentContext">The current Context.</param>
            <returns>A UserShipToCollectionModel</returns>
        </member>
        <member name="T:Insite.Account.WebApi.V1.Mappers.Interfaces.IPatchAccountMapper">
            <summary>
            Maps the parameter for calling the service and the result returned from the service.
            </summary>
        </member>
        <member name="T:Insite.Account.WebApi.V1.Mappers.Interfaces.IPatchAccountShipToCollectionMapper">
            <summary>
            The PatchUserShipToCollectionMapper interface.
            </summary>
        </member>
        <member name="T:Insite.Account.WebApi.V1.Mappers.Interfaces.IPatchSessionMapper">
            <summary>
            Maps the parameter for calling the service and the result returned from the service.
            </summary>
        </member>
        <member name="T:Insite.Account.WebApi.V1.Mappers.Interfaces.IPostAccountMapper">
            <summary>
            Maps the parameter for calling the service and the result returned from the service.
            </summary>
        </member>
        <member name="T:Insite.Account.WebApi.V1.Mappers.Interfaces.IPostSessionMapper">
            <summary>
            Maps the parameter for calling the service and the result returned from the service.
            </summary>
        </member>
        <member name="T:Insite.Account.WebApi.V1.Mappers.PatchAccountMapper">
            <summary>
            Maps the parameter for calling the service and the result returned from the service.
            </summary>
        </member>
        <member name="F:Insite.Account.WebApi.V1.Mappers.PatchAccountMapper.GetAccountMapper">
            <summary>The get account mapper.</summary>
        </member>
        <member name="F:Insite.Account.WebApi.V1.Mappers.PatchAccountMapper.ObjectToObjectMapper">
            <summary>The object to object mapper.</summary>
        </member>
        <member name="F:Insite.Account.WebApi.V1.Mappers.PatchAccountMapper.RouteDataProvider">
            <summary>The route data provider.</summary>
        </member>
        <member name="M:Insite.Account.WebApi.V1.Mappers.PatchAccountMapper.#ctor(Insite.Account.WebApi.V1.Mappers.Interfaces.IGetAccountMapper,Insite.Core.Common.Interfaces.IObjectToObjectMapper,Insite.Core.WebApi.Interfaces.IRouteDataProvider)">
            <summary>Initializes a new instance of the <see cref="T:Insite.Account.WebApi.V1.Mappers.PatchAccountMapper"/> class.</summary>
            <param name="getAccountMapper">The get Account Mapper.</param>
            <param name="objectToObjectMapper">The object to object mapper.</param>
            <param name="routeDataProvider">The route Data Provider.</param>
        </member>
        <member name="M:Insite.Account.WebApi.V1.Mappers.PatchAccountMapper.MapParameter(Insite.Account.WebApi.V1.ApiModels.AccountModel,System.Net.Http.HttpRequestMessage,InSite.Model.Core.CurrentContext)">
            <summary>Maps the parameter.</summary>
            <param name="apiParameter">The API parameter.</param>
            <param name="request">The request.</param>
            <param name="currentContext">The current Context.</param>
            <returns>The <see cref="T:Insite.Account.Services.Parameters.UpdateAccountParameter"/>.</returns>
        </member>
        <member name="M:Insite.Account.WebApi.V1.Mappers.PatchAccountMapper.MapResult(Insite.Account.Services.Results.UpdateAccountResult,System.Net.Http.HttpRequestMessage,InSite.Model.Core.CurrentContext)">
            <summary>Maps the result.</summary>
            <param name="serviceResult">The service result.</param>
            <param name="request">The request.</param>
            <param name="currentContext">The current Context.</param>
            <returns>The <see cref="T:Insite.Account.WebApi.V1.ApiModels.AccountModel"/>.</returns>
        </member>
        <member name="T:Insite.Account.WebApi.V1.Mappers.PatchAccountShipToCollectionMapper">
            <summary>The patch account ship to collection mapper.</summary>
        </member>
        <member name="F:Insite.Account.WebApi.V1.Mappers.PatchAccountShipToCollectionMapper.ObjectToObjectMapper">
            <summary>The object to object mapper.</summary>
        </member>
        <member name="F:Insite.Account.WebApi.V1.Mappers.PatchAccountShipToCollectionMapper.RouteDataProvider">
            <summary>The route data provider.</summary>
        </member>
        <member name="M:Insite.Account.WebApi.V1.Mappers.PatchAccountShipToCollectionMapper.#ctor(Insite.Core.WebApi.Interfaces.IRouteDataProvider,Insite.Core.Common.Interfaces.IObjectToObjectMapper)">
            <summary>Initializes a new instance of the <see cref="T:Insite.Account.WebApi.V1.Mappers.PatchAccountShipToCollectionMapper"/> class.</summary>
            <param name="routeDataProvider">The route data provider.</param>
            <param name="objectToObjectMapper">The object to object mapper.</param>
        </member>
        <member name="M:Insite.Account.WebApi.V1.Mappers.PatchAccountShipToCollectionMapper.MapParameter(Insite.Account.WebApi.V1.ApiModels.AccountShipToCollectionModel,System.Net.Http.HttpRequestMessage,InSite.Model.Core.CurrentContext)">
            <summary>The map parameter.</summary>
            <param name="apiParameter">The api parameter.</param>
            <param name="request">The request.</param>
            <param name="currentContext">The current Context.</param>
            <returns>The <see cref="T:Insite.Account.Services.Parameters.UpdateAccountShipToCollectionParameter"/>.</returns>
        </member>
        <member name="M:Insite.Account.WebApi.V1.Mappers.PatchAccountShipToCollectionMapper.MapResult(Insite.Account.Services.Results.UpdateAccountShipToCollectionResult,System.Net.Http.HttpRequestMessage,InSite.Model.Core.CurrentContext)">
            <summary>The map result.</summary>
            <param name="serviceResult">The service result.</param>
            <param name="request">The request.</param>
            <param name="currentContext">The current Context.</param>
            <returns>The <see cref="T:Insite.Account.WebApi.V1.ApiModels.AccountShipToCollectionModel"/>.</returns>
        </member>
        <member name="T:Insite.Account.WebApi.V1.Mappers.PatchSessionMapper">
            <summary>
            Maps the parameter for calling the service and the result returned from the service.
            </summary>
        </member>
        <member name="F:Insite.Account.WebApi.V1.Mappers.PatchSessionMapper.ObjectToObjectMapper">
            <summary>
            The object to object mapper
            </summary>
        </member>
        <member name="M:Insite.Account.WebApi.V1.Mappers.PatchSessionMapper.#ctor(Insite.Core.Common.Interfaces.IObjectToObjectMapper)">
            <summary>Initializes a new instance of the <see cref="T:Insite.Account.WebApi.V1.Mappers.PatchSessionMapper"/> class.</summary>
            <param name="objectToObjectMapper">The object to object mapper.</param>
        </member>
        <member name="M:Insite.Account.WebApi.V1.Mappers.PatchSessionMapper.MapParameter(Insite.Account.WebApi.V1.ApiModels.SessionModel,System.Net.Http.HttpRequestMessage,InSite.Model.Core.CurrentContext)">
            <summary>Maps the parameter.</summary>
            <param name="apiParameter">The API parameter.</param>
            <param name="httpRequestMessage">The HTTP request message.</param>
            <param name="currentContext">The current Context.</param>
            <returns>The <see cref="T:Insite.Account.Services.Parameters.UpdateSessionParameter"/>.</returns>
        </member>
        <member name="M:Insite.Account.WebApi.V1.Mappers.PatchSessionMapper.MapResult(Insite.Account.Services.Results.UpdateSessionResult,System.Net.Http.HttpRequestMessage,InSite.Model.Core.CurrentContext)">
            <summary>Maps the result.</summary>
            <param name="serviceResult">The service result.</param>
            <param name="request">The request.</param>
            <param name="currentContext">The current Context.</param>
            <returns>The <see cref="T:Insite.Account.WebApi.V1.ApiModels.SessionModel"/>.</returns>
        </member>
        <member name="T:Insite.Account.WebApi.V1.Mappers.PostAccountMapper">
            <summary>
            Maps the parameter for calling the service and the result returned from the service.
            </summary>
        </member>
        <member name="F:Insite.Account.WebApi.V1.Mappers.PostAccountMapper.ObjectToObjectMapper">
            <summary>
            The object to object mapper
            </summary>
        </member>
        <member name="F:Insite.Account.WebApi.V1.Mappers.PostAccountMapper.UrlHelper">
            <summary>
            The URL helper.
            </summary>
        </member>
        <member name="M:Insite.Account.WebApi.V1.Mappers.PostAccountMapper.#ctor(Insite.Core.Common.Interfaces.IObjectToObjectMapper,Insite.Core.WebApi.Interfaces.IUrlHelper)">
            <summary>Initializes a new instance of the <see cref="T:Insite.Account.WebApi.V1.Mappers.PostAccountMapper"/> class.</summary>
            <param name="objectToObjectMapper">The object to object mapper.</param>
            <param name="urlHelper">The url Helper.</param>
        </member>
        <member name="M:Insite.Account.WebApi.V1.Mappers.PostAccountMapper.MapParameter(Insite.Account.WebApi.V1.ApiModels.AccountModel,System.Net.Http.HttpRequestMessage,InSite.Model.Core.CurrentContext)">
            <summary>Maps the parameter.</summary>
            <param name="apiParameter">The API parameter.</param>
            <param name="httpRequestMessage">The HTTP request message.</param>
            <param name="currentContext">The current Context.</param>
            <returns>The <see cref="T:Insite.Account.Services.Parameters.AddAccountParameter"/>.</returns>
        </member>
        <member name="M:Insite.Account.WebApi.V1.Mappers.PostAccountMapper.MapResult(Insite.Account.Services.Results.AddAccountResult,System.Net.Http.HttpRequestMessage,InSite.Model.Core.CurrentContext)">
            <summary>Maps the result.</summary>
            <param name="serviceResult">The service result.</param>
            <param name="request">The request.</param>
            <param name="currentContext">The current Context.</param>
            <returns>The <see cref="T:Insite.Account.WebApi.V1.ApiModels.AccountModel"/>.</returns>
        </member>
        <member name="T:Insite.Account.WebApi.V1.Mappers.PostSessionMapper">
            <summary>
            Maps the parameter for calling the service and the result returned from the service.
            </summary>
        </member>
        <member name="F:Insite.Account.WebApi.V1.Mappers.PostSessionMapper.GetSessionMapper">
            <summary>The get session mapper.</summary>
        </member>
        <member name="M:Insite.Account.WebApi.V1.Mappers.PostSessionMapper.#ctor(Insite.Account.WebApi.V1.Mappers.Interfaces.IGetSessionMapper)">
            <summary>Initializes a new instance of the <see cref="T:Insite.Account.WebApi.V1.Mappers.PostSessionMapper"/> class.</summary>
            <param name="getSessionMapper">The get Session Mapper.</param>
        </member>
        <member name="M:Insite.Account.WebApi.V1.Mappers.PostSessionMapper.MapParameter(Insite.Account.WebApi.V1.ApiModels.SessionModel,System.Net.Http.HttpRequestMessage,InSite.Model.Core.CurrentContext)">
            <summary>Maps the parameter.</summary>
            <param name="apiParameter">The API parameter.</param>
            <param name="httpRequestMessage">The HTTP request message.</param>
            <param name="currentContext">The current Context.</param>
            <returns>The <see cref="T:Insite.Account.Services.Parameters.AddSessionParameter"/>.</returns>
        </member>
        <member name="M:Insite.Account.WebApi.V1.Mappers.PostSessionMapper.MapResult(Insite.Account.Services.Results.AddSessionResult,System.Net.Http.HttpRequestMessage,InSite.Model.Core.CurrentContext)">
            <summary>Maps the result.</summary>
            <param name="serviceResult">The service result.</param>
            <param name="request">The request.</param>
            <param name="currentContext">The current Context.</param>
            <returns>The <see cref="T:Insite.Account.WebApi.V1.ApiModels.SessionModel"/>.</returns>
        </member>
        <member name="T:Insite.Account.WebApi.V1.SessionsV1Controller">
            <summary>
            The Sessions WebApi Controller.
            </summary>
        </member>
        <member name="F:Insite.Account.WebApi.V1.SessionsV1Controller.deleteSessionMapper">
            <summary>The delete session mapper.</summary>
        </member>
        <member name="F:Insite.Account.WebApi.V1.SessionsV1Controller.getSessionMapper">
            <summary>The get session mapper.</summary>
        </member>
        <member name="F:Insite.Account.WebApi.V1.SessionsV1Controller.patchSessionMapper">
            <summary>The patch session mapper.</summary>
        </member>
        <member name="F:Insite.Account.WebApi.V1.SessionsV1Controller.postSessionMapper">
            <summary>The post session mapper.</summary>
        </member>
        <member name="F:Insite.Account.WebApi.V1.SessionsV1Controller.sessionService">
            <summary>The session service.</summary>
        </member>
        <member name="M:Insite.Account.WebApi.V1.SessionsV1Controller.#ctor(Insite.Core.WebApi.Interfaces.IContextUnwrapper,InSite.Model.Managers.ICookieManager,Insite.Account.Services.ISessionService,Insite.Account.WebApi.V1.Mappers.Interfaces.IGetSessionMapper,Insite.Account.WebApi.V1.Mappers.Interfaces.IPostSessionMapper,Insite.Account.WebApi.V1.Mappers.Interfaces.IPatchSessionMapper,Insite.Account.WebApi.V1.Mappers.Interfaces.IDeleteSessionMapper)">
            <summary>Initializes a new instance of the <see cref="T:Insite.Account.WebApi.V1.SessionsV1Controller"/> class.</summary>
            <param name="contextUnwrapper">The context un-wrapper.</param>
            <param name="cookieManager">The cookie Manager.</param>
            <param name="sessionService">The session service.</param>
            <param name="getSessionMapper">The get session mapper.</param>
            <param name="postSessionMapper">The post session mapper.</param>
            <param name="patchSessionMapper">The patch session mapper.</param>
            <param name="deleteSessionMapper">The delete session mapper.</param>
        </member>
        <member name="M:Insite.Account.WebApi.V1.SessionsV1Controller.Get">
            <summary>Gets the current Session.</summary>
            <returns>The <see cref="T:System.Web.Http.IHttpActionResult"/>.</returns>
        </member>
        <member name="M:Insite.Account.WebApi.V1.SessionsV1Controller.Post(Insite.Account.WebApi.V1.ApiModels.SessionModel)">
            <summary>Post to session endpoint with username and password to sign in.</summary>
            <param name="model">The model.</param>
            <returns>The <see cref="T:System.Web.Http.IHttpActionResult"/>.</returns>
        </member>
        <member name="M:Insite.Account.WebApi.V1.SessionsV1Controller.Patch(Insite.Account.WebApi.V1.ApiModels.SessionModel)">
            <summary>Patch to session endpoint with billtoid, shiptoid, language code and/or currency code to change the context.</summary>
            <param name="model">The model.</param>
            <returns>The <see cref="T:System.Web.Http.IHttpActionResult"/>.</returns>
        </member>
        <member name="M:Insite.Account.WebApi.V1.SessionsV1Controller.Delete">
            <summary>Delete to session endpoint signs out.</summary>
            <returns>The <see cref="T:System.Web.Http.IHttpActionResult"/>.</returns>
        </member>
        <member name="T:Insite.Account.WebApi.V1.AccountsV1Controller">
            <summary>
            The Accounts WebApi Controller.
            </summary>
        </member>
        <member name="F:Insite.Account.WebApi.V1.AccountsV1Controller.accountService">
            <summary>The account service.</summary>
        </member>
        <member name="F:Insite.Account.WebApi.V1.AccountsV1Controller.getAccountCollectionMapper">
            <summary>The get account collection mapper.</summary>
        </member>
        <member name="F:Insite.Account.WebApi.V1.AccountsV1Controller.getAccountMapper">
            <summary>The get account mapper.</summary>
        </member>
        <member name="F:Insite.Account.WebApi.V1.AccountsV1Controller.getAccountSettingsMapper">
            <summary>The get account settings mapper.</summary>
        </member>
        <member name="F:Insite.Account.WebApi.V1.AccountsV1Controller.patchAccountMapper">
            <summary>The patch account mapper.</summary>
        </member>
        <member name="F:Insite.Account.WebApi.V1.AccountsV1Controller.postAccountMapper">
            <summary>The post account mapper.</summary>
        </member>
        <member name="M:Insite.Account.WebApi.V1.AccountsV1Controller.#ctor(Insite.Core.WebApi.Interfaces.IContextUnwrapper,InSite.Model.Managers.ICookieManager,Insite.Account.Services.IAccountService,Insite.Account.WebApi.V1.Mappers.Interfaces.IGetAccountSettingsMapper,Insite.Account.WebApi.V1.Mappers.Interfaces.IGetAccountCollectionMapper,Insite.Account.WebApi.V1.Mappers.Interfaces.IGetAccountMapper,Insite.Account.WebApi.V1.Mappers.Interfaces.IPostAccountMapper,Insite.Account.WebApi.V1.Mappers.Interfaces.IPatchAccountMapper)">
            <summary>Initializes a new instance of the <see cref="T:Insite.Account.WebApi.V1.AccountsV1Controller"/> class.</summary>
            <param name="contextUnwrapper">The context un-wrapper.</param>
            <param name="cookieManager">The cookie Manager.</param>
            <param name="accountService">The account service.</param>
            <param name="getAccountSettingsMapper">The get account settings mapper.</param>
            <param name="getAccountCollectionMapper">The get account collection mapper.</param>
            <param name="getAccountMapper">The get account mapper.</param>
            <param name="postAccountMapper">The post account mapper.</param>
            <param name="patchAccountMapper">The patch account mapper.</param>
        </member>
        <member name="M:Insite.Account.WebApi.V1.AccountsV1Controller.GetSettings">
            <summary>Gets account settings.</summary>
            <returns>The <see cref="T:System.Web.Http.IHttpActionResult"/>.</returns>
        </member>
        <member name="M:Insite.Account.WebApi.V1.AccountsV1Controller.Get(Insite.Account.WebApi.V1.ApiModels.AccountCollectionParameter)">
            <summary>Gets the specified account identifier.</summary>
            <param name="parameter">The parameter.</param>
            <returns>The <see cref="T:System.Web.Http.IHttpActionResult"/>.</returns>
        </member>
        <member name="M:Insite.Account.WebApi.V1.AccountsV1Controller.Get(System.String)">
            <summary>Gets the specified account identifier.</summary>
            <param name="accountId">The account identifier.</param>
            <returns>The <see cref="T:System.Web.Http.IHttpActionResult"/>.</returns>
        </member>
        <member name="M:Insite.Account.WebApi.V1.AccountsV1Controller.Post(Insite.Account.WebApi.V1.ApiModels.AccountModel)">
            <summary>Create a new account.</summary>
            <param name="model">The account model.</param>
            <returns>The <see cref="T:System.Web.Http.IHttpActionResult"/>.</returns>
        </member>
        <member name="M:Insite.Account.WebApi.V1.AccountsV1Controller.Patch(System.String,Insite.Account.WebApi.V1.ApiModels.AccountModel)">
            <summary>Patches the specified account identifier.</summary>
            <param name="accountId">The account identifier.</param>
            <param name="model">The model.</param>
            <returns>The <see cref="T:System.Web.Http.IHttpActionResult"/>.</returns>
        </member>
        <member name="T:Insite.Account.WebApi.V1.ApiModels.AccountSettingsModel">
            <summary>
            The Account Settings Model returned from the WebApi call.
            </summary>
        </member>
        <member name="P:Insite.Account.WebApi.V1.ApiModels.AccountSettingsModel.AllowCreateAccount">
            <summary>
            Gets or sets a value indicating whether creating an account is allowed.
            </summary>
            <value>
            <c>true</c> if [allow create account]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Insite.Account.WebApi.V1.ApiModels.AccountSettingsModel.AllowGuestCheckout">
            <summary>
            Gets or sets a value indicating whether guest checkout is allowed.
            </summary>
            <value>
            <c>true</c> if [allow guest checkout]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Insite.Account.WebApi.V1.ApiModels.AccountSettingsModel.AllowSubscribeToNewsLetter">
            <summary>
            Gets or sets a value indicating whether subscribe to news letter is allowed.
            </summary>
            <value>
            <c>true</c> if [allow subscribe to news letter]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Insite.Account.WebApi.V1.ApiModels.AccountSettingsModel.RequireSelectCustomerOnSignIn">
            <summary>
            Gets or sets a value indicating whether select customer is required on sign in.
            </summary>
            <value>
            <c>true</c> if [require select customer on sign in]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Insite.Account.WebApi.V1.ApiModels.AccountSettingsModel.PasswordMinimumLength">
            <summary>
            Gets or sets the minimum length of the password.
            </summary>
            <value>
            The minimum length of the password.
            </value>
        </member>
        <member name="T:Insite.Account.WebApi.V1.ApiModels.SessionModel">
            <summary>
            The Session Model returned from the WebApi call.
            </summary>
        </member>
        <member name="P:Insite.Account.WebApi.V1.ApiModels.SessionModel.IsAuthenticated">
            <summary>
            Gets or sets a value indicating whether this instance is authenticated.
            </summary>
        </member>
        <member name="P:Insite.Account.WebApi.V1.ApiModels.SessionModel.HasRfqUpdates">
            <summary>
            Gets or sets a value indicating whether this instance has RFQ updates.
            </summary>
        </member>
        <member name="P:Insite.Account.WebApi.V1.ApiModels.SessionModel.UserName">
            <summary>
            Gets or sets the name of the user.
            </summary>
        </member>
        <member name="P:Insite.Account.WebApi.V1.ApiModels.SessionModel.UserLabel">
            <summary>
            Gets or sets the user label.
            </summary>
        </member>
        <member name="P:Insite.Account.WebApi.V1.ApiModels.SessionModel.UserRoles">
            <summary>
            Gets or sets the user roles.
            </summary>
        </member>
        <member name="P:Insite.Account.WebApi.V1.ApiModels.SessionModel.Email">
            <summary>
            Gets or sets the email.
            </summary>
        </member>
        <member name="P:Insite.Account.WebApi.V1.ApiModels.SessionModel.Password">
            <summary>
            Gets or sets the password.
            </summary>
        </member>
        <member name="P:Insite.Account.WebApi.V1.ApiModels.SessionModel.NewPassword">
            <summary>
            Gets or sets the new password.
            </summary>
        </member>
        <member name="P:Insite.Account.WebApi.V1.ApiModels.SessionModel.ResetPassword">
            <summary>
            Gets or sets a value indicating whether to reset the password.
            </summary>
        </member>
        <member name="P:Insite.Account.WebApi.V1.ApiModels.SessionModel.DisplayChangeCustomerLink">
            <summary>
            Gets or sets a value indicating whether display change customer link.
            </summary>
        </member>
        <member name="P:Insite.Account.WebApi.V1.ApiModels.SessionModel.BillTo">
            <summary>
            Gets or sets the bill to.
            </summary>
        </member>
        <member name="P:Insite.Account.WebApi.V1.ApiModels.SessionModel.ShipTo">
            <summary>
            Gets or sets the ship to.
            </summary>
        </member>
        <member name="P:Insite.Account.WebApi.V1.ApiModels.SessionModel.Language">
            <summary>
            Gets or sets the language.
            </summary>
        </member>
        <member name="P:Insite.Account.WebApi.V1.ApiModels.SessionModel.Currency">
            <summary>
            Gets or sets the currency.
            </summary>
        </member>
        <member name="P:Insite.Account.WebApi.V1.ApiModels.SessionModel.DeviceType">
            <summary>
            Gets or sets the type of the device.
            </summary>
        </member>
        <member name="P:Insite.Account.WebApi.V1.ApiModels.SessionModel.Persona">
            <summary>
            Gets or sets the persona.
            </summary>
        </member>
        <member name="P:Insite.Account.WebApi.V1.ApiModels.SessionModel.DashboardIsHomepage">
            <summary>
            Gets or sets the dashboard is homepage.
            </summary>
        </member>
        <member name="P:Insite.Account.WebApi.V1.ApiModels.SessionModel.IsSalesPerson">
            <summary>
            Gets or sets a value indicating whether current user profile has salesperson
            </summary>
        </member>
        <member name="P:Insite.Account.WebApi.V1.ApiModels.SessionModel.CustomLandingPage">
            <summary>
            Gets or sets the custom landing page.
            </summary>
        </member>
        <member name="T:Insite.Account.WebApi.V1.Mappers.GetAccountSettingsMapper">
            <summary>
            Maps the parameter for calling the service and the result returned from the service.
            </summary>
        </member>
        <member name="T:Insite.Account.WebApi.V1.Mappers.Interfaces.IGetAccountSettingsMapper">
            <summary>
            Maps the parameter for calling the service and the result returned from the service.
            </summary>
        </member>
        <member name="F:Insite.Account.WebApi.V1.Mappers.GetAccountSettingsMapper.ObjectToObjectMapper">
            <summary>
            The object to object mapper
            </summary>
        </member>
        <member name="M:Insite.Account.WebApi.V1.Mappers.GetAccountSettingsMapper.#ctor(Insite.Core.Common.Interfaces.IObjectToObjectMapper)">
            <summary>Initializes a new instance of the <see cref="T:Insite.Account.WebApi.V1.Mappers.GetAccountSettingsMapper"/> class.</summary>
            <param name="objectToObjectMapper">The object to object mapper.</param>
        </member>
        <member name="M:Insite.Account.WebApi.V1.Mappers.GetAccountSettingsMapper.MapParameter(System.String,System.Net.Http.HttpRequestMessage,InSite.Model.Core.CurrentContext)">
            <summary>Maps the parameter.</summary>
            <param name="apiParameter">The API parameter.</param>
            <param name="request">The request.</param>
            <param name="currentContext">The current Context.</param>
            <returns>The <see cref="T:Insite.Account.Services.Parameters.GetAccountSettingsParameter"/>.</returns>
        </member>
        <member name="M:Insite.Account.WebApi.V1.Mappers.GetAccountSettingsMapper.MapResult(Insite.Account.Services.Results.GetAccountSettingsResult,System.Net.Http.HttpRequestMessage,InSite.Model.Core.CurrentContext)">
            <summary>Maps the result.</summary>
            <param name="serviceResult">The service result.</param>
            <param name="request">The request.</param>
            <param name="currentContext">The current Context.</param>
            <returns>The <see cref="T:Insite.Account.WebApi.V1.ApiModels.AccountSettingsModel"/>.</returns>
        </member>
    </members>
</doc>
