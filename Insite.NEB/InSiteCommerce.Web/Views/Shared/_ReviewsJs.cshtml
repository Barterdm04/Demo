@using System.Collections.ObjectModel
@using Insite.Catalog.Services.Dtos
@using InSite.Model
@using Microsoft.Practices.ServiceLocation
@using Newtonsoft.Json
@using System.Linq

@{
    if (!string.IsNullOrEmpty(Model.ThirdPartyReviews) && Model.ThirdPartyReviews == "BazaarVoice")
    {
        @Html.RequireScript(ServiceLocator.Current.GetInstance<IApplicationSettingProvider>().GetOrCreateByName<string>("BazaarVoiceJavascriptUrl"))
        if (Model.GetType().ToString().Equals("InSite.Mvc.Models.ViewModels.ProductCatalogViewModel"))
        {
            if (ViewData["PageName"].ToString().EqualsIgnoreCase("ProductDetail"))
            {
                var product = ((ReadOnlyCollection<ProductDto>)Model.ProductDtos).First();      
                <text>
                    <script>
                        jQuery(function () {
                            insite.productdetail.setupBazaarVoice("@product.Name");
                        });
                    </script>
                </text>
            }
            else
            {
                <text>
                    <script>
                        jQuery(function () {
                            insite.productlist.setupBazaarVoice(@Html.Raw(JsonConvert.SerializeObject(Model.ProductDtos)));
                        });
                    </script>                  
                </text>
            }
        }
    }
}