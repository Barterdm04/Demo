@using System.Web.Optimization
@using Insite.Catalog.Services.Dtos
@using InSiteCommerce.Web
@model Insite.Catalog.Seo.SeoCatalogModel
@section Styles
{
    @Styles.Render(Html.ThemedBundle(BundleConfig.ProductDetailStyleBundlePath))
}
@{
    var product = Model.ProductCollection.ProductDtos[0];
}
<div class="row main-row">
    <div class="large-12 columns">
        <div>
            <ul class="breadcrumbs">
                @foreach (var crumb in Model.CatalogPage.BreadCrumbs)
                {
                    <li>
                        @if (!crumb.Url.IsBlank())
                        {
                            <a href="@crumb.Url">@crumb.Text</a>
                        }
                        else
                        {
                            @crumb.Text
                        }
                    </li>
                }
            </ul>
            <div class="row pd-grid isc-productContainer">
                <div class="detail-info">
                    <div class="name-price">
                        <h1>@product.ShortDescription</h1>
                        <div>
                            <div class="item-num">
                                <span class="item-num-sku">@product.ERPNumber</span>
                                @if (!product.ManufacturerItem.IsBlank())
                                {
                                    <span class="item-num-mfg">@("MFG #"): @product.ManufacturerItem</span>
                                }
                                @if (!product.CustomerName.IsBlank())
                                {
                                    <span class="item-num-my">@T("My Part #"): @product.CustomerName</span>
                                }
                            </div>
                        </div>
                        <div class="item-price">
                            @if (product.CanShowPrice)
                            {
                                if (product.QuoteRequired)
                                {
                                    <div class="quote-required">
                                        <span>@T("Requires Quote")</span>
                                    </div>
                                }
                                else
                                {
                                    <span class="price pd-price">
                                        <span class="@(product.Pricing.IsOnSale ? "price-sale" : string.Empty)">@product.Pricing.ActualPriceDisplay</span>
                                        @if (product.Pricing.IsOnSale)
                                        {
                                            <span class="price-old">@product.Pricing.RegularPriceDisplay</span>
                                        }
                                    </span>
                                    <span class="um displayUnitOfMeasure isc-uomDisplay"> /  @product.UnitOfMeasureDisplay</span>
                                }
                                if (product.Pricing != null && product.Pricing.ActualBreakPrices != null && product.Pricing.ActualBreakPrices.Count > 1)
                                {
                                    <div class="quantity-pricing">
                                        <a href="" data-dropdown="qty-price-@product.Id" class="t-dropdown">@T("Quantity Pricing")</a>
                                        <div id="qty-price-@product.Id" class="f-dropdown content" data-dropdown-content>
                                            <div class="tt-wrap">
                                                <table class="isc-pricebreaks">
                                                    <tbody>
                                                        @foreach (var bp in product.Pricing.ActualBreakPrices.OrderBy(b => b.BreakQty))
                                                        {
                                                            <tr>
                                                                <td class="col-1">@Math.Round(bp.BreakQty)</td>
                                                                <td class="col-2"><span class="qty-price">@bp.BreakPriceDisplay</span></td>
                                                                <td class="col-3">@bp.SavingsMessage</td>
                                                            </tr>
                                                        }
                                                    </tbody>
                                                </table>
                                            </div>
                                        </div>
                                    </div>
                                }
                            }
                        </div>
                        @if (Model.Settings.ShowInventoryAvailability)
                        {
                            <div class="availability">
                                @product.Availability.Message
                            </div>
                        }
                    </div>
                    <div class="small-12 detail-image">
                        <a href="javascript:;" class="pd-item-link">
                            <img src="@product.LargeImagePath" alt="@product.AltText">
                        </a>
                    </div>
                    <div class="pd-cm-wrap">
                        @if (product.IsConfigured && product.ConfigurationDto != null && product.ConfigurationDto.IsKit)
                        {
                            <div>
                                @foreach (var configSection in product.ConfigurationDto.Sections)
                                {
                                    <div class="pd-kit">
                                        <div class="pd-kit-name" style="font-weight: bold">@configSection.SectionName:</div>
                                        @foreach (var option in configSection.Options)
                                        {
                                            <div class="pd-kit-value">
                                                @option.Description
                                            </div>
                                        }
                                    </div>
                                }
                            </div>
                        }
                        
                        @if (Model.CatalogPage.Category != null && product.AttributeTypes != null && product.AttributeTypes.Count > 0)
                        {
                            <ul class="attribute-list">
                                @foreach (var attributeType in product.AttributeTypes.OrderBy(c => c.SortOrder).ThenBy(c => c.Name))
                                {
                                    <li class="attribute-list-item">
                                        <span class="attrib-name">@attributeType.Label:</span>
                                        <span class="attrib-value">
                                            @{
                                    var values = attributeType.AttributeValues.Select(x => x.ValueDisplay);
                                    @Html.Raw(string.Join(", ", values))
                                            }
                                        </span>
                                    </li>
                                }
                            </ul>
                        }

                        <div class="product-cm">@Html.Raw(product.HtmlContent)</div>
                    </div>
                    @if (product.Documents.Count > 0)
                    {
                        <ul class="doclinks">
                            @foreach (var document in product.Documents)
                            {
                                <li>
                                    <a href="@document.FileUrl">@document.Name<em>(@document.FileTypeString)</em></a>
                                </li>
                            }
                        </ul>
                    }
                </div>
                <div class="detail-options">
                    @if (product.IsConfigured && product.ConfigurationDto != null && !product.ConfigurationDto.IsKit || product.StyleTraits.Count > 0)
                    {
                        <div class="panel">
                            <div class="row collapse">
                                @* Configuration part *@
                                @if (product.IsConfigured && product.ConfigurationDto != null && !product.ConfigurationDto.IsKit)
                                {
                                    <div>
                                        @foreach (var configSection in product.ConfigurationDto.Sections)
                                        {
                                            <div>
                                                <span>@configSection.SectionName</span>
                                                <select>
                                                    <option value="">Select @configSection.SectionName</option>
                                                    @foreach (var option in configSection.Options)
                                                    {
                                                        <option value="@option.SectionOptionId">@option.Description</option>
                                                    }
                                                </select>
                                            </div>
                                        }
                                    </div>
                                }
                                @* Style part *@
                                @if (product.StyleTraits.Count > 0)
                                {
                                    foreach (var styleTrait in product.StyleTraits)
                                    {
                                        <div class="small-12 columns pd-style-opt">
                                            <span>@styleTrait.NameDisplay</span>
                                            <select>
                                                <option value=""> @(!styleTrait.UnselectedValue.IsBlank() ? "" : "Select") @(!styleTrait.UnselectedValue.IsBlank() ? styleTrait.UnselectedValue : styleTrait.NameDisplay)</option>
                                                @foreach (var style in styleTrait.StyleValues)
                                                {
                                                    <option value="@style.StyleTraitValueId">@style.ValueDisplay</option>
                                                }
                                            </select>
                                        </div>
                                    }
                                }
                            </div>
                        </div>
                    }

                    <div class="right small-12 detail-add">
                        <div class="small-12 fc-um">
                            @if (Model.Settings.AlternateUnitsOfMeasure && product.ProductUnitOfMeasures.Count > 1)
                            {
                                <label class="small-12">@T("U/M"):</label>
                                <div class="small-8 columns">
                                    <select name="unitOfMeasure" class="uom-selector " autocomplete="off">
                                        @foreach (var uom in product.ProductUnitOfMeasures)
                                        {
                                            <option value="@uom.UnitOfMeasure">
                                                @(!uom.Description.IsBlank() ? uom.Description : uom.UnitOfMeasureDisplay) @(uom.QtyPerBaseUnitOfMeasure != 1 ? "/" + uom.QtyPerBaseUnitOfMeasure.ToString("N") : "")
                                            </option>
                                        }
                                    </select>
                                </div>

                                if (!product.PackDescription.IsBlank())
                                {
                                    <div>
                                        <span class="um-sep">/</span>
                                        <span class="small-4 columns pack">@T("Pack"): @product.PackDescription</span>
                                    </div>
                                }
                            }
                        </div>
                        @if (product.CanEnterQuantity)
                        {
                            <div id="displayQuantityInput" class="small-12 fc-qty">
                                <span class="small-12">@T("QTY_quantity")</span>
                                <input id="qty" type="text" name="qty" id="number" value="1" class="small-12 numerictextbox" />
                            </div>
                        }
                        <div class="small-12 pd-buttons">
                            <div class="small-12 primary-button">
                                @if (product.Availability.MessageType != AvailabilityMessageType.OutOfStock && product.CanAddToCart)
                                {
                                    <button id="displayAddToCart" role="button" class="btn primary btn-add-to-cart">
                                        @T("Add To Cart")
                                    </button>
                                }
                            </div>
                            @if (product.CanConfigure)
                            {
                                <div class="small-12 primary-button">
                                    <a href="@Url.RouteUrl(null, new { controller = "Configurator", action = "Configure" })/@product.Name"
                                       role="button" class="btn primary btn-configure">@T("Configure")</a>
                                </div>
                            }
                        </div>
                    </div>
                    <div class="small-12 secondary-button">
                        @if (product.CanAddToWishlist)
                        {
                            <a id="displayAddToWishList" role="button" class="btn secondary btn-add-to-list" href="javascript:;">@T("Add to Wishlist")</a>
                        }
                    </div>
                </div>
            </div>

            @if (product.Specifications != null && product.Specifications.Count > 0)
            {
                <div class="row pd-specs">
                    <div class="detail-specs easy-resp-tabs">
                        <ul class="resp-tabs-list">
                            @foreach (var specification in product.Specifications.Where(s => s.IsActive).OrderBy(s => s.SortOrder))
                            {
                                <li>
                                    @specification.NameDisplay
                                </li>
                            }
                            @*
                                <li ng-if="vm.settings.thirdPartyReviews == 'BazaarVoice'">
                                    @T("Reviews")
                                </li>
                            *@
                        </ul>
                        <div class="resp-tabs-container">
                            @foreach (var specification in product.Specifications.Where(s => s.IsActive).OrderBy(s => s.SortOrder))
                            {
                                <div>
                                    @Html.Raw(specification.HtmlContent)
                                </div>
                            }
                            @*
                                <div ng-if="vm.settings.thirdPartyReviews == 'BazaarVoice'" id="BVRRContainer">
                                    <!-- COM-3439 -->
                                    @Html.Raw(Model.BazaarVoiceSeoText)
                                </div>
                            *@
                        </div>
                    </div>
                </div>
            }
            <isc-cross-sell-carousel product="vm.product" product-cross-sell="true"></isc-cross-sell-carousel>

            @* Does not work in 3.7.1. Has to be revisited by BA
                @Html.Action("GenericPopupPartial", "Shared", new { containerName = "popup-addtocart-noinventory", BodyHtml = MessageProvider.Current.Cart_NotEnoughInventory, Title = @T("Add To Cart") })
            *@
        </div>
    </div>
 </div>
